[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:336","sourceCode":"java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[6,7,8,9],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[10,11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[12,13,14,15,2,16,3,17,18,19,20,21,22,23],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[24,25],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"threadSafe","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[6,7,8,9],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[26,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,14,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,2,111,112,16,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,10,11,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,3,17,189,190,18,19,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,20,326,327,7,8,9,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,21,407,408,409,410,411,22,23,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,24,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,25,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[472],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[24],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[26,12,13,14,2,111,16,113,188,17,18,19,261,324,20,326,406,21,22,23,421,422,423,424],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[57,415,418],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[26,12,13,29,30,31,33,37,38,39,40,41,42,43,44,45,46,47,48,49,50,67,73,75,82,83,14,98,2,111,116,117,118,119,120,135,136,137,138,139,230,231,240,324,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,400,401,403,425,426,427,428,429,430,431,432,433,434,435,436,437,438,445,479,490,491],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[514],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[515,516,517],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[26,12,13,14,1,518,15,111,16,113,142,143,188,519,4,520,521,522,523,324,20,326,406],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[75,76,77,78,80,81],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[61,295,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[349],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[16,113,20,326],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[12,13,14,15,2,16,3,17,18,19,20,21,22,23],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[26,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,524,75,76,77,78,79,80,525,81,82,83,84,85,86,14,87,88,89,90,91,92,93,94,95,96,97,98,526,99,100,101,102,103,104,105,106,107,108,109,110,2,111,112,16,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,10,11,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,187,188,3,17,189,190,18,19,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,307,308,527,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,20,326,327,7,8,9,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,528,384,385,529,386,387,388,389,530,390,391,392,393,394,531,395,396,397,398,399,400,401,402,403,404,405,406,21,407,408,409,410,411,22,23,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,443,24,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,532,495,496,497,25,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[533,534,535,536,537,538,539,307,308,7,530,392,540],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[7,392,541],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[534,535,536,537,539,307,308,7,530,392],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[527,528,529,530,531],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[390],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[26,12,13,30,31,33,42,44,45,46,47,48,49,50,82,83,14,87,88,89,91,92,94,95,96,97,98,99,100,101,110,2,111,112,16,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,187,188,17,189,190,18,19,191,194,195,196,197,199,200,202,203,214,215,216,217,222,230,231,234,236,237,238,239,240,241,256,258,259,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,296,297,298,300,307,309,323,324,325,20,326,327,7,8,9,328,329,330,331,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,371,372,376,377,379,380,381,382,383,387,388,396,397,398,399,401,403,404,405,406,21,407,408,409,410,411,22,23,412,413,414,417,418,419,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,443,24,444,445,471,472,473,474,475,476,477,479,482,484,490,505,506,507,508,509,510,512],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[98,2,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[340],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[542,338,344,356],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[337],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[534,535,536,538,543,308,530],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[6,7,8,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[339],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":331,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests2.UsageTest.argumentsOrdered":23,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":367,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":61,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":408,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":501,"org.easymock.tests2.DelegateToTest.testReturnException":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":237,"org.easymock.tests.MockingTest.testPartialClassMocking":30,"org.easymock.tests.MockClassControlTest.testToString":247,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":420,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":452,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":145,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":491,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":534,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":338,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":135,"org.easymock.tests2.UsageTest.wrongArguments":21,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":216,"org.easymock.samples.ExampleTest.answerVsDelegate":506,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":211,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":35,"org.easymock.tests2.UsageConstraintsTest.testNull":334,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":474,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":252,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":366,"org.easymock.tests2.CaptureTest.testPrimitive":428,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":139,"org.easymock.tests.UsageTest.moreThanOneArgument":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":164,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":37,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageVarargTest.varargIntAccepted":89,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":523,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":543,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":383,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":293,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":120,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":170,"org.easymock.tests.ReplayStateInvalidUsageTest.times":226,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":315,"org.easymock.tests2.DependencyTest.testClassMocking":488,"org.easymock.tests2.AnswerTest.answer":414,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":382,"org.easymock.tests2.CaptureTest.testAnd":425,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":208,"org.easymock.tests2.UsageTest.strictResetToDefault":405,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":529,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":482,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":361,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":41,"org.easymock.tests2.DelegateToTest.testDelegate":300,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":160,"org.easymock.tests.LimitationsTest.mockFinalMethod":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":50,"org.easymock.tests2.DependencyTest.testClassMockingSupport":489,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":142,"org.easymock.tests2.CaptureTest.testCapture1_2446744":429,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":380,"org.easymock.tests.UsageThrowableTest.throwError":127,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":220,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":210,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":526,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":470,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":173,"org.easymock.samples.PartialClassMockTest.testGetArea":504,"org.easymock.tests.MockingTest.testInterfaceMocking":32,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":457,"org.easymock.tests2.UsageTest.niceToStrict":407,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":146,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":108,"org.easymock.tests2.ThreadingTest.testChangeDefault":442,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":51,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":387,"org.easymock.tests2.MockBuilderTest.testCreateMock":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":465,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":154,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":362,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":207,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":244,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":214,"org.easymock.tests.UsageOverloadedMethodTest.overloading":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":259,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":344,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":274,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":343,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":434,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":90,"org.easymock.tests2.EasyMockSupportClassTest.testAll":449,"org.easymock.tests.MockClassControlTest.testEquals":251,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":203,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":162,"org.easymock.tests2.CaptureTest.testCaptureAll":426,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":381,"org.easymock.tests.MockNameTest.defaultName":140,"org.easymock.tests2.UsageConstraintsTest.testMatches":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":218,"org.easymock.samples.ExampleTest.voteForRemovals":510,"org.easymock.tests.UsageVarargTest.allKinds":98,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":26,"org.easymock.samples.BasicClassMockTest.testPrintContent":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":49,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":133,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":290,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":299,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":539,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":525,"org.easymock.tests2.UsageConstraintsTest.greaterThan":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":43,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":485,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":174,"org.easymock.samples.ExampleTest.voteForRemoval":507,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":81,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":486,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":443,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":212,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":532,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":477,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":166,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":404,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":126,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":359,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":236,"org.easymock.tests2.CaptureTest.testCaptureFirst":438,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":360,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":413,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":262,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":270,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":444,"org.easymock.tests2.CaptureTest.testCapture2_2446744":437,"org.easymock.tests2.UsageTest.moreThanOneArgument":406,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":69,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":97,"org.easymock.tests.GenericTest.testBridgedEquals":205,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":199,"org.easymock.tests.UsageExpectAndReturnTest.longType":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":46,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":357,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":163,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":102,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":121,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":10,"org.easymock.tests.UsageCallCountTest.tooManyCalls":200,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":132,"org.easymock.tests.MockingTest.testNiceClassMocking":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":371,"org.easymock.tests.MockingTest.testClassMocking":28,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":193,"org.easymock.tests2.UsageConstraintsTest.testContains":342,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":398,"org.easymock.tests2.UsageConstraintsTest.testFind":333,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":101,"org.easymock.tests.MockTypeTest.fromEasyMockClass":209,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":403,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":109,"org.easymock.tests.UsageExpectAndReturnTest.object":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":535,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":92,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":106,"org.easymock.tests.UsageTest.exactCallCountByLastCall":191,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":56,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":38,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":308,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":87,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":279,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":258,"org.easymock.tests.MockClassControlTest.testHashCode":250,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":284,"org.easymock.tests2.EasyMockSupportTest.testVerify":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":459,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":39,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":243,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":379,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":400,"org.easymock.tests.UsageVarargTest.varargCharAccepted":91,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":524,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":74,"org.easymock.tests2.UsageTest.openCallCountByLastCall":409,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":515,"org.easymock.tests.DefaultClassInstantiatorTest.object":75,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":242,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":104,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":460,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":283,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":483,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":172,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":151,"org.easymock.tests.ReplayStateInvalidCallsTest.times":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":141,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":179,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":468,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":248,"org.easymock.tests2.UsageTest.resumeIfFailure":412,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":206,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":493,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":239,"org.easymock.tests2.StubTest.stubWithReturnValue":440,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":530,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":272,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":353,"org.easymock.tests2.SerializationTest.testAllMockedMethod":9,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":67,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":541,"org.easymock.samples.SupportTest.voteForRemovals":498,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":286,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":157,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":73,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":415,"org.easymock.tests.UsageExpectAndThrowTest.object":155,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":255,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":350,"org.easymock.tests2.DelegateToTest.testWrongClass":298,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":176,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":231,"org.easymock.samples.ConstructorCalledMockTest.testTax":502,"org.easymock.tests.UsageStrictMockTest.range":16,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":496,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":446,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":215,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":0,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":168,"org.easymock.tests2.CaptureTest.testCaptureNone":433,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":86,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":302,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":96,"org.easymock.tests2.ThreadingTest.testThreadSafe":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":463,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":197,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":499,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":107,"org.easymock.tests2.CaptureTest.testCapture_2617107":427,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":71,"org.easymock.tests2.UsageConstraintsTest.any":340,"org.easymock.tests2.StubTest.stub":439,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.UsageExpectAndThrowTest.longType":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":238,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":79,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":224,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests.LimitationsTest.mockNativeMethod":234,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":282,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":312,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":184,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests2.NameTest.nameForMocksControl":424,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":303,"org.easymock.tests2.MockedExceptionTest.testMockedException":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":451,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":190,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":402,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":149,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":33,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":471,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":390,"org.easymock.tests.MockingTest.testNicePartialClassMocking":31,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":533,"org.easymock.tests2.CaptureTest.testCaptureLast":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":310,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":143,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":183,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":337,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":377,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":351,"org.easymock.tests.MockingTest.testTwoMocks":29,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":180,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":378,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":153,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":355,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":306,"org.easymock.samples.ExampleTest.removeNonExistingDocument":511,"org.easymock.tests.UsageStrictMockTest.differentMethods":113,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":285,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":77,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":305,"org.easymock.tests2.ConstraintsToStringTest.andToString":522,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":24,"org.easymock.tests2.MockBuilderTest.testCreateMockString":395,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":453,"org.easymock.tests.UsageExpectAndThrowTest.floatType":147,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":448,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":417,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":527,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":462,"org.easymock.samples.ExampleTest.voteAgainstRemoval":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":62,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":84,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":484,"org.easymock.tests.LimitationsTest.privateConstructor":233,"org.easymock.tests2.UsageConstraintsTest.testNotNull":354,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":396,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":134,"org.easymock.tests2.UsageTest.defaultResetToNice":411,"org.easymock.samples.ExampleTest.voteAgainstRemovals":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":278,"org.easymock.tests.UsageVarargTest.differentLength":93,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":311,"org.easymock.tests2.CallbackTest.callback":309,"org.easymock.tests2.UsageConstraintsTest.equals":332,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":480,"org.easymock.tests.UsageTest.openCallCountByLastCall":189,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":137,"org.easymock.tests.UsageCallCountTest.tooFewCalls":195,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":217,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":304,"org.easymock.tests.UsageThrowableTest.throwCheckedException":131,"org.easymock.tests.MockingTest.testStrictClassMocking":27,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":1,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":316,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":372,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":375,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":419,"org.easymock.tests2.CompareToTest.testGreateOrEqual":542,"org.easymock.tests.ObjectMethodsTest.testHashCode":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":538,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":514,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":445,"org.easymock.tests2.NameTest.nameForNiceMock":423,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":182,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":177,"org.easymock.tests2.DependencyTest.testInterfaceMocking":490,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":536,"org.easymock.samples.ExampleTest.addDocument":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests2.DelegateToTest.testStubDelegate":297,"org.easymock.tests2.AnswerTest.stubAnswer":418,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":111,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":391,"org.easymock.tests.UsageVarargTest.varargLongAccepted":95,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":60,"org.easymock.tests.UsageExpectAndReturnTest.floatType":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":307,"org.easymock.tests2.ConstraintsToStringTest.orToString":519,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":503,"org.easymock.tests.UsageThrowableTest.noUpperLimit":128,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":292,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":348,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":329,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":492,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":430,"org.easymock.tests2.SerializationTest.test":8,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":264,"org.easymock.tests2.UsageConstraintsTest.testSame":335,"org.easymock.samples.SupportTest.addDocument":25,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":374,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":167,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":454,"org.easymock.tests.GenericTest.testPackageScope":202,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":55,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":291,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":34,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":165,"org.easymock.tests2.NameTest.nameForMock":421,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":275,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":531,"org.easymock.tests2.UsageStrictMockTest.differentMethods":326,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":481,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":267,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":159,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":45,"org.easymock.tests2.MockedExceptionTest.testRealException":399,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":213,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":65,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":518,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":540,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":64,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":136,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":229,"org.easymock.tests2.NameTest.nameForStrictMock":422,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":516,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":495,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":78,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":349,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":384,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":171,"org.easymock.tests2.UsageConstraintsTest.lessThan":356,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":537,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":59,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":458,"org.easymock.tests2.CaptureTest.testCaptureRightOne":435,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":301,"org.easymock.tests2.UsageConstraintsTest.testOr":336,"org.easymock.tests.UsageRangeTest.combination":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":472,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor":528,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":455,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":52,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":276,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":80,"org.easymock.tests.UsageVarargTest.varargShortAccepted":94,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":198,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":185,"org.easymock.tests2.UsageConstraintsTest.cmpTo":341,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":416,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":54,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":410,"org.easymock.tests2.CaptureTest.testCaptureFromStub":436,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":219,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":385,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":181,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":196,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":277,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":112,"org.easymock.tests2.UsageConstraintsTest.constraints":330,"org.easymock.samples.ExampleTest.addAndChangeDocument":512,"org.easymock.tests2.ConstraintsToStringTest.notToString":520,"org.easymock.tests.UsageStrictMockTest.testVerify":115,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":513,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":47,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":118,"org.easymock.tests.LimitationsTest.abstractClass":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":119,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":363}}]
