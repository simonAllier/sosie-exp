[{"transplant":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:106","sourceCode":"return org.easymock.IAnswer<?>.answer()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[10,11,12,41,234,44,235,81,236,237,82,83,84,85,238,239,240,105,119,241,242,243],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[244,245,246,247,248,249,250,0,251,252,1,2,3,4,253,5,254,255,256,257,258,259,260,6,261,7,8,262,263,264,265,9,266,267,10,268,269,270,271,272,273,274,275,276,11,277,278,279,280,281,12,282,283,13,14,15,16,17,18,19,20,284,21,22,285,23,24,286,287,25,26,27,28,29,30,31,288,289,32,33,290,291,292,293,294,34,295,296,297,298,299,300,35,36,37,38,39,40,41,301,42,302,303,43,234,44,304,305,235,306,307,308,309,310,45,311,312,313,314,315,316,46,47,48,317,49,318,50,51,52,319,320,53,54,55,56,57,58,321,59,60,61,62,63,64,322,65,66,67,68,69,70,71,72,73,74,75,76,323,77,78,79,80,81,324,236,237,325,326,82,83,84,327,85,328,329,238,239,330,240,86,331,332,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,333,104,105,106,334,335,107,108,109,336,110,337,111,112,113,114,115,338,116,117,118,339,119,340,341,342,120,121,122,123,343,124,344,345,125,126,346,127,347,348,349,350,351,128,129,352,130,353,354,355,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,171,383,172,173,384,385,386,387,388,389,390,391,174,175,176,177,178,392,393,394,179,180,395,181,396,241,397,398,399,400,401,402,403,404,405,406,407,408,409,182,183,184,410,411,185,412,186,413,187,188,189,190,191,192,193,194,414,415,195,196,416,417,197,198,199,200,201,418,419,420,421,422,423,424,425,202,203,204,205,206,207,426,427,428,429,430,431,432,433,208,434,209,210,435,436,437,438,439,440,441,442,443,444,445,446,447,242,448,449,450,451,243,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,211,212,213,214,215,216,217,218,219,467,220,221,468,469,470,471,222,223,224,225,226,472,473,474,475,476,477,478,479,480,481,482,483,484,227,228,485,486,487,229,230,231,232,233],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[189,190,212],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[0,1,2,4,5,121],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[395],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[488,80],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,255,256,257,258,260,6,8,262,13,14,15,16,17,18,19,20,21,22,285,23,286,287,25,26,27,28,31,32,35,37,38,39,40,42,43,44,47,48,49,318,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,91,104,105,106,334,107,108,110,337,111,113,114,117,118,120,121,122,123,343,124,345,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,381,171,173,384,385,174,175,176,177,178,394,179,180,181,396,401,402,403,404,405,406,183,184,185,413,187,194,198,199,200,201,202,203,204,205,206,207,427,208,434,209,210,454,211,212,213,214,215,218,469,222,223,224,225,226,472,473,474,476,477,479,480,481,482,483,227,229,230,231,232,233],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[359,444,445,446],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[322,65],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[7,317,319,320,382,172,414,415,416,417,489,212,213,470,484],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[7,317,319,320,382,172,414,415,416,417,489,212,213,470,484],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[302,328,329,86,331,105,125,125,126,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[0,251,252,1,2,3,4,5,259,6,261,7,8,262,9,10,11,12,13,14,15,16,17,18,19,20,21,22,285,23,24,286,287,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,234,44,304,45,46,47,48,317,49,318,50,51,52,319,320,53,54,55,56,57,58,59,60,61,62,63,64,322,65,66,67,68,69,70,71,72,73,74,75,76,323,77,78,79,80,81,236,82,83,84,85,238,239,240,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,333,104,105,106,335,107,108,109,336,110,337,111,112,113,114,115,116,117,118,119,120,121,122,123,124,345,125,125,126,126,127,351,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,372,378,380,382,171,383,172,173,384,174,175,176,177,178,392,393,179,180,181,241,398,399,400,403,182,183,184,185,186,413,187,188,189,190,191,192,193,194,414,415,195,196,416,417,197,198,199,200,201,418,419,420,421,422,424,202,203,204,205,206,207,208,434,209,210,444,445,446,447,454,211,212,213,214,215,216,217,218,219,467,220,221,468,469,470,222,223,224,225,226,483,484,227,228,485,486,487,229,230,231,232,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[244,248,263,264,265,9,266,267,10,268,269,270,271,272,273,274,275,276,11,277,278,279,280,281,12,282,283,13,14,15,35,36,38,39,40,41,42,302,303,43,234,44,304,305,235,490,81,491,236,237,326,82,83,84,85,329,238,239,492,493,240,86,331,494,495,496,497,498,499,105,334,112,113,114,115,117,118,119,341,342,125,125,126,126,349,350,351,128,129,130,355,391,395,181,396,241,397,410,411,185,412,426,427,428,429,430,431,432,433,436,437,438,439,440,441,443,242,243,454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[500,57,64,69,80],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[6,29,55,56,59,60,61,62,67,69,70,72,73,78,79,80,111,125,126,171,174,175,176,177,178,179,180,214,215,218,222,223,224,225,226,227],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[501,502,503,504,48,317,319,320,382,194,414,415,416,417,505,506,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,255,256,257,258,259,260,6,261,7,8,262,9,10,11,12,13,14,15,16,17,18,19,20,21,22,285,23,24,286,287,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,234,44,304,45,46,47,48,317,49,318,50,51,52,319,320,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,323,77,78,79,80,81,236,82,83,84,85,238,239,240,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,333,104,105,106,334,107,108,109,110,337,111,112,113,114,115,116,117,118,119,340,341,342,120,121,122,123,343,124,344,345,125,125,126,126,346,127,347,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,380,381,382,171,383,172,173,384,385,387,388,389,174,175,176,177,178,393,179,180,181,396,401,402,403,404,405,406,407,408,409,182,183,184,185,186,413,187,188,189,190,191,192,193,194,414,415,195,196,416,417,197,198,199,200,201,202,203,204,205,206,207,426,427,428,429,430,431,432,433,208,434,209,210,436,454,455,456,457,458,459,460,461,462,463,464,465,466,211,212,213,214,215,216,217,218,219,467,220,221,469,470,222,223,224,225,226,472,473,474,476,477,478,479,480,481,482,483,484,227,228,229,230,231,232,233],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:85","failures":[0,1,2,3,4,5,255,256,257,258,259,260,6,261,7,8,262,9,10,11,12,13,14,15,16,17,18,19,20,284,21,22,285,23,24,286,287,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,234,44,304,45,46,47,48,317,49,318,50,51,52,319,320,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,323,77,78,79,80,81,236,82,83,84,85,238,239,240,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,333,104,105,106,334,107,108,109,110,337,111,112,113,114,115,116,117,118,119,340,341,342,120,121,122,123,343,124,344,345,125,125,126,126,346,127,347,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,380,381,382,171,383,172,173,384,385,387,388,389,174,175,176,177,178,179,180,181,396,401,402,403,404,405,406,407,408,409,182,183,184,185,186,413,187,188,189,190,191,192,193,194,414,415,195,196,416,417,197,198,199,200,201,202,203,204,205,206,207,426,427,428,429,430,431,432,433,208,434,209,210,436,454,455,456,457,458,459,460,461,462,463,464,465,466,211,212,213,214,215,216,217,218,219,220,221,469,470,222,223,224,225,226,472,473,474,476,477,478,479,480,481,482,483,484,227,228,229,230,231,232,233],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,259,260,6,261,7,8,262,9,10,11,12,13,14,15,16,17,18,19,20,21,22,285,23,24,286,287,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,234,44,304,45,46,47,48,317,49,318,50,51,52,319,320,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,323,77,78,79,80,81,236,82,83,84,85,238,239,240,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,333,104,105,106,334,107,108,109,110,337,111,112,113,114,115,116,117,118,119,340,341,342,120,121,122,123,343,124,345,125,126,346,127,347,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,508,508,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,380,381,382,171,383,172,173,384,174,175,176,177,178,179,180,181,396,403,404,405,406,407,408,409,182,183,184,185,186,413,187,188,189,190,191,192,193,194,414,415,195,196,416,417,197,198,199,200,201,202,203,204,205,206,207,208,209,210,454,211,212,213,214,215,216,217,218,219,220,221,470,222,223,224,225,226,472,473,474,476,477,478,479,480,481,482,483,484,227,228,229,230,231,232,233],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[501,503,382,414,505,506],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[501,503,382,414,505,506],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[25,27],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:134","failures":[509,508],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[0,251,252,1,2,3,4,5,255,256,257,258,259,260,6,261,7,8,262,9,10,11,12,13,14,15,16,17,18,19,20,21,22,285,23,24,286,287,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,234,44,304,45,46,47,48,317,49,318,50,51,52,319,320,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,323,77,78,79,80,81,236,82,83,84,85,238,239,240,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,333,104,105,106,334,335,107,108,109,336,110,337,111,112,113,114,115,116,117,118,119,340,341,342,120,121,122,123,343,124,345,125,125,126,126,346,127,347,351,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,372,378,380,381,382,171,383,172,173,384,385,174,175,176,177,178,392,393,179,180,181,396,241,398,399,400,401,403,404,405,406,407,408,409,182,183,184,185,186,413,187,188,189,190,191,192,193,194,414,415,195,196,416,417,197,198,199,200,201,418,419,420,421,422,424,202,203,204,205,206,207,208,434,209,210,444,445,446,447,454,211,212,213,214,215,216,217,218,219,467,220,221,468,469,470,222,223,224,225,226,472,473,474,476,477,478,479,480,481,482,483,484,227,228,485,486,487,229,230,231,232,233],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[244,248,249,250,0,251,252,1,2,3,4,253,5,254,259,260,6,261,7,8,262,263,9,267,10,269,270,273,274,275,276,11,278,281,12,282,283,13,14,15,16,17,18,19,20,284,21,22,285,23,24,286,287,25,26,27,28,29,30,31,32,33,290,291,292,293,294,34,295,296,297,298,299,300,35,36,37,38,39,40,41,42,302,303,43,234,44,304,305,306,307,308,309,310,45,311,312,313,314,315,316,46,47,48,317,49,318,50,51,52,319,320,53,54,55,56,57,58,321,59,60,61,62,63,64,322,65,66,67,68,69,70,71,72,73,74,75,76,323,77,78,79,80,236,326,82,83,84,329,238,86,331,87,88,89,90,91,92,93,94,96,97,99,101,102,103,333,104,105,106,334,335,107,108,109,336,110,337,111,114,115,116,117,119,340,341,342,120,121,122,123,343,124,344,345,125,125,126,126,346,127,347,348,349,350,351,128,129,352,130,353,354,355,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,171,383,172,173,384,385,386,387,388,389,390,391,174,175,176,177,178,392,393,394,179,180,395,181,396,241,397,398,399,400,401,402,403,404,405,406,407,408,409,182,183,184,410,411,185,412,186,413,187,188,189,190,191,192,193,194,414,415,195,196,416,417,197,198,199,200,201,418,419,420,421,422,423,424,425,202,203,204,205,206,207,426,427,428,429,430,431,432,433,208,434,209,210,436,437,438,439,440,441,443,444,445,446,447,450,243,453,454,455,456,457,458,459,460,461,462,463,464,465,466,211,212,213,214,215,216,217,218,219,467,220,221,468,469,470,222,223,224,225,226,472,473,474,475,476,477,478,479,480,481,482,483,484,227,228,485,486,487,229,230,231,232,233],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[0,1,2,3,4,5,259,260,6,261,7,8,262,9,10,11,12,13,14,15,16,17,18,19,20,21,22,285,23,24,286,287,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,234,44,304,45,46,47,48,317,49,318,50,51,52,319,320,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,323,77,78,79,80,81,236,82,83,84,85,238,239,240,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,333,104,105,106,334,107,108,109,110,337,111,112,113,114,115,116,117,118,119,340,341,342,120,121,122,123,343,124,345,125,126,346,127,347,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,508,508,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,380,381,382,171,383,172,173,384,174,175,176,177,178,179,180,181,396,403,404,405,406,407,408,409,182,183,184,185,186,413,187,188,189,190,191,192,193,194,414,415,195,196,416,417,197,198,199,200,201,202,203,204,205,206,207,208,209,210,454,211,212,213,214,215,216,217,218,219,220,221,470,222,223,224,225,226,472,473,474,476,477,478,479,480,481,482,483,484,227,228,229,230,231,232,233],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[324],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[7,8,172,173,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[290,291,292,293,294,34,295,296,297,298,299,300,306,307,308,309,310,45,311,312,313,314,315,316,340,347],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[130],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[510],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":58,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.UsageTest.argumentsOrdered":320,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":366,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":318,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":347,"org.easymock.tests2.DelegateToTest.testReturnException":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":203,"org.easymock.tests.MockingTest.testPartialClassMocking":128,"org.easymock.tests.MockClassControlTest.testToString":428,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":254,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":151,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":10,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":33,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":214,"org.easymock.tests2.UsageTest.wrongArguments":317,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":200,"org.easymock.samples.ExampleTest.answerVsDelegate":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":243,"org.easymock.tests2.UsageConstraintsTest.testNull":60,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":354,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":38,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":101,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":494,"org.easymock.tests2.CaptureTest.testPrimitive":23,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":170,"org.easymock.tests.UsageTest.moreThanOneArgument":194,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":176,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":418,"org.easymock.tests.UsageTest.argumentsOrdered":417,"org.easymock.tests.UsageVarargTest.varargIntAccepted":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":81,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":246,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":299,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":226,"org.easymock.tests.ReplayStateInvalidUsageTest.times":463,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":45,"org.easymock.tests2.DependencyTest.testClassMocking":288,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":20,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":449,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests2.UsageTest.strictResetToDefault":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":209,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":422,"org.easymock.tests2.DelegateToTest.testDelegate":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":166,"org.easymock.tests.LimitationsTest.mockFinalMethod":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":233,"org.easymock.tests2.DependencyTest.testClassMockingSupport":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":392,"org.easymock.tests2.CaptureTest.testCapture1_2446744":24,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":164,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":18,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":457,"org.easymock.tests.UsageThrowableTest.throwError":186,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":451,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":471,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":283,"org.easymock.samples.PartialClassMockTest.testGetArea":119,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":458,"org.easymock.tests.MockingTest.testInterfaceMocking":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":486,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":152,"org.easymock.tests2.UsageTest.niceToStrict":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":82,"org.easymock.tests2.MockBuilderTest.testCreateMock":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":313,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":160,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":97,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":448,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":446,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":401,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":198,"org.easymock.tests.UsageOverloadedMethodTest.overloading":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":281,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":69,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":221,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":68,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":27,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":475,"org.easymock.tests.MockClassControlTest.testEquals":432,"org.easymock.tests2.EasyMockSupportClassTest.testAll":9,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":396,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":168,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":495,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":19,"org.easymock.tests2.CaptureTest.testCaptureAll":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":231,"org.easymock.tests.MockNameTest.defaultName":348,"org.easymock.tests2.UsageConstraintsTest.testMatches":70,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":177,"org.easymock.samples.ExampleTest.voteForRemovals":124,"org.easymock.tests.UsageVarargTest.allKinds":483,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":232,"org.easymock.samples.BasicClassMockTest.testPrintContent":342,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":191,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":207,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":296,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":336,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":442,"org.easymock.tests2.UsageConstraintsTest.greaterThan":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":304,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":443,"org.easymock.samples.ExampleTest.voteForRemoval":122,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":88,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":305,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":492,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":452,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":41,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":454,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":94,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":202,"org.easymock.tests2.CaptureTest.testCaptureFirst":31,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":95,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":54,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":138,"org.easymock.tests2.CaptureTest.testCapture2_2446744":30,"org.easymock.tests2.UsageTest.moreThanOneArgument":48,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":374,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":482,"org.easymock.tests.GenericTest.testBridgedEquals":397,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":408,"org.easymock.tests.UsageExpectAndReturnTest.longType":134,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":229,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":493,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":169,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":447,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":174,"org.easymock.tests.UsageCallCountTest.tooManyCalls":409,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":190,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":113,"org.easymock.tests.MockingTest.testNiceClassMocking":355,"org.easymock.tests.MockingTest.testClassMocking":350,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":491,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":402,"org.easymock.tests2.UsageConstraintsTest.testContains":67,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":15,"org.easymock.tests2.UsageConstraintsTest.testFind":59,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":184,"org.easymock.tests.MockTypeTest.fromEasyMockClass":450,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":5,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":380,"org.easymock.tests.UsageExpectAndReturnTest.object":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":314,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":510,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":100,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":477,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":389,"org.easymock.tests.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":419,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":507,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":331,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":472,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":147,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":220,"org.easymock.tests.MockClassControlTest.testHashCode":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":291,"org.easymock.tests2.EasyMockSupportTest.testVerify":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":274,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":420,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":445,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":17,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":284,"org.easymock.tests.UsageVarargTest.varargCharAccepted":476,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":435,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":379,"org.easymock.tests2.UsageTest.openCallCountByLastCall":50,"org.easymock.tests.DefaultClassInstantiatorTest.object":436,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":444,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":387,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":489,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":275,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":499,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":290,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":430,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":157,"org.easymock.tests.CapturesMatcherTest.test":508,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":398,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":12,"org.easymock.tests2.UsageTest.resumeIfFailure":53,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":242,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":205,"org.easymock.tests2.StubTest.stubWithReturnValue":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":327,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":77,"org.easymock.tests2.SerializationTest.testAllMockedMethod":334,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":372,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":503,"org.easymock.samples.SupportTest.voteForRemovals":127,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":395,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":163,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":378,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":251,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":425,"org.easymock.tests.UsageExpectAndThrowTest.object":161,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":75,"org.easymock.tests2.DelegateToTest.testWrongClass":109,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":180,"org.easymock.tests.UsageStrictMockTest.range":172,"org.easymock.samples.ConstructorCalledMockTest.testTax":125,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":249,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":84,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":465,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":199,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":505,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":487,"org.easymock.tests2.CaptureTest.testCaptureNone":26,"org.easymock.tests.UsageUnorderedTest.message":484,"org.easymock.tests.UsageVerifyTest.twoReturns":213,"org.easymock.tests.UsageVarargTest.varargByteAccepted":481,"org.easymock.tests2.ThreadingTest.testThreadSafe":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":277,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":406,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":390,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":341,"org.easymock.tests2.CaptureTest.testCapture_2617107":285,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":504,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":394,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":376,"org.easymock.tests2.UsageConstraintsTest.any":65,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":462,"org.easymock.tests2.StubTest.stub":337,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":400,"org.easymock.tests.UsageExpectAndThrowTest.longType":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":377,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":440,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":461,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.tests2.SerializationTest.testClass":105,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":34,"org.easymock.tests.LimitationsTest.mockNativeMethod":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":150,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":241,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":308,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests2.NameTest.nameForMocksControl":258,"org.easymock.tests2.MockedExceptionTest.testMockedException":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":267,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":155,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":130,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":253,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":35,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":85,"org.easymock.tests.MockingTest.testNicePartialClassMocking":129,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":40,"org.easymock.tests2.CaptureTest.testCaptureLast":25,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":306,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":393,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":118,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":63,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":76,"org.easymock.tests.MockingTest.testTwoMocks":351,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":339,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":159,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":319,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":79,"org.easymock.samples.ExampleTest.removeNonExistingDocument":344,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":459,"org.easymock.tests.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":292,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":438,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":89,"org.easymock.tests2.MockBuilderTest.testCreateMockString":240,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":426,"org.easymock.tests.UsageExpectAndThrowTest.floatType":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":268,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":1,"org.easymock.tests.UsageVerifyTest.twoThrows":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":332,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":11,"org.easymock.samples.ExampleTest.voteAgainstRemoval":123,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":367,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":44,"org.easymock.tests.LimitationsTest.privateConstructor":411,"org.easymock.tests2.UsageConstraintsTest.testNotNull":78,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":192,"org.easymock.tests2.UsageTest.defaultResetToNice":52,"org.easymock.samples.ExampleTest.voteAgainstRemovals":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":368,"org.easymock.tests.UsageVarargTest.differentLength":478,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":307,"org.easymock.tests2.CallbackTest.callback":104,"org.easymock.tests2.UsageConstraintsTest.equals":321,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":302,"org.easymock.tests.UsageTest.openCallCountByLastCall":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":216,"org.easymock.tests.UsageCallCountTest.tooFewCalls":404,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":115,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":201,"org.easymock.tests.UsageThrowableTest.throwCheckedException":189,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":506,"org.easymock.tests.MockingTest.testStrictClassMocking":349,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":117,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":228,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":311,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":464,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":116,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":3,"org.easymock.tests2.CompareToTest.testGreateOrEqual":500,"org.easymock.tests.ObjectMethodsTest.testHashCode":388,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":91,"org.easymock.tests2.NameTest.nameForNiceMock":257,"org.easymock.tests2.DependencyTest.testInterfaceMocking":32,"org.easymock.samples.ExampleTest.addDocument":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":278,"org.easymock.tests2.DelegateToTest.testStubDelegate":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":282,"org.easymock.tests2.AnswerTest.stubAnswer":2,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":171,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":328,"org.easymock.tests.UsageVarargTest.varargLongAccepted":480,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":149,"org.easymock.tests.UsageExpectAndReturnTest.floatType":133,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":86,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":126,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":468,"org.easymock.tests.UsageThrowableTest.noUpperLimit":413,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":244,"org.easymock.tests2.SerializationTest.test":106,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":286,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":437,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":132,"org.easymock.tests2.UsageConstraintsTest.testSame":61,"org.easymock.samples.SupportTest.addDocument":346,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":338,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":269,"org.easymock.tests.GenericTest.testPackageScope":181,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":297,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":353,"org.easymock.tests2.NameTest.nameForMock":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":143,"org.easymock.tests2.UsageStrictMockTest.differentMethods":8,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":330,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":135,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":165,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":210,"org.easymock.tests2.MockedExceptionTest.testRealException":16,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":453,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":369,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":215,"org.easymock.tests2.NameTest.nameForStrictMock":256,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":326,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":39,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":248,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":439,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":236,"org.easymock.tests2.UsageStrictMockTest.range":7,"org.easymock.tests2.UsageConstraintsTest.lessThan":80,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":294,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":490,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":364,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":273,"org.easymock.tests2.UsageConstraintsTest.testOr":62,"org.easymock.tests.UsageRangeTest.combination":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageTest.wrongArguments":415,"org.easymock.tests2.MockBuilderTest.testWithConstructor":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":270,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":357,"org.easymock.tests.UsageVarargTest.varargShortAccepted":479,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":441,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":407,"org.easymock.tests2.UsageConstraintsTest.cmpTo":66,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":252,"org.easymock.tests2.CompareToTest.testLessThan":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":359,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":51,"org.easymock.tests2.CaptureTest.testCaptureFromStub":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":456,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":237,"org.easymock.tests.UsageTest.unexpectedCallWithArray":414,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":382,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":145,"org.easymock.tests2.CaptureTest.testCapture":509,"org.easymock.tests2.UsageConstraintsTest.constraints":57,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":383,"org.easymock.samples.ExampleTest.addAndChangeDocument":345,"org.easymock.tests.UsageStrictMockTest.testVerify":385,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":340,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":381,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":230,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":287,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":224,"org.easymock.tests.LimitationsTest.abstractClass":410,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":137,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":225,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":98}}]
