[{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[11,12,13,14,15,16],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,11,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,17,17,18,18,216,217,218,219,220,221,222,223,224,225,226,0,227,1,228,229,230,231,232,233,234,2,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,21,267,268,269,22,270,271,272,273,274,275,276,277,24,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,3,4,301,5,302,6,7,303,8,304,305,306,307,308,309,310,311,312,9,313,314,315,316,10,317,318,319,320,321,322,323,324,325,326,34,37,47,53,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,56,345,346,347,348,349,350],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[351,352,353,354,355,356,357,58,358,59,60,61,62,63,64,65,66,67,68,69,70,359,71,72,73,74,75,76,77,78,79,80,81,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,82,382,383,384,385,386,83,387,84,388,389,390,391,85,86,87,88,89,90,91,92,93,11,94,95,96,97,98,99,100,101,102,103,392,104,105,106,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,107,108,109,110,111,112,113,114,115,414,415,416,116,417,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,418,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,419,166,167,168,169,170,171,172,173,420,421,422,174,423,424,425,426,178,179,180,427,428,429,430,431,432,433,434,435,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,14,203,204,205,206,207,208,436,437,438,439,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,440,224,225,226,0,227,1,228,229,230,231,232,233,234,2,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,441,251,442,252,253,254,255,443,444,445,256,257,258,259,446,447,448,449,260,261,262,263,264,265,266,267,268,23,270,450,451,452,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,3,4,453,301,5,302,6,7,303,8,304,305,306,307,308,309,310,311,312,9,313,314,315,316,10,317,318,454,455,456,457,458,319,459,460,461,462,463,464,320,321,465,466,322,467,323,324,468,325,469,470,471,472,473,474,326,475,476,477,478,479,480,31,32,34,36,37,38,39,42,45,47,48,49,50,51,52,53,481,482,327,328,483,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,484,344,345,346,347,348,349,350],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[308,485],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[311,487],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[357,58,358,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,94,96,97,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,148,149,150,151,152,153,154,155,156,157,158,159,162,168,170,171,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,208,209,210,211,212,17,17,18,18,216,218,219,220,221,223,224,226,0,227,228,229,232,233,234,2,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,253,254,255,260,261,262,263,264,265,266,21,267,268,269,22,273,275,276,24,278,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,3,4,301,5,302,6,7,303,304,305,306,307,308,309,310,311,312,9,313,314,316,10,317,318,319,321,322,323,324,325,326,34,37,47,53,327,328,329,330,331,332,334,336,337,338,341,342,343,344,56,345,346,347,348,349,350],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[366,370,371,380,384,402,212],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[488,489,490],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[11,12,13,14,15,16],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[429,433],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[64,65,66,67,68,71,72,75,76,77,78,79,80,81,84,388,389,390,391,85,86,87,88,90,91,93,94,97,98,99,100,101,102,103,104,105,395,108,109,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,153,155,156,157,158,159,160,161,162,163,164,165,173,175,176,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,436,437,438,439,218,219,220,221,222,223,224,0,227,1,228,230,231,232,233,234,2,237,238,239,240,241,242,243,244,246,247,248,249,251,252,254,256,257,258,259,260,261,264,266,21,269,22,270,450,451,452,272,273,276,277,24,278,279,294,295,298,299,300,3,4,301,5,302,6,7,303,304,305,306,307,308,309,310,311,312,9,313,314,316,10,317,318,320,322,467,327,329,331,332,334,335,338,341,343,344,56,345,348,349,350],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[491],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[24,27,28,56,57,492,493,494,495,496],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[351,352,353,354,355,356,357,58,358,59,60,61,62,63,64,65,66,67,68,69,70,359,71,72,73,74,75,76,77,78,79,80,81,360,497,498,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,82,382,383,384,385,386,83,387,84,388,389,390,391,85,86,87,88,89,90,91,92,93,11,94,95,96,97,98,99,100,101,102,103,392,104,105,106,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,107,108,109,110,111,112,113,114,115,414,415,416,116,417,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,418,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,419,166,167,168,169,170,171,172,173,420,421,422,174,175,176,423,177,424,425,426,499,178,179,180,427,428,429,430,431,432,433,434,435,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,14,203,204,205,206,207,208,436,437,438,439,209,210,211,212,213,214,215,17,18,216,217,218,219,220,221,222,223,440,224,225,226,0,227,1,228,229,230,231,232,233,234,2,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,441,251,500,442,252,253,254,255,443,444,445,256,257,258,259,446,501,502,503,447,448,449,260,261,262,263,264,265,266,21,267,504,268,269,22,23,270,450,451,452,271,272,273,274,275,276,277,24,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,3,4,453,301,5,302,6,7,303,8,304,305,306,307,308,309,310,311,312,9,313,314,315,316,10,317,318,454,455,456,457,458,319,459,460,461,462,463,464,320,25,321,465,26,466,322,467,323,27,324,505,28,468,325,30,469,470,471,472,473,474,326,475,476,477,478,479,480,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,481,482,327,328,483,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,484,344,56,57,506,345,346,347,348,349,350],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[73,74,76,77,78,79,80,81,91,109,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,154,171,201,205,238,239,240,241,243,330,337],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[74,80,369,86,91,107,109,110,111,112,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,171,201,209,210,211,243,330],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[507,487,508,485,509],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[357,358,407,263,265],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[86,87,11,96,115,510,14,203,206,207,275,333,339,340],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[37],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[360,363,392,106,17,17,18,18,216,238,250,500,253,254,444,24,320,321,465,466,322,323,324,505,28,325,469,37,47,53,56,57],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[511,24,278,279],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[60,61,64,65,66,67,68,71,72,73,74,75,80,85,86,87,88,89,90,91,93,11,94,95,96,97,98,100,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,153,162,163,164,165,166,167,168,170,171,173,175,176,177,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,213,214,215,216,217,218,219,220,221,222,223,224,225,226,0,227,1,228,229,230,231,232,233,234,2,236,237,240,242,243,244,245,246,247,248,249,251,254,260,261,262,263,264,265,266,21,267,268,269,22,272,273,274,275,276,277,24,278,279,280,281,282,283,284,285,286,288,289,290,291,292,294,295,296,298,299,300,3,4,301,5,302,6,7,303,304,305,306,307,308,309,310,311,312,9,313,314,315,316,10,317,318,319,322,323,324,326,34,37,47,53,327,328,329,330,331,332,333,334,335,336,337,339,340,341,342,343,344,56,345,348,349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[85,96,97,275,276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[4,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[512],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[255,444,257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[104,106,393],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[513],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[511,24,278,279],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":201,"org.easymock.tests2.UsageTest.argumentsOrdered":340,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":376,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":335,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":217,"org.easymock.tests2.DelegateToTest.testReturnException":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":77,"org.easymock.tests.MockingTest.testPartialClassMocking":175,"org.easymock.tests.MockClassControlTest.testToString":396,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":445,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":58,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":117,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":492,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":71,"org.easymock.tests2.UsageTest.wrongArguments":333,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":438,"org.easymock.samples.ExampleTest.answerVsDelegate":219,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":363,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":425,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":247,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":401,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":289,"org.easymock.tests2.CaptureTest.testPrimitive":228,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":136,"org.easymock.tests.UsageTest.moreThanOneArgument":202,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":59,"org.easymock.tests.UsageTest.argumentsOrdered":207,"org.easymock.tests.UsageVarargTest.varargIntAccepted":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":64,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":320,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":502,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":68,"org.easymock.tests.ReplayStateInvalidUsageTest.times":410,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":326,"org.easymock.tests2.DependencyTest.testClassMocking":481,"org.easymock.tests2.AnswerTest.answer":345,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":382,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":452,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":498,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":331,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":26,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":156,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":284,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":63,"org.easymock.tests2.DelegateToTest.testDelegate":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":132,"org.easymock.tests.LimitationsTest.mockFinalMethod":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":391,"org.easymock.tests2.DependencyTest.testClassMockingSupport":482,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":69,"org.easymock.tests2.CaptureTest.testCapture1_2446744":229,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":450,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":404,"org.easymock.tests.UsageThrowableTest.throwError":107,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":362,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":499,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":159,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":55,"org.easymock.samples.PartialClassMockTest.testGetArea":216,"org.easymock.tests.MockingTest.testInterfaceMocking":423,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":405,"org.easymock.tests2.CompareToTest.testLessOrEqual":509,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":42,"org.easymock.tests2.UsageTest.niceToStrict":334,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":356,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":322,"org.easymock.tests2.MockBuilderTest.testCreateMock":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":50,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":126,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":15,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":285,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":497,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":211,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":436,"org.easymock.tests.UsageOverloadedMethodTest.overloading":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":52,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":308,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":192,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":307,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":234,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":418,"org.easymock.tests.MockClassControlTest.testEquals":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":34,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":451,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":389,"org.easymock.tests2.CaptureTest.testCaptureAll":227,"org.easymock.tests.MockNameTest.defaultName":414,"org.easymock.tests2.UsageConstraintsTest.testMatches":309,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":158,"org.easymock.samples.ExampleTest.voteForRemovals":223,"org.easymock.tests.UsageVarargTest.allKinds":147,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":390,"org.easymock.samples.BasicClassMockTest.testPrintContent":215,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":113,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":81,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":496,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":434,"org.easymock.tests2.UsageConstraintsTest.greaterThan":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":101,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":255,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":435,"org.easymock.samples.ExampleTest.voteForRemoval":220,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":443,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":261,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":364,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":503,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":250,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":88,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":330,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":282,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":76,"org.easymock.tests2.CaptureTest.testCaptureFirst":237,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":283,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":342,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":188,"org.easymock.tests2.CaptureTest.testCapture2_2446744":236,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":263,"org.easymock.tests2.UsageTest.moreThanOneArgument":332,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":146,"org.easymock.tests.GenericTest.testBridgedEquals":393,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":486,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":166,"org.easymock.tests.UsageExpectAndReturnTest.longType":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":84,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":280,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":135,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":315,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":151,"org.easymock.tests.UsageCallCountTest.tooManyCalls":167,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":112,"org.easymock.tests.MockingTest.testNiceClassMocking":426,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":266,"org.easymock.tests.MockingTest.testClassMocking":422,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":161,"org.easymock.tests2.UsageConstraintsTest.testContains":306,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":240,"org.easymock.tests2.UsageConstraintsTest.testFind":301,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":91,"org.easymock.tests.MockTypeTest.fromEasyMockClass":361,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":92,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":344,"org.easymock.tests.UsageExpectAndReturnTest.object":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":493,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":141,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":354,"org.easymock.tests.UsageTest.exactCallCountByLastCall":208,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":60,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":357,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":57,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":197,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":170,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":455,"org.easymock.tests.MockClassControlTest.testHashCode":399,"org.easymock.tests2.EasyMockSupportTest.testVerify":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":44,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":61,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":168,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":210,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":270,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":483,"org.easymock.tests.UsageVarargTest.varargCharAccepted":140,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":427,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":387,"org.easymock.tests2.UsageTest.openCallCountByLastCall":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":489,"org.easymock.tests.DefaultClassInstantiatorTest.object":428,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":209,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":352,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":510,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":454,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":398,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":123,"org.easymock.tests.CapturesMatcherTest.test":512,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":150,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":53,"org.easymock.tests2.UsageTest.resumeIfFailure":341,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":360,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":79,"org.easymock.tests2.StubTest.stubWithReturnValue":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":190,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":316,"org.easymock.tests2.SerializationTest.testAllMockedMethod":279,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":82,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":16,"org.easymock.samples.SupportTest.voteForRemovals":226,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":129,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":511,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":83,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":346,"org.easymock.tests.UsageExpectAndThrowTest.object":127,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":358,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":313,"org.easymock.tests2.DelegateToTest.testWrongClass":296,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":148,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":149,"org.easymock.tests.UsageStrictMockTest.range":96,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":448,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":128,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":323,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":31,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":437,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":180,"org.easymock.tests2.CaptureTest.testCaptureNone":233,"org.easymock.tests.UsageUnorderedTest.message":115,"org.easymock.tests.UsageVerifyTest.twoReturns":87,"org.easymock.tests.UsageVarargTest.varargByteAccepted":145,"org.easymock.tests2.ThreadingTest.testThreadSafe":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":48,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":165,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":214,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":355,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":74,"org.easymock.tests2.UsageConstraintsTest.any":304,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":409,"org.easymock.tests2.StubTest.stub":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndThrowTest.longType":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":78,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":432,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":408,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":274,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":319,"org.easymock.tests.LimitationsTest.mockNativeMethod":116,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":106,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":472,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":277,"org.easymock.tests2.NameTest.nameForMocksControl":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":474,"org.easymock.tests2.MockedExceptionTest.testMockedException":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":36,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":205,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":484,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":121,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":244,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":324,"org.easymock.tests.MockingTest.testNicePartialClassMocking":176,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":249,"org.easymock.tests2.CompareToTest.testNotComparable":513,"org.easymock.tests2.CompareToTest.testCompareEqual":508,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":470,"org.easymock.tests2.CaptureTest.testCaptureLast":232,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":70,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":314,"org.easymock.tests.MockingTest.testTwoMocks":174,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":125,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":339,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":317,"org.easymock.samples.ExampleTest.removeNonExistingDocument":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":406,"org.easymock.tests.UsageStrictMockTest.differentMethods":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":456,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":430,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":262,"org.easymock.tests2.MockBuilderTest.testCreateMockString":469,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":394,"org.easymock.tests.UsageExpectAndThrowTest.floatType":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":38,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":348,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":506,"org.easymock.tests.UsageVerifyTest.twoThrows":86,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":47,"org.easymock.samples.ExampleTest.voteAgainstRemoval":221,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":254,"org.easymock.tests.LimitationsTest.privateConstructor":416,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":20,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":114,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":238,"org.easymock.tests2.UsageTest.defaultResetToNice":338,"org.easymock.samples.ExampleTest.voteAgainstRemovals":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":471,"org.easymock.tests.UsageVarargTest.differentLength":142,"org.easymock.tests2.CallbackTest.callback":329,"org.easymock.tests2.UsageConstraintsTest.equals":453,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":500,"org.easymock.tests.UsageTest.openCallCountByLastCall":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":73,"org.easymock.tests.UsageCallCountTest.tooFewCalls":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":439,"org.easymock.tests.UsageThrowableTest.throwCheckedException":111,"org.easymock.tests.MockingTest.testStrictClassMocking":421,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":13,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":154,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":475,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":21,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":268,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":350,"org.easymock.tests2.CompareToTest.testGreateOrEqual":485,"org.easymock.tests.ObjectMethodsTest.testHashCode":353,"org.easymock.tests2.NameTest.nameForNiceMock":258,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":264,"org.easymock.tests2.DependencyTest.testInterfaceMocking":327,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":494,"org.easymock.samples.ExampleTest.addDocument":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":54,"org.easymock.tests2.DelegateToTest.testStubDelegate":295,"org.easymock.tests2.AnswerTest.stubAnswer":349,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":94,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":505,"org.easymock.tests.UsageVarargTest.varargLongAccepted":144,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":375,"org.easymock.tests.UsageExpectAndReturnTest.floatType":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":56,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests.UsageThrowableTest.noUpperLimit":108,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":312,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":300,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":446,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":230,"org.easymock.tests2.SerializationTest.test":278,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":182,"org.easymock.tests2.UsageConstraintsTest.testSame":302,"org.easymock.samples.SupportTest.addDocument":225,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":504,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":39,"org.easymock.tests.GenericTest.testPackageScope":104,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":424,"org.easymock.tests2.NameTest.nameForMock":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":193,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":30,"org.easymock.tests2.UsageStrictMockTest.differentMethods":276,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":442,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":131,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":351,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":103,"org.easymock.tests2.MockedExceptionTest.testRealException":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":491,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":379,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":72,"org.easymock.tests2.NameTest.nameForStrictMock":257,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":466,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":490,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":248,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":447,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":431,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":321,"org.easymock.tests2.UsageStrictMockTest.range":275,"org.easymock.tests2.UsageConstraintsTest.lessThan":318,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":495,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":43,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":245,"org.easymock.tests.UsageTest.wrongArguments":203,"org.easymock.tests2.MockBuilderTest.testWithConstructor":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":40,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":186,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":367,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":433,"org.easymock.tests.UsageVarargTest.varargShortAccepted":143,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":419,"org.easymock.tests2.UsageConstraintsTest.cmpTo":305,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":347,"org.easymock.tests2.CompareToTest.testLessThan":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":337,"org.easymock.tests2.CaptureTest.testCaptureFromStub":235,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":403,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":465,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":164,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":195,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":95,"org.easymock.samples.ExampleTest.addAndChangeDocument":224,"org.easymock.tests.UsageStrictMockTest.testVerify":99,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":213,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":93,"org.easymock.tests2.CompareToTest.testGreateThan":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":388,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":66,"org.easymock.tests.LimitationsTest.abstractClass":415,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":187,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":67,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":286}}]
