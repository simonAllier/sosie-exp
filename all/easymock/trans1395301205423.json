[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[6,7],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[9,10,11,12],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,6,31,32,33,7,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,122,123,123,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[125,126],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[146,147,148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[149],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[149,150,151,145],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[152],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[153,154,155],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[156,157,158,159,160,161,2,162,163,164,165,166,167,168,3,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[156,157,158,13,14,15,16,17,184,18,185,186,19,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,149,216,217,218,219,220,221,150,222,20,21,22,23,24,25,26,27,28,223,224,225,226,227,159,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,160,246,247,161,29,248,249,2,162,250,163,164,251,252,253,254,255,256,257,258,259,260,261,262,30,263,264,265,266,267,268,269,270,271,272,273,151,274,165,275,276,277,166,167,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,168,3,169,300,301,170,171,302,303,304,305,306,307,308,309,310,311,6,31,32,33,7,34,312,313,172,314,35,315,173,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,128,332,36,37,38,39,333,334,335,336,337,338,339,340,341,40,41,42,43,44,45,46,47,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,174,377,378,379,380,381,382,383,384,385,386,387,388,48,49,50,389,390,391,392,393,394,175,395,396,397,398,399,400,401,402,176,403,177,178,404,51,405,52,406,407,408,409,410,411,412,413,414,8,10,415,416,417,418,419,11,420,421,422,423,125,126,424,425,426,427,428,12,429,430,431,432,433,434,435,436,437,438,439,440,441,53,54,55,56,442,443,57,58,444,445,446,447,448,59,60,61,62,63,64,65,66,67,68,69,449,70,71,72,73,74,75,76,77,450,451,452,453,454,455,456,179,180,457,458,459,460,461,181,182,462,463,464,153,465,466,154,155,467,468,469,470,471,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,472,473,474,475,476,477,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,478,105,106,107,108,479,109,110,111,112,113,114,115,116,117,480,481,482,483,118,484,485,486,119,183,487,488,489,120,121,490,122,123,124,491,492,493,494,495,496,497,498,499],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[372,378,390,396],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[421,425,131,132,134,135,136,137,138,144],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[500,12],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[501],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[22,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:111","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.createTypeVariableMap(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[204,339,340,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[156,157,158,2,162,163,164,168,169,170,171,502,176,177,178,179,180,181,182,468,469,470,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[157,224,243,263,265,266,267,268,269,270,273,151,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,333,334,335,336,337,338,348,75,76,77,450,455,460,472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[9,10,11,12],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[157,158,16,17,18,196,197,198,199,200,21,228,229,230,232,233,235,236,237,238,239,241,242,160,246,247,249,2,250,251,252,30,263,264,265,266,267,268,269,270,151,167,281,282,284,289,294,3,169,170,171,302,304,307,308,309,310,311,31,32,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,38,40,41,42,43,44,45,46,47,345,347,348,350,351,354,355,357,362,367,174,384,386,48,175,402,403,404,51,405,52,409,8,10,416,417,419,421,125,126,424,425,426,429,430,431,432,433,434,435,436,437,438,439,440,441,53,54,55,56,443,57,58,445,446,447,448,59,65,66,67,69,71,74,75,76,77,452,455,456,180,457,458,461,181,182,463,464,466,130,131,132,133,135,136,137,138,139,141,144,476,477,81,84,94,100,103,104,478,105,106,107,108,109,112,114,482,483,488,489,120,121,490,124,491,492,493,494,495,496,497,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[25,503,504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[500,505,506,9,507],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":409,"org.easymock.tests2.UsageTest.argumentsOrdered":182,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":299,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":439,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":211,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":458,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":490,"org.easymock.tests2.DelegateToTest.testReturnException":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":334,"org.easymock.tests.MockingTest.testPartialClassMocking":16,"org.easymock.tests.MockClassControlTest.testToString":42,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":467,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":88,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":279,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":502,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":483,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":10,"org.easymock.tests2.UsageTest.wrongArguments":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":271,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":400,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":318,"org.easymock.samples.ExampleTest.answerVsDelegate":492,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":35,"org.easymock.tests2.UsageConstraintsTest.testNull":412,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":186,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":438,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":47,"org.easymock.tests2.CaptureTest.testPrimitive":133,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":274,"org.easymock.tests.UsageTest.moreThanOneArgument":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":298,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":478,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":260,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":187,"org.easymock.tests.UsageTest.argumentsOrdered":171,"org.easymock.tests.UsageVarargTest.varargIntAccepted":230,"org.easymock.tests.InvocationTest.testEquals":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":253,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":381,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":257,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests.ReplayStateInvalidUsageTest.times":328,"org.easymock.tests2.DependencyTest.testClassMocking":480,"org.easymock.tests2.AnswerTest.answer":464,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":448,"org.easymock.tests2.CaptureTest.testAnd":130,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":313,"org.easymock.tests2.UsageTest.strictResetToDefault":456,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":433,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":194,"org.easymock.tests2.DelegateToTest.testDelegate":388,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":294,"org.easymock.tests.LimitationsTest.mockFinalMethod":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":200,"org.easymock.tests2.DependencyTest.testClassMockingSupport":481,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":166,"org.easymock.tests2.CaptureTest.testCapture1_2446744":134,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":292,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":446,"org.easymock.tests.UsageThrowableTest.throwError":263,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":322,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":314,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":240,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":102,"org.easymock.samples.PartialClassMockTest.testGetArea":124,"org.easymock.tests.MockingTest.testInterfaceMocking":184,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":323,"org.easymock.tests2.CompareToTest.testLessOrEqual":507,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":254,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":226,"org.easymock.tests2.UsageTest.niceToStrict":457,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":280,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":97,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":397,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":288,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":434,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":312,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":316,"org.easymock.tests.UsageOverloadedMethodTest.overloading":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":93,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":11,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":348,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":363,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":503,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":419,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":139,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":231,"org.easymock.tests.MockClassControlTest.testEquals":46,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":32,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":447,"org.easymock.tests2.CaptureTest.testCaptureAll":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":198,"org.easymock.tests.MockNameTest.defaultName":165,"org.easymock.tests2.UsageConstraintsTest.testMatches":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":261,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":320,"org.easymock.samples.ExampleTest.voteForRemovals":496,"org.easymock.tests.UsageVarargTest.allKinds":239,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":199,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":269,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":401,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":378,"org.easymock.tests2.UsageConstraintsTest.greaterThan":422,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":82,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":193,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.samples.ExampleTest.voteForRemoval":493,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":28,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":474,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":116,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":108,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":455,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":30,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":431,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":333,"org.easymock.tests2.CaptureTest.testCaptureFirst":144,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":432,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":463,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":359,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":476,"org.easymock.tests2.UsageTest.moreThanOneArgument":179,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":218,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":238,"org.easymock.tests.GenericTest.testBridgedEquals":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":310,"org.easymock.tests.UsageExpectAndReturnTest.longType":355,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":196,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":297,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":425,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":276,"org.easymock.tests.UsageCallCountTest.tooManyCalls":311,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":98,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":268,"org.easymock.tests.MockingTest.testNiceClassMocking":19,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":54,"org.easymock.tests.MockingTest.testClassMocking":14,"org.easymock.tests2.UsageConstraintsTest.testContains":418,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":304,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":77,"org.easymock.tests2.UsageConstraintsTest.testFind":411,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":243,"org.easymock.tests.MockTypeTest.fromEasyMockClass":172,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":454,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":248,"org.easymock.tests.UsageExpectAndReturnTest.object":362,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":437,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":233,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":247,"org.easymock.tests.UsageTest.exactCallCountByLastCall":302,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":206,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":188,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":49,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":228,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":347,"org.easymock.tests.MockClassControlTest.testHashCode":45,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":373,"org.easymock.tests2.EasyMockSupportTest.testVerify":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":91,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":146,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":340,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":445,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":451,"org.easymock.tests.UsageVarargTest.varargCharAccepted":232,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":20,"org.easymock.tests2.CaptureTest.testCaptureMultiple":129,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":222,"org.easymock.tests2.UsageTest.openCallCountByLastCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":440,"org.easymock.tests.DefaultClassInstantiatorTest.object":21,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":339,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":286,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":266,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":393,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":372,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":113,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":285,"org.easymock.tests.CapturesMatcherTest.test":127,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":369,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":275,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":100,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":43,"org.easymock.tests2.UsageTest.resumeIfFailure":462,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":484,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":336,"org.easymock.tests2.StubTest.stubWithReturnValue":472,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":361,"org.easymock.tests2.SerializationTest.testAllMockedMethod":52,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":216,"org.easymock.samples.SupportTest.voteForRemovals":489,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":291,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":150,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":153,"org.easymock.tests.UsageExpectAndThrowTest.object":289,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":344,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":126,"org.easymock.tests2.DelegateToTest.testWrongClass":386,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":332,"org.easymock.tests.UsageStrictMockTest.range":163,"org.easymock.samples.ConstructorCalledMockTest.testTax":122,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":183,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":290,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":78,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":317,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":0,"org.easymock.tests2.CaptureTest.testCaptureNone":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":227,"org.easymock.tests.UsageUnorderedTest.message":159,"org.easymock.tests.UsageVerifyTest.twoReturns":158,"org.easymock.tests.UsageVarargTest.varargByteAccepted":237,"org.easymock.tests2.ThreadingTest.testThreadSafe":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":95,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":308,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":161,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":120,"org.easymock.tests2.CaptureTest.testCapture_2617107":132,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":220,"org.easymock.tests2.UsageConstraintsTest.any":416,"org.easymock.tests2.StubTest.stub":145,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":221,"org.easymock.tests.UsageExpectAndThrowTest.longType":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":335,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":25,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":326,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":403,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests2.SerializationTest.testClass":51,"org.easymock.tests.LimitationsTest.mockNativeMethod":38,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":371,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":392,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":404,"org.easymock.tests2.NameTest.nameForMocksControl":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":394,"org.easymock.tests2.MockedExceptionTest.testMockedException":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":83,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":301,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":453,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":18,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":283,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":69,"org.easymock.tests.MockingTest.testNicePartialClassMocking":17,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":107,"org.easymock.tests2.CompareToTest.testCompareEqual":506,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":390,"org.easymock.tests2.CaptureTest.testCaptureLast":137,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":167,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":424,"org.easymock.tests.MockingTest.testTwoMocks":15,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":287,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":181,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":428,"org.easymock.samples.ExampleTest.removeNonExistingDocument":497,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":396,"org.easymock.tests.UsageStrictMockTest.differentMethods":164,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":374,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":23,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":475,"org.easymock.tests2.MockBuilderTest.testCreateMockString":74,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":85,"org.easymock.tests.UsageExpectAndThrowTest.floatType":281,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":466,"org.easymock.tests.UsageVerifyTest.twoThrows":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":50,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":94,"org.easymock.samples.ExampleTest.voteAgainstRemoval":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":225,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.LimitationsTest.privateConstructor":37,"org.easymock.tests2.UsageConstraintsTest.testNotNull":427,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":270,"org.easymock.tests2.UsageTest.defaultResetToNice":461,"org.easymock.samples.ExampleTest.voteAgainstRemovals":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":367,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":391,"org.easymock.tests.UsageVarargTest.differentLength":234,"org.easymock.tests2.CallbackTest.callback":389,"org.easymock.tests2.UsageConstraintsTest.equals":410,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":110,"org.easymock.tests.UsageTest.openCallCountByLastCall":300,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":273,"org.easymock.tests.UsageCallCountTest.tooFewCalls":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":319,"org.easymock.tests.UsageThrowableTest.throwCheckedException":267,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":1,"org.easymock.tests.MockingTest.testStrictClassMocking":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":57,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":395,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":55,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":329,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":443,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":155,"org.easymock.tests2.CompareToTest.testGreateOrEqual":9,"org.easymock.tests.ObjectMethodsTest.testHashCode":246,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":477,"org.easymock.tests2.NameTest.nameForNiceMock":470,"org.easymock.tests2.DependencyTest.testInterfaceMocking":482,"org.easymock.samples.ExampleTest.addDocument":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":96,"org.easymock.tests2.DelegateToTest.testStubDelegate":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":101,"org.easymock.tests2.AnswerTest.stubAnswer":154,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":162,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":449,"org.easymock.tests.UsageVarargTest.varargLongAccepted":236,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":210,"org.easymock.tests.UsageExpectAndReturnTest.floatType":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":370,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":123,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":423,"org.easymock.tests.UsageThrowableTest.noUpperLimit":264,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":407,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":118,"org.easymock.tests2.SerializationTest.test":405,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":135,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":504,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":22,"org.easymock.tests2.UsageConstraintsTest.testSame":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":353,"org.easymock.samples.SupportTest.addDocument":488,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":442,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":86,"org.easymock.tests.GenericTest.testPackageScope":31,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":205,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":379,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":185,"org.easymock.tests2.NameTest.nameForMock":468,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":364,"org.easymock.tests2.UsageStrictMockTest.differentMethods":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":73,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":356,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":293,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":245,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":195,"org.easymock.tests2.MockedExceptionTest.testRealException":450,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":173,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":215,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":272,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":331,"org.easymock.tests2.NameTest.nameForStrictMock":469,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":64,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":452,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":119,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":125,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":24,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":61,"org.easymock.tests2.UsageStrictMockTest.range":177,"org.easymock.tests2.UsageConstraintsTest.lessThan":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":376,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":209,"org.easymock.tests2.CaptureTest.testCaptureRightOne":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":90,"org.easymock.tests2.UsageConstraintsTest.testOr":414,"org.easymock.tests.UsageRangeTest.combination":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.UsageTest.wrongArguments":169,"org.easymock.tests2.MockBuilderTest.testWithConstructor":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":87,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":41,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":365,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":26,"org.easymock.tests.UsageVarargTest.varargShortAccepted":235,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":309,"org.easymock.tests2.UsageConstraintsTest.cmpTo":417,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":465,"org.easymock.tests2.CompareToTest.testLessThan":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":204,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":460,"org.easymock.tests2.CaptureTest.testCaptureFromStub":142,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":321,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":62,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":307,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":366,"org.easymock.tests2.CaptureTest.testCapture":140,"org.easymock.tests2.UsageConstraintsTest.constraints":408,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":250,"org.easymock.samples.ExampleTest.addAndChangeDocument":498,"org.easymock.tests.UsageStrictMockTest.testVerify":252,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":499,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":249,"org.easymock.tests2.CompareToTest.testGreateThan":505,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":197,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":255,"org.easymock.tests.LimitationsTest.abstractClass":36,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":256,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":435,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":229}}]
