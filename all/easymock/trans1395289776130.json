[{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[18,19],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,20,91,21,22,92,93,23,24,25,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,26,27,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,28,29,30,31,32,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,33,34,232,35,233,36,37,38,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,39,40,41,42,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,43,320,44,45,321,46,47,322,323,324,325,326,327,328,329,330,331,332,333,334,48,335,336,49,50,51,337,338,52,53,54,339,55,340,341,56,342,343,344,345,346,347,348,349,350,0,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,57,58,59,60,401,6,7,402,8,61,403,9,10,404,405,11,406,407,408,409,410,411,412,413,62,414,415,416,417,63,418,419,1,420,421,422,423,424,425,426,427,12,13,428,14,64,429,15,16,430,431,17,432,433,434,435,436,437,65,438,439,440,441,442,443,66,67,444,68,445,446,447,69,448,70,449,450,451,452,3,4,5,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,71,476,477,72,73,74,478,479,480,481,482,483,484,485,486,487,488,489,490],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[315,316,369,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,491,18,438,441,444,446,492,448,3,459,460],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[359],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[315,315,316,316,416,446,3,459,460],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:269","sourceCode":"final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))","type":"CtLocalVariableImpl"},"failures":[236],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[494,495,496,497,498],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[75,76,77,78,79,80,86,88,89,20,91,21,22,92,93,23,24,25,94,95,96,100,101,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,138,139,140,141,142,143,144,145,146,26,27,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,208,209,210,211,212,213,214,215,216,28,29,30,31,32,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,33,34,232,35,233,36,37,38,234,235,241,242,243,244,245,246,247,248,249,250,251,252,39,40,41,42,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,303,304,305,306,307,308,309,310,311,312,314,317,318,319,43,320,44,45,321,46,47,322,323,324,325,326,327,328,329,330,331,332,333,334,48,335,336,49,50,51,337,338,52,53,54,339,55,340,341,56,342,343,344,345,346,347,348,349,350,0,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,372,57,58,59,60,401,6,7,402,8,61,403,9,10,404,405,11,406,407,410,423,424,425,426,427,12,13,428,14,64,429,15,16,430,431,17,432,433,434,435,436,437,449,450,451,452,4,453,454,455,456,457,462,463,464,465,466,467,468,469,470,471,472,473,474,475,71,476,477,72,73,74,478,481,482,483,489,490],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[97,102,239,313,382,392,398,62,418,419,421,65,439,440,443,67,68,69,70,3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[418,419,499,500,443],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[131,135],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[84,85,87,20,91,92,93,25,106,138,140,141,142,143,144,145,146,27,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,199,200,201,202,203,206,214,215,216,227,230,231,233,37,38,237,239,253,254,257,258,259,260,261,304,305,307,308,310,313,318,319,43,320,44,45,321,46,47,322,323,324,329,333,48,335,336,50,337,338,52,339,55,340,341,56,342,344,345,346,347,348,349,0,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,372,373,374,379,382,392,398,61,407,408,409,410,411,412,413,415,418,419,1,64,434,439,443,67,68,69,451,3,4,453,454,455,456,457,459,462,463,465,466,469,470,471,472,474,475,477,73,74,481,482],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,20,91,21,22,92,93,23,24,25,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,26,27,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,28,29,30,31,32,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,33,34,232,35,233,36,37,38,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,39,40,41,42,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,43,320,44,45,321,46,47,322,323,324,325,326,327,328,329,330,331,332,333,334,48,335,336,49,50,51,337,338,52,53,54,339,55,340,341,56,342,343,344,345,346,347,348,349,350,0,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,57,58,59,60,401,6,7,402,8,61,403,9,10,404,405,11,406,407,408,409,410,411,412,413,62,414,415,416,417,63,418,419,1,420,421,422,423,424,425,426,427,12,13,428,14,64,429,15,16,430,431,17,432,433,434,435,436,437,65,438,439,440,441,442,443,66,67,444,68,445,446,447,69,448,70,449,450,451,452,3,4,5,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,71,476,477,72,73,74,478,479,480,481,482,483,484,485,486,487,488,489,490],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[91,146,26,27,170,227,233,38,234,336,477,74,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[236],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[356],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:42","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n} else {\n    try {\n        org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n        java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n    } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[19,502,503],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[84,85,87,20,91,21,92,93,25,94,106,107,138,139,140,141,142,143,144,145,146,26,27,147,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,199,200,201,202,203,206,214,215,216,28,227,228,230,231,233,36,37,38,234,237,238,241,253,254,257,258,259,260,261,304,305,306,307,308,309,310,311,313,314,318,319,43,320,44,45,321,46,47,322,323,324,325,329,333,48,335,336,50,51,337,338,52,53,339,55,340,341,56,342,344,345,346,347,348,349,350,0,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,372,373,374,379,382,392,398,61,406,407,408,409,410,411,412,413,415,63,418,419,1,423,64,434,439,443,67,68,447,69,70,451,3,4,5,453,454,455,456,457,459,462,463,464,465,466,469,470,471,472,474,475,477,72,73,74,478,481,482],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[18,19],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":342,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":20,"org.easymock.tests2.UsageTest.argumentsOrdered":54,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":323,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":272,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":51,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":317,"org.easymock.tests2.DelegateToTest.testReturnException":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":209,"org.easymock.tests.MockingTest.testPartialClassMocking":84,"org.easymock.tests.MockClassControlTest.testToString":123,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":422,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":119,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":147,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":382,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":482,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":349,"org.easymock.tests2.UsageTest.wrongArguments":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":253,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":41,"org.easymock.samples.ExampleTest.answerVsDelegate":306,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":102,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":89,"org.easymock.tests2.UsageConstraintsTest.testNull":345,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":411,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":128,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":322,"org.easymock.tests2.CaptureTest.testPrimitive":465,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":166,"org.easymock.tests.UsageTest.moreThanOneArgument":91,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":410,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":219,"org.easymock.tests.UsageTest.argumentsOrdered":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":194,"org.easymock.tests.UsageVarargTest.varargIntAccepted":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":199,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":405,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":203,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests.ReplayStateInvalidUsageTest.times":294,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":493,"org.easymock.tests2.DependencyTest.testClassMocking":479,"org.easymock.tests2.AnswerTest.answer":329,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":60,"org.easymock.tests2.CaptureTest.testAnd":462,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":99,"org.easymock.tests2.UsageTest.strictResetToDefault":335,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":441,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":44,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":260,"org.easymock.tests2.DelegateToTest.testDelegate":437,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":162,"org.easymock.tests.LimitationsTest.mockFinalMethod":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":32,"org.easymock.tests2.DependencyTest.testClassMockingSupport":480,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":168,"org.easymock.tests2.CaptureTest.testCapture1_2446744":466,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":414,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":58,"org.easymock.tests.UsageThrowableTest.throwError":138,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":288,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":101,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":167,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":221,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":400,"org.easymock.samples.PartialClassMockTest.testGetArea":313,"org.easymock.tests.MockingTest.testInterfaceMocking":86,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":289,"org.easymock.tests2.CompareToTest.testLessOrEqual":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":200,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":387,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":148,"org.easymock.tests2.UsageTest.niceToStrict":50,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":80,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":262,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":443,"org.easymock.tests2.MockBuilderTest.testCreateMock":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":395,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":156,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":45,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":98,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":39,"org.easymock.tests.UsageOverloadedMethodTest.overloading":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":225,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":182,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":214,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":353,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":471,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":244,"org.easymock.tests.MockClassControlTest.testEquals":127,"org.easymock.tests2.EasyMockSupportClassTest.testAll":379,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":164,"org.easymock.tests2.CaptureTest.testCaptureAll":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":59,"org.easymock.tests.MockNameTest.defaultName":117,"org.easymock.tests2.UsageConstraintsTest.testMatches":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":220,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":286,"org.easymock.samples.ExampleTest.voteForRemovals":310,"org.easymock.tests.UsageVarargTest.allKinds":252,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":31,"org.easymock.samples.BasicClassMockTest.testPrintContent":302,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":144,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":71,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":436,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":213,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":136,"org.easymock.tests2.UsageConstraintsTest.greaterThan":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":1,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":137,"org.easymock.samples.ExampleTest.voteForRemoval":307,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":454,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":420,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":487,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":62,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":105,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":43,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":208,"org.easymock.tests2.CaptureTest.testCaptureFirst":475,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":320,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":55,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":178,"org.easymock.tests2.CaptureTest.testCapture2_2446744":474,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":456,"org.easymock.tests2.UsageTest.moreThanOneArgument":336,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":280,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":251,"org.easymock.tests.GenericTest.testBridgedEquals":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":115,"org.easymock.tests.UsageExpectAndReturnTest.longType":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":28,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":318,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":165,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":229,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":362,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":217,"org.easymock.tests.UsageCallCountTest.tooManyCalls":116,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":143,"org.easymock.tests.MockingTest.testNiceClassMocking":90,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":368,"org.easymock.tests.MockingTest.testClassMocking":82,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":500,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":109,"org.easymock.tests2.UsageConstraintsTest.testContains":352,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":451,"org.easymock.tests2.UsageConstraintsTest.testFind":344,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":216,"org.easymock.tests.MockTypeTest.fromEasyMockClass":100,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":34,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":328,"org.easymock.tests.UsageExpectAndReturnTest.object":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":47,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":246,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":78,"org.easymock.tests.UsageTest.exactCallCountByLastCall":25,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":118,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":460,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":187,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":224,"org.easymock.tests.MockClassControlTest.testHashCode":126,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":6,"org.easymock.tests2.EasyMockSupportTest.testVerify":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":389,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":196,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":222,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":57,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":458,"org.easymock.tests.UsageVarargTest.varargCharAccepted":245,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":129,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":285,"org.easymock.tests2.UsageTest.openCallCountByLastCall":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":502,"org.easymock.tests.DefaultClassInstantiatorTest.object":130,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":298,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":390,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":428,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":401,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":418,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":125,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":398,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":124,"org.easymock.tests2.UsageTest.resumeIfFailure":339,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":211,"org.easymock.tests2.StubTest.stubWithReturnValue":407,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":444,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":363,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":278,"org.easymock.samples.SupportTest.voteForRemovals":304,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":159,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":284,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":330,"org.easymock.tests.UsageExpectAndThrowTest.object":157,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":120,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":360,"org.easymock.tests2.DelegateToTest.testWrongClass":435,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":231,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.samples.ConstructorCalledMockTest.testTax":315,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":489,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":158,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":40,"org.easymock.tests2.CaptureTest.testCaptureNone":470,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":193,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests.UsageVarargTest.varargByteAccepted":250,"org.easymock.tests2.ThreadingTest.testThreadSafe":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":393,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":113,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":79,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":301,"org.easymock.tests2.CaptureTest.testCapture_2617107":464,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":282,"org.easymock.tests2.UsageConstraintsTest.any":0,"org.easymock.tests2.StubTest.stub":406,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":96,"org.easymock.tests.UsageExpectAndThrowTest.longType":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":283,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":134,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":292,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":72,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":61,"org.easymock.tests.LimitationsTest.mockNativeMethod":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":190,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":13,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":478,"org.easymock.tests2.NameTest.nameForMocksControl":426,"org.easymock.tests2.MockedExceptionTest.testMockedException":450,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":381,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":151,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":87,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":327,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":408,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":68,"org.easymock.tests.MockingTest.testNicePartialClassMocking":85,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":413,"org.easymock.tests2.CompareToTest.testNotComparable":501,"org.easymock.tests2.CompareToTest.testCompareEqual":496,"org.easymock.tests2.CaptureTest.testCaptureLast":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":427,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":169,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":348,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":374,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":361,"org.easymock.tests.MockingTest.testTwoMocks":83,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":155,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":365,"org.easymock.samples.ExampleTest.removeNonExistingDocument":311,"org.easymock.tests.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":15,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":290,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":7,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":132,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":455,"org.easymock.tests2.MockBuilderTest.testCreateMockString":70,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":121,"org.easymock.tests.UsageExpectAndThrowTest.floatType":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":461,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":392,"org.easymock.samples.ExampleTest.voteAgainstRemoval":308,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":273,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":419,"org.easymock.tests.LimitationsTest.privateConstructor":205,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":18,"org.easymock.tests2.UsageConstraintsTest.testNotNull":364,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":449,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":145,"org.easymock.tests2.UsageTest.defaultResetToNice":52,"org.easymock.samples.ExampleTest.voteAgainstRemovals":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":12,"org.easymock.tests.UsageVarargTest.differentLength":247,"org.easymock.tests2.CallbackTest.callback":483,"org.easymock.tests2.UsageConstraintsTest.equals":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":416,"org.easymock.tests.UsageTest.openCallCountByLastCall":92,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":255,"org.easymock.tests.UsageCallCountTest.tooFewCalls":111,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":42,"org.easymock.tests.UsageThrowableTest.throwCheckedException":142,"org.easymock.tests.MockingTest.testStrictClassMocking":81,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":107,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":373,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":429,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":295,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":372,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":334,"org.easymock.tests2.CompareToTest.testGreateOrEqual":497,"org.easymock.tests.ObjectMethodsTest.testHashCode":77,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":457,"org.easymock.tests2.NameTest.nameForNiceMock":425,"org.easymock.tests2.DependencyTest.testInterfaceMocking":481,"org.easymock.samples.ExampleTest.addDocument":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":394,"org.easymock.tests2.DelegateToTest.testStubDelegate":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":399,"org.easymock.tests2.AnswerTest.stubAnswer":333,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":233,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":445,"org.easymock.tests.UsageVarargTest.varargLongAccepted":249,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":189,"org.easymock.tests.UsageExpectAndReturnTest.floatType":173,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":459,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":404,"org.easymock.tests.UsageThrowableTest.noUpperLimit":139,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":341,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":484,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":467,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":172,"org.easymock.tests2.UsageConstraintsTest.testSame":346,"org.easymock.samples.SupportTest.addDocument":303,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":371,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":384,"org.easymock.tests.GenericTest.testPackageScope":237,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":10,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":88,"org.easymock.tests2.NameTest.nameForMock":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":448,"org.easymock.tests2.UsageStrictMockTest.differentMethods":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":417,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":175,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":161,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":75,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":261,"org.easymock.tests2.MockedExceptionTest.testRealException":452,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":104,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":254,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":297,"org.easymock.tests2.NameTest.nameForStrictMock":424,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":442,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":503,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":326,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":488,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":133,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":359,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":439,"org.easymock.tests2.UsageStrictMockTest.range":73,"org.easymock.tests2.UsageConstraintsTest.lessThan":366,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":8,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":270,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":319,"org.easymock.tests2.CaptureTest.testCaptureRightOne":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":388,"org.easymock.tests2.UsageConstraintsTest.testOr":347,"org.easymock.tests.UsageRangeTest.combination":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":409,"org.easymock.tests.UsageTest.wrongArguments":22,"org.easymock.tests2.MockBuilderTest.testWithConstructor":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":385,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":263,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":135,"org.easymock.tests.UsageVarargTest.varargShortAccepted":248,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":114,"org.easymock.tests2.UsageConstraintsTest.cmpTo":351,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":331,"org.easymock.tests2.CompareToTest.testLessThan":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":265,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":338,"org.easymock.tests2.CaptureTest.testCaptureFromStub":473,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":287,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":440,"org.easymock.tests.UsageTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":112,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":185,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.UsageConstraintsTest.constraints":56,"org.easymock.samples.ExampleTest.addAndChangeDocument":312,"org.easymock.tests.UsageStrictMockTest.testVerify":235,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":314,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests2.CompareToTest.testGreateThan":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":29,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":468,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":201,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":177,"org.easymock.tests.LimitationsTest.abstractClass":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":202,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":321}}]
