[{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,0,52,53,1,2,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,3,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,4,5,6,7,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,8,176,177,9,10,178,11,12,13,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,14,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,15,213,16,17,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).startsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,300,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,301,302,303,304,305,46,306,307,47,48,49,50,51,0,52,53,1,2,54,55,308,56,57,58,59,309,310,311,312,313,314,315,316,317,318,319,320,321,60,61,62,63,64,65,66,67,68,322,323,69,70,71,72,73,3,74,75,76,77,78,79,80,81,82,83,324,84,85,86,325,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,326,108,109,110,327,328,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,4,5,6,7,142,155,156,157,158,159,160,161,162,163,329,164,165,166,167,168,169,170,171,172,173,174,175,8,176,177,9,10,178,11,12,13,330,331,332,333,334,335,336,179,180,181,337,182,183,184,185,186,187,188,189,190,338,339,191,192,193,194,195,196,14,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,15,16,17,214,215,216,217,218,340,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,341,259,342,343,344,345,346,347,348,349,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,350,351,290,291,292,293,294,295,297,352,353,354,355,356,357,357,358,358,359],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:557","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,301,302,303,304,305,46,306,307,47,48,49,0,53,1,54,55,308,56,57,58,59,309,310,311,312,313,314,315,316,317,318,319,320,60,61,62,63,64,66,67,322,323,70,72,73,3,75,77,78,79,82,83,324,84,85,86,325,87,88,89,91,92,93,95,96,99,100,101,102,103,104,105,106,326,108,109,110,327,328,111,112,117,118,119,120,121,122,123,124,126,128,129,130,142,155,156,157,158,159,160,162,163,164,166,167,168,169,170,171,172,8,177,9,11,12,13,330,331,332,333,334,335,179,180,181,337,182,183,184,185,186,187,188,189,190,338,339,196,14,199,200,203,208,209,210,211,212,16,340,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,342,343,344,345,346,347,348,349,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,350,290,291,292,293,295,297,353,357,357,358,358,359],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[18,19,22,23,24,25,30,32,33,35,36,42,43,44,0,55,103,155,8,182,183,186,208,209,210,211,212,340,230,231,232,233,234,257,258,357,357,358,358],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[88,89,90],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[360,361,362,363,175,197],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[53,74,80,81,364,365,175,177,12,13,197,198,201,202,235],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[20,27,32,44],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:972","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[366,367,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[369],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:227","sourceCode":"net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[322,370],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,300,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,301,302,303,304,305,46,306,307,47,48,49,50,51,0,52,53,1,2,54,55,308,56,57,58,59,309,310,311,312,313,314,315,316,317,318,319,320,321,60,61,62,63,64,66,67,322,323,70,72,73,3,74,75,76,77,78,79,80,81,82,83,324,84,85,86,325,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,326,108,109,110,327,328,111,112,117,118,119,120,121,122,123,124,126,128,129,130,4,5,6,7,142,155,156,157,158,159,160,161,162,163,329,164,166,167,168,169,170,171,172,173,174,175,8,176,177,9,10,178,11,12,13,330,331,332,333,334,335,336,179,180,181,337,182,183,184,185,186,187,188,189,190,338,339,196,14,198,199,200,201,202,203,208,209,210,211,212,15,16,17,214,215,217,218,340,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,341,259,342,343,344,345,346,347,348,349,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,350,351,290,291,292,293,294,295,297,352,353,354,355,356,357,357,358,358,359],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[371],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[161,329,341,259],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,301,302,303,304,305,46,47,48,49,51,0,1,2,54,55,308,56,57,58,59,309,310,311,312,313,314,315,316,317,318,319,320,321,60,61,64,65,67,68,322,323,73,3,75,76,79,82,84,85,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,105,106,326,108,109,110,327,328,111,112,113,114,115,116,117,118,119,121,122,123,124,126,127,129,4,5,6,7,135,142,155,158,159,164,166,167,168,169,170,171,172,174,8,9,10,178,11,12,13,179,180,181,182,183,186,187,188,189,190,191,192,193,194,195,14,204,205,206,207,208,209,210,211,212,15,213,16,17,214,215,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,372,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,288,289,351,290,291,292,293,294,295,297,352,353,354,355,356,357,358,359],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[91,373,374,357,358],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":196,"org.easymock.tests2.UsageTest.argumentsOrdered":81,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":169,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":76,"org.easymock.tests2.StubTest.stubWithReturnValue":55,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":356,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":246,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":41,"org.easymock.tests2.SerializationTest.testAllMockedMethod":90,"org.easymock.tests2.DelegateToTest.testReturnException":84,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":167,"org.easymock.tests.MockingTest.testPartialClassMocking":179,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":361,"org.easymock.samples.SupportTest.voteForRemovals":353,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":298,"org.easymock.tests.MockClassControlTest.testToString":136,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":272,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":339,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":260,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":306,"org.easymock.tests.UsageExpectAndThrowTest.object":270,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":301,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":38,"org.easymock.tests2.DelegateToTest.testWrongClass":86,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":257,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":258,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":27,"org.easymock.tests2.UsageTest.wrongArguments":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":182,"org.easymock.samples.ConstructorCalledMockTest.testTax":357,"org.easymock.tests.UsageStrictMockTest.range":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":206,"org.easymock.samples.ExampleTest.answerVsDelegate":291,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":316,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":108,"org.easymock.tests2.UsageConstraintsTest.testNull":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":271,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":122,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":322,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":318,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":141,"org.easymock.tests2.CaptureTest.testPrimitive":95,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":279,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":201,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":153,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":205,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":121,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":210,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":332,"org.easymock.tests2.CaptureTest.testCaptureNone":100,"org.easymock.tests.UsageUnorderedTest.message":235,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":227,"org.easymock.tests2.ThreadingTest.testThreadSafe":60,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":345,"org.easymock.tests.UsageTest.argumentsOrdered":202,"org.easymock.tests.UsageVarargTest.varargIntAccepted":221,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":215,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":230,"org.easymock.tests2.CaptureTest.testCapture_2617107":94,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":65,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":372,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":185,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":68,"org.easymock.tests2.UsageConstraintsTest.any":28,"org.easymock.tests2.StubTest.stub":54,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":234,"org.easymock.tests.UsageExpectAndThrowTest.longType":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":168,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":149,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":308,"org.easymock.tests2.SerializationTest.testClass":88,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":326,"org.easymock.tests.LimitationsTest.mockNativeMethod":142,"org.easymock.tests.ReplayStateInvalidUsageTest.times":151,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":350,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":256,"org.easymock.tests2.AnswerTest.answer":46,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":116,"org.easymock.tests2.CaptureTest.testAnd":92,"org.easymock.tests2.UsageTest.strictResetToDefault":73,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":2,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":127,"org.easymock.tests2.NameTest.nameForMocksControl":7,"org.easymock.tests2.MockedExceptionTest.testMockedException":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":313,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":189,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":200,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":349,"org.easymock.tests2.DelegateToTest.testDelegate":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":264,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":181,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":323,"org.easymock.tests.MockingTest.testNicePartialClassMocking":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":275,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":124,"org.easymock.tests2.CaptureTest.testCaptureLast":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":170,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":195,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":39,"org.easymock.tests.MockingTest.testTwoMocks":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":341,"org.easymock.tests2.CaptureTest.testCapture1_2446744":96,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":114,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":43,"org.easymock.tests.UsageThrowableTest.throwError":280,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":145,"org.easymock.samples.ExampleTest.removeNonExistingDocument":296,"org.easymock.tests.UsageStrictMockTest.differentMethods":9,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":147,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":62,"org.easymock.tests2.MockBuilderTest.testCreateMockString":71,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":134,"org.easymock.tests.UsageExpectAndThrowTest.floatType":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":212,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":34,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":47,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":304,"org.easymock.samples.PartialClassMockTest.testGetArea":359,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":231,"org.easymock.samples.ExampleTest.voteAgainstRemoval":293,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":331,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":330,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":261,"org.easymock.tests2.UsageTest.niceToStrict":75,"org.easymock.tests2.UsageConstraintsTest.testNotNull":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":287,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":56,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":374,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":67,"org.easymock.tests2.UsageTest.defaultResetToNice":79,"org.easymock.tests2.MockBuilderTest.testCreateMock":69,"org.easymock.samples.ExampleTest.voteAgainstRemovals":290,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":252,"org.easymock.tests.UsageVarargTest.differentLength":224,"org.easymock.tests2.CallbackTest.callback":106,"org.easymock.tests.UsageTest.openCallCountByLastCall":199,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":360,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":269,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":314,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":335,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":184,"org.easymock.tests.UsageCallCountTest.tooFewCalls":17,"org.easymock.tests.UsageOverloadedMethodTest.overloading":158,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":32,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":327,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":248,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":157,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":367,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":31,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":101,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":207,"org.easymock.tests.UsageThrowableTest.throwCheckedException":284,"org.easymock.tests2.EasyMockSupportClassTest.testAll":302,"org.easymock.tests.MockClassControlTest.testEquals":140,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":289,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":193,"org.easymock.tests2.CaptureTest.testCaptureAll":93,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":115,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":111,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":156,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":110,"org.easymock.tests2.UsageConstraintsTest.testMatches":33,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":328,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":211,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":143,"org.easymock.tests.ObjectMethodsTest.testHashCode":132,"org.easymock.samples.ExampleTest.voteForRemovals":295,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":64,"org.easymock.tests2.NameTest.nameForNiceMock":6,"org.easymock.tests.UsageVarargTest.allKinds":229,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":11,"org.easymock.tests2.DependencyTest.testInterfaceMocking":45,"org.easymock.samples.BasicClassMockTest.testPrintContent":355,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":194,"org.easymock.samples.ExampleTest.addDocument":294,"org.easymock.tests2.DelegateToTest.testStubDelegate":85,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":286,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":50,"org.easymock.tests2.AnswerTest.stubAnswer":48,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":171,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests2.UsageConstraintsTest.greaterThan":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":188,"org.easymock.tests.UsageVarargTest.varargLongAccepted":226,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":130,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":10,"org.easymock.samples.ExampleTest.voteForRemoval":292,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":255,"org.easymock.tests.UsageExpectAndReturnTest.floatType":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":91,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":358,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests.UsageThrowableTest.noUpperLimit":281,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":36,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":19,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":172,"org.easymock.tests2.SerializationTest.test":89,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":97,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":311,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":282,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":238,"org.easymock.tests2.UsageConstraintsTest.testSame":24,"org.easymock.samples.SupportTest.addDocument":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":166,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":324,"org.easymock.tests2.CaptureTest.testCaptureFirst":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":312,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":148,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":244,"org.easymock.tests.GenericTest.testPackageScope":288,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.CaptureTest.testCapture2_2446744":104,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":348,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":70,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":228,"org.easymock.tests.GenericTest.testBridgedEquals":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":217,"org.easymock.tests2.NameTest.nameForMock":4,"org.easymock.tests.UsageExpectAndReturnTest.longType":240,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":249,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":340,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":40,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":276,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":343,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":241,"org.easymock.tests.UsageCallCountTest.tooManyCalls":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":190,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":16,"org.easymock.tests2.MockedExceptionTest.testRealException":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":245,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":265,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":285,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":183,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":109,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":213,"org.easymock.tests2.NameTest.nameForStrictMock":5,"org.easymock.tests2.UsageConstraintsTest.testContains":30,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":58,"org.easymock.tests2.UsageConstraintsTest.testFind":22,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":159,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":123,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":118,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests.UsageExpectAndReturnTest.object":247,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":37,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":126,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":66,"org.easymock.tests2.UsageStrictMockTest.range":53,"org.easymock.tests2.UsageConstraintsTest.lessThan":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":317,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":223,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":133,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":371,"org.easymock.tests.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":155,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":310,"org.easymock.tests2.CaptureTest.testCaptureRightOne":102,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":346,"org.easymock.tests2.UsageConstraintsTest.testOr":25,"org.easymock.tests.UsageRangeTest.combination":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":253,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":120,"org.easymock.tests.UsageTest.wrongArguments":198,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":162,"org.easymock.tests.MockClassControlTest.testHashCode":139,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":135,"org.easymock.tests2.EasyMockSupportTest.testVerify":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":250,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":334,"org.easymock.tests.UsageVarargTest.varargShortAccepted":225,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":160,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":113,"org.easymock.tests2.UsageConstraintsTest.cmpTo":29,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":107,"org.easymock.tests.UsageVarargTest.varargCharAccepted":222,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":307,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":51,"org.easymock.tests2.UsageTest.openCallCountByLastCall":77,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":78,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":320,"org.easymock.tests.DefaultClassInstantiatorTest.object":236,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":333,"org.easymock.tests2.CaptureTest.testCaptureFromStub":103,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":144,"org.easymock.tests.UsageTest.unexpectedCallWithArray":197,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":131,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":283,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":175,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":214,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":251,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":128,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":138,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":176,"org.easymock.samples.ExampleTest.addAndChangeDocument":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":266,"org.easymock.tests2.ConstraintsToStringTest.containsToString":369,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":254,"org.easymock.tests.UsageStrictMockTest.testVerify":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":342,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":305,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":137,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":192,"org.easymock.tests2.UsageTest.resumeIfFailure":82,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":233,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":315,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":220}}]
