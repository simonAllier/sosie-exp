[{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:70","failures":[12,13,14,15],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[19,20],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[25,26,27,28,19,29,30,31,32,33,34,35,36,37,38,39,40,12,13,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,148,149,149,150,151,152,153,154,155,156,157,0,158,2,3,6,159,7,9,10,160,11,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,14,15,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,20,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,22,23,251,252,253,254,255,256,257,258,259,260,261,262,263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[25,26,27,265,266,267,268,269,28,270,271,272,273,274,275,19,29,33,276,277,278,279,280,281,39,282,283,284,40,285,12,13,286,287,288,289,290,291,44,45,292,293,46,47,294,295,48,49,50,51,52,53,54,55,296,297,298,299,300,301,302,303,56,57,58,304,305,306,59,307,308,309,310,311,312,313,314,315,316,317,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,318,97,98,99,319,320,100,101,102,103,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,321,322,139,323,324,325,326,327,328,140,141,142,143,144,145,146,147,329,330,331,332,148,148,149,149,150,151,152,153,333,154,334,155,335,156,157,0,158,1,2,3,4,5,6,159,7,9,10,160,11,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,336,337,177,338,14,15,339,340,178,179,341,180,181,342,182,343,183,184,185,186,187,188,189,190,191,192,193,20,194,195,196,197,198,199,200,201,202,203,204,344,205,206,207,208,209,210,211,345,212,346,213,214,215,347,348,216,217,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,349,237,238,239,240,241,242,243,244,245,246,350,247,351,248,249,250,22,23,24,251,352,353,354,355,252,255,256,257,356,357,358,359,258,259,260,261,262,263,264],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[39,282,284,285,12,13,44,292,293,294,295,48,57,58,312,100,326,327,328,174,336,338,14,15,178,342,182,343,183,186,199,209,345,212,346,347,348,216,217,226,230,231,234,242,248,250],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[199,346,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[360,34,361,362,148,148,149,149,157,340,178,363,364,179,180,181,365,366,182,343,237,350,367,248,249,368,22,259,260,261,262,369],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[22,23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:233","failures":[25,26,27,19,29,30,31,32,33,276,34,35,36,37,38,39,282,283,284,40,285,12,13,286,287,41,42,43,44,45,293,46,47,294,295,48,49,50,51,52,53,54,55,56,57,58,307,308,309,310,311,312,313,314,315,316,317,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,91,386,387,388,389,390,92,391,94,96,97,98,99,100,101,102,103,105,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,321,139,323,324,325,327,328,140,141,142,143,144,145,146,147,329,330,331,332,148,148,149,149,150,151,152,153,333,154,155,335,156,157,0,158,1,2,3,4,5,6,159,7,9,10,160,11,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,336,337,177,338,14,15,339,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,392,20,194,195,196,197,198,199,200,201,202,203,204,344,205,206,207,208,209,210,211,345,212,346,213,214,215,347,348,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,349,237,238,239,240,241,242,243,244,245,246,247,248,249,250,22,23,24,251,252,253,254,255,256,257,356,357,358,359,258,259,260,261,262,263,264],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[393],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[394,59,318,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:259","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[39,284,40,12,13,45,292,56,57,58,394,59,396,397,398,399,400,177,14,15,211,401,402,403,404,405,406,407,408,409],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[39,284,12,292,293,294,295,57,58,400,319,14,345,347,348],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[148,149,365,410,411,412,413,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[372,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[187],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[25,26,27,19,33,276,39,283,284,40,285,12,13,286,44,45,293,46,47,294,295,48,49,50,51,52,53,54,55,56,57,58,307,308,309,310,311,313,314,315,316,317,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,96,97,98,99,100,101,102,103,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,323,324,325,327,328,140,141,142,143,144,145,146,147,329,330,331,332,150,151,152,153,333,154,155,335,156,157,0,158,1,2,3,4,5,6,159,7,9,160,11,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,337,177,338,14,15,339,179,180,181,183,184,185,186,187,188,189,190,191,192,193,20,194,195,196,197,198,199,200,201,202,203,204,344,205,206,207,208,209,210,211,345,212,346,213,214,347,348,216,217,219,220,221,223,224,225,226,227,228,229,230,231,233,234,235,236,349,239,241,242,243,244,245,246,247,249,22,23,24,251,252,255,256,258,259,260,261,262,263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(this.java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[414],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"defaultValue","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:65","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[329,332,415,416,417,418,419,224,420,421,422,423,424,425,426,427,428,429,430,251,431,432,433,434,435,436],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":187,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.UsageTest.argumentsOrdered":348,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":235,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":380,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":346,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":329,"org.easymock.tests2.DelegateToTest.testReturnException":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":81,"org.easymock.tests.MockingTest.testPartialClassMocking":25,"org.easymock.tests.MockClassControlTest.testToString":298,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":60,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":259,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":264,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":193,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":50,"org.easymock.tests2.UsageTest.wrongArguments":345,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":436,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":290,"org.easymock.samples.ExampleTest.answerVsDelegate":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":362,"org.easymock.tests2.UsageConstraintsTest.testNull":189,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":244,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":234,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":303,"org.easymock.tests2.CaptureTest.testPrimitive":2,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":54,"org.easymock.tests.UsageTest.moreThanOneArgument":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":79,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":88,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":104,"org.easymock.tests.UsageTest.argumentsOrdered":295,"org.easymock.tests.UsageVarargTest.varargIntAccepted":309,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":134,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":424,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":138,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":405,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":251,"org.easymock.tests.ReplayStateInvalidUsageTest.times":272,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":413,"org.easymock.tests2.AnswerTest.answer":252,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":386,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":355,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":87,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":229,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":108,"org.easymock.tests2.DelegateToTest.testDelegate":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":281,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":394,"org.easymock.tests2.CaptureTest.testCapture1_2446744":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":353,"org.easymock.tests.UsageThrowableTest.throwError":140,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":267,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":90,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":412,"org.easymock.samples.PartialClassMockTest.testGetArea":157,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":135,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":61,"org.easymock.tests2.UsageTest.niceToStrict":212,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.MockBuilderTest.testCreateMock":342,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":433,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":402,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":69,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":288,"org.easymock.tests.UsageOverloadedMethodTest.overloading":132,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":98,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":197,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":122,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":196,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":7,"org.easymock.tests2.EasyMockSupportClassTest.testAll":258,"org.easymock.tests.MockClassControlTest.testEquals":302,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":77,"org.easymock.tests2.CaptureTest.testCaptureAll":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":354,"org.easymock.tests2.UsageConstraintsTest.testMatches":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":89,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":265,"org.easymock.samples.ExampleTest.voteForRemovals":154,"org.easymock.tests.UsageVarargTest.allKinds":317,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":280,"org.easymock.samples.BasicClassMockTest.testPrintContent":331,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":146,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":85,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":222,"org.easymock.tests2.UsageConstraintsTest.greaterThan":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":101,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":250,"org.easymock.samples.ExampleTest.voteForRemoval":152,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":350,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":49,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":227,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":80,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":228,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":217,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":118,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":175,"org.easymock.tests2.CaptureTest.testCapture2_2446744":160,"org.easymock.tests2.UsageTest.moreThanOneArgument":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":387,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":182,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":316,"org.easymock.tests.GenericTest.testBridgedEquals":393,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":327,"org.easymock.tests.UsageExpectAndReturnTest.longType":114,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":78,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":35,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":76,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":86,"org.easymock.tests.UsageCallCountTest.tooManyCalls":328,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":397,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":145,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":166,"org.easymock.tests2.UsageConstraintsTest.testContains":195,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":322,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":239,"org.easymock.tests2.UsageConstraintsTest.testFind":188,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":133,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":164,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests.UsageExpectAndReturnTest.object":121,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":434,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":233,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":311,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":306,"org.easymock.tests.UsageTest.exactCallCountByLastCall":48,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":105,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":369,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":127,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":307,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":416,"org.easymock.tests.MockClassControlTest.testHashCode":301,"org.easymock.tests2.EasyMockSupportTest.testVerify":349,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":404,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":106,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":96,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":31,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":352,"org.easymock.tests.UsageVarargTest.varargCharAccepted":310,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":391,"org.easymock.tests2.UsageTest.openCallCountByLastCall":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":17,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":236,"org.easymock.tests.DefaultClassInstantiatorTest.object":320,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":30,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":304,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":400,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":429,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":415,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":248,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":300,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":66,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":36,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":261,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":299,"org.easymock.tests2.UsageTest.resumeIfFailure":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":83,"org.easymock.tests2.StubTest.stubWithReturnValue":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":120,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":205,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":91,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":408,"org.easymock.samples.SupportTest.voteForRemovals":156,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":418,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":72,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":21,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":92,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":253,"org.easymock.tests.UsageExpectAndThrowTest.object":70,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":95,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":203,"org.easymock.tests2.DelegateToTest.testWrongClass":221,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":109,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":110,"org.easymock.samples.ConstructorCalledMockTest.testTax":148,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":71,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":180,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":274,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":289,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":396,"org.easymock.tests2.CaptureTest.testCaptureNone":159,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":43,"org.easymock.tests.UsageUnorderedTest.message":39,"org.easymock.tests.UsageVerifyTest.twoReturns":58,"org.easymock.tests.UsageVarargTest.varargByteAccepted":315,"org.easymock.tests2.ThreadingTest.testThreadSafe":172,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":325,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":330,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":53,"org.easymock.tests2.UsageConstraintsTest.any":20,"org.easymock.tests2.StubTest.stub":161,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":271,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndThrowTest.longType":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":82,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":270,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":338,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests.LimitationsTest.mockNativeMethod":55,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":130,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":34,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":428,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":339,"org.easymock.tests2.NameTest.nameForMocksControl":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":430,"org.easymock.tests2.MockedExceptionTest.testMockedException":238,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":47,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":27,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":64,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":241,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":181,"org.easymock.tests.MockingTest.testNicePartialClassMocking":26,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":246,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":426,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":59,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":171,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":192,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":204,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":68,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":347,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":207,"org.easymock.samples.ExampleTest.removeNonExistingDocument":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":432,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":417,"org.easymock.tests2.ConstraintsToStringTest.andToString":407,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":174,"org.easymock.tests2.MockBuilderTest.testCreateMockString":343,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":296,"org.easymock.tests.UsageExpectAndThrowTest.floatType":62,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":199,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":255,"org.easymock.tests.UsageVerifyTest.twoThrows":57,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":260,"org.easymock.samples.ExampleTest.voteAgainstRemoval":153,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":249,"org.easymock.tests2.UsageConstraintsTest.testNotNull":206,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":147,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":237,"org.easymock.tests2.UsageTest.defaultResetToNice":215,"org.easymock.samples.ExampleTest.voteAgainstRemovals":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":382,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":427,"org.easymock.tests.UsageVarargTest.differentLength":312,"org.easymock.tests2.CallbackTest.callback":183,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":367,"org.easymock.tests.UsageTest.openCallCountByLastCall":46,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":52,"org.easymock.tests.UsageCallCountTest.tooFewCalls":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":291,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":414,"org.easymock.tests.UsageThrowableTest.throwCheckedException":144,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":398,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":170,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":431,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":167,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":169,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":257,"org.easymock.tests.ObjectMethodsTest.testHashCode":305,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":176,"org.easymock.tests2.NameTest.nameForNiceMock":358,"org.easymock.tests2.DependencyTest.testInterfaceMocking":263,"org.easymock.samples.ExampleTest.addDocument":333,"org.easymock.tests2.DelegateToTest.testStubDelegate":220,"org.easymock.tests2.AnswerTest.stubAnswer":256,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":40,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":365,"org.easymock.tests.UsageVarargTest.varargLongAccepted":314,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":379,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":129,"org.easymock.tests.UsageExpectAndReturnTest.floatType":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":262,"org.easymock.tests2.ConstraintsToStringTest.orToString":401,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":423,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests.UsageThrowableTest.noUpperLimit":141,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":201,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":185,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":4,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests2.UsageConstraintsTest.testSame":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":112,"org.easymock.samples.SupportTest.addDocument":335,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":28,"org.easymock.tests.GenericTest.testPackageScope":33,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":422,"org.easymock.tests2.NameTest.nameForMock":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":411,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":115,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":74,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":103,"org.easymock.tests2.MockedExceptionTest.testRealException":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":399,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":383,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":51,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":275,"org.easymock.tests2.NameTest.nameForStrictMock":357,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":364,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":245,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":202,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":178,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":378,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":191,"org.easymock.tests.UsageRangeTest.combination":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":242,"org.easymock.tests.UsageTest.wrongArguments":293,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":371,"org.easymock.tests.UsageVarargTest.varargShortAccepted":313,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":326,"org.easymock.tests2.UsageConstraintsTest.cmpTo":194,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":373,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":214,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":266,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":363,"org.easymock.tests.UsageTest.unexpectedCallWithArray":292,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":324,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":410,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":125,"org.easymock.tests2.CaptureTest.testCapture":8,"org.easymock.tests2.UsageConstraintsTest.constraints":186,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.samples.ExampleTest.addAndChangeDocument":155,"org.easymock.tests2.ConstraintsToStringTest.notToString":403,"org.easymock.tests.UsageStrictMockTest.testVerify":287,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":332,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":278,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":136,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":137,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":231,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":308}}]
