[{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:163","sourceCode":"java.util.Collection<org.easymock.internal.matchers.Captures<?>>.add(org.easymock.internal.matchers.Captures<java.lang.Object>)","type":"CtInvocationImpl"},"failures":[8,11,9,12,13,14,15,16,17,10,18,19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[21,21,22,22,23,24,25,26,27,28],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[31,32,33,34,35,36,37],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[25,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,31,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,0,1,121,122,2,123,3,4,124,5,125,126,127,128,129,130,131,132,133,6,134,135,136,137,7,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,8,11,9,12,13,14,15,16,154,17,10,18,19,20,155,156,157,158,159,160,161,162,163,164,165,166,167,38,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,32,200,33,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,35,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,30,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[8,9,12,13,14,15,16,17,380,10,18,20],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[131],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[187,188,375,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[21,22,381,382,383,384,28],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[42,43,44,45,47,49,52,385,21,21,22,22,53,54,55,56,23,62,69,70,386,387,388,389,71,390,391,78,87,31,89,96,97,98,99,101,103,104,105,108,109,110,111,392,393,394,395,114,115,116,117,118,119,120,0,1,122,2,123,3,4,124,125,126,127,128,129,130,131,132,133,6,134,135,137,7,138,139,145,147,148,149,150,151,152,153,8,11,12,13,16,154,17,10,18,19,20,155,156,157,158,159,160,161,162,163,164,165,166,25,38,168,169,170,171,172,173,396,397,398,399,400,401,402,174,403,404,405,406,407,408,409,175,176,177,182,183,184,185,186,187,188,410,411,198,199,32,200,33,34,217,223,228,35,230,233,234,237,238,241,412,242,243,244,245,246,247,413,266,268,269,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,30,303,304,305,306,307,308,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,414,415,416,359,367,369,370,371,372,373,374,375,376,378],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[417,8,9,12,13,14,15,16,17,380,10,18,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[149,151,168,266,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[25,38,39,40],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[418,419,420,421,422,423],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[198,285,287,301,302,369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[87,3,125,11,16,154,20,198,199,32,228,246,273,274,275,276,277,278,279,280,281,282,307,308],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[69,70,87,31,89,397,402,404,406,407,408,409,182,183,184,185,228,35,230,273,288,294,295,296,371],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,424,425,51,52,385,21,22,53,54,55,56,23,24,57,58,59,60,61,62,63,64,65,66,67,68,426,427,69,70,386,387,388,389,428,71,390,391,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,31,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,429,430,431,432,433,434,110,111,435,436,437,438,112,113,439,440,441,392,442,443,393,444,445,446,447,448,449,450,451,452,394,453,454,455,456,457,395,458,459,114,460,115,116,117,118,119,120,0,1,121,122,2,123,3,4,124,5,125,126,127,128,129,130,131,132,133,6,134,135,136,137,7,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,8,11,9,12,13,14,15,16,154,17,10,18,19,20,155,156,157,158,159,160,161,162,163,164,165,166,167,25,38,39,168,169,170,171,172,173,461,396,462,463,397,464,398,399,27,465,400,466,401,402,174,403,404,405,467,468,406,28,469,470,407,408,409,471,472,175,176,177,178,179,180,181,182,183,184,185,186,187,188,29,410,473,411,474,475,476,477,189,190,478,191,192,193,194,195,196,197,198,199,32,200,33,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,35,230,231,232,233,234,235,236,237,238,239,240,241,479,480,412,481,242,243,244,245,246,247,413,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,30,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,482,483,484,414,415,354,416,355,356,485,357,358,359,360,361,362,363,364,365,486,487,488,489,490,491,492,493,366,367,368,369,370,371,372,373,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,374,375,376,418,419,420,421,516,422,423,377,378,379],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[43,96,145,147,168,171,173,266],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[87,88,91,92,117,119,120,0,1,122,2,123,3,4,124,5,125,126,127,128,129,130,131,132,133,6,134,135,136,137,7,138,139,145,147,148,8,11,9,12,13,14,15,16,154,17,10,18,19,20,155,406,470,198,199,32,200,227,228,246,247,273,274,275,276,277,278,279,280,281,282,283,307,308,309,320,322],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[62,78,87,31,89,99,100,106,107,112,189,192,32,200,33,34,227,228,35,230,234,235,236,239,240,249,252,321,377,378],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[42,43,44,45,46,47,49,53,54,55,56,23,69,387,388,390,391,85,86,87,88,31,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,114,115,116,117,118,119,120,0,1,122,2,123,3,4,124,125,126,127,128,129,130,131,132,133,6,134,135,137,7,138,139,141,142,143,144,145,147,149,150,151,153,8,11,9,12,13,14,15,16,154,17,10,18,19,20,25,38,39,168,171,172,173,461,397,464,400,466,401,402,174,403,404,405,406,470,408,176,177,178,179,180,181,182,183,184,185,410,473,193,194,195,196,197,198,199,32,200,33,34,225,226,227,228,229,35,230,231,232,233,234,235,236,237,238,239,240,241,412,242,243,244,245,246,247,413,258,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,307,308,309,310,311,313,314,316,317,318,319,320,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,414,415,416,357,358,359,360,361,362,487,369,370,371,372,373,378],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[210,212,221,222,224,351,352,353,367],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[25,38,39,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[201,205,206,215,220,254,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[89,103,104,120,0,122,123,3,127,130,133,138,177,182,200,202,230,237,238],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[87,3,125,11,16,154,20,198,199,32,228,246,273,274,275,276,277,278,279,280,281,282,307,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[21,22,23,24,388,391,72,517,518,439,440,441,392,442,443,393,444,445,446,447,448,449,450,451,452,394,453,454,455,456,457,395,458,459,25,381,519,520,27,382,384],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[41,42,43,44,45,46,47,48,49,50,424,425,51,52,385,21,22,53,54,55,56,23,24,521,57,58,59,60,61,62,63,64,65,66,67,68,426,427,69,70,386,387,388,389,428,71,390,391,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,31,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,435,436,437,522,438,112,113,439,440,441,392,442,443,393,444,445,446,447,448,449,450,451,452,394,453,454,455,456,457,395,458,459,114,115,116,117,118,119,120,0,1,121,122,2,123,3,4,124,5,125,126,127,128,129,130,131,132,133,6,134,135,136,137,7,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,8,11,9,12,13,14,15,16,154,17,10,18,19,20,155,156,157,158,159,160,161,162,163,164,165,166,167,25,38,39,168,169,170,171,172,173,461,381,396,462,519,463,397,464,398,520,399,26,27,465,400,384,466,401,402,174,403,404,405,467,468,406,28,469,470,407,408,409,471,472,175,176,177,178,179,180,181,182,183,184,185,186,187,188,29,410,473,411,474,475,476,477,189,190,478,191,192,193,194,195,196,197,198,199,32,200,33,34,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,35,230,231,232,233,234,235,236,237,238,239,240,241,479,480,412,481,242,243,244,245,246,247,413,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,30,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,482,483,484,414,415,354,416,355,356,485,357,358,359,360,361,362,363,364,365,486,487,488,489,490,491,492,493,366,367,368,369,370,371,372,373,374,375,376,523,418,419,420,421,516,422,524,423,525,377,378,379],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[419,422],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[87,31,89,99,526,527,528,529,530,531,32,200,33,34,228,35,230,234,532,533,534,377,378],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[535],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":107,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":211,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":102,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":41,"org.easymock.tests2.DelegateToTest.testReturnException":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":243,"org.easymock.tests.MockingTest.testPartialClassMocking":414,"org.easymock.tests.MockClassControlTest.testToString":488,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":140,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":447,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":393,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":331,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":70,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":515,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":124,"org.easymock.tests2.UsageTest.wrongArguments":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":273,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":180,"org.easymock.samples.ExampleTest.answerVsDelegate":43,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":478,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":356,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":403,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":493,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":164,"org.easymock.tests2.CaptureTest.testPrimitive":12,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":277,"org.easymock.tests.UsageTest.moreThanOneArgument":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":350,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":371,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":30,"org.easymock.tests.UsageTest.argumentsOrdered":240,"org.easymock.tests.UsageVarargTest.varargIntAccepted":311,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":531,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":278,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":83,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":282,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":499,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests.ReplayStateInvalidUsageTest.times":262,"org.easymock.tests2.DependencyTest.testClassMocking":426,"org.easymock.tests2.AnswerTest.answer":168,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":95,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":477,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":519,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":470,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":370,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":159,"org.easymock.tests2.DelegateToTest.testDelegate":153,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":306,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":498,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":346,"org.easymock.tests.LimitationsTest.mockFinalMethod":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":197,"org.easymock.tests2.DependencyTest.testClassMockingSupport":427,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":377,"org.easymock.tests2.CaptureTest.testCapture1_2446744":13,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":93,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":256,"org.easymock.tests.UsageThrowableTest.throwError":322,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":190,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":525,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":373,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":459,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":502,"org.easymock.samples.PartialClassMockTest.testGetArea":385,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":257,"org.easymock.tests.MockingTest.testInterfaceMocking":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":279,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":448,"org.easymock.tests2.UsageTest.niceToStrict":101,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":332,"org.easymock.tests2.ThreadingTest.testChangeDefault":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":397,"org.easymock.tests2.MockBuilderTest.testCreateMock":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":455,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":65,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":527,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":340,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":160,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":476,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":188,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":178,"org.easymock.tests.UsageOverloadedMethodTest.overloading":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":452,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":129,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":269,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":294,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":128,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":17,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":312,"org.easymock.tests.MockClassControlTest.testEquals":492,"org.easymock.tests2.EasyMockSupportClassTest.testAll":392,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":473,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":348,"org.easymock.tests2.CaptureTest.testCaptureAll":11,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":195,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":383,"org.easymock.tests.MockNameTest.defaultName":321,"org.easymock.tests2.UsageConstraintsTest.testMatches":130,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":372,"org.easymock.samples.ExampleTest.voteForRemovals":47,"org.easymock.tests.UsageVarargTest.allKinds":320,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":200,"org.easymock.samples.BasicClassMockTest.testPrintContent":425,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":196,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":328,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":85,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":247,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":524,"org.easymock.tests2.UsageConstraintsTest.greaterThan":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":183,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":409,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":503,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":423,"org.easymock.samples.ExampleTest.voteForRemoval":44,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":471,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":115,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":522,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":467,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":495,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":413,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":157,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":242,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":148,"org.easymock.tests2.CaptureTest.testCaptureFirst":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":158,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":290,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":117,"org.easymock.tests2.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.CaptureTest.testCapture2_2446744":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":219,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":319,"org.easymock.tests.GenericTest.testBridgedEquals":474,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":364,"org.easymock.tests.UsageExpectAndReturnTest.longType":286,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":349,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":136,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":369,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":375,"org.easymock.tests.UsageCallCountTest.tooManyCalls":365,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":327,"org.easymock.tests.MockingTest.testNiceClassMocking":485,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":387,"org.easymock.tests.MockingTest.testClassMocking":483,"org.easymock.tests2.UsageConstraintsTest.testContains":127,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":358,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":55,"org.easymock.tests2.UsageConstraintsTest.testFind":122,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":177,"org.easymock.tests.MockTypeTest.fromEasyMockClass":189,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":147,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":225,"org.easymock.tests.UsageExpectAndReturnTest.object":293,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":406,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":163,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":314,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":251,"org.easymock.tests.UsageTest.exactCallCountByLastCall":241,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":206,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":303,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":299,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":309,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":268,"org.easymock.tests.MockClassControlTest.testHashCode":491,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":74,"org.easymock.tests2.EasyMockSupportTest.testVerify":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":450,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":187,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":92,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":91,"org.easymock.tests.UsageVarargTest.varargCharAccepted":313,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":523,"org.easymock.tests2.CaptureTest.testCaptureMultiple":417,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":224,"org.easymock.tests2.UsageTest.openCallCountByLastCall":103,"org.easymock.tests.DefaultClassInstantiatorTest.object":418,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":166,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":186,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":249,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":534,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":451,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":325,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":60,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":73,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":501,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":490,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":337,"org.easymock.tests.CapturesMatcherTest.test":535,"org.easymock.tests.ReplayStateInvalidCallsTest.times":507,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":374,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":508,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":529,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":395,"org.easymock.tests2.UsageTest.resumeIfFailure":108,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":245,"org.easymock.tests2.StubTest.stubWithReturnValue":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":520,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":292,"org.easymock.tests2.SerializationTest.testAllMockedMethod":39,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":217,"org.easymock.samples.SupportTest.voteForRemovals":52,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":343,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":40,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":223,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":169,"org.easymock.tests.UsageExpectAndThrowTest.object":341,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":368,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":134,"org.easymock.tests2.DelegateToTest.testWrongClass":151,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":505,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":198,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":199,"org.easymock.tests.UsageStrictMockTest.range":35,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":112,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":342,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":439,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":239,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":179,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":497,"org.easymock.tests2.CaptureTest.testCaptureNone":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":353,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":430,"org.easymock.tests.UsageUnorderedTest.message":32,"org.easymock.tests.UsageVerifyTest.twoReturns":34,"org.easymock.tests.UsageVarargTest.varargByteAccepted":318,"org.easymock.tests2.ThreadingTest.testThreadSafe":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":453,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":362,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":424,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":252,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":276,"org.easymock.tests2.UsageConstraintsTest.any":125,"org.easymock.tests2.StubTest.stub":110,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":244,"org.easymock.tests.UsageExpectAndThrowTest.longType":334,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":516,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":260,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":88,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":78,"org.easymock.tests.LimitationsTest.mockNativeMethod":412,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":411,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":302,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":59,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":513,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":90,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":431,"org.easymock.tests2.NameTest.nameForMocksControl":144,"org.easymock.tests2.MockedExceptionTest.testMockedException":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":443,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":238,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":416,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":146,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":335,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":399,"org.easymock.tests.MockingTest.testNicePartialClassMocking":415,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":405,"org.easymock.tests2.CaptureTest.testCaptureLast":16,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":57,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":378,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":512,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":391,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":135,"org.easymock.tests.MockingTest.testTwoMocks":484,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":509,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":283,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":339,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":106,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":138,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":434,"org.easymock.samples.ExampleTest.removeNonExistingDocument":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":64,"org.easymock.tests.UsageStrictMockTest.differentMethods":230,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":258,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":75,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":433,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":420,"org.easymock.tests2.ConstraintsToStringTest.andToString":530,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":116,"org.easymock.tests2.MockBuilderTest.testCreateMockString":466,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":444,"org.easymock.tests.UsageExpectAndThrowTest.floatType":333,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":171,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":521,"org.easymock.tests.UsageVerifyTest.twoThrows":33,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":394,"org.easymock.samples.ExampleTest.voteAgainstRemoval":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":408,"org.easymock.tests.LimitationsTest.privateConstructor":480,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":518,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":329,"org.easymock.tests2.UsageTest.defaultResetToNice":105,"org.easymock.samples.ExampleTest.voteAgainstRemovals":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":58,"org.easymock.tests.UsageVarargTest.differentLength":315,"org.easymock.tests2.CallbackTest.callback":96,"org.easymock.tests2.UsageConstraintsTest.equals":121,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":28,"org.easymock.tests.UsageTest.openCallCountByLastCall":237,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":275,"org.easymock.tests.UsageCallCountTest.tooFewCalls":360,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":389,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":181,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":432,"org.easymock.tests.UsageThrowableTest.throwCheckedException":326,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":532,"org.easymock.tests.MockingTest.testStrictClassMocking":482,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":390,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":308,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":63,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":71,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":173,"org.easymock.tests.ObjectMethodsTest.testHashCode":250,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":511,"org.easymock.tests2.NameTest.nameForNiceMock":143,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":118,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":506,"org.easymock.tests2.DependencyTest.testInterfaceMocking":69,"org.easymock.samples.ExampleTest.addDocument":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.DelegateToTest.testStubDelegate":150,"org.easymock.tests2.AnswerTest.stubAnswer":172,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":228,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":26,"org.easymock.tests.UsageVarargTest.varargLongAccepted":317,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":210,"org.easymock.tests.UsageExpectAndReturnTest.floatType":285,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":23,"org.easymock.tests2.ConstraintsToStringTest.orToString":526,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":82,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageThrowableTest.noUpperLimit":323,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":120,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":435,"org.easymock.tests2.SerializationTest.test":38,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":14,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":419,"org.easymock.tests2.UsageConstraintsTest.testSame":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":284,"org.easymock.samples.SupportTest.addDocument":51,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":428,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":496,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":445,"org.easymock.tests.GenericTest.testPackageScope":410,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":205,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":81,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":355,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":494,"org.easymock.tests2.NameTest.nameForMock":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":384,"org.easymock.tests2.UsageStrictMockTest.differentMethods":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":469,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":287,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":345,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":185,"org.easymock.tests2.MockedExceptionTest.testRealException":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":192,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":215,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":533,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":214,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":274,"org.easymock.tests2.NameTest.nameForStrictMock":142,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":438,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":421,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":36,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":396,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":500,"org.easymock.tests2.UsageConstraintsTest.lessThan":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":77,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":449,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":429,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":402,"org.easymock.tests.UsageTest.wrongArguments":236,"org.easymock.tests2.MockBuilderTest.testWithConstructor":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":446,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":487,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":296,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":422,"org.easymock.tests.UsageVarargTest.varargShortAccepted":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":363,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":514,"org.easymock.tests2.UsageConstraintsTest.cmpTo":126,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":170,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":204,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":104,"org.easymock.tests2.CaptureTest.testCaptureFromStub":18,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":255,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":462,"org.easymock.tests.UsageTest.unexpectedCallWithArray":235,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":510,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":227,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":361,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":382,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":297,"org.easymock.tests2.CaptureTest.testCapture":380,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":229,"org.easymock.samples.ExampleTest.addAndChangeDocument":49,"org.easymock.tests2.ConstraintsToStringTest.notToString":528,"org.easymock.tests.UsageStrictMockTest.testVerify":232,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":50,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":194,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":280,"org.easymock.tests.LimitationsTest.abstractClass":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":289,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":161,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":37,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":310}}]
