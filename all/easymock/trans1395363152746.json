[{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[17,18,6,7,19,8,20,9,10,21,22,23,24,25,26,27,28,29,12,30,31,32,13,33,34,4,5,35,36,37,38,39,40,41,42,43,44,45,46,2,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,16,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[133,134,135],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[136],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[137,138,139,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"primitiveType"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[17,18,6,7,19,8,20,9,10,21,11,22,141,23,24,25,26,27,28,29,12,30,31,142,32,13,33,34,143,144,145,146,147,148,149,4,5,150,151,35,152,36,37,153,154,38,155,156,157,158,159,160,39,40,41,161,162,42,43,163,164,44,165,45,166,46,2,3,167,168,169,170,48,49,171,50,172,51,52,173,174,175,53,176,177,178,54,179,180,55,138,14,56,15,57,58,181,182,59,60,61,16,183,184,62,63,185,186,187,188,189,190,191,64,65,192,193,194,195,196,197,198,199,200,201,68,202,203,69,70,204,205,206,207,208,209,210,211,212,213,214,71,215,216,217,218,72,219,73,74,220,221,75,76,222,223,224,225,226,227,228,229,77,78,230,231,79,80,81,82,83,232,233,234,235,236,237,238,84,85,239,240,86,87,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,88,89,90,91,92,277,278,93,94,279,280,95,281,96,97,98,99,282,100,101,102,103,283,104,105,106,107,108,109,284,285,286,287,288,289,290,291,292,293,110,111,294,295,112,296,113,114,115,116,297,117,118,119,120,298,121,122,123,124,125,299,300,126,127,128,129,130,301,302,131,303,304,305,306,307,308,309,310],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[170,52,76,84,87,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[137,138,140],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[34,312],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[313,314,315,316,317,318],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[249,92,280,99,104,105],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[319,1,313,314,315,316,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[9,22,35,56,59,60,62,68,202,71,72,77,78,230,231,79,88,89,90,91,92,277,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[27,172,66,320],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[321,322,323],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests2.UsageTest.argumentsOrdered":175,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":156,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":172,"org.easymock.tests2.StubTest.stubWithReturnValue":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":319,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":310,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":99,"org.easymock.tests2.SerializationTest.testAllMockedMethod":139,"org.easymock.tests2.DelegateToTest.testReturnException":178,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":212,"org.easymock.samples.SupportTest.voteForRemovals":309,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":118,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":140,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":110,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":147,"org.easymock.tests.UsageExpectAndThrowTest.object":297,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":30,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":313,"org.easymock.tests2.DelegateToTest.testWrongClass":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":108,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":109,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":77,"org.easymock.tests2.UsageTest.wrongArguments":171,"org.easymock.tests.UsageStrictMockTest.range":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":246,"org.easymock.samples.ExampleTest.answerVsDelegate":131,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":163,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":44,"org.easymock.tests2.CaptureTest.testPrimitive":57,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":79,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":241,"org.easymock.tests.UsageTest.moreThanOneArgument":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":245,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":225,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.UsageUnorderedTest.message":277,"org.easymock.tests.UsageVerifyTest.twoReturns":222,"org.easymock.tests.UsageVarargTest.varargByteAccepted":274,"org.easymock.tests2.ThreadingTest.testThreadSafe":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":289,"org.easymock.tests.UsageTest.argumentsOrdered":242,"org.easymock.tests.UsageVarargTest.varargIntAccepted":268,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":257,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":88,"org.easymock.tests2.CaptureTest.testCapture_2617107":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":317,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":231,"org.easymock.tests2.UsageConstraintsTest.any":22,"org.easymock.tests2.StubTest.stub":154,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":92,"org.easymock.tests.UsageExpectAndThrowTest.longType":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":213,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":321,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":152,"org.easymock.tests2.SerializationTest.testClass":137,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":155,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":107,"org.easymock.tests2.AnswerTest.answer":146,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":11,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":191,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests2.UsageTest.strictResetToDefault":48,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":153,"org.easymock.tests2.NameTest.nameForMocksControl":197,"org.easymock.tests2.MockedExceptionTest.testMockedException":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":162,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":87,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":293,"org.easymock.tests2.DelegateToTest.testDelegate":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":112,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":298,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":71,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":285,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":238,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":31,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":284,"org.easymock.tests2.CaptureTest.testCapture1_2446744":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":189,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":174,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.tests.UsageThrowableTest.throwError":125,"org.easymock.tests.UsageStrictMockTest.differentMethods":74,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":263,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":3,"org.easymock.tests.UsageExpectAndThrowTest.floatType":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":252,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":27,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":149,"org.easymock.tests.UsageVerifyTest.twoThrows":76,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.samples.PartialClassMockTest.testGetArea":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":89,"org.easymock.samples.ExampleTest.voteAgainstRemoval":304,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":224,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":223,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":67,"org.easymock.tests2.UsageTest.niceToStrict":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":111,"org.easymock.tests2.UsageConstraintsTest.testNotNull":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":130,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":157,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":135,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":47,"org.easymock.tests2.UsageTest.defaultResetToNice":173,"org.easymock.samples.ExampleTest.voteAgainstRemovals":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":283,"org.easymock.tests.UsageVarargTest.differentLength":271,"org.easymock.tests2.CallbackTest.callback":63,"org.easymock.tests.UsageTest.openCallCountByLastCall":86,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":116,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":42,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":311,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":17,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":228,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":230,"org.easymock.tests.UsageCallCountTest.tooFewCalls":255,"org.easymock.tests.UsageOverloadedMethodTest.overloading":69,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":207,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":25,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":100,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":322,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":24,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":247,"org.easymock.tests.UsageThrowableTest.throwCheckedException":127,"org.easymock.tests2.EasyMockSupportClassTest.testAll":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":236,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":202,"org.easymock.tests.MockNameTest.defaultName":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":186,"org.easymock.tests2.UsageConstraintsTest.testMatches":26,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":187,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":251,"org.easymock.tests.ObjectMethodsTest.testHashCode":199,"org.easymock.samples.ExampleTest.voteForRemovals":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":316,"org.easymock.tests2.NameTest.nameForNiceMock":196,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":168,"org.easymock.tests.UsageVarargTest.allKinds":276,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":75,"org.easymock.tests2.DependencyTest.testInterfaceMocking":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":237,"org.easymock.samples.ExampleTest.addDocument":305,"org.easymock.tests2.DelegateToTest.testStubDelegate":54,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":129,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":150,"org.easymock.tests2.AnswerTest.stubAnswer":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":215,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":180,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":318,"org.easymock.tests2.UsageConstraintsTest.greaterThan":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":81,"org.easymock.tests.UsageVarargTest.varargLongAccepted":273,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":220,"org.easymock.samples.ExampleTest.voteForRemoval":303,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":2,"org.easymock.tests.UsageExpectAndReturnTest.floatType":279,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":106,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.tests.UsageThrowableTest.noUpperLimit":299,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":29,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":18,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests2.SerializationTest.test":138,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":181,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":41,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":94,"org.easymock.tests2.UsageConstraintsTest.testSame":20,"org.easymock.samples.SupportTest.addDocument":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":211,"org.easymock.tests2.CaptureTest.testCaptureFirst":62,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":161,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":176,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":210,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":97,"org.easymock.tests2.UsageTest.moreThanOneArgument":49,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":167,"org.easymock.tests2.CaptureTest.testCapture2_2446744":184,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":292,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":259,"org.easymock.tests2.NameTest.nameForMock":194,"org.easymock.tests.UsageExpectAndReturnTest.longType":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":234,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":123,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":261,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":142,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":121,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":95,"org.easymock.tests.UsageCallCountTest.tooManyCalls":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":83,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":254,"org.easymock.tests2.MockedExceptionTest.testRealException":160,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":296,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":128,"org.easymock.tests2.NameTest.nameForStrictMock":195,"org.easymock.tests2.UsageConstraintsTest.testContains":23,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":159,"org.easymock.tests2.UsageConstraintsTest.testFind":19,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":70,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":134,"org.easymock.tests.MockTypeTest.fromEasyMockClass":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":66,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":216,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":65,"org.easymock.tests.UsageExpectAndReturnTest.object":282,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":12,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":314,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":270,"org.easymock.tests.UsageTest.exactCallCountByLastCall":243,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":68,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":136,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":40,"org.easymock.tests2.CaptureTest.testCaptureRightOne":16,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":290,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":266,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":104,"org.easymock.tests.UsageTest.wrongArguments":240,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":206,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":281,"org.easymock.tests2.EasyMockSupportTest.testVerify":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":102,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":291,"org.easymock.tests.UsageVarargTest.varargShortAccepted":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":227,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":204,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":188,"org.easymock.tests2.UsageConstraintsTest.cmpTo":141,"org.easymock.tests.UsageVarargTest.varargCharAccepted":269,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":148,"org.easymock.tests2.CompareToTest.testLessThan":312,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":151,"org.easymock.tests2.UsageTest.openCallCountByLastCall":51,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":52,"org.easymock.tests.DefaultClassInstantiatorTest.object":278,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":133,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":226,"org.easymock.tests2.CaptureTest.testCaptureFromStub":183,"org.easymock.tests.UsageTest.unexpectedCallWithArray":239,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":114,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":126,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":256,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":103,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":219,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.samples.ExampleTest.addAndChangeDocument":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":113,"org.easymock.tests.UsageStrictMockTest.testVerify":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":286,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":301,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":235,"org.easymock.tests2.UsageTest.resumeIfFailure":53,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":90,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":96,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":91,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":43}}]
