[{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[0,1],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[12,13,14,15,16,17,18,19,20,21],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[22,23,24,25,26,27,28,29,30,13,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,6,67,68,69,7,70,71,72,73,8,9,74,75,76,77,78,79,10,80,81,82,83,84,11,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[97],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[98,99,100,101,102,103,104,105,106,107,108,109,12,110,111,112,113,114,115,116,117,118,119,120,121,122,123,22,23,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,24,25,26,27,161,28,29,30,162,13,14,163,164,165,166,31,167,168,32,169,170,171,172,173,174,175,176,177,33,178,179,180,181,182,34,183,184,185,186,187,188,189,190,191,192,193,35,194,195,196,36,197,37,15,38,198,16,199,39,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,40,41,42,43,44,45,217,218,46,219,220,221,47,48,49,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,50,271,272,273,274,275,276,51,277,278,279,52,280,53,54,281,282,55,283,56,284,57,58,285,59,286,287,288,289,290,60,291,292,293,61,294,295,296,297,298,299,300,301,302,303,62,63,304,305,306,307,308,309,310,311,312,313,314,315,64,65,66,6,67,68,316,317,69,7,318,70,71,72,319,73,8,9,74,75,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,76,77,78,79,10,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,80,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,81,82,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,83,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,0,449,450,451,1,452,453,454,455,456,457,458,459,460,461,462,84,11,85,86,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,87,88,89,90,480,481,482,91,483,92,93,484,485,486,487,488,94,95,489,96,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[221,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[216],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[214,224,225,229,230,231,232,238,240,241,243,244,245,250,251,252,52,289,289,290,290,295,63,304,307,76,77,78,79,10,81,82,84,11,85,86,463,91],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[498,499,323,500,501,482],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[198,502,200,503,504,219,289,290],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[12,13,14,16,219,289,289,290,290],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[498,499,323,500,501,482],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[228],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[12,111,24,25,26,27,29,30,13,31,32,33,34,192,505,35,194,36,197,37,38,199,39,506,201,507,508,509,510,40,41,43,44,45,217,46,221,47,48,49,255,289,289,290,290,60,291,292,308,313,320,80,449,450,451,453,488,94,95,96],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[36,507,509,510,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[103,129,130,136,137,145,262,52,53,54,311,315,322,323,324,327,328,342,352,388,389,426,429,460,461,462,482,91,92,93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[12,110,111,112,113,114,115,116,119,120,121,22,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,160,25,26,29,30,13,190,191,192,36,197,203,204,205,206,207,208,209,210,211,212,213,214,215,216,40,41,42,43,44,45,217,46,221,48,224,225,226,227,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,270,50,271,273,274,275,276,51,277,279,52,280,53,54,281,56,284,57,58,285,59,287,295,296,297,298,299,300,301,302,303,63,304,305,306,307,64,65,66,6,67,68,316,317,69,7,318,70,71,72,319,73,8,9,74,75,320,321,322,324,325,326,327,328,329,335,336,337,338,340,341,76,77,78,79,10,342,357,80,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,391,392,393,394,395,396,397,398,81,82,431,432,433,434,435,436,437,438,439,441,442,444,445,446,447,448,449,450,460,461,462,84,11,85,86,463,464,466,467,469,475,476,477,478,479,87,89,90,481,482,91,483,92,93,484,94,95,96],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[103,110,111,116,119,120,121,22,23,124,126,127,128,129,130,131,132,133,134,136,137,138,139,147,148,149,150,151,152,153,155,156,157,158,159,160,24,27,28,31,190,191,203,204,205,206,207,208,209,210,211,212,213,214,215,216,40,41,42,43,44,45,46,49,224,225,226,227,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,262,270,50,271,273,274,275,276,51,277,278,279,52,280,53,54,281,282,55,283,56,284,57,58,285,59,287,288,291,292,295,296,297,298,299,63,304,305,306,307,64,65,66,6,67,68,316,317,69,7,318,70,71,72,319,73,8,9,74,75,320,321,322,324,325,326,327,328,329,335,336,337,338,340,341,76,77,78,79,10,342,344,80,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,391,392,393,394,395,396,397,398,81,82,425,428,431,432,433,434,435,436,437,438,439,441,442,443,444,445,446,447,448,449,450,1,458,459,460,461,462,84,11,85,86,463,464,466,467,87,89,90,480,481,482,91,483,92,93,484,485,494,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[203,205,213,226,227,230,232,233,235,245,250],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[233],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[356],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"position":"org.easymock.internal.matchers.Find:41","failures":[511],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[35,36,37,38,39,201,60],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":227,"org.easymock.tests2.UsageTest.argumentsOrdered":137,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":321,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":409,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":132,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":283,"org.easymock.tests2.DelegateToTest.testReturnException":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":432,"org.easymock.tests.MockingTest.testPartialClassMocking":94,"org.easymock.tests.MockClassControlTest.testToString":454,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":185,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":172,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":368,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":17,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":234,"org.easymock.tests2.UsageTest.wrongArguments":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":63,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":302,"org.easymock.samples.ExampleTest.answerVsDelegate":284,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":313,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":491,"org.easymock.tests2.UsageConstraintsTest.testNull":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":43,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":156,"org.easymock.tests2.CaptureTest.testPrimitive":206,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":387,"org.easymock.tests.UsageTest.moreThanOneArgument":322,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":85,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":493,"org.easymock.tests.UsageTest.argumentsOrdered":328,"org.easymock.tests.UsageVarargTest.varargIntAccepted":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":76,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":192,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":267,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":10,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":103,"org.easymock.tests.ReplayStateInvalidUsageTest.times":361,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":504,"org.easymock.tests2.DependencyTest.testClassMocking":122,"org.easymock.tests2.AnswerTest.answer":116,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":416,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":115,"org.easymock.tests2.CaptureTest.testAnd":203,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":310,"org.easymock.tests2.UsageTest.strictResetToDefault":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":89,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":497,"org.easymock.tests2.DelegateToTest.testDelegate":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":383,"org.easymock.tests.LimitationsTest.mockFinalMethod":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":435,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":479,"org.easymock.tests2.DependencyTest.testClassMockingSupport":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":388,"org.easymock.tests2.CaptureTest.testCapture1_2446744":207,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":218,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":381,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":113,"org.easymock.tests.UsageThrowableTest.throwError":391,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":355,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":312,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":474,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":463,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":184,"org.easymock.samples.PartialClassMockTest.testGetArea":60,"org.easymock.tests.MockingTest.testInterfaceMocking":489,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":77,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":61,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":173,"org.easymock.tests2.UsageTest.niceToStrict":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":36,"org.easymock.tests2.MockBuilderTest.testCreateMock":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":180,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":106,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":377,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":152,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":473,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":300,"org.easymock.tests.UsageOverloadedMethodTest.overloading":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":177,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":467,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":70,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":297,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":239,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":212,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":440,"org.easymock.tests.MockClassControlTest.testEquals":458,"org.easymock.tests2.EasyMockSupportClassTest.testAll":31,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":450,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":385,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":507,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":477,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":114,"org.easymock.tests2.CaptureTest.testCaptureAll":204,"org.easymock.tests.MockNameTest.defaultName":352,"org.easymock.tests2.UsageConstraintsTest.testMatches":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":353,"org.easymock.samples.ExampleTest.voteForRemovals":59,"org.easymock.tests.UsageVarargTest.allKinds":448,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":460,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":478,"org.easymock.samples.BasicClassMockTest.testPrintContent":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":397,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":436,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":264,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":21,"org.easymock.tests2.UsageConstraintsTest.greaterThan":243,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":49,"org.easymock.samples.ExampleTest.voteForRemoval":57,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":222,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":275,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":314,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":143,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":217,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":320,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":149,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":431,"org.easymock.tests2.CaptureTest.testCaptureFirst":216,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":150,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":139,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":317,"org.easymock.tests2.UsageTest.moreThanOneArgument":129,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":51,"org.easymock.tests2.CaptureTest.testCapture2_2446744":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":39,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":447,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":340,"org.easymock.tests.UsageExpectAndReturnTest.longType":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":475,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":147,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":506,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":386,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":62,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":248,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":331,"org.easymock.tests.UsageCallCountTest.tooManyCalls":341,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":373,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":396,"org.easymock.tests.MockingTest.testNiceClassMocking":492,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":25,"org.easymock.tests.MockingTest.testClassMocking":487,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":505,"org.easymock.tests2.UsageConstraintsTest.testContains":238,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":334,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":255,"org.easymock.tests2.UsageConstraintsTest.testFind":229,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":299,"org.easymock.tests.MockTypeTest.fromEasyMockClass":311,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":126,"org.easymock.tests.UsageExpectAndReturnTest.object":318,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":155,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":442,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":18,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":428,"org.easymock.tests.UsageTest.exactCallCountByLastCall":329,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":494,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":423,"org.easymock.tests2.ConstraintsToStringTest.findToString":511,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":14,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":437,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":8,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":466,"org.easymock.tests.MockClassControlTest.testHashCode":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":258,"org.easymock.tests2.EasyMockSupportTest.testVerify":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":175,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":495,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":472,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":464,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":112,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":202,"org.easymock.tests.UsageVarargTest.varargCharAccepted":441,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":343,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastCall":133,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":158,"org.easymock.tests.DefaultClassInstantiatorTest.object":344,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":471,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":176,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":375,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":510,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":257,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":456,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":47,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":374,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":9,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":330,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":34,"org.easymock.tests2.UsageTest.resumeIfFailure":138,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":308,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":434,"org.easymock.tests2.StubTest.stubWithReturnValue":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":249,"org.easymock.tests2.SerializationTest.testAllMockedMethod":111,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":415,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":55,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":380,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":421,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":117,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":424,"org.easymock.tests.UsageExpectAndThrowTest.object":378,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":246,"org.easymock.tests2.DelegateToTest.testWrongClass":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":81,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":82,"org.easymock.tests.UsageStrictMockTest.range":92,"org.easymock.samples.ConstructorCalledMockTest.testTax":289,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":145,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":154,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":379,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":164,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":327,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":301,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":500,"org.easymock.tests2.CaptureTest.testCaptureNone":211,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":294,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":3,"org.easymock.tests.UsageUnorderedTest.message":342,"org.easymock.tests.UsageVerifyTest.twoReturns":462,"org.easymock.tests.UsageVarargTest.varargByteAccepted":446,"org.easymock.tests2.ThreadingTest.testThreadSafe":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":178,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":338,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":429,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":306,"org.easymock.tests2.UsageConstraintsTest.any":236,"org.easymock.tests2.StubTest.stub":190,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":360,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndThrowTest.longType":371,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":348,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":359,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":262,"org.easymock.tests.LimitationsTest.mockNativeMethod":80,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":451,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":75,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":509,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":100,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.tests2.NameTest.nameForMocksControl":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":102,"org.easymock.tests2.MockedExceptionTest.testMockedException":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":168,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":326,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":125,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":95,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":45,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":98,"org.easymock.tests2.CaptureTest.testCaptureLast":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":30,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":233,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":247,"org.easymock.tests.MockingTest.testTwoMocks":488,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":376,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":136,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":251,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":5,"org.easymock.samples.ExampleTest.removeNonExistingDocument":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":105,"org.easymock.tests.UsageStrictMockTest.differentMethods":93,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":259,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":346,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":276,"org.easymock.tests2.MockBuilderTest.testCreateMockString":201,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":169,"org.easymock.tests.UsageExpectAndThrowTest.floatType":370,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":166,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":119,"org.easymock.tests.UsageVerifyTest.twoThrows":461,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":163,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":33,"org.easymock.samples.ExampleTest.voteAgainstRemoval":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":293,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":48,"org.easymock.tests.LimitationsTest.privateConstructor":366,"org.easymock.tests2.UsageConstraintsTest.testNotNull":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":398,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":253,"org.easymock.tests2.UsageTest.defaultResetToNice":135,"org.easymock.samples.ExampleTest.voteAgainstRemovals":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":73,"org.easymock.tests.UsageVarargTest.differentLength":443,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":99,"org.easymock.tests2.CallbackTest.callback":160,"org.easymock.tests2.UsageConstraintsTest.equals":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":219,"org.easymock.tests.UsageTest.openCallCountByLastCall":325,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":305,"org.easymock.tests.UsageCallCountTest.tooFewCalls":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":303,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":4,"org.easymock.tests.UsageThrowableTest.throwCheckedException":395,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":501,"org.easymock.tests.MockingTest.testStrictClassMocking":486,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":104,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":26,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":362,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":28,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":121,"org.easymock.tests.ObjectMethodsTest.testHashCode":427,"org.easymock.tests2.NameTest.nameForNiceMock":188,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":277,"org.easymock.tests2.DependencyTest.testInterfaceMocking":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":19,"org.easymock.samples.ExampleTest.addDocument":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":183,"org.easymock.tests2.DelegateToTest.testStubDelegate":50,"org.easymock.tests2.AnswerTest.stubAnswer":120,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":91,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":198,"org.easymock.tests.UsageVarargTest.varargLongAccepted":445,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.floatType":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":13,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":290,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":468,"org.easymock.tests.UsageThrowableTest.noUpperLimit":392,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":266,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":225,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":140,"org.easymock.tests2.SerializationTest.test":110,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":208,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":97,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":345,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":65,"org.easymock.tests2.UsageConstraintsTest.testSame":231,"org.easymock.samples.SupportTest.addDocument":282,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":161,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":170,"org.easymock.tests.GenericTest.testPackageScope":449,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":265,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":490,"org.easymock.tests2.NameTest.nameForMock":186,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":71,"org.easymock.tests2.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":200,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":382,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":90,"org.easymock.tests2.MockedExceptionTest.testRealException":256,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":304,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":364,"org.easymock.tests2.NameTest.nameForStrictMock":187,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":196,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":144,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":245,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":347,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":35,"org.easymock.tests2.UsageStrictMockTest.range":53,"org.easymock.tests2.UsageConstraintsTest.lessThan":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":174,"org.easymock.tests2.CaptureTest.testCaptureRightOne":213,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":2,"org.easymock.tests2.UsageConstraintsTest.testOr":232,"org.easymock.tests.UsageRangeTest.combination":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":41,"org.easymock.tests.UsageTest.wrongArguments":324,"org.easymock.tests2.MockBuilderTest.testWithConstructor":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":171,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":72,"org.easymock.tests.UsageVarargTest.varargShortAccepted":444,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":349,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":339,"org.easymock.tests2.UsageConstraintsTest.cmpTo":237,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":402,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":134,"org.easymock.tests2.CaptureTest.testCaptureFromStub":214,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":354,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":194,"org.easymock.tests.UsageTest.unexpectedCallWithArray":323,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":482,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":337,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":502,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":319,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":483,"org.easymock.tests2.UsageConstraintsTest.constraints":226,"org.easymock.samples.ExampleTest.addAndChangeDocument":287,"org.easymock.tests.UsageStrictMockTest.testVerify":485,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":288,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":476,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":209,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":508,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":78,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":316,"org.easymock.tests.LimitationsTest.abstractClass":365,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":79,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":153}}]
