[{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,5,61,17,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,26,97,98,99,100,101,102,103,28,104,105,106,107,108,109,30,31,110,111,32,33,112,113,114,35,115,37,38,40,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[209,210,211,212,5,6,213,17,18,214,62,215,63,64,216,72,86,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,116,118,217,119,218,219,220,123,124,126,128,130,131,133,134,142,221,222,150,223,151,152,224,42,43,44,225,226,45,227,228,46,229,230,231,232,233,234,235,236,237,238,239,192,193,240,241,242,243,196,244,245,197,246,247,248,47,201,249,202],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[62,63,64,250,251,252,253,254,255,256,118,217,219,220,150,151,152,225,226,239,193,241,242,243,244,245,197,201,249,202],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[209,210,211,212,48,49,257,50,51,258,52,259,260,54,55,56,57,59,261,262,263,5,61,213,17,214,264,62,215,63,64,216,65,66,67,68,69,73,75,78,79,265,80,81,83,86,89,90,91,266,92,93,96,26,97,98,99,100,101,102,103,28,107,108,109,30,31,110,111,32,33,113,114,35,115,37,38,40,116,117,217,119,218,122,219,220,124,125,126,127,128,129,130,131,132,133,134,135,136,267,268,269,270,271,272,273,274,275,276,140,141,142,147,148,277,278,149,221,279,222,150,223,151,152,224,280,153,281,154,155,156,157,158,159,160,282,225,226,162,163,164,283,165,168,169,171,176,181,284,285,286,287,288,232,289,290,291,292,293,233,235,294,295,237,238,239,186,187,188,189,190,191,241,242,243,196,296,244,297,298,245,197,198,199,249,202,299,203,300,301,24,204,25,205,302,206,207,303,208,304],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:156","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[305,306,307,308,309,310,311],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[312,31,32,37,313,42,43,44,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[137],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[48,257,314,61,65,66,67,68,69,305,312,315,96,26,98,99,100,316,101,317,318,27,102,103,28,319,29,109,30,31,110,32,33,34,35,36,320,115,321,37,38,39,40,322,41,323,324,276,325,326,327,328,329,330,331,332,42,44,333,334,335,336,160,161,337,338,339,162,163,164,340,45,46,341,342,191,47,204,343,343,344,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[322],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[63,64,151,152,201],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"matched"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[345,346,347],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[348,349,48,49,257,50,51,258,52,259,260,54,55,56,57,59,261,262,60,263,5,61,213,17,264,62,215,63,64,216,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,266,92,93,94,95,96,97,98,100,104,106,107,108,109,30,31,110,111,32,33,350,112,113,114,115,37,38,116,117,118,119,218,120,121,124,125,127,128,129,130,133,134,135,136,267,268,137,269,270,351,352,271,272,353,273,354,355,356,357,274,358,359,360,361,275,362,363,364,365,276,140,141,142,144,145,147,148,277,278,149,279,150,223,151,152,224,153,281,154,155,156,157,158,159,282,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,284,285,286,287,288,289,290,291,292,293,234,235,294,295,237,238,239,186,187,188,189,190,191,192,193,194,195,196,199,200,201,249,202,299,203,300,301,24,204,25,205,302,206,207,303,208,304],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[366,66,316,29,34,321],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[70,87,92,367],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[368,209,210,211,212,348,369,349,370,371,372,373,48,49,257,374,50,51,258,52,53,259,260,54,55,56,57,375,58,59,261,376,377,262,60,263,0,1,2,3,4,5,6,7,8,9,10,11,366,314,61,378,213,12,13,14,15,16,17,18,19,20,21,22,23,214,264,62,215,63,64,216,379,380,381,65,382,383,66,384,385,386,387,388,389,390,391,392,67,393,394,395,396,397,68,398,399,69,305,400,312,315,401,402,70,71,72,73,403,74,75,76,77,78,79,265,80,81,82,83,84,85,86,87,88,89,90,91,266,92,93,94,95,96,26,97,98,99,100,316,404,101,317,318,27,102,103,28,319,29,104,105,106,107,108,109,30,31,110,111,32,33,350,112,405,406,113,114,34,407,35,36,408,320,115,321,37,306,38,409,39,40,410,41,116,117,118,217,119,218,120,121,122,219,220,123,124,125,126,127,128,129,130,131,132,133,134,135,136,267,411,268,137,269,412,270,413,414,415,416,351,352,271,272,353,273,354,355,356,357,274,358,359,360,361,275,362,363,364,365,276,417,138,139,418,419,420,421,422,140,141,142,143,144,145,423,146,424,425,426,427,428,429,430,431,432,433,434,435,436,437,325,326,327,328,329,330,438,331,147,148,277,278,149,439,440,441,442,221,279,222,150,223,151,152,224,280,153,281,154,155,156,157,158,159,332,443,42,43,44,333,334,335,336,160,282,161,444,445,446,447,448,449,225,226,450,337,338,339,162,163,451,164,452,453,340,454,455,456,457,283,458,45,227,228,46,229,230,231,459,460,461,165,462,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,284,285,286,463,287,288,232,289,290,291,292,293,233,464,234,235,294,295,236,237,238,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,239,186,187,188,189,190,341,342,191,489,192,193,240,241,194,195,242,243,196,296,244,297,298,245,197,246,198,199,200,490,491,492,493,494,495,247,496,497,248,47,201,249,202,299,203,300,301,24,204,25,343,343,344,344,205,302,206,207,303,208,498,304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[499,50,258,52,53,259,260,54,56,500,57,375,59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[62,63,64,118,501,502,503,504,150,151,152,239,193,201,249,202],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[70,87,92,367],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[417,138,139,146,474,476,485,486,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[70,87,92,367],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[326,330],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[500],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.UsageTest.argumentsOrdered":220,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":475,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":218,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":24,"org.easymock.tests2.DelegateToTest.testReturnException":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":455,"org.easymock.tests.MockingTest.testPartialClassMocking":162,"org.easymock.tests.MockClassControlTest.testToString":42,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":368,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":387,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":351,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":501,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":307,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":147,"org.easymock.tests2.UsageTest.wrongArguments":217,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":415,"org.easymock.samples.ExampleTest.answerVsDelegate":302,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":46,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":453,"org.easymock.tests2.UsageConstraintsTest.testNull":75,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":98,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":134,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":335,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":323,"org.easymock.tests2.CaptureTest.testPrimitive":52,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":149,"org.easymock.tests.UsageTest.moreThanOneArgument":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":365,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":447,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":418,"org.easymock.tests.UsageTest.argumentsOrdered":243,"org.easymock.tests.UsageVarargTest.varargIntAccepted":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":480,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":311,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":22,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":467,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":190,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":252,"org.easymock.tests.ReplayStateInvalidUsageTest.times":433,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":5,"org.easymock.tests2.DependencyTest.testClassMocking":405,"org.easymock.tests2.AnswerTest.answer":261,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":482,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":373,"org.easymock.tests2.CaptureTest.testAnd":50,"org.easymock.tests2.UsageTest.strictResetToDefault":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":408,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":129,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":422,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":275,"org.easymock.tests.LimitationsTest.mockFinalMethod":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":494,"org.easymock.tests2.DependencyTest.testClassMockingSupport":406,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":225,"org.easymock.tests2.CaptureTest.testCapture1_2446744":53,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":371,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":427,"org.easymock.tests.UsageThrowableTest.throwError":153,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":228,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":23,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":399,"org.easymock.samples.PartialClassMockTest.testGetArea":204,"org.easymock.tests.MockingTest.testInterfaceMocking":451,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":428,"org.easymock.tests2.CompareToTest.testLessOrEqual":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":388,"org.easymock.tests2.UsageTest.niceToStrict":119,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":345,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":115,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":395,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":357,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":130,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":461,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":413,"org.easymock.tests.UsageOverloadedMethodTest.overloading":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":177,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":198,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":56,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":463,"org.easymock.tests2.EasyMockSupportClassTest.testAll":65,"org.easymock.tests.MockClassControlTest.testEquals":334,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":282,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":363,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":492,"org.easymock.tests2.CaptureTest.testCaptureAll":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":372,"org.easymock.tests.MockNameTest.defaultName":231,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":448,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":425,"org.easymock.samples.ExampleTest.voteForRemovals":208,"org.easymock.tests.UsageVarargTest.allKinds":293,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":493,"org.easymock.samples.BasicClassMockTest.testPrintContent":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":158,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":458,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":19,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":438,"org.easymock.tests2.UsageConstraintsTest.greaterThan":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":143,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":28,"org.easymock.samples.ExampleTest.voteForRemoval":206,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":331,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":105,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":319,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":322,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":316,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":276,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":127,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":454,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":411,"org.easymock.tests2.CaptureTest.testCaptureFirst":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":128,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":173,"org.easymock.tests2.UsageTest.moreThanOneArgument":118,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":107,"org.easymock.tests2.CaptureTest.testCapture2_2446744":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":483,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":292,"org.easymock.tests.GenericTest.testBridgedEquals":444,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":237,"org.easymock.tests.UsageExpectAndReturnTest.longType":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":490,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":364,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":439,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":266,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":445,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":441,"org.easymock.tests.UsageCallCountTest.tooManyCalls":238,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":30,"org.easymock.tests.MockingTest.testNiceClassMocking":340,"org.easymock.tests.MockingTest.testClassMocking":338,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":464,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":61,"org.easymock.tests2.UsageConstraintsTest.testFind":74,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":200,"org.easymock.tests.MockTypeTest.fromEasyMockClass":227,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":349,"org.easymock.tests.UsageExpectAndReturnTest.object":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":133,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":308,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":497,"org.easymock.tests.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":419,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":305,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":182,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":297,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests.MockClassControlTest.testHashCode":333,"org.easymock.tests2.EasyMockSupportTest.testVerify":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":390,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":420,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":460,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":370,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":374,"org.easymock.tests.UsageVarargTest.varargCharAccepted":287,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":437,"org.easymock.tests2.CaptureTest.testCaptureMultiple":499,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":488,"org.easymock.tests2.UsageTest.openCallCountByLastCall":120,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":136,"org.easymock.tests.DefaultClassInstantiatorTest.object":325,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":459,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":391,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":355,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":3,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":102,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":354,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":440,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":68,"org.easymock.tests2.UsageTest.resumeIfFailure":123,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":457,"org.easymock.tests2.StubTest.stubWithReturnValue":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":306,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":92,"org.easymock.tests2.SerializationTest.testAllMockedMethod":257,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":481,"org.easymock.samples.SupportTest.voteForRemovals":203,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":254,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":336,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":359,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":487,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":376,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":424,"org.easymock.tests.UsageExpectAndThrowTest.object":274,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":90,"org.easymock.tests2.DelegateToTest.testWrongClass":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":140,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":141,"org.easymock.tests.UsageStrictMockTest.range":151,"org.easymock.samples.ConstructorCalledMockTest.testTax":343,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":401,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":109,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":358,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":435,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":414,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":139,"org.easymock.tests2.CaptureTest.testCaptureNone":55,"org.easymock.tests.UsageUnorderedTest.message":239,"org.easymock.tests.UsageVerifyTest.twoReturns":202,"org.easymock.tests.UsageVarargTest.varargByteAccepted":291,"org.easymock.tests2.ThreadingTest.testThreadSafe":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":393,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":295,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":248,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":300,"org.easymock.tests2.CaptureTest.testCapture_2617107":258,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":256,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":278,"org.easymock.tests2.UsageConstraintsTest.any":80,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":432,"org.easymock.tests2.StubTest.stub":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":456,"org.easymock.tests.UsageExpectAndThrowTest.longType":272,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":329,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":431,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":215,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests.LimitationsTest.mockNativeMethod":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":185,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":161,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":2,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests2.NameTest.nameForMocksControl":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":4,"org.easymock.tests2.MockedExceptionTest.testMockedException":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":383,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":195,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":353,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":369,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":96,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":163,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":0,"org.easymock.tests2.CaptureTest.testCaptureLast":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":226,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":91,"org.easymock.tests.MockingTest.testTwoMocks":339,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":356,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":94,"org.easymock.samples.ExampleTest.removeNonExistingDocument":498,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":429,"org.easymock.tests.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":327,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":106,"org.easymock.tests2.ConstraintsToStringTest.andToString":253,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":384,"org.easymock.tests.UsageExpectAndThrowTest.floatType":271,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":400,"org.easymock.tests.UsageVerifyTest.twoThrows":249,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":67,"org.easymock.samples.ExampleTest.voteAgainstRemoval":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":417,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":103,"org.easymock.tests.LimitationsTest.privateConstructor":342,"org.easymock.tests2.UsageConstraintsTest.testNotNull":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":159,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":366,"org.easymock.tests2.UsageTest.defaultResetToNice":122,"org.easymock.samples.ExampleTest.voteAgainstRemovals":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":181,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":1,"org.easymock.tests.UsageVarargTest.differentLength":232,"org.easymock.tests2.CallbackTest.callback":213,"org.easymock.tests2.UsageConstraintsTest.equals":403,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":317,"org.easymock.tests.UsageTest.openCallCountByLastCall":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":277,"org.easymock.tests.UsageCallCountTest.tooFewCalls":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":110,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":416,"org.easymock.tests.UsageThrowableTest.throwCheckedException":156,"org.easymock.tests.MockingTest.testStrictClassMocking":337,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":462,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":434,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":111,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":263,"org.easymock.tests.ObjectMethodsTest.testHashCode":496,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":310,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":108,"org.easymock.tests2.NameTest.nameForNiceMock":211,"org.easymock.tests2.DependencyTest.testInterfaceMocking":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":309,"org.easymock.samples.ExampleTest.addDocument":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.DelegateToTest.testStubDelegate":137,"org.easymock.tests2.AnswerTest.stubAnswer":60,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":150,"org.easymock.tests.UsageVarargTest.varargLongAccepted":290,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":184,"org.easymock.tests.UsageExpectAndReturnTest.floatType":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":69,"org.easymock.tests2.ConstraintsToStringTest.orToString":250,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":21,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests.UsageThrowableTest.noUpperLimit":281,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":312,"org.easymock.tests2.SerializationTest.test":49,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":259,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":167,"org.easymock.tests2.UsageConstraintsTest.testSame":76,"org.easymock.samples.SupportTest.addDocument":299,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":385,"org.easymock.tests.GenericTest.testPackageScope":160,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":20,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":452,"org.easymock.tests2.NameTest.nameForMock":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":410,"org.easymock.tests2.UsageStrictMockTest.differentMethods":64,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":318,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":361,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":495,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":145,"org.easymock.tests2.MockedExceptionTest.testRealException":378,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":478,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":62,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":148,"org.easymock.tests2.NameTest.nameForStrictMock":210,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":347,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":99,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":315,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":502,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":328,"org.easymock.tests.ErrorMessageTest.testGetters":503,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":35,"org.easymock.tests2.UsageStrictMockTest.range":63,"org.easymock.tests2.UsageConstraintsTest.lessThan":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":473,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":389,"org.easymock.tests2.CaptureTest.testCaptureRightOne":57,"org.easymock.tests2.UsageConstraintsTest.testOr":77,"org.easymock.tests.UsageRangeTest.combination":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":26,"org.easymock.tests.UsageTest.wrongArguments":241,"org.easymock.tests2.MockBuilderTest.testWithConstructor":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":386,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":179,"org.easymock.tests.UsageVarargTest.varargShortAccepted":289,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":330,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":236,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":468,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests2.CaptureTest.testCaptureFromStub":375,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":426,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":36,"org.easymock.tests.UsageTest.unexpectedCallWithArray":240,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":222,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":294,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":180,"org.easymock.tests2.CaptureTest.testCapture":500,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":223,"org.easymock.samples.ExampleTest.addAndChangeDocument":304,"org.easymock.tests2.ConstraintsToStringTest.notToString":251,"org.easymock.tests.UsageStrictMockTest.testVerify":280,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":25,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":491,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":188,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":172,"org.easymock.tests.LimitationsTest.abstractClass":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":189,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":504,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":131,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":285}}]
