[{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[12,238],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[294,295,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[13,14,17,18,19,20,21,24,30,31,32,33,34,35,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,123,137,179,261,262,263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[230,236,280,282,290],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[298,299,300,301,302,303,49,56,57,58,61,62,86,87,89,90,304,305,306,307,308,309,122,123,124,310,311,312,154,313,158,159,161,162,314,315,316,317,184,185,191,192,196,203,206,318,211,214,216,223,225,226,256,319,265,320,270,271,274,275],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[321,34,55,60,64,65,68,70,71,72,73,75,76,77,78,80,81,82,83,123,128,137,179,182,189],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[49,56,87,89,90,122,123,124,322,323,324,325,184,223,225,226],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[326,327,328,321,329,330,331,332,333,334,335,336,337,338,339,294,340,341,342,343,344,345,295,346,347,348,0,1,2,3,4,5,6,298,349,350,299,300,301,302,303,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,351,23,24,352,353,25,354,355,356,26,27,357,28,358,359,360,361,362,29,363,30,31,32,33,34,35,36,37,38,364,39,40,41,42,43,44,45,46,365,47,48,366,367,49,50,51,52,53,54,297,368,369,55,56,57,58,59,60,61,62,63,370,371,372,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,373,374,375,376,377,378,379,380,381,382,383,384,84,85,86,87,88,89,90,91,385,92,93,386,304,387,388,305,306,307,308,389,390,391,392,309,393,394,296,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,410,115,116,117,118,119,120,121,122,123,124,411,125,126,127,128,129,412,413,310,311,312,414,415,416,130,131,132,133,134,135,136,137,138,139,140,141,142,143,417,144,145,146,147,148,149,150,151,152,153,154,418,155,313,419,420,156,157,158,421,159,422,423,160,161,424,162,163,164,165,166,167,168,169,170,171,425,426,427,172,428,429,173,430,431,432,433,434,435,436,437,438,174,439,440,441,442,443,175,444,445,176,446,177,178,179,447,314,315,316,317,448,449,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,450,202,451,452,203,204,205,206,453,318,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,454,455,456,457,458,459,460,461,228,229,230,231,462,232,233,234,235,236,237,463,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,464,465,466,467,468,469,470,256,319,471,472,473,474,475,257,476,477,258,259,260,261,262,263,264,478,479,480,481,482,265,320,483,484,485,486,487,266,267,268,269,270,271,272,488,273,274,275,489,490,276,277,278,491,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[492,237,242,254],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[155,161,173,204,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:94","failures":[230,231,232,233,234,235,236,237,463,238,247,248,252,253,280,281,282,283,290,291],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:399","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[434,214],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[421,494,495,496,497,498,499,500,501,464],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[347,348,0,1,2,3,7,8,9,10,11,12,15,16,353,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,50,51,52,53,54,56,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,87,90,91,385,92,93,389,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,410,115,116,117,118,119,120,121,122,123,124,125,126,129,413,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,163,164,167,168,169,170,171,172,173,174,175,176,177,178,179,314,315,316,317,180,181,183,184,186,187,190,193,195,197,198,199,200,202,203,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,285,286,287,288,289,290,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[49,57,58,61,62,86,89,502,503,123,124,185,191,192,225],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[26,27,28,29,87,89,90,92,93,94,95,96,97,98,99,102,103,105,106,107,109,110,111,112,113,114,410,115,116,117,118,119,120,121,125,130,131,132,133,138,140,141,143,147,151,155,156,158,159,161,166,172,173,174,175,180,181,195,196,197,198,199,200,202,204,205,206,223,225,226,255,269,270,271,272,273,274,275,277],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1000","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[12,13,34,46,49,86,87,92,93,117,118,119,120,121,125,126,127,128,129,166,176,177,202,223,461,228,229,230,231,232,233,234,235,236,237,463,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":231,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.UsageTest.argumentsOrdered":192,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":335,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":150,"org.easymock.tests2.DelegateToTest.testReturnException":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":31,"org.easymock.tests.MockingTest.testPartialClassMocking":26,"org.easymock.tests.MockClassControlTest.testToString":310,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":447,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":64,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":322,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":237,"org.easymock.tests2.UsageTest.wrongArguments":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":125,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":475,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":9,"org.easymock.samples.ExampleTest.answerVsDelegate":139,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":301,"org.easymock.tests2.UsageConstraintsTest.testNull":233,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":359,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":198,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":416,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":217,"org.easymock.tests2.CaptureTest.testPrimitive":283,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":129,"org.easymock.tests.UsageTest.moreThanOneArgument":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":83,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":132,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":405,"org.easymock.tests.UsageTest.argumentsOrdered":62,"org.easymock.tests.UsageVarargTest.varargIntAccepted":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":500,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":456,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":121,"org.easymock.tests.ReplayStateInvalidUsageTest.times":400,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":256,"org.easymock.tests2.DependencyTest.testClassMocking":448,"org.easymock.tests2.AnswerTest.answer":257,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":171,"org.easymock.tests2.CaptureTest.testAnd":280,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":350,"org.easymock.tests2.UsageTest.strictResetToDefault":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":419,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":131,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":115,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":212,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":409,"org.easymock.tests2.DelegateToTest.testDelegate":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":79,"org.easymock.tests.LimitationsTest.mockFinalMethod":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":54,"org.easymock.tests2.DependencyTest.testClassMockingSupport":449,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":307,"org.easymock.tests2.CaptureTest.testCapture1_2446744":284,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":169,"org.easymock.tests.UsageThrowableTest.throwError":14,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":296,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":300,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":487,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":445,"org.easymock.samples.PartialClassMockTest.testGetArea":151,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":395,"org.easymock.tests.MockingTest.testInterfaceMocking":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":118,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":434,"org.easymock.tests2.UsageTest.niceToStrict":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":65,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":156,"org.easymock.tests2.MockBuilderTest.testCreateMock":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":441,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":472,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":73,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":213,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":349,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":372,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":7,"org.easymock.tests.UsageOverloadedMethodTest.overloading":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":438,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":24,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":242,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":105,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":241,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":289,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":364,"org.easymock.tests.MockClassControlTest.testEquals":415,"org.easymock.tests2.EasyMockSupportClassTest.testAll":172,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":48,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":81,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":52,"org.easymock.tests2.CaptureTest.testCaptureAll":281,"org.easymock.tests.MockNameTest.defaultName":309,"org.easymock.tests2.UsageConstraintsTest.testMatches":243,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":133,"org.easymock.samples.ExampleTest.voteForRemovals":143,"org.easymock.tests.UsageVarargTest.allKinds":46,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":122,"org.easymock.samples.BasicClassMockTest.testPrintContent":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":53,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":20,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":501,"org.easymock.tests2.UsageConstraintsTest.greaterThan":245,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":410,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":206,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":384,"org.easymock.samples.ExampleTest.voteForRemoval":140,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":453,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":164,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":302,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":201,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":182,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":11,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":210,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":30,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":490,"org.easymock.tests2.CaptureTest.testCaptureFirst":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":211,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":25,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":101,"org.easymock.tests2.UsageTest.moreThanOneArgument":184,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":166,"org.easymock.tests2.CaptureTest.testCapture2_2446744":292,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":342,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":45,"org.easymock.tests.GenericTest.testBridgedEquals":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":5,"org.easymock.tests.UsageExpectAndReturnTest.longType":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":50,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":82,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":411,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":250,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":80,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":130,"org.easymock.tests.UsageCallCountTest.tooManyCalls":6,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":19,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":270,"org.easymock.tests.MockingTest.testNiceClassMocking":360,"org.easymock.tests.MockingTest.testClassMocking":355,"org.easymock.tests2.UsageConstraintsTest.testContains":240,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":348,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":263,"org.easymock.tests2.UsageConstraintsTest.testFind":232,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":137,"org.easymock.tests.MockTypeTest.fromEasyMockClass":299,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":177,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":84,"org.easymock.tests.UsageExpectAndReturnTest.object":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":496,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":40,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":388,"org.easymock.tests.UsageTest.exactCallCountByLastCall":63,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":406,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":464,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":110,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":36,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":23,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":479,"org.easymock.tests.MockClassControlTest.testHashCode":414,"org.easymock.tests2.EasyMockSupportTest.testVerify":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":436,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":407,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":22,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":168,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":461,"org.easymock.tests.UsageVarargTest.varargCharAccepted":39,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":376,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":346,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":219,"org.easymock.tests.DefaultClassInstantiatorTest.object":377,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":370,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":304,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":437,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":478,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":204,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":111,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":175,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":311,"org.easymock.tests2.UsageTest.resumeIfFailure":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":33,"org.easymock.tests2.StubTest.stubWithReturnValue":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":421,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":103,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":251,"org.easymock.tests2.SerializationTest.testAllMockedMethod":268,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":340,"org.easymock.samples.SupportTest.voteForRemovals":147,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":481,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":76,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":295,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":476,"org.easymock.tests.UsageExpectAndThrowTest.object":74,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":375,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":248,"org.easymock.tests2.DelegateToTest.testWrongClass":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":93,"org.easymock.samples.ConstructorCalledMockTest.testTax":148,"org.easymock.tests.UsageStrictMockTest.range":89,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":459,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":215,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":269,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":425,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":402,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":8,"org.easymock.tests2.CaptureTest.testCaptureNone":288,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":369,"org.easymock.tests.UsageUnorderedTest.message":49,"org.easymock.tests.UsageVerifyTest.twoReturns":124,"org.easymock.tests.UsageVarargTest.varargByteAccepted":44,"org.easymock.tests2.ThreadingTest.testThreadSafe":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":439,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":3,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":152,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":305,"org.easymock.tests2.CaptureTest.testCapture_2617107":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":344,"org.easymock.tests2.UsageConstraintsTest.any":238,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":399,"org.easymock.tests2.StubTest.stub":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":32,"org.easymock.tests.UsageExpectAndThrowTest.longType":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":345,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":381,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":398,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":224,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests2.SerializationTest.testClass":266,"org.easymock.tests.LimitationsTest.mockNativeMethod":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":113,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":366,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":468,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":227,"org.easymock.tests2.NameTest.nameForMocksControl":317,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":470,"org.easymock.tests2.MockedExceptionTest.testMockedException":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":429,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":60,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":446,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":28,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":68,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":159,"org.easymock.tests.MockingTest.testNicePartialClassMocking":27,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":466,"org.easymock.tests2.CaptureTest.testCaptureLast":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":308,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":236,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":275,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":249,"org.easymock.tests.MockingTest.testTwoMocks":356,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":489,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":72,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":253,"org.easymock.samples.ExampleTest.removeNonExistingDocument":417,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":471,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":396,"org.easymock.tests.UsageStrictMockTest.differentMethods":90,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":480,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":379,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":165,"org.easymock.tests2.MockBuilderTest.testCreateMockString":162,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":430,"org.easymock.tests.UsageExpectAndThrowTest.floatType":66,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":465,"org.easymock.tests.UsageVerifyTest.twoThrows":123,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":174,"org.easymock.samples.ExampleTest.voteAgainstRemoval":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":205,"org.easymock.tests.LimitationsTest.privateConstructor":362,"org.easymock.tests2.UsageConstraintsTest.testNotNull":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":21,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":261,"org.easymock.tests2.UsageTest.defaultResetToNice":190,"org.easymock.samples.ExampleTest.voteAgainstRemovals":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":337,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":467,"org.easymock.tests.UsageVarargTest.differentLength":41,"org.easymock.tests2.CallbackTest.callback":207,"org.easymock.tests2.UsageConstraintsTest.equals":462,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":451,"org.easymock.tests.UsageTest.openCallCountByLastCall":59,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":127,"org.easymock.tests.UsageCallCountTest.tooFewCalls":1,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":10,"org.easymock.tests.UsageThrowableTest.throwCheckedException":18,"org.easymock.tests.MockingTest.testStrictClassMocking":354,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":274,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":319,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":401,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":273,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":260,"org.easymock.tests2.CompareToTest.testGreateOrEqual":492,"org.easymock.tests.ObjectMethodsTest.testHashCode":387,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":499,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":167,"org.easymock.tests2.NameTest.nameForNiceMock":316,"org.easymock.tests2.DependencyTest.testInterfaceMocking":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":497,"org.easymock.samples.ExampleTest.addDocument":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":444,"org.easymock.tests2.DelegateToTest.testStubDelegate":277,"org.easymock.tests2.AnswerTest.stubAnswer":259,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":87,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":422,"org.easymock.tests.UsageVarargTest.varargLongAccepted":43,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":334,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":112,"org.easymock.tests.UsageExpectAndReturnTest.floatType":96,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":255,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":485,"org.easymock.tests.UsageThrowableTest.noUpperLimit":15,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":246,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":229,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":454,"org.easymock.tests2.SerializationTest.test":267,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":285,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":378,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":95,"org.easymock.tests2.UsageConstraintsTest.testSame":234,"org.easymock.samples.SupportTest.addDocument":146,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":488,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":431,"org.easymock.tests.GenericTest.testPackageScope":47,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":484,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":358,"org.easymock.tests2.NameTest.nameForMock":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":424,"org.easymock.tests2.UsageStrictMockTest.differentMethods":226,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":452,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":78,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":116,"org.easymock.tests2.MockedExceptionTest.testRealException":264,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":303,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":502,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":494,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":338,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":126,"org.easymock.tests2.NameTest.nameForStrictMock":315,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":420,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":199,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":458,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":247,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":323,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":380,"org.easymock.tests.ErrorMessageTest.testGetters":324,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":155,"org.easymock.tests2.UsageStrictMockTest.range":225,"org.easymock.tests2.UsageConstraintsTest.lessThan":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":482,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":493,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":498,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":435,"org.easymock.tests2.CaptureTest.testCaptureRightOne":290,"org.easymock.tests2.UsageConstraintsTest.testOr":235,"org.easymock.tests.UsageRangeTest.combination":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":196,"org.easymock.tests.UsageTest.wrongArguments":58,"org.easymock.tests2.MockBuilderTest.testWithConstructor":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":432,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":327,"org.easymock.tests.UsageVarargTest.varargShortAccepted":42,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":382,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":4,"org.easymock.tests2.UsageConstraintsTest.cmpTo":239,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":321,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":291,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":394,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":313,"org.easymock.tests.UsageTest.unexpectedCallWithArray":57,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":86,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":2,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":108,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":88,"org.easymock.tests2.UsageConstraintsTest.constraints":230,"org.easymock.samples.ExampleTest.addAndChangeDocument":144,"org.easymock.tests.UsageStrictMockTest.testVerify":385,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":145,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":51,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":119,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":100,"org.easymock.tests.LimitationsTest.abstractClass":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":120,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":214,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":325}}]
