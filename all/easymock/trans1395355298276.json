[{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:382","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n    if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[44],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[47,48,49],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[50,51],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,17,85,18,19,86,87,88,89,2,3,4,5,6,7,8,9,10,11,12,13,14,15,90,91,43,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,47,133,134,135,136,137,138,139,140,141,142,45,143,144,145,146,147,148,149,150,46,151,152,153,154,155,156,157,158,159,160,20,21,22,23,161,162,163,164,165,166,167,168,169,170,24,25,171,172,173,174,175,26,27,176,177,178,179,180,181,182,183,184,185,31,32,33,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,34,35,207,36,37,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,38,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,48,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,49,357,358,359,360,361,362,363,364,365,366,367,368,369,39,370,40,371,372,41,42,373],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[374,375,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[377,378,379,380,34,370],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[2,4,12,45],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[93,94,95,96,133,169,174,199,203,204,219,220,221,222,223,224,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,303,312,48,316,369,372],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[381],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[55,2,3,4,5,6,7,8,9,10,11,12,13,14,15,91,92,115,116,117,119,161,164,165,272,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[382,87,383,384],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[66,83,85,18,19,88,385,386,387,121,125,126,129,136,46,388,389,390,391,169,25,171,172,26,27,176,177,32,33,205,34,207,36,37,235,236,237,38,323,365,369,370,40,41,42,373],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,392,393,62,394,395,396,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,397,398,81,82,399,400,83,84,17,85,18,19,86,382,87,383,88,401,402,403,404,89,405,406,2,3,4,5,6,7,8,9,10,11,12,13,14,15,407,385,90,408,409,410,0,376,411,412,413,414,386,415,387,416,417,91,43,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,47,133,134,135,136,137,138,139,140,141,142,45,143,144,145,146,147,148,149,150,46,151,152,153,154,155,156,157,158,159,160,418,20,21,22,23,161,162,163,164,165,166,419,388,420,421,422,1,423,424,425,389,390,391,426,427,167,168,169,170,24,25,171,172,173,174,175,26,27,176,177,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,178,179,180,181,182,183,184,185,31,32,33,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,34,35,207,36,37,208,209,210,211,212,453,454,455,456,457,458,459,213,214,215,216,217,218,219,220,221,222,223,224,460,225,226,461,227,228,229,230,231,232,233,234,235,236,237,50,462,463,44,51,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,38,464,465,466,467,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,48,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,468,469,470,471,472,336,473,337,338,474,475,476,477,478,479,480,481,482,483,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,49,357,358,359,360,361,362,363,364,365,366,367,368,369,39,370,40,371,372,41,42,373],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[53,54,55,56,57,59,61,392,392,393,393,394,64,65,66,67,68,74,81,82,399,17,18,19,382,87,88,401,402,403,404,89,405,406,2,3,5,6,9,10,11,12,13,14,15,407,385,90,408,409,410,411,386,415,387,91,92,93,94,95,96,102,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,47,133,134,135,136,137,139,140,141,142,45,143,145,146,147,148,149,150,46,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,388,422,423,424,390,169,170,24,171,173,174,175,176,177,431,434,444,450,178,179,180,181,31,32,33,186,187,188,189,190,192,195,197,198,199,200,201,202,203,204,35,36,37,210,211,212,219,220,221,222,223,224,231,462,44,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,270,272,273,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,38,466,297,298,299,300,301,302,303,310,311,312,48,313,314,315,316,329,330,331,332,333,334,335,471,472,473,483,339,340,341,357,363,365,366,367,368,369,39,371,372,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastControl":"control","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[143],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":137,"org.easymock.tests2.UsageTest.argumentsOrdered":27,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":369,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":352,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":172,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":62,"org.easymock.tests2.DelegateToTest.testReturnException":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":220,"org.easymock.tests.MockingTest.testPartialClassMocking":471,"org.easymock.tests.MockClassControlTest.testToString":477,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":418,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":434,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":277,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":28,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":82,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests2.UsageTest.wrongArguments":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":310,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":184,"org.easymock.samples.ExampleTest.answerVsDelegate":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":461,"org.easymock.tests2.UsageConstraintsTest.testNull":140,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":338,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":408,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":482,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":129,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":313,"org.easymock.tests.UsageTest.moreThanOneArgument":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":296,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":333,"org.easymock.tests.UsageTest.argumentsOrdered":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":297,"org.easymock.tests.UsageVarargTest.varargIntAccepted":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":107,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":190,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":74,"org.easymock.tests.ReplayStateInvalidUsageTest.times":266,"org.easymock.tests2.DependencyTest.testClassMocking":397,"org.easymock.tests2.AnswerTest.answer":161,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":113,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":414,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":124,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":367,"org.easymock.tests2.DelegateToTest.testDelegate":119,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":292,"org.easymock.tests.LimitationsTest.mockFinalMethod":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":309,"org.easymock.tests2.DependencyTest.testClassMockingSupport":398,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":194,"org.easymock.tests2.CaptureTest.testCapture1_2446744":6,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":111,"org.easymock.tests.UsageThrowableTest.throwError":197,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":260,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":226,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":452,"org.easymock.samples.PartialClassMockTest.testGetArea":394,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":261,"org.easymock.tests.MockingTest.testInterfaceMocking":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":439,"org.easymock.tests2.UsageTest.niceToStrict":171,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":278,"org.easymock.tests2.ThreadingTest.testChangeDefault":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":422,"org.easymock.tests2.MockBuilderTest.testCreateMock":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":447,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":286,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":377,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":125,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":182,"org.easymock.tests.UsageOverloadedMethodTest.overloading":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":443,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":149,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":249,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":314,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":148,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":11,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":320,"org.easymock.tests.MockClassControlTest.testEquals":481,"org.easymock.tests2.EasyMockSupportClassTest.testAll":431,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":463,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":112,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":307,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":381,"org.easymock.tests.MockNameTest.defaultName":304,"org.easymock.tests2.UsageConstraintsTest.testMatches":150,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":334,"org.easymock.samples.ExampleTest.voteForRemovals":59,"org.easymock.tests.UsageVarargTest.allKinds":328,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":31,"org.easymock.samples.BasicClassMockTest.testPrintContent":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":308,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":203,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":83,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":224,"org.easymock.tests2.UsageConstraintsTest.greaterThan":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":366,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":387,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":459,"org.easymock.samples.ExampleTest.voteForRemoval":56,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":416,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":0,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":483,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":169,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":122,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":219,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":114,"org.easymock.tests2.CaptureTest.testCaptureFirst":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":123,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":177,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":245,"org.easymock.tests2.UsageTest.moreThanOneArgument":24,"org.easymock.tests2.CaptureTest.testCapture2_2446744":14,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":359,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":327,"org.easymock.tests.GenericTest.testBridgedEquals":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":236,"org.easymock.tests.UsageExpectAndReturnTest.longType":241,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":295,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":178,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":331,"org.easymock.tests.UsageCallCountTest.tooManyCalls":237,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":448,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":202,"org.easymock.tests.MockingTest.testNiceClassMocking":474,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":402,"org.easymock.tests.MockingTest.testClassMocking":469,"org.easymock.tests2.UsageConstraintsTest.testContains":147,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":230,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":95,"org.easymock.tests2.UsageConstraintsTest.testFind":139,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":316,"org.easymock.tests.MockTypeTest.fromEasyMockClass":225,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":92,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":205,"org.easymock.tests.UsageExpectAndReturnTest.object":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":128,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":322,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":216,"org.easymock.tests.UsageTest.exactCallCountByLastCall":373,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":191,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":400,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":254,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":272,"org.easymock.tests.MockClassControlTest.testHashCode":480,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":98,"org.easymock.tests2.EasyMockSupportTest.testVerify":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":441,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":109,"org.easymock.tests.UsageVarargTest.varargCharAccepted":321,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":364,"org.easymock.tests2.UsageTest.openCallCountByLastCall":173,"org.easymock.tests.DefaultClassInstantiatorTest.object":453,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":339,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":442,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":72,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":97,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":479,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":283,"org.easymock.tests.CapturesMatcherTest.test":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":210,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":450,"org.easymock.tests2.UsageTest.resumeIfFailure":176,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":222,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":247,"org.easymock.tests2.SerializationTest.testAllMockedMethod":383,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":357,"org.easymock.samples.SupportTest.voteForRemovals":53,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":378,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":289,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":384,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":363,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":162,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":193,"org.easymock.tests.UsageExpectAndThrowTest.object":287,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":154,"org.easymock.tests2.DelegateToTest.testWrongClass":117,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":329,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":330,"org.easymock.samples.ConstructorCalledMockTest.testTax":392,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":167,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":401,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":288,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":428,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":268,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":183,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":379,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":181,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":33,"org.easymock.tests.UsageVarargTest.varargByteAccepted":326,"org.easymock.tests2.ThreadingTest.testThreadSafe":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":445,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":234,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":395,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":217,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":361,"org.easymock.tests2.UsageConstraintsTest.any":145,"org.easymock.tests2.StubTest.stub":47,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":221,"org.easymock.tests.UsageExpectAndThrowTest.longType":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":457,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":264,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":102,"org.easymock.tests2.SerializationTest.testClass":382,"org.easymock.tests.LimitationsTest.mockNativeMethod":466,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":44,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":71,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":86,"org.easymock.tests2.NameTest.nameForMocksControl":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":73,"org.easymock.tests2.MockedExceptionTest.testMockedException":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":433,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":372,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":473,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":281,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":407,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":424,"org.easymock.tests.MockingTest.testNicePartialClassMocking":472,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":410,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":195,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":406,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":45,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":155,"org.easymock.tests.MockingTest.testTwoMocks":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":285,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":159,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":375,"org.easymock.samples.ExampleTest.removeNonExistingDocument":60,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":76,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":262,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":99,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":455,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":66,"org.easymock.tests2.MockBuilderTest.testCreateMockString":391,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":435,"org.easymock.tests.UsageExpectAndThrowTest.floatType":279,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":164,"org.easymock.tests.UsageVerifyTest.twoThrows":32,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":444,"org.easymock.samples.ExampleTest.voteAgainstRemoval":57,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":353,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":415,"org.easymock.tests.LimitationsTest.privateConstructor":465,"org.easymock.tests2.UsageConstraintsTest.testNotNull":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":204,"org.easymock.tests2.UsageTest.defaultResetToNice":175,"org.easymock.samples.ExampleTest.voteAgainstRemovals":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":354,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":70,"org.easymock.tests.UsageVarargTest.differentLength":323,"org.easymock.tests2.CallbackTest.callback":88,"org.easymock.tests2.UsageConstraintsTest.equals":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":412,"org.easymock.tests.UsageTest.openCallCountByLastCall":371,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":312,"org.easymock.tests.UsageCallCountTest.tooFewCalls":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":404,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":185,"org.easymock.tests.UsageThrowableTest.throwCheckedException":201,"org.easymock.tests.MockingTest.testStrictClassMocking":468,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":380,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":405,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":303,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":403,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":75,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":89,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":166,"org.easymock.tests.ObjectMethodsTest.testHashCode":215,"org.easymock.tests2.NameTest.nameForNiceMock":22,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":68,"org.easymock.tests2.DependencyTest.testInterfaceMocking":81,"org.easymock.samples.ExampleTest.addDocument":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":451,"org.easymock.tests2.DelegateToTest.testStubDelegate":116,"org.easymock.tests2.AnswerTest.stubAnswer":165,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests.UsageVarargTest.varargLongAccepted":325,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":351,"org.easymock.tests.UsageExpectAndReturnTest.floatType":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":399,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":393,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":106,"org.easymock.tests.UsageThrowableTest.noUpperLimit":198,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":426,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":7,"org.easymock.tests2.SerializationTest.test":87,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":454,"org.easymock.tests2.UsageConstraintsTest.testSame":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":239,"org.easymock.samples.SupportTest.addDocument":52,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":436,"org.easymock.tests.GenericTest.testPackageScope":462,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":105,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":337,"org.easymock.tests2.NameTest.nameForMock":20,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":250,"org.easymock.tests2.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":413,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":291,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":368,"org.easymock.tests2.MockedExceptionTest.testRealException":96,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":228,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":355,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":311,"org.easymock.tests2.NameTest.nameForStrictMock":21,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":427,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":456,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":153,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":29,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":388,"org.easymock.tests2.UsageStrictMockTest.range":18,"org.easymock.tests2.UsageConstraintsTest.lessThan":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":440,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.UsageConstraintsTest.testOr":142,"org.easymock.tests.UsageRangeTest.combination":365,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":385,"org.easymock.tests.UsageTest.wrongArguments":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":437,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":476,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":343,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":458,"org.easymock.tests.UsageVarargTest.varargShortAccepted":324,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":235,"org.easymock.tests2.UsageConstraintsTest.cmpTo":146,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":345,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":174,"org.easymock.tests2.CaptureTest.testCaptureFromStub":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":259,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":420,"org.easymock.tests.UsageTest.unexpectedCallWithArray":370,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":252,"org.easymock.tests2.UsageConstraintsTest.constraints":136,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":207,"org.easymock.samples.ExampleTest.addAndChangeDocument":61,"org.easymock.tests.UsageStrictMockTest.testVerify":209,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":63,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":306,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":188,"org.easymock.tests.LimitationsTest.abstractClass":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":189,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":126,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":30,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":318}}]
