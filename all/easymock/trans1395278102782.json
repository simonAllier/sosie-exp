[{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:280","failures":[15,16,17,18,19,20,21,22],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[24,25],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[57,58,59],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[62,63,64,15,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,26,95,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,24,111,112,113,114,115,116,117,118,1,2,3,4,5,6,7,8,119,9,10,11,12,13,120,121,122,123,124,17,18,19,21,125,126,28,29,127,23,128,129,130,30,31,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,32,176,33,177,178,179,180,181,182,34,183,35,36,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,42,43,44,241,242,45,46,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,47,48,49,14,14,267,268,269,270,271,272,273,274,275,276,22,277,278,61,279,280,281,282,283,284,285,286,287,52,288,289,53,54,290,55,56,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[310],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[311],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[172,312,193,194,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[313,314,315,316,317,318,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[89,90,92,94,26,320,104,109,1,3,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[74,78,146,321,147,322,148,149,150,151,152,153,323,154,161,324,325,326],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:36","sourceCode":"return !(org.easymock.IArgumentMatcher.matches(java.lang.Object))","type":"CtReturnImpl"},"failures":[109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[177,178,179,180,186,192,237,292,293,294,295,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","bridgeMethod":"finalizeMethod"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[77,89,101,125,29,127,23,30,31,131,132,134,138,139,142,147,152,153,154,156,164,166,181,183,35,36,327,328,216,226,329,330,240,43,44,45,46,243,48,49,52,288,53,290,55,56,307,308,309],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[64,15,65,66,67,68,331,69,72,73,75,76,77,79,27,332,85,333,86,87,88,89,90,334,91,92,93,94,26,95,320,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,24,111,335,336,112,113,114,115,116,117,118,1,2,3,4,5,6,7,8,119,9,10,11,12,13,120,121,122,123,124,16,17,18,19,20,21,125,126,28,29,127,23,128,129,130,30,31,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,337,157,171,312,174,175,338,339,340,341,342,32,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,33,359,360,361,362,363,364,177,178,179,180,181,182,34,183,35,36,184,185,186,187,188,189,190,37,191,192,365,366,367,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,38,39,368,369,40,370,371,41,372,216,373,217,218,374,375,376,221,222,223,377,224,225,226,227,228,229,230,231,232,233,378,379,380,381,382,383,384,385,386,387,388,389,390,235,236,237,238,239,240,42,43,44,241,242,45,46,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,47,48,49,391,392,393,50,394,395,51,57,58,59,267,268,269,270,271,272,273,274,276,396,22,277,397,398,278,61,279,280,281,282,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,283,284,285,286,287,423,424,425,52,288,289,53,54,290,55,56,291,426,292,293,294,295,296,297,311,427,428,429,60,298,299,300,301,302,430,431,303,304,305,306,307,308,309],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[156,163,172,312,193,194,195],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"position":"org.easymock.internal.Range:40","failures":[62,63,64,15,65,66,67,68,331,69,70,71,72,73,74,75,76,77,78,79,80,432,433,434,435,436,27,332,437,438,439,81,440,441,82,442,443,444,445,446,447,448,449,450,83,451,452,453,454,455,84,456,457,85,333,86,87,88,89,90,334,91,92,93,94,26,95,320,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,24,111,335,336,112,113,114,115,116,117,118,1,2,3,4,5,6,7,8,119,9,10,11,12,13,120,121,122,123,124,16,17,18,19,20,21,125,126,28,29,127,23,128,129,130,30,31,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,337,146,458,147,322,459,460,148,149,150,313,151,461,462,152,153,463,154,155,156,157,158,159,160,161,464,162,465,466,163,164,165,166,467,468,167,168,169,170,469,171,172,173,312,470,471,174,175,338,339,340,341,342,32,343,344,345,346,347,348,349,350,351,352,353,176,319,472,354,355,356,357,358,33,359,360,361,362,363,364,177,178,179,180,181,182,34,183,35,36,184,185,186,187,188,189,190,37,191,192,473,474,475,476,477,478,479,480,481,482,483,484,193,194,365,195,366,367,485,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,38,39,368,369,40,370,371,41,372,216,373,217,218,486,487,488,489,490,491,492,493,494,219,220,324,495,374,375,376,221,222,223,377,224,225,226,227,228,229,230,231,232,233,330,378,234,379,380,381,382,383,384,385,386,387,388,389,390,235,236,237,238,239,240,42,43,44,241,242,45,46,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,47,48,49,391,392,393,325,496,497,50,394,326,395,51,57,58,59,267,268,269,270,271,272,273,274,498,499,275,500,276,396,22,277,397,398,278,61,279,280,281,282,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,283,284,285,286,287,423,424,425,52,288,289,53,54,290,55,56,291,426,292,293,294,295,296,297,311,427,428,429,60,298,299,300,301,302,430,431,303,304,305,306,307,308,309],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[64,65,66,68,76,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":90,"org.easymock.tests2.UsageTest.argumentsOrdered":31,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":240,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":409,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":73,"org.easymock.tests2.DelegateToTest.testReturnException":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":293,"org.easymock.tests.MockingTest.testPartialClassMocking":193,"org.easymock.tests.MockClassControlTest.testToString":488,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":349,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":375,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":445,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":244,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":314,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests2.UsageTest.wrongArguments":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":235,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":189,"org.easymock.samples.ExampleTest.answerVsDelegate":15,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":326,"org.easymock.tests2.UsageConstraintsTest.testNull":92,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":158,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":493,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":239,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":263,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":300,"org.easymock.tests.UsageTest.argumentsOrdered":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":311,"org.easymock.tests.UsageVarargTest.varargIntAccepted":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":61,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":318,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":363,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":282,"org.easymock.tests.ReplayStateInvalidUsageTest.times":387,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":32,"org.easymock.tests2.DependencyTest.testClassMocking":470,"org.easymock.tests2.AnswerTest.answer":111,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":416,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":118,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":497,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":459,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":217,"org.easymock.tests2.DelegateToTest.testDelegate":21,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":259,"org.easymock.tests.LimitationsTest.mockFinalMethod":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":287,"org.easymock.tests2.DependencyTest.testClassMockingSupport":471,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":38,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":464,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":116,"org.easymock.tests.UsageThrowableTest.throwError":267,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":381,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":394,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":330,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":457,"org.easymock.samples.PartialClassMockTest.testGetArea":74,"org.easymock.tests.MockingTest.testInterfaceMocking":365,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":279,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":446,"org.easymock.tests2.UsageTest.niceToStrict":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":245,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":148,"org.easymock.tests2.MockBuilderTest.testCreateMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":453,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":345,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":253,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":425,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":430,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":187,"org.easymock.tests.UsageOverloadedMethodTest.overloading":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":99,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":264,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":98,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":377,"org.easymock.tests.MockClassControlTest.testEquals":492,"org.easymock.tests2.EasyMockSupportClassTest.testAll":81,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":220,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":117,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":285,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":310,"org.easymock.tests.MockNameTest.defaultName":37,"org.easymock.tests2.UsageConstraintsTest.testMatches":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":301,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":379,"org.easymock.samples.ExampleTest.voteForRemovals":68,"org.easymock.tests.UsageVarargTest.allKinds":231,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":47,"org.easymock.samples.BasicClassMockTest.testPrintContent":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":273,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":181,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":360,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":480,"org.easymock.tests2.UsageConstraintsTest.greaterThan":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":440,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":373,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":166,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":481,"org.easymock.samples.ExampleTest.voteForRemoval":65,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":467,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":121,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":161,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":125,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":234,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":292,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":132,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":203,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":123,"org.easymock.tests2.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":153,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":230,"org.easymock.tests.GenericTest.testBridgedEquals":495,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":308,"org.easymock.tests.UsageExpectAndReturnTest.longType":199,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":283,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":262,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":323,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":107,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":58,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":298,"org.easymock.tests.UsageCallCountTest.tooManyCalls":309,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":454,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":272,"org.easymock.tests.MockingTest.testNiceClassMocking":485,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":168,"org.easymock.tests.MockingTest.testClassMocking":483,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":431,"org.easymock.tests2.UsageConstraintsTest.testContains":97,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":321,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":179,"org.easymock.tests2.UsageConstraintsTest.testFind":91,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":266,"org.easymock.tests.MockTypeTest.fromEasyMockClass":50,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":86,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":288,"org.easymock.tests.UsageExpectAndReturnTest.object":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":315,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":371,"org.easymock.tests.UsageTest.exactCallCountByLastCall":243,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":427,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":212,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":221,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":22,"org.easymock.tests.MockClassControlTest.testHashCode":491,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.EasyMockSupportTest.testVerify":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":448,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":424,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":115,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":327,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":337,"org.easymock.tests.UsageVarargTest.varargCharAccepted":224,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":473,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastCall":128,"org.easymock.tests.DefaultClassInstantiatorTest.object":474,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":423,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":40,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":449,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":490,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":164,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":250,"org.easymock.tests.CapturesMatcherTest.test":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":57,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":84,"org.easymock.tests2.UsageTest.resumeIfFailure":131,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":325,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":295,"org.easymock.tests2.StubTest.stubWithReturnValue":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":313,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":205,"org.easymock.tests2.SerializationTest.testAllMockedMethod":80,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":415,"org.easymock.samples.SupportTest.voteForRemovals":76,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":256,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":421,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":335,"org.easymock.tests.UsageExpectAndThrowTest.object":254,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":376,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests2.DelegateToTest.testWrongClass":19,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":232,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":233,"org.easymock.tests.UsageStrictMockTest.range":55,"org.easymock.samples.ConstructorCalledMockTest.testTax":62,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":27,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":167,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":255,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":437,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":389,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":188,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":393,"org.easymock.tests2.CaptureTest.testCaptureNone":119,"org.easymock.tests.UsageUnorderedTest.message":52,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":329,"org.easymock.tests.UsageVerifyTest.twoReturns":49,"org.easymock.tests.UsageVarargTest.varargByteAccepted":229,"org.easymock.tests2.ThreadingTest.testThreadSafe":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":451,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":306,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":41,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":70,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":238,"org.easymock.tests2.UsageConstraintsTest.any":0,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":386,"org.easymock.tests2.StubTest.stub":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndThrowTest.longType":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":294,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":478,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":385,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":33,"org.easymock.tests2.SerializationTest.testClass":78,"org.easymock.tests.LimitationsTest.mockNativeMethod":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":215,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":324,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.tests2.NameTest.nameForMocksControl":353,"org.easymock.tests2.MockedExceptionTest.testMockedException":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":441,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":242,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":248,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":333,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":155,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":151,"org.easymock.tests.MockingTest.testNicePartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":160,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":39,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":173,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests.MockingTest.testTwoMocks":484,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":252,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":110,"org.easymock.samples.ExampleTest.removeNonExistingDocument":331,"org.easymock.tests.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":344,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":476,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":122,"org.easymock.tests2.MockBuilderTest.testCreateMockString":154,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":442,"org.easymock.tests.UsageExpectAndThrowTest.floatType":246,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":439,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":472,"org.easymock.tests.UsageVerifyTest.twoThrows":48,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":83,"org.easymock.samples.ExampleTest.voteAgainstRemoval":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":391,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":165,"org.easymock.tests.LimitationsTest.privateConstructor":499,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":177,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":274,"org.easymock.tests2.UsageTest.defaultResetToNice":130,"org.easymock.samples.ExampleTest.voteAgainstRemovals":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":211,"org.easymock.tests.UsageVarargTest.differentLength":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests2.CallbackTest.callback":77,"org.easymock.tests2.UsageConstraintsTest.equals":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":465,"org.easymock.tests.UsageTest.openCallCountByLastCall":241,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":237,"org.easymock.tests.UsageCallCountTest.tooFewCalls":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":170,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":190,"org.easymock.tests.UsageThrowableTest.throwCheckedException":271,"org.easymock.tests.MockingTest.testStrictClassMocking":482,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":172,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":192,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":343,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":388,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":114,"org.easymock.tests.ObjectMethodsTest.testHashCode":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":317,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":124,"org.easymock.tests2.NameTest.nameForNiceMock":352,"org.easymock.tests2.DependencyTest.testInterfaceMocking":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":316,"org.easymock.samples.ExampleTest.addDocument":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":456,"org.easymock.tests2.DelegateToTest.testStubDelegate":18,"org.easymock.tests2.AnswerTest.stubAnswer":113,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":54,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":461,"org.easymock.tests.UsageVarargTest.varargLongAccepted":228,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.floatType":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":176,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":63,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":103,"org.easymock.tests.UsageThrowableTest.noUpperLimit":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":362,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":432,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests2.SerializationTest.test":79,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":475,"org.easymock.tests2.UsageConstraintsTest.testSame":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":197,"org.easymock.samples.SupportTest.addDocument":75,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":469,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":443,"org.easymock.tests.GenericTest.testPackageScope":219,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":361,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":366,"org.easymock.tests2.NameTest.nameForMock":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":208,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":463,"org.easymock.tests2.UsageStrictMockTest.differentMethods":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":466,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":258,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":369,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":218,"org.easymock.tests2.MockedExceptionTest.testRealException":180,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":236,"org.easymock.tests2.NameTest.nameForStrictMock":351,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":460,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":85,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":436,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":477,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":104,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":147,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests2.UsageConstraintsTest.lessThan":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":447,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":94,"org.easymock.tests.UsageRangeTest.combination":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":156,"org.easymock.tests.UsageTest.wrongArguments":44,"org.easymock.tests2.MockBuilderTest.testWithConstructor":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":444,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":487,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":209,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":479,"org.easymock.tests.UsageVarargTest.varargShortAccepted":227,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":307,"org.easymock.tests2.UsageConstraintsTest.cmpTo":96,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":336,"org.easymock.tests2.CompareToTest.testLessThan":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":402,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":129,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":380,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":322,"org.easymock.tests.UsageTest.unexpectedCallWithArray":43,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":210,"org.easymock.tests2.UsageConstraintsTest.constraints":89,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":290,"org.easymock.samples.ExampleTest.addAndChangeDocument":69,"org.easymock.tests.UsageStrictMockTest.testVerify":426,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":72,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":284,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":280,"org.easymock.tests.LimitationsTest.abstractClass":498,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":202,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":222}}]
