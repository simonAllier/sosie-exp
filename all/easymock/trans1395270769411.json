[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[50,51,52,53,54,55,56],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[57,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[109],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[110,111],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[112,113,114,115,116,117,118],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[60,61,119,62,63,64,65,66,68,69,70,71,72,74,75,76,77,78,120,79,80,81,121,122,123,124,125,82,84,86,87,126,89,90,91,92,93,98,99,127,100,101,102,128,129,130,131,132,103,104,133,134,135,106,107,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[136,112,137,113,114,115,138,139,118],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,3,10,11,76,140,141,142,143,144,145,146,147,148,149,150,151,152],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[153,154,88,155,156,99],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[119,120,81,121,126,157,127,102,128,132,103,104,158],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[159,160,161,162,163,164,165,0,1,2,3,4,5,6,7,8,9,10,11,12,13,166,167,168,169,60,61,170,119,62,63,64,171,172,173,65,66,67,68,174,175,69,176,177,178,70,71,179,180,72,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,48,220,221,222,223,224,225,226,227,136,228,229,230,231,232,233,73,234,235,236,237,238,239,240,50,241,242,74,243,75,244,245,246,247,76,140,109,141,142,143,144,145,146,147,148,248,249,250,251,252,77,253,254,149,150,255,256,257,151,152,258,259,260,261,262,263,264,265,266,267,268,78,269,120,79,80,81,121,57,270,271,272,58,273,274,122,123,124,125,275,82,276,277,278,279,280,281,137,83,84,85,282,283,139,118,284,285,286,287,288,289,290,291,49,292,293,294,295,296,297,298,299,300,301,302,303,304,305,86,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,87,126,88,89,321,322,90,91,92,93,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,110,362,363,364,111,365,366,157,367,368,369,370,371,372,373,374,15,16,17,18,19,375,20,21,22,23,24,25,376,377,378,379,380,381,382,383,384,385,386,387,98,388,99,127,100,101,102,128,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,132,103,104,133,405,134,135,406,407,105,106,107,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,158,487,108,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,55,55,56,56],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[82,278,280,281,84,85,516],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[73,242],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[159,160,161,162,163,164,165,0,1,2,3,5,6,7,8,9,10,13,166,167,168,169,60,170,119,63,64,173,67,175,69,176,177,178,70,71,179,180,72,181,182,183,186,187,191,194,204,210,221,136,228,229,230,232,233,234,235,236,237,240,242,243,246,247,76,140,141,142,143,144,145,146,148,248,249,250,251,252,77,253,254,149,150,255,257,151,152,258,259,262,263,264,265,266,267,268,269,120,81,121,270,271,273,122,123,124,125,275,278,279,280,281,282,283,139,284,285,288,293,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,126,323,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,357,358,359,360,361,362,363,157,369,380,381,388,127,102,128,389,391,398,132,103,104,133,405,134,135,406,407,413,414,415,416,417,448,449,451,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,158,108,488,489,490,491,492,493,494,495,496,497,500,501,502,503,504,505,506,507,508,510,511,512,513,514,515,516,517,55,56],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[119,62,65,66,518,153,519,520,521,522,523,524,154,525,526,77,120,80,81,126,88,89,90,91,93,365,366,155,527,156,528,529,530,97,99,127,101,102,132,103,104,483,486,158,487],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[63,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[73,242],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[531],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[159,162,188,191,193,195,196,199,202,205,206,209,213,214,229,233,73,235,236,237,240,241,242,75,244,245,266,267,362,363,111,367,368,369,370,390,391,392,393,394,395,396,397,398,445,446,447,454,475,476,477,478,479,480,481,514,515],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":140,"org.easymock.tests2.UsageTest.argumentsOrdered":66,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":431,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":64,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":517,"org.easymock.tests2.DelegateToTest.testReturnException":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":312,"org.easymock.tests.MockingTest.testPartialClassMocking":448,"org.easymock.tests.MockClassControlTest.testToString":392,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":274,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":198,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":328,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":129,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":187,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":113,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":496,"org.easymock.tests2.UsageTest.wrongArguments":62,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":319,"org.easymock.samples.ExampleTest.answerVsDelegate":504,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":402,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":453,"org.easymock.tests2.UsageConstraintsTest.testNull":142,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":235,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":397,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":72,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":500,"org.easymock.tests.UsageTest.moreThanOneArgument":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":347,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":359,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":408,"org.easymock.tests.UsageTest.argumentsOrdered":91,"org.easymock.tests.UsageVarargTest.varargIntAccepted":302,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":525,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":413,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":117,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":275,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":298,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":417,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":31,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":521,"org.easymock.tests.ReplayStateInvalidUsageTest.times":22,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":221,"org.easymock.tests2.DependencyTest.testClassMocking":184,"org.easymock.tests2.AnswerTest.answer":259,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":438,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":169,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":489,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":178,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":412,"org.easymock.tests2.DelegateToTest.testDelegate":273,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":343,"org.easymock.tests.LimitationsTest.mockFinalMethod":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":495,"org.easymock.tests2.DependencyTest.testClassMockingSupport":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":365,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":167,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":17,"org.easymock.tests.UsageThrowableTest.throwError":348,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":401,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":95,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":212,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":34,"org.easymock.samples.PartialClassMockTest.testGetArea":516,"org.easymock.tests.MockingTest.testInterfaceMocking":450,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":414,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":377,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":387,"org.easymock.tests2.UsageTest.niceToStrict":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":278,"org.easymock.tests2.MockBuilderTest.testCreateMock":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":207,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":224,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":153,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":337,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":317,"org.easymock.tests.UsageOverloadedMethodTest.overloading":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":209,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":485,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":466,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":379,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":250,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":303,"org.easymock.tests.MockClassControlTest.testEquals":396,"org.easymock.tests2.EasyMockSupportClassTest.testAll":191,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":363,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":523,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":345,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":493,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":168,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":53,"org.easymock.tests.MockNameTest.defaultName":356,"org.easymock.tests2.UsageConstraintsTest.testMatches":252,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":360,"org.easymock.samples.ExampleTest.voteForRemovals":508,"org.easymock.tests.UsageVarargTest.allKinds":310,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":132,"org.easymock.samples.BasicClassMockTest.testPrintContent":515,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":494,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":354,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":78,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":138,"org.easymock.tests2.UsageConstraintsTest.greaterThan":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":488,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":75,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":35,"org.easymock.samples.ExampleTest.voteForRemoval":505,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":481,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":244,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":285,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":238,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":27,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":398,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":176,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":311,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":177,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":462,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.CaptureTest.testCapture2_2446744":12,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":439,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":84,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":309,"org.easymock.tests.GenericTest.testBridgedEquals":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":106,"org.easymock.tests.UsageExpectAndReturnTest.longType":458,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":491,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":346,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":256,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":374,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":357,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":372,"org.easymock.tests.UsageCallCountTest.tooManyCalls":107,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":527,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":208,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":463,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":353,"org.easymock.tests.MockingTest.testNiceClassMocking":454,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":160,"org.easymock.tests.MockingTest.testClassMocking":446,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":405,"org.easymock.tests2.UsageConstraintsTest.testContains":249,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":267,"org.easymock.tests2.UsageConstraintsTest.testFind":141,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":381,"org.easymock.tests.MockTypeTest.fromEasyMockClass":400,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":98,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":232,"org.easymock.tests.UsageExpectAndReturnTest.object":465,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":114,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":305,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":385,"org.easymock.tests.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":409,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":325,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":530,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":471,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":300,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":484,"org.easymock.tests.MockClassControlTest.testHashCode":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":290,"org.easymock.tests2.EasyMockSupportTest.testVerify":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":201,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":520,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":410,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":166,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":96,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":174,"org.easymock.tests.UsageVarargTest.varargCharAccepted":304,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastCall":171,"org.easymock.tests.DefaultClassInstantiatorTest.object":475,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":418,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":383,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":335,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":48,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":289,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":394,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":33,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":334,"org.easymock.tests.CapturesMatcherTest.test":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":472,"org.easymock.tests.ReplayStateInvalidCallsTest.times":39,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":371,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":40,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":522,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":210,"org.easymock.tests2.UsageTest.resumeIfFailure":67,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":314,"org.easymock.tests2.StubTest.stubWithReturnValue":283,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":112,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":464,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":257,"org.easymock.tests2.SerializationTest.testAllMockedMethod":229,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":437,"org.easymock.samples.SupportTest.voteForRemovals":512,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":154,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":340,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":443,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":260,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":327,"org.easymock.tests.UsageExpectAndThrowTest.object":338,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":150,"org.easymock.tests2.DelegateToTest.testWrongClass":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":501,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":37,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":502,"org.easymock.tests.UsageStrictMockTest.range":101,"org.easymock.samples.ConstructorCalledMockTest.testTax":55,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":215,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":179,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":159,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":339,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":188,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":24,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":318,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":155,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":29,"org.easymock.tests2.CaptureTest.testCaptureNone":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":378,"org.easymock.tests.UsageUnorderedTest.message":93,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":94,"org.easymock.tests.UsageVerifyTest.twoReturns":104,"org.easymock.tests.UsageVarargTest.varargByteAccepted":308,"org.easymock.tests2.ThreadingTest.testThreadSafe":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":205,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":407,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":514,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":386,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":526,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":441,"org.easymock.tests2.UsageConstraintsTest.any":148,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":21,"org.easymock.tests2.StubTest.stub":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":313,"org.easymock.tests.UsageExpectAndThrowTest.longType":331,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":479,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":20,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":79,"org.easymock.tests2.SerializationTest.testClass":136,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":293,"org.easymock.tests.LimitationsTest.mockNativeMethod":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":474,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":364,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":219,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":45,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":121,"org.easymock.tests2.NameTest.nameForMocksControl":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":220,"org.easymock.tests2.MockedExceptionTest.testMockedException":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":193,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":322,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":451,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":332,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":233,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":281,"org.easymock.tests.MockingTest.testNicePartialClassMocking":449,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":237,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests2.CompareToTest.testCompareEqual":59,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":217,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":366,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":165,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":145,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":44,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":255,"org.easymock.tests.MockingTest.testTwoMocks":447,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":41,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":455,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":336,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":152,"org.easymock.samples.ExampleTest.removeNonExistingDocument":509,"org.easymock.tests.UsageStrictMockTest.differentMethods":102,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":291,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":477,"org.easymock.tests2.ConstraintsToStringTest.andToString":524,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":286,"org.easymock.tests2.MockBuilderTest.testCreateMockString":85,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":195,"org.easymock.tests.UsageExpectAndThrowTest.floatType":330,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":190,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":262,"org.easymock.tests.UsageVerifyTest.twoThrows":103,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":204,"org.easymock.samples.ExampleTest.voteAgainstRemoval":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":376,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":243,"org.easymock.tests.LimitationsTest.privateConstructor":368,"org.easymock.tests2.UsageConstraintsTest.testNotNull":151,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":355,"org.easymock.tests2.UsageTest.defaultResetToNice":173,"org.easymock.samples.ExampleTest.voteAgainstRemovals":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":433,"org.easymock.tests.UsageVarargTest.differentLength":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":218,"org.easymock.tests2.CallbackTest.callback":60,"org.easymock.tests2.UsageConstraintsTest.equals":109,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":528,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":50,"org.easymock.tests.UsageTest.openCallCountByLastCall":321,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":498,"org.easymock.tests.UsageCallCountTest.tooFewCalls":135,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":162,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":320,"org.easymock.tests.UsageThrowableTest.throwCheckedException":352,"org.easymock.tests.MockingTest.testStrictClassMocking":445,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":156,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":164,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":324,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":222,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":23,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":163,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":264,"org.easymock.tests.ObjectMethodsTest.testHashCode":384,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":116,"org.easymock.tests2.NameTest.nameForNiceMock":124,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":43,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":288,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":38,"org.easymock.tests2.DependencyTest.testInterfaceMocking":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":115,"org.easymock.samples.ExampleTest.addDocument":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":211,"org.easymock.tests2.DelegateToTest.testStubDelegate":271,"org.easymock.tests2.AnswerTest.stubAnswer":263,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":127,"org.easymock.tests.UsageVarargTest.varargLongAccepted":307,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":473,"org.easymock.tests.UsageExpectAndReturnTest.floatType":457,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":139,"org.easymock.tests2.ConstraintsToStringTest.orToString":518,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":56,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":297,"org.easymock.tests.UsageThrowableTest.noUpperLimit":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":247,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":213,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests2.SerializationTest.test":228,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":456,"org.easymock.tests2.UsageConstraintsTest.testSame":143,"org.easymock.samples.SupportTest.addDocument":511,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":28,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":196,"org.easymock.tests.GenericTest.testPackageScope":362,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":296,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":452,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":26,"org.easymock.tests2.NameTest.nameForMock":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":467,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":54,"org.easymock.tests2.UsageStrictMockTest.differentMethods":81,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":459,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":342,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":490,"org.easymock.tests2.MockedExceptionTest.testRealException":268,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":216,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":529,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":434,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":497,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":25,"org.easymock.tests2.NameTest.nameForStrictMock":123,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":277,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":236,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":214,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":478,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":149,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":130,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":82,"org.easymock.tests2.UsageStrictMockTest.range":80,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":32,"org.easymock.tests2.UsageConstraintsTest.lessThan":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":69,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":200,"org.easymock.tests2.UsageConstraintsTest.testOr":144,"org.easymock.tests.UsageRangeTest.combination":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":73,"org.easymock.tests.UsageTest.wrongArguments":89,"org.easymock.tests2.MockBuilderTest.testWithConstructor":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":197,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":422,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":480,"org.easymock.tests.UsageVarargTest.varargShortAccepted":306,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":105,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":46,"org.easymock.tests2.UsageConstraintsTest.cmpTo":248,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":261,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":172,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":16,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":276,"org.easymock.tests.UsageTest.unexpectedCallWithArray":88,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":42,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":99,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":406,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":52,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":469,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":100,"org.easymock.tests2.UsageConstraintsTest.constraints":76,"org.easymock.samples.ExampleTest.addAndChangeDocument":510,"org.easymock.tests2.ConstraintsToStringTest.notToString":519,"org.easymock.tests2.ConstraintsToStringTest.containsToString":531,"org.easymock.tests.UsageStrictMockTest.testVerify":389,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":513,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":388,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":492,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":415,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":461,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":416,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":71,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":301}}]
