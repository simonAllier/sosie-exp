[{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[54,55,59,60,61,62,65,66,67,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[70,71,72,73,6,7,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,9,115,116,117,118,119,10,120,12,121,122,13,14,15,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,17,144,18,19,20,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,25,170,171,172,173,174,175,176,177,26,27,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,32,215,216,33,34,35,217,218,219,36,37,38,39,220,40,221,222,223,224,225,226,227,228,43,229,230,49,50,51,231,232,233,52,234,235,236,237,238,239,240,241,242,243,0,244,245,53,246,247,248,249,250,251,252,253,254,255,66,256,257,258,259,260,261,262,263,69,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[11,17,288,289,290,291],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[80,81,83,84,85,86,87,88,91,97,98,99,100,101,102,10,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,26,180,181,190,213,32,218,260,261,262,263],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[292,232,246,252],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[293,294,70,71,72,73,74,75,76,77,78,79,82,83,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,20,145,295,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,25,296,170,171,172,173,174,175,176,177,26,27,178,179,182,297,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,206,207,208,209,210,211,212,213,298,299,300,301,214,215,216,34,35,219,38,220,221,222,223,224,226,227,228,43,229,230,51,231,232,233,52,234,235,236,237,238,239,240,241,242,243,0,244,245,53,246,247,248,249,250,252,253,254,255,66,256,257,258,259,260,261,262,263,69,264,265,266,267,268,269,270,271,273,274,275,276,277,279,280,281,282,283,284,287],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[302,303,304,305,306,307,9,120,11,12,13,14,17,144,19,20,308,309,310,311,148,312,177,26,27,313,314,315,198,316,317,318,30,31,298,299,300,301,216,33,36,37,40,227,42,319,320,46,321,230,50,51,322,323,324,325,266,267,268,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[56,57,58,63,64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[327,328,329,330,331,332,333,334,335,336,337,338,54,339,340,66,67,341,267,269,342],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":234,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests2.UsageTest.argumentsOrdered":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":100,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":35,"org.easymock.tests2.StubTest.stubWithReturnValue":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":54,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":252,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":159,"org.easymock.tests2.SerializationTest.testAllMockedMethod":265,"org.easymock.tests2.DelegateToTest.testReturnException":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":98,"org.easymock.tests.MockingTest.testPartialClassMocking":93,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":57,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":291,"org.easymock.tests.MockClassControlTest.testToString":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":123,"org.easymock.tests.UsageExpectAndThrowTest.object":133,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":249,"org.easymock.tests2.DelegateToTest.testWrongClass":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":59,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":146,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":240,"org.easymock.tests2.UsageTest.wrongArguments":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":178,"org.easymock.samples.ConstructorCalledMockTest.testTax":327,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":76,"org.easymock.samples.ExampleTest.answerVsDelegate":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":305,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":332,"org.easymock.tests2.UsageConstraintsTest.testNull":236,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":317,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":47,"org.easymock.tests2.CaptureTest.testPrimitive":277,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":182,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests.UsageTest.moreThanOneArgument":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":142,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":221,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":75,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":185,"org.easymock.tests2.CaptureTest.testCaptureNone":282,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":21,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests.UsageVarargTest.varargByteAccepted":110,"org.easymock.tests2.ThreadingTest.testThreadSafe":201,"org.easymock.tests.UsageTest.argumentsOrdered":14,"org.easymock.tests.UsageVarargTest.varargIntAccepted":105,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":73,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":309,"org.easymock.tests2.CaptureTest.testCapture_2617107":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":172,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":181,"org.easymock.tests2.UsageConstraintsTest.any":241,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":200,"org.easymock.tests2.StubTest.stub":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":99,"org.easymock.tests.UsageExpectAndThrowTest.longType":126,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":324,"org.easymock.tests2.SerializationTest.testClass":69,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":322,"org.easymock.tests.LimitationsTest.mockNativeMethod":96,"org.easymock.tests2.AnswerTest.answer":256,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":209,"org.easymock.tests2.CaptureTest.testAnd":274,"org.easymock.tests2.UsageTest.strictResetToDefault":215,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":338,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":227,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":326,"org.easymock.tests2.NameTest.nameForMocksControl":301,"org.easymock.tests2.MockedExceptionTest.testMockedException":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":184,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":170,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests2.DelegateToTest.testDelegate":273,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":127,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":318,"org.easymock.tests.MockingTest.testNicePartialClassMocking":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":138,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":224,"org.easymock.tests2.CaptureTest.testCaptureLast":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":148,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":269,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":239,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":119,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":311,"org.easymock.tests2.CaptureTest.testCapture1_2446744":278,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":342,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":131,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":254,"org.easymock.tests.UsageThrowableTest.throwError":81,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":149,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":304,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":203,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":22,"org.easymock.tests2.MockBuilderTest.testCreateMockString":31,"org.easymock.tests.UsageExpectAndThrowTest.floatType":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":187,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":53,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":68,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":329,"org.easymock.tests2.CompareToTest.testLessOrEqual":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":173,"org.easymock.samples.ExampleTest.voteAgainstRemoval":194,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":228,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":310,"org.easymock.tests2.UsageTest.niceToStrict":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":124,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":330,"org.easymock.tests2.UsageConstraintsTest.testNotNull":253,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":260,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":88,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":336,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":199,"org.easymock.tests2.UsageTest.defaultResetToNice":219,"org.easymock.tests2.MockBuilderTest.testCreateMock":29,"org.easymock.samples.ExampleTest.voteAgainstRemovals":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":165,"org.easymock.tests.UsageVarargTest.differentLength":8,"org.easymock.tests2.CallbackTest.callback":43,"org.easymock.tests.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":132,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":45,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":232,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":180,"org.easymock.tests.UsageCallCountTest.tooFewCalls":71,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":333,"org.easymock.tests.UsageOverloadedMethodTest.overloading":189,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":244,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":161,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":188,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":77,"org.easymock.tests.UsageThrowableTest.throwCheckedException":85,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":114,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":140,"org.easymock.tests2.CaptureTest.testCaptureAll":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":117,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":268,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":323,"org.easymock.tests.MockNameTest.defaultName":312,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":267,"org.easymock.tests2.UsageConstraintsTest.testMatches":245,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":186,"org.easymock.samples.ExampleTest.voteForRemovals":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":63,"org.easymock.tests2.NameTest.nameForNiceMock":300,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":205,"org.easymock.tests.UsageVarargTest.allKinds":112,"org.easymock.tests2.DependencyTest.testInterfaceMocking":214,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":118,"org.easymock.samples.ExampleTest.addDocument":195,"org.easymock.tests2.DelegateToTest.testStubDelegate":271,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":87,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":48,"org.easymock.tests2.AnswerTest.stubAnswer":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":102,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":144,"org.easymock.tests2.UsageConstraintsTest.greaterThan":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":65,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":296,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.tests.UsageVarargTest.varargLongAccepted":109,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.samples.ExampleTest.voteForRemoval":193,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":202,"org.easymock.tests.UsageExpectAndReturnTest.floatType":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":168,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":66,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":328,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":247,"org.easymock.tests.UsageThrowableTest.noUpperLimit":82,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":233,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":78,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":279,"org.easymock.tests2.SerializationTest.test":264,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":55,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":83,"org.easymock.tests2.UsageConstraintsTest.testSame":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":97,"org.easymock.tests2.CaptureTest.testCaptureFirst":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":320,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":39,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":157,"org.easymock.tests.GenericTest.testPackageScope":113,"org.easymock.tests2.CaptureTest.testCapture2_2446744":286,"org.easymock.tests2.UsageTest.moreThanOneArgument":216,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":204,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":30,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":111,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":334,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":331,"org.easymock.tests2.NameTest.nameForMock":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":6,"org.easymock.tests.UsageExpectAndReturnTest.longType":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":115,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":162,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":340,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":154,"org.easymock.tests.UsageCallCountTest.tooManyCalls":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":171,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":70,"org.easymock.tests2.MockedExceptionTest.testRealException":263,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":56,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":128,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":266,"org.easymock.tests2.NameTest.nameForStrictMock":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":294,"org.easymock.tests2.UsageConstraintsTest.testContains":243,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":262,"org.easymock.tests2.UsageConstraintsTest.testFind":235,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":341,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":210,"org.easymock.tests.MockTypeTest.fromEasyMockClass":303,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":223,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":211,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":16,"org.easymock.tests.UsageExpectAndReturnTest.object":160,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":226,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":28,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests2.UsageConstraintsTest.lessThan":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":60,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":107,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":62,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":44,"org.easymock.tests2.CaptureTest.testCaptureRightOne":284,"org.easymock.tests2.UsageConstraintsTest.testOr":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":67,"org.easymock.tests.UsageRangeTest.combination":25,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":40,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":166,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":90,"org.easymock.tests.UsageTest.wrongArguments":12,"org.easymock.tests2.MockBuilderTest.testWithConstructor":337,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":163,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":89,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":206,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":23,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":5,"org.easymock.tests2.UsageConstraintsTest.cmpTo":242,"org.easymock.tests.UsageVarargTest.varargCharAccepted":106,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":229,"org.easymock.tests2.UsageTest.openCallCountByLastCall":217,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":218,"org.easymock.tests2.CaptureTest.testCaptureFromStub":285,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":316,"org.easymock.tests.UsageTest.unexpectedCallWithArray":11,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":308,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":84,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":72,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":339,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":164,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":315,"org.easymock.tests2.UsageConstraintsTest.constraints":52,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":18,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":41,"org.easymock.samples.ExampleTest.addAndChangeDocument":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":129,"org.easymock.tests.UsageStrictMockTest.testVerify":295,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":167,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":314,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":116,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":280,"org.easymock.tests2.UsageTest.resumeIfFailure":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":302,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":156,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":46,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":104}}]
