[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[19,20,21,22,23,1,24,25,26,27,28,29,30,31,32,33,34,14,35,36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[37,38,39],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[19,23,0,1,41,42,43,44,45,46,28,32,47,48,49,50,51,34,13,14,52,35,36],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[53,54,55,56,57],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[58,59],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[42,62,47,63],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[21,64,30],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[65,66,67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[69,70,71,72,35,73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[42,62,74,75,47,33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[76,77,78,79,80,81,82,83,84,85,86,87],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[42,62,74,75,47,33],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[89],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[90,19,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,58,107,108,109,110,111,112,0,1,113,77,79,80,82,114,115,87,116,117,118,119,120,71,28,121,122,32,123,124,3,125,126,4,5,6,127,128,7,129,130,131,132,133,134,135,8,136,137,9,10,11,138,139,12,140,141,142,143,144,13,14,52,145,146,147,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[69,93,70,149,150,151,152,120,71,122,153,154,155,156,157,158,159,160,134,135,161,162,8,163,136,137,9,10,164,11,138,139,12,165,140,141,142,143,166,35,167,168,169,170,73,171],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[172,173,174,175,175,176,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,149,150,151,65,67,210,211,212,213,214,215,53,216,54,217,218,219,55,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,56,57,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,40,256,257,258,89,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[65,66,67,277],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[65,66,67,277],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[278,279,280,281,282,283,284,90,177,69,68,19,20,285,91,92,93,286,21,22,94,287,288,95,70,149,150,151,152,96,97,65,66,67,289,290,291,98,99,100,101,292,102,103,104,105,293,294,295,296,106,58,107,108,297,109,110,298,299,300,301,302,303,111,112,304,305,23,306,0,1,307,24,25,26,27,308,309,310,311,76,113,77,78,79,80,81,82,114,83,85,86,115,87,312,313,314,315,116,211,212,214,215,216,217,55,220,224,225,228,316,231,232,317,233,234,235,236,237,240,56,57,241,117,118,119,318,319,244,247,320,321,322,323,324,325,326,327,328,329,330,120,71,28,74,29,121,122,30,31,331,332,333,334,335,336,32,252,253,254,337,338,256,257,51,123,124,339,340,3,341,125,126,4,5,342,6,127,128,7,343,129,130,131,132,344,345,346,60,347,348,349,350,351,352,353,354,153,133,154,155,156,157,158,159,355,356,357,358,359,360,160,134,135,161,162,8,163,136,137,9,10,164,11,138,139,12,165,140,141,142,143,361,362,144,363,364,365,366,367,368,369,370,33,34,371,13,14,372,373,374,375,376,166,377,378,52,35,36,261,167,168,169,170,73,171,379,380,381,382,383,145,146,147,148,384,385,386,387,388,389,390,391,392,393,59,394,395,396,269,270,271,272,273,274,275,276],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[103,104,397,295,298,299,303,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[292,105,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":292,"org.easymock.tests2.UsageTest.argumentsOrdered":22,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":18,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":91,"org.easymock.tests2.DelegateToTest.testReturnException":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":168,"org.easymock.tests.MockingTest.testPartialClassMocking":252,"org.easymock.tests.MockClassControlTest.testToString":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":195,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":134,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":294,"org.easymock.tests2.UsageTest.wrongArguments":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":322,"org.easymock.samples.ExampleTest.answerVsDelegate":279,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":260,"org.easymock.tests2.UsageConstraintsTest.testNull":103,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":233,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":276,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":179,"org.easymock.tests2.CaptureTest.testPrimitive":78,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":336,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":143,"org.easymock.tests.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":357,"org.easymock.tests.UsageTest.argumentsOrdered":31,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":15,"org.easymock.tests.UsageVarargTest.varargIntAccepted":386,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":379,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":216,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":383,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":38,"org.easymock.tests.ReplayStateInvalidUsageTest.times":351,"org.easymock.tests2.AnswerTest.answer":308,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":315,"org.easymock.tests2.CaptureTest.testAnd":76,"org.easymock.tests2.UsageTest.strictResetToDefault":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":147,"org.easymock.tests2.DelegateToTest.testDelegate":98,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":165,"org.easymock.tests.LimitationsTest.mockFinalMethod":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":50,"org.easymock.tests2.CaptureTest.testCapture1_2446744":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":139,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":313,"org.easymock.tests.UsageThrowableTest.throwError":153,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":209,"org.easymock.samples.PartialClassMockTest.testGetArea":174,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":60,"org.easymock.tests2.CompareToTest.testLessOrEqual":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":196,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":268,"org.easymock.tests2.UsageTest.niceToStrict":285,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":55,"org.easymock.tests2.MockBuilderTest.testCreateMock":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":204,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":320,"org.easymock.tests.UsageOverloadedMethodTest.overloading":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":206,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":166,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":6,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":329,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":58,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":83,"org.easymock.tests2.EasyMockSupportClassTest.testAll":188,"org.easymock.tests.MockClassControlTest.testEquals":275,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":141,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":180,"org.easymock.tests2.CaptureTest.testCaptureAll":113,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":326,"org.easymock.tests2.UsageConstraintsTest.testMatches":108,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":358,"org.easymock.samples.ExampleTest.voteForRemovals":283,"org.easymock.tests.UsageVarargTest.allKinds":59,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":52,"org.easymock.samples.BasicClassMockTest.testPrintContent":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":327,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":158,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":171,"org.easymock.tests2.UsageConstraintsTest.greaterThan":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":146,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":241,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":267,"org.easymock.samples.ExampleTest.voteForRemoval":280,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":118,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":242,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":236,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":244,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":223,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":167,"org.easymock.tests2.CaptureTest.testCaptureFirst":87,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":287,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":126,"org.easymock.tests2.CaptureTest.testCapture2_2446744":115,"org.easymock.tests2.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":318,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":225,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":393,"org.easymock.tests.GenericTest.testBridgedEquals":89,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":367,"org.easymock.tests.UsageExpectAndReturnTest.longType":340,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":324,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":142,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":227,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":355,"org.easymock.tests.UsageCallCountTest.tooManyCalls":368,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":39,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":211,"org.easymock.tests.MockingTest.testNiceClassMocking":255,"org.easymock.tests.MockingTest.testClassMocking":250,"org.easymock.tests2.UsageConstraintsTest.testContains":106,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":54,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":362,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":151,"org.easymock.tests2.UsageConstraintsTest.testFind":102,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":120,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":97,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":369,"org.easymock.tests.UsageExpectAndReturnTest.object":342,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":237,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":388,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":396,"org.easymock.tests.UsageTest.exactCallCountByLastCall":331,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":178,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":384,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":129,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":376,"org.easymock.tests.MockClassControlTest.testHashCode":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":198,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":37,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":374,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":312,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":288,"org.easymock.tests.UsageVarargTest.varargCharAccepted":387,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests2.UsageTest.openCallCountByLastCall":92,"org.easymock.tests.DefaultClassInstantiatorTest.object":261,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":394,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":199,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":155,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":56,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":273,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":130,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":207,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":272,"org.easymock.tests2.UsageTest.resumeIfFailure":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":170,"org.easymock.tests2.StubTest.stubWithReturnValue":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":5,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":302,"org.easymock.tests2.SerializationTest.testAllMockedMethod":67,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":62,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":138,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":277,"org.easymock.tests.UsageExpectAndThrowTest.object":164,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":299,"org.easymock.tests2.DelegateToTest.testWrongClass":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":337,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":338,"org.easymock.samples.ConstructorCalledMockTest.testTax":175,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":11,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":185,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":321,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":75,"org.easymock.tests2.CaptureTest.testCaptureNone":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":88,"org.easymock.tests.UsageUnorderedTest.message":32,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":392,"org.easymock.tests2.ThreadingTest.testThreadSafe":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":202,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":365,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":172,"org.easymock.tests2.CaptureTest.testCapture_2617107":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":335,"org.easymock.tests2.UsageConstraintsTest.any":295,"org.easymock.tests2.StubTest.stub":95,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":169,"org.easymock.tests.UsageExpectAndThrowTest.longType":162,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":265,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":306,"org.easymock.tests2.SerializationTest.testClass":65,"org.easymock.tests.LimitationsTest.mockNativeMethod":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":132,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":258,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":183,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests2.NameTest.nameForMocksControl":27,"org.easymock.tests2.MockedExceptionTest.testMockedException":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":190,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":8,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":231,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":222,"org.easymock.tests.MockingTest.testNicePartialClassMocking":253,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":235,"org.easymock.tests2.CaptureTest.testCaptureLast":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":215,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":293,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":300,"org.easymock.tests.MockingTest.testTwoMocks":251,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":123,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":9,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":111,"org.easymock.samples.ExampleTest.removeNonExistingDocument":284,"org.easymock.tests.UsageStrictMockTest.differentMethods":14,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":347,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":263,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":119,"org.easymock.tests2.ConstraintsToStringTest.andToString":45,"org.easymock.tests2.MockBuilderTest.testCreateMockString":228,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":269,"org.easymock.tests.UsageExpectAndThrowTest.floatType":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":192,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":187,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":309,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":201,"org.easymock.samples.ExampleTest.voteAgainstRemoval":281,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":57,"org.easymock.tests.LimitationsTest.privateConstructor":246,"org.easymock.tests2.UsageConstraintsTest.testNotNull":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":159,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":149,"org.easymock.tests2.UsageTest.defaultResetToNice":286,"org.easymock.samples.ExampleTest.voteAgainstRemovals":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":343,"org.easymock.tests.UsageVarargTest.differentLength":389,"org.easymock.tests2.CallbackTest.callback":116,"org.easymock.tests2.UsageConstraintsTest.equals":64,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":63,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":238,"org.easymock.tests.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":334,"org.easymock.tests.UsageCallCountTest.tooFewCalls":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":323,"org.easymock.tests.UsageThrowableTest.throwCheckedException":156,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":47,"org.easymock.tests.MockingTest.testStrictClassMocking":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":160,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":214,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":212,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":352,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":311,"org.easymock.tests.ObjectMethodsTest.testHashCode":395,"org.easymock.tests2.NameTest.nameForNiceMock":26,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":319,"org.easymock.tests2.DependencyTest.testInterfaceMocking":316,"org.easymock.samples.ExampleTest.addDocument":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.DelegateToTest.testStubDelegate":290,"org.easymock.tests2.AnswerTest.stubAnswer":310,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests.UsageVarargTest.varargLongAccepted":391,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":372,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":131,"org.easymock.tests.UsageExpectAndReturnTest.floatType":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":177,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":176,"org.easymock.tests2.ConstraintsToStringTest.orToString":41,"org.easymock.tests.UsageThrowableTest.noUpperLimit":133,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":110,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":100,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":229,"org.easymock.tests2.SerializationTest.test":66,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":80,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":124,"org.easymock.tests2.UsageConstraintsTest.testSame":104,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":193,"org.easymock.tests.GenericTest.testPackageScope":256,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":16,"org.easymock.tests2.NameTest.nameForMock":24,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":127,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":3,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":12,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":148,"org.easymock.tests2.MockedExceptionTest.testRealException":152,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":48,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":333,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":354,"org.easymock.tests2.NameTest.nameForStrictMock":25,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":219,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":234,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":230,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":264,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":298,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":217,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":112,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":181,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":2,"org.easymock.tests2.CaptureTest.testCaptureRightOne":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":197,"org.easymock.tests2.UsageConstraintsTest.testOr":105,"org.easymock.tests.UsageRangeTest.combination":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":232,"org.easymock.tests.UsageTest.wrongArguments":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":194,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":128,"org.easymock.tests.UsageVarargTest.varargShortAccepted":390,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":266,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":366,"org.easymock.tests2.UsageConstraintsTest.cmpTo":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":72,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":93,"org.easymock.tests2.CaptureTest.testCaptureFromStub":86,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":345,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":218,"org.easymock.tests.UsageTest.unexpectedCallWithArray":74,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":364,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":7,"org.easymock.tests2.CaptureTest.testCapture":84,"org.easymock.tests2.UsageConstraintsTest.constraints":101,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":371,"org.easymock.samples.ExampleTest.addAndChangeDocument":90,"org.easymock.tests2.ConstraintsToStringTest.notToString":43,"org.easymock.tests.UsageStrictMockTest.testVerify":373,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":370,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":325,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":81,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":381,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":125,"org.easymock.tests.LimitationsTest.abstractClass":245,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":382,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":385}}]
