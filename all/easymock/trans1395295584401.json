[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[4,5,6,7,8],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[16,17,18,19,20,21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:190","failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,0,87,9,88,89,90,91,1,92,93,94,2,95,96,97,6,98,99,100,101,102,103,104,105,106,107,108,12,13,109,110,111,112,30,113,114,31,115,32,116,117,118,38,119,120,121,122,123,124,125,126,127,128,129,130,46,11,131,7,8,48,55,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[75,76,80,81,175,90,98,176,105],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[177,178],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[179,180,181,129,182,183,184,185,186,187,188,169,189,172],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[190,191],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[192,193,194,195,196,197,198,199,23,24,200,201,202,203,204,205,205,206,206,68,69,70,207,71,208,209,72,210,211,212,213,73,74,75,76,214,77,78,79,80,81,82,175,83,84,85,86,0,87,9,88,89,90,91,1,215,92,93,94,2,95,96,216,16,217,218,219,220,221,97,222,223,224,225,226,227,228,6,229,230,231,232,233,234,235,236,237,238,98,99,176,100,101,239,240,102,103,104,105,106,107,108,12,13,14,190,109,110,111,112,113,114,115,116,117,118,241,242,33,34,35,36,37,38,39,40,41,42,43,44,119,120,121,179,122,10,123,124,125,180,181,126,127,243,244,245,246,247,248,128,249,129,130,250,251,46,252,253,11,254,255,131,256,257,47,7,8,48,258,50,51,52,53,54,55,56,57,58,59,60,61,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,132,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,133,324,325,326,327,328,329,330,331,332,333,134,135,136,334,335,137,138,139,140,141,336,337,338,339,340,341,342,142,343,143,344,345,346,347,348,349,65,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,144,372,145,146,147,148,149,150,373,374,375,376,377,378,379,380,381,151,152,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,153,154,183,184,155,156,185,186,157,398,399,400,401,402,403,404,177,405,406,407,178,408,409,410,411,412,413,414,415,416,417,418,158,159,419,191,160,420,421,422,187,423,424,425,426,161,427,162,163,164,165,428,429,430,431,432,166,433,167,434,435,188,168,436,169,170,437,438,171,189,172,439,440,441,173,174,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[88,466],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[208,209,72,210,279,280,281,282,283,284,285,419],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[192,194,195,196,197,199,23,24,200,201,203,204,26,27,28,29,211,213,175,83,215,92,224,227,6,467,99,176,239,240,102,103,108,12,14,190,30,116,117,118,241,242,179,10,180,181,247,248,128,249,129,130,250,318,345,346,360,361,362,364,365,366,367,368,369,370,371,144,372,184,185,186,409,410,412,413,414,415,417,418,419,191,187,434,435,188,168,436,169,170,437,438,443,450,454,459,460],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[468],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[205,206,469,470,471,472,256],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[75,76,78,80,81,175,90,93,98,176,105],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[192,193,194,195,196,197,198,199,23,24,200,201,202,203,204,205,206,68,69,70,207,71,25,26,27,28,29,208,209,72,210,211,212,213,73,74,75,76,214,77,78,79,80,81,82,175,83,84,85,86,0,87,9,88,89,90,91,1,215,92,93,94,2,473,474,95,96,216,16,218,219,220,221,97,222,223,224,225,226,475,227,476,228,6,229,230,477,231,232,467,478,233,234,235,236,237,238,98,99,176,100,101,239,240,102,103,104,105,106,107,108,12,13,14,190,109,110,111,112,30,113,114,31,115,32,116,117,118,241,242,33,34,35,36,37,38,39,40,41,42,43,44,119,120,121,179,122,10,123,124,125,180,181,126,127,45,479,243,244,245,246,480,247,248,128,249,129,130,250,251,46,252,253,11,254,255,481,131,256,257,47,7,8,48,258,49,50,51,52,53,54,55,56,57,58,59,60,61,259,260,261,262,263,482,483,264,484,265,266,62,267,268,485,63,269,270,271,272,273,64,274,486,487,275,276,277,278,279,280,281,282,283,284,132,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,133,324,325,326,327,328,329,330,331,332,333,134,135,136,334,335,137,138,139,140,141,336,337,338,339,340,341,342,142,343,143,344,345,346,347,348,349,65,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,144,372,145,146,147,148,149,150,373,374,375,376,377,378,379,380,381,151,152,382,383,384,385,386,387,388,389,390,488,391,66,392,67,393,394,395,396,397,153,154,183,184,155,156,185,186,157,398,399,400,401,402,403,404,177,405,406,407,178,408,409,410,411,412,413,414,415,416,417,418,158,159,419,191,160,420,421,422,187,423,424,425,426,161,427,162,163,164,165,428,429,430,431,432,166,433,167,434,435,188,168,436,169,170,437,438,171,189,172,439,440,441,173,174,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[152],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[98,99,176,100,101,239,240,102,103,104,105,106,107,108,489],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[129,490,169,189,172],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:196","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[16,17,18,19,20,21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[202,205,206,208,216,16,492,475,469,227,476,493,228,6,229,230,22,477,494,231,232,467,472,478,12,255,256,7,8,49,266,273,276,316,319,488,392],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[495],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[200,201,202,205,205,206,206,208,209,72,216,16,496,475,5,227,476,228,6,229,230,477,231,232,467,497,478,12,14,45,479,243,244,246,480,251,46,253,11,254,255,131,256,257,47,7,8,48,258,49,259,260,263,482,483,264,484,265,266,62,267,268,485,63,269,270,271,272,273,64,274,486,487,275,276,277,278,306,307,308,309,310,312,315,316,317,318,319,320,325,326,327,328,373,374,375,376,377,378,379,380,488,392,403,404,177,405,406,407,178,408,409],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[498,499,500,501,183,188],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[216,16,17,18,19,491,495,22,231,12],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[79],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests2.UsageTest.argumentsOrdered":181,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":452,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":10,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":23,"org.easymock.tests2.DelegateToTest.testReturnException":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":280,"org.easymock.tests.MockingTest.testPartialClassMocking":309,"org.easymock.tests.MockClassControlTest.testToString":375,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":25,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":485,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":286,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":17,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":82,"org.easymock.tests2.UsageTest.wrongArguments":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":158,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":396,"org.easymock.samples.ExampleTest.answerVsDelegate":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":392,"org.easymock.tests2.UsageConstraintsTest.testNull":78,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":314,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":253,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":116,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":380,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":160,"org.easymock.tests.UsageTest.moreThanOneArgument":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":305,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":142,"org.easymock.tests.UsageTest.argumentsOrdered":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":344,"org.easymock.tests.UsageVarargTest.varargIntAccepted":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":321,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":43,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":444,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":324,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests.ReplayStateInvalidUsageTest.times":356,"org.easymock.tests2.DependencyTest.testClassMocking":473,"org.easymock.tests2.AnswerTest.answer":97,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":459,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":221,"org.easymock.tests2.CaptureTest.testAnd":98,"org.easymock.tests2.UsageTest.strictResetToDefault":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":113,"org.easymock.tests2.DelegateToTest.testDelegate":238,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":301,"org.easymock.tests.LimitationsTest.mockFinalMethod":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":386,"org.easymock.tests2.DependencyTest.testClassMockingSupport":474,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":420,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":481,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":219,"org.easymock.tests.UsageThrowableTest.throwError":144,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":350,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":66,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":278,"org.easymock.samples.PartialClassMockTest.testGetArea":202,"org.easymock.tests.MockingTest.testInterfaceMocking":311,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":322,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":151,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":403,"org.easymock.tests2.UsageTest.niceToStrict":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":6,"org.easymock.tests2.MockBuilderTest.testCreateMock":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":486,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":58,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":295,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":114,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":425,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":410,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":394,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":275,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":431,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":0,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":138,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":468,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":86,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":363,"org.easymock.tests2.EasyMockSupportClassTest.testAll":264,"org.easymock.tests.MockClassControlTest.testEquals":379,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":303,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":471,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":384,"org.easymock.tests2.CaptureTest.testCaptureAll":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":220,"org.easymock.tests.MockNameTest.defaultName":387,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":343,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":349,"org.easymock.samples.ExampleTest.voteForRemovals":197,"org.easymock.tests.UsageVarargTest.allKinds":371,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":385,"org.easymock.samples.BasicClassMockTest.testPrintContent":201,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":149,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":40,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":495,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":163,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":48,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":408,"org.easymock.samples.ExampleTest.voteForRemoval":194,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":69,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":258,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":255,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":409,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":119,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":112,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":279,"org.easymock.tests2.CaptureTest.testCaptureFirst":108,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":30,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":127,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":433,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":136,"org.easymock.tests2.UsageTest.moreThanOneArgument":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":207,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":460,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":370,"org.easymock.tests.GenericTest.testBridgedEquals":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":417,"org.easymock.tests.UsageExpectAndReturnTest.longType":332,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":382,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":497,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":304,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":167,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":341,"org.easymock.tests.UsageCallCountTest.tooManyCalls":418,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":487,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":148,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":479,"org.easymock.tests.MockingTest.testNiceClassMocking":315,"org.easymock.tests.MockingTest.testClassMocking":307,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":411,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":5,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":77,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":391,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":434,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":213,"org.easymock.tests.UsageExpectAndReturnTest.object":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":59,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":18,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":365,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":401,"org.easymock.tests.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":345,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":337,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":360,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":34,"org.easymock.tests.MockClassControlTest.testHashCode":378,"org.easymock.tests2.EasyMockSupportTest.testVerify":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":270,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":346,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":218,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":217,"org.easymock.tests.UsageVarargTest.varargCharAccepted":364,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":465,"org.easymock.tests2.UsageTest.openCallCountByLastCall":123,"org.easymock.tests.DefaultClassInstantiatorTest.object":404,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":118,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":423,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":399,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":53,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":33,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":7,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":377,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":292,"org.easymock.tests.CapturesMatcherTest.test":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":276,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":376,"org.easymock.tests2.UsageTest.resumeIfFailure":126,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":282,"org.easymock.tests2.StubTest.stubWithReturnValue":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":22,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":335,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":458,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":204,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":36,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":298,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":15,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":464,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":222,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":427,"org.easymock.tests.UsageExpectAndThrowTest.object":296,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DelegateToTest.testWrongClass":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":439,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":440,"org.easymock.tests.UsageStrictMockTest.range":169,"org.easymock.samples.ConstructorCalledMockTest.testTax":205,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":261,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":115,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":297,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":230,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":263,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":395,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":500,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":152,"org.easymock.tests2.CaptureTest.testCaptureNone":103,"org.easymock.tests.UsageUnorderedTest.message":187,"org.easymock.tests.UsageVerifyTest.twoReturns":172,"org.easymock.tests.UsageVarargTest.varargByteAccepted":369,"org.easymock.tests2.ThreadingTest.testThreadSafe":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":64,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":415,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":402,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":200,"org.easymock.tests2.CaptureTest.testCapture_2617107":176,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":191,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests2.StubTest.stub":190,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":281,"org.easymock.tests.UsageExpectAndThrowTest.longType":289,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":407,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":354,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":249,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests.LimitationsTest.mockNativeMethod":327,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":52,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":250,"org.easymock.tests2.NameTest.nameForMocksControl":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":54,"org.easymock.tests2.MockedExceptionTest.testMockedException":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":265,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":212,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":290,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":312,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":251,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":477,"org.easymock.tests.MockingTest.testNicePartialClassMocking":310,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":254,"org.easymock.tests2.CaptureTest.testCaptureLast":102,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":421,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":480,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":81,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":1,"org.easymock.tests.MockingTest.testTwoMocks":308,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":294,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":94,"org.easymock.samples.ExampleTest.removeNonExistingDocument":198,"org.easymock.tests.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":57,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":35,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":405,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":70,"org.easymock.tests2.MockBuilderTest.testCreateMockString":478,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":62,"org.easymock.tests.UsageExpectAndThrowTest.floatType":288,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":483,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":492,"org.easymock.tests.UsageVerifyTest.twoThrows":189,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":273,"org.easymock.samples.ExampleTest.voteAgainstRemoval":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":453,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":8,"org.easymock.tests.LimitationsTest.privateConstructor":326,"org.easymock.tests2.UsageConstraintsTest.testNotNull":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":150,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":208,"org.easymock.tests2.UsageTest.defaultResetToNice":125,"org.easymock.samples.ExampleTest.voteAgainstRemovals":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":336,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":51,"org.easymock.tests.UsageVarargTest.differentLength":366,"org.easymock.tests2.CallbackTest.callback":242,"org.easymock.tests2.UsageConstraintsTest.equals":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":256,"org.easymock.tests.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":419,"org.easymock.tests.UsageCallCountTest.tooFewCalls":413,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":397,"org.easymock.tests.UsageThrowableTest.throwCheckedException":147,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":501,"org.easymock.tests.MockingTest.testStrictClassMocking":306,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":246,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":56,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":243,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":245,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":226,"org.easymock.tests.ObjectMethodsTest.testHashCode":400,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":20,"org.easymock.tests2.NameTest.nameForNiceMock":28,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":71,"org.easymock.tests2.DependencyTest.testInterfaceMocking":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":19,"org.easymock.samples.ExampleTest.addDocument":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":274,"org.easymock.tests2.DelegateToTest.testStubDelegate":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":277,"org.easymock.tests2.AnswerTest.stubAnswer":225,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":168,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":494,"org.easymock.tests.UsageVarargTest.varargLongAccepted":368,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.floatType":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":216,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":206,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":42,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests.UsageThrowableTest.noUpperLimit":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":259,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":239,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":177,"org.easymock.tests2.UsageConstraintsTest.testSame":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":330,"org.easymock.samples.SupportTest.addDocument":203,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":267,"org.easymock.tests.GenericTest.testPackageScope":317,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":41,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":313,"org.easymock.tests2.NameTest.nameForMock":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":472,"org.easymock.tests2.UsageStrictMockTest.differentMethods":130,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":300,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":398,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":165,"org.easymock.tests2.MockedExceptionTest.testRealException":210,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":455,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":159,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":359,"org.easymock.tests2.NameTest.nameForStrictMock":27,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":228,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":11,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":260,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":406,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":227,"org.easymock.tests2.UsageStrictMockTest.range":129,"org.easymock.tests2.UsageConstraintsTest.lessThan":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":37,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":111,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":269,"org.easymock.tests2.UsageConstraintsTest.testOr":80,"org.easymock.tests.UsageRangeTest.combination":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":46,"org.easymock.tests.UsageTest.wrongArguments":184,"org.easymock.tests2.MockBuilderTest.testWithConstructor":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":268,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":374,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":140,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":178,"org.easymock.tests.UsageVarargTest.varargShortAccepted":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":416,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":223,"org.easymock.tests2.CompareToTest.testLessThan":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureFromStub":106,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":65,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":476,"org.easymock.tests.UsageTest.unexpectedCallWithArray":183,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":188,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":414,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":141,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":436,"org.easymock.tests2.UsageConstraintsTest.constraints":75,"org.easymock.samples.ExampleTest.addAndChangeDocument":199,"org.easymock.tests.UsageStrictMockTest.testVerify":438,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":24,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":435,"org.easymock.tests2.CompareToTest.testGreateThan":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":383,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":240,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":496,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":323,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":135,"org.easymock.tests.LimitationsTest.abstractClass":325,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":133,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":490,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":31,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":361}}]
