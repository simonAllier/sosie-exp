[{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[9,35,36,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[38,39],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[9,35,36,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,35,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[404],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[406,134,138,139,142,146,163,174,178,179,353,365,370,371],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[75,80,90,95],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[48,49,147,148,149,150,151,152,153,154,155,156,157,158,182,183,184,185,186,187,188,189,190,191,192,193],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[62,63,64,65,132,196,197,198,199,200,201,203,272,303,304,305,340,389],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,47,48,49,408,409,410,50,51,411,412,52,53,54,55,56,62,63,64,65,66,68,69,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,413,101,102,103,104,105,108,109,110,414,415,416,417,418,419,420,406,421,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,9,35,36,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,159,160,161,162,163,164,165,166,167,168,169,170,171,422,423,424,425,172,426,427,174,175,176,177,178,179,180,428,429,181,430,431,432,433,434,435,436,437,438,187,13,16,26,32,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,439,440,441,442,443,227,228,229,230,231,444,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,297,298,299,300,301,310,311,312,313,314,315,316,317,318,319,320,321,322,445,331,332,333,334,335,336,337,338,339,340,341,342,346,353,355,356,357,359,360,363,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[413,446,447,448,449,450,451,8,9],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[95],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[452,453],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[161,176,178,179,454,455,456,457,315,346,368,370,371,374,375,376],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[148,149,151,154,155,158,183,184,186,189,190,193],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[397],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[40,41,42,43,44,45,47,48,49,408,409,410,50,51,411,411,412,412,52,53,54,55,56,58,59,60,61,62,63,64,65,66,68,69,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,413,101,102,103,104,105,108,109,110,414,416,417,418,419,406,421,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,9,35,36,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,159,160,161,162,163,164,165,166,167,168,169,170,171,422,423,424,425,172,426,427,174,175,176,177,178,179,180,428,429,181,430,431,432,434,435,437,187,13,16,26,32,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,439,440,441,442,443,227,228,229,230,231,444,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,263,265,266,268,271,273,274,275,276,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,458,297,298,299,300,301,310,311,312,313,314,315,316,317,318,319,320,321,322,445,329,330,331,332,333,334,338,339,340,341,342,346,353,354,355,356,362,365,366,367,368,369,370,371,372,373,374,375,376,377,378,380,381],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[263,273],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[388],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[417,433],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[459,460,461,462,316,367],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.Find:41","failures":[463],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,47,48,49,408,409,410,50,51,411,411,412,412,52,53,54,55,56,58,59,60,61,62,63,64,65,66,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,413,105,106,107,108,109,110,415,416,418,419,406,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,9,35,36,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,152,159,160,161,162,163,164,165,166,167,168,169,170,171,422,423,424,425,172,426,427,174,175,176,177,178,179,180,428,429,181,430,431,432,433,434,435,436,437,438,187,13,16,26,32,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,464,439,440,441,442,443,465,227,228,229,230,231,444,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,466,294,295,296,303,304,305,314,315,317,318,319,320,321,322,445,329,331,332,333,334,336,337,338,339,340,341,342,343,344,346,347,348,349,351,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,398,404],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[58,429],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[9,35,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[132,159,166,200,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,286,288,289,290,291,292,293,314,319,341,347,348,349,360,375,381,385],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[459,460,461,462,316,367],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[467],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[441],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[413,446,447,448,449,468,450,451,8,9],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[62,63,64,65,196,197,198,199,200,201,203,340],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":72,"org.easymock.tests2.UsageTest.argumentsOrdered":169,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":314,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":392,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":164,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":48,"org.easymock.tests2.DelegateToTest.testReturnException":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":197,"org.easymock.tests.MockingTest.testPartialClassMocking":439,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":57,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":204,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":454,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":447,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":79,"org.easymock.tests2.UsageTest.wrongArguments":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":338,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":312,"org.easymock.samples.ExampleTest.answerVsDelegate":41,"org.easymock.tests2.UsageConstraintsTest.testNull":75,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":226,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":430,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests2.CaptureTest.testPrimitive":120,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":342,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":223,"org.easymock.tests.UsageTest.moreThanOneArgument":315,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":254,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":257,"org.easymock.tests.UsageTest.argumentsOrdered":321,"org.easymock.tests.UsageVarargTest.varargIntAccepted":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":227,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":157,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":231,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":187,"org.easymock.tests.ReplayStateInvalidUsageTest.times":270,"org.easymock.tests2.AnswerTest.answer":105,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":399,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":104,"org.easymock.tests2.CaptureTest.testAnd":117,"org.easymock.tests2.UsageTest.strictResetToDefault":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":435,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":355,"org.easymock.tests2.DelegateToTest.testDelegate":116,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":301,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":343,"org.easymock.tests2.CaptureTest.testCapture1_2446744":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":217,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":102,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":264,"org.easymock.tests.UsageThrowableTest.throwError":286,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":307,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":34,"org.easymock.samples.PartialClassMockTest.testGetArea":410,"org.easymock.tests.MockingTest.testInterfaceMocking":224,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":265,"org.easymock.tests2.CompareToTest.testLessOrEqual":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":295,"org.easymock.tests2.UsageTest.niceToStrict":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":205,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":416,"org.easymock.tests2.MockBuilderTest.testCreateMock":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":29,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":190,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":459,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":213,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":310,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":4,"org.easymock.tests.UsageOverloadedMethodTest.overloading":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":25,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":85,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":243,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":379,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":84,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":126,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":277,"org.easymock.tests2.EasyMockSupportClassTest.testAll":13,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":443,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":221,"org.easymock.tests2.CaptureTest.testCaptureAll":118,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":299,"org.easymock.tests.MockNameTest.defaultName":302,"org.easymock.tests2.UsageConstraintsTest.testMatches":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":255,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":262,"org.easymock.samples.ExampleTest.voteForRemovals":45,"org.easymock.tests.UsageVarargTest.allKinds":285,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":374,"org.easymock.samples.BasicClassMockTest.testPrintContent":409,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":300,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":292,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":154,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":450,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":14,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":354,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":438,"org.easymock.samples.ExampleTest.voteForRemoval":42,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":53,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":433,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":445,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":159,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":135,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":196,"org.easymock.tests2.CaptureTest.testCaptureFirst":130,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":136,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":239,"org.easymock.tests2.UsageTest.moreThanOneArgument":161,"org.easymock.tests2.CaptureTest.testCapture2_2446744":129,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":400,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":284,"org.easymock.tests.GenericTest.testBridgedEquals":453,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":5,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":336,"org.easymock.tests.UsageExpectAndReturnTest.longType":235,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":297,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":222,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":93,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":304,"org.easymock.tests.UsageCallCountTest.tooManyCalls":337,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":209,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":291,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":423,"org.easymock.tests2.UsageConstraintsTest.testContains":83,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":330,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":74,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":381,"org.easymock.tests.MockTypeTest.fromEasyMockClass":306,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":68,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":365,"org.easymock.tests.UsageExpectAndReturnTest.object":242,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":448,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":279,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":326,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":6,"org.easymock.tests.UsageTest.exactCallCountByLastCall":322,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":258,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":350,"org.easymock.tests2.ConstraintsToStringTest.findToString":463,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":446,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":248,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":148,"org.easymock.tests2.EasyMockSupportTest.testVerify":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":23,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":348,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":101,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":100,"org.easymock.tests.UsageVarargTest.varargCharAccepted":278,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":0,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":347,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":185,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":147,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":436,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":32,"org.easymock.tests2.UsageTest.resumeIfFailure":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":199,"org.easymock.tests2.StubTest.stubWithReturnValue":132,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":451,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":241,"org.easymock.tests2.SerializationTest.testAllMockedMethod":36,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":398,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":460,"org.easymock.samples.SupportTest.voteForRemovals":51,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":216,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":37,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":404,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":106,"org.easymock.tests.UsageExpectAndThrowTest.object":214,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":352,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DelegateToTest.testWrongClass":114,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":377,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":378,"org.easymock.samples.ConstructorCalledMockTest.testTax":411,"org.easymock.tests.UsageStrictMockTest.range":370,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":194,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":422,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":215,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":10,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":272,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":311,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":461,"org.easymock.tests2.CaptureTest.testCaptureNone":125,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":296,"org.easymock.tests.UsageUnorderedTest.message":346,"org.easymock.tests.UsageVerifyTest.twoReturns":376,"org.easymock.tests.UsageVarargTest.varargByteAccepted":283,"org.easymock.tests2.ThreadingTest.testThreadSafe":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":27,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":334,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":408,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":327,"org.easymock.tests2.CaptureTest.testCapture_2617107":119,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":341,"org.easymock.tests2.UsageConstraintsTest.any":81,"org.easymock.tests2.StubTest.stub":131,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":269,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":198,"org.easymock.tests.UsageExpectAndThrowTest.longType":207,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":268,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":177,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":152,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests.LimitationsTest.mockNativeMethod":444,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":465,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":251,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":184,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":180,"org.easymock.tests2.NameTest.nameForMocksControl":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":186,"org.easymock.tests2.MockedExceptionTest.testMockedException":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":15,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":319,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":441,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":208,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":428,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":419,"org.easymock.tests.MockingTest.testNicePartialClassMocking":440,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":182,"org.easymock.tests2.CaptureTest.testCaptureLast":124,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":344,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":427,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests.MockingTest.testTwoMocks":464,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":212,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":168,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.samples.ExampleTest.removeNonExistingDocument":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":189,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":266,"org.easymock.tests.UsageStrictMockTest.differentMethods":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":149,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":39,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":54,"org.easymock.tests2.MockBuilderTest.testCreateMockString":421,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":17,"org.easymock.tests.UsageExpectAndThrowTest.floatType":206,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":108,"org.easymock.tests.UsageVerifyTest.twoThrows":375,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":26,"org.easymock.samples.ExampleTest.voteAgainstRemoval":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":294,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":437,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":293,"org.easymock.tests2.UsageTest.defaultResetToNice":167,"org.easymock.samples.ExampleTest.voteAgainstRemovals":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":247,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":183,"org.easymock.tests.UsageVarargTest.differentLength":280,"org.easymock.tests2.CallbackTest.callback":146,"org.easymock.tests2.UsageConstraintsTest.equals":73,"org.easymock.tests.UsageTest.openCallCountByLastCall":318,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":340,"org.easymock.tests.UsageCallCountTest.tooFewCalls":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":425,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":313,"org.easymock.tests.UsageThrowableTest.throwCheckedException":290,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":462,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":426,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":203,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":424,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":188,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":271,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":172,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":110,"org.easymock.tests.ObjectMethodsTest.testHashCode":325,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":56,"org.easymock.tests2.NameTest.nameForNiceMock":60,"org.easymock.tests2.DependencyTest.testInterfaceMocking":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":449,"org.easymock.samples.ExampleTest.addDocument":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":28,"org.easymock.tests2.DelegateToTest.testStubDelegate":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.AnswerTest.stubAnswer":109,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":368,"org.easymock.tests.UsageVarargTest.varargLongAccepted":282,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.floatType":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":250,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":413,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":156,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests.UsageThrowableTest.noUpperLimit":287,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":70,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":122,"org.easymock.tests2.SerializationTest.test":35,"org.easymock.tests2.UsageConstraintsTest.testSame":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":233,"org.easymock.samples.SupportTest.addDocument":50,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":18,"org.easymock.tests.GenericTest.testPackageScope":442,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":155,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":225,"org.easymock.tests2.NameTest.nameForMock":58,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":244,"org.easymock.tests2.UsageStrictMockTest.differentMethods":179,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":218,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":323,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":356,"org.easymock.tests2.MockedExceptionTest.testRealException":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":395,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":176,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":273,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":339,"org.easymock.tests2.NameTest.nameForStrictMock":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":1,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":431,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":455,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests.ErrorMessageTest.testGetters":456,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":415,"org.easymock.tests2.UsageStrictMockTest.range":178,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":134,"org.easymock.tests2.CaptureTest.testCaptureRightOne":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":22,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":38,"org.easymock.tests2.UsageConstraintsTest.testOr":77,"org.easymock.tests.UsageRangeTest.combination":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":429,"org.easymock.tests.UsageTest.wrongArguments":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":19,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargShortAccepted":281,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":335,"org.easymock.tests2.UsageConstraintsTest.cmpTo":82,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":166,"org.easymock.tests2.CaptureTest.testCaptureFromStub":128,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":263,"org.easymock.tests.UsageTest.unexpectedCallWithArray":316,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":333,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":246,"org.easymock.tests2.UsageConstraintsTest.constraints":71,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":369,"org.easymock.samples.ExampleTest.addAndChangeDocument":47,"org.easymock.tests.UsageStrictMockTest.testVerify":373,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":49,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":366,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":298,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":229,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":230,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":275}}]
