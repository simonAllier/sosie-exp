[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[6,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","list":"candidateMethods"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[29,53,54,55,56,42],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[58,59,60],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[70],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[17,61,18,71,19,72,20,73],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[74,18],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[24,75,76,77,17,61,78,79,80,81,74,18,71,82,83,84,85,19,72,22,86,87,88,89,90,91,92,93,52,20,94,95,96,97,98,16,99,100,101,102,103,104,105,106,107,108,109,110,111,34,54,38,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[61,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[126,62,127,128,129,130,131,132,133,133,134,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,24,152,25,26,153,154,155,156,157,158,159,27,160,6,21,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,75,177,76,77,17,61,78,79,80,81,74,18,71,82,83,84,85,19,72,22,86,87,88,89,90,91,92,93,52,20,73,94,95,63,64,65,66,67,68,96,97,98,16,99,100,101,102,103,104,105,106,107,108,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,3,200,201,202,203,204,205,206,207,23,208,109,209,4,5,51,210,211,212,213,214,215,216,217,218,219,220,221,222,223,8,224,225,226,227,228,110,111,34,35,36,37,229,230,231,54,38,232,39,40,233,234,41,55,235,236,237,238,239,240,241,242,243,244,245,112,246,247,69,248,47,113,114,115,116,117,118,119,120,121,122,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,123,124,271,125,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,49,50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:33","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResult>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[63,317],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":61,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":234,"org.easymock.tests2.UsageTest.argumentsOrdered":165,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":317,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":21,"org.easymock.tests2.StubTest.stubWithReturnValue":169,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":258,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":92,"org.easymock.tests2.DelegateToTest.testReturnException":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":243,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":229,"org.easymock.tests.MockingTest.testPartialClassMocking":304,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":53,"org.easymock.samples.SupportTest.voteForRemovals":131,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":57,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":281,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":230,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":171,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":194,"org.easymock.tests.UsageExpectAndThrowTest.object":291,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":89,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":142,"org.easymock.tests2.DelegateToTest.testWrongClass":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":110,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":111,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":113,"org.easymock.tests2.UsageTest.wrongArguments":160,"org.easymock.tests.UsageStrictMockTest.range":39,"org.easymock.samples.ConstructorCalledMockTest.testTax":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":215,"org.easymock.samples.ExampleTest.answerVsDelegate":62,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":185,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":143,"org.easymock.tests2.UsageConstraintsTest.testNull":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":292,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":200,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":187,"org.easymock.tests2.CaptureTest.testPrimitive":16,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":300,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":238,"org.easymock.tests.UsageTest.moreThanOneArgument":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":214,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":311,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":56,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":303,"org.easymock.tests2.CaptureTest.testCaptureNone":103,"org.easymock.tests.UsageUnorderedTest.message":34,"org.easymock.tests.UsageVerifyTest.twoReturns":37,"org.easymock.tests2.ThreadingTest.testThreadSafe":174,"org.easymock.tests.UsageTest.argumentsOrdered":239,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":33,"org.easymock.tests2.CaptureTest.testCapture_2617107":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":116,"org.easymock.tests2.UsageConstraintsTest.any":82,"org.easymock.tests2.StubTest.stub":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":122,"org.easymock.tests.UsageExpectAndThrowTest.longType":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":244,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":152,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests2.SerializationTest.testClass":191,"org.easymock.tests.LimitationsTest.mockNativeMethod":241,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":268,"org.easymock.tests2.AnswerTest.answer":193,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":8,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":71,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":1,"org.easymock.tests2.CaptureTest.testAnd":96,"org.easymock.tests2.UsageTest.strictResetToDefault":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":209,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":153,"org.easymock.tests2.MockedExceptionTest.testMockedException":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":182,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests2.DelegateToTest.testDelegate":68,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":306,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":285,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":204,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":201,"org.easymock.tests.MockingTest.testNicePartialClassMocking":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":296,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":208,"org.easymock.tests2.CaptureTest.testCaptureLast":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":112,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":50,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":74,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":228,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":49,"org.easymock.tests2.CaptureTest.testCapture1_2446744":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":249,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":155,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":164,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":52,"org.easymock.tests.UsageThrowableTest.throwError":272,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.ConstraintsToStringTest.andToString":32,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":176,"org.easymock.tests2.MockBuilderTest.testCreateMockString":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":313,"org.easymock.tests.UsageExpectAndThrowTest.floatType":283,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":22,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":196,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":172,"org.easymock.samples.PartialClassMockTest.testGetArea":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":119,"org.easymock.samples.ExampleTest.voteAgainstRemoval":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":302,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":301,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":5,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":282,"org.easymock.tests2.UsageTest.niceToStrict":6,"org.easymock.tests2.UsageConstraintsTest.testNotNull":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":279,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":60,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":3,"org.easymock.tests2.UsageTest.defaultResetToNice":163,"org.easymock.samples.ExampleTest.voteAgainstRemovals":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":264,"org.easymock.tests2.CallbackTest.callback":157,"org.easymock.tests2.UsageConstraintsTest.equals":70,"org.easymock.tests.UsageTest.openCallCountByLastCall":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":290,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":29,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":76,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":115,"org.easymock.tests.UsageOverloadedMethodTest.overloading":211,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":248,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":260,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":146,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":85,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests.UsageThrowableTest.throwCheckedException":276,"org.easymock.tests2.EasyMockSupportClassTest.testAll":170,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":298,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":42,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":226,"org.easymock.tests2.CaptureTest.testCaptureAll":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":148,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":145,"org.easymock.tests2.UsageConstraintsTest.testMatches":72,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":147,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":312,"org.easymock.samples.ExampleTest.voteForRemovals":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":13,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":177,"org.easymock.tests.UsageVarargTest.allKinds":125,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":35,"org.easymock.tests2.DependencyTest.testInterfaceMocking":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":227,"org.easymock.tests2.DelegateToTest.testStubDelegate":65,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":278,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":151,"org.easymock.tests2.AnswerTest.stubAnswer":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":246,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":67,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests2.UsageConstraintsTest.greaterThan":86,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":217,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":51,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":233,"org.easymock.samples.ExampleTest.voteForRemoval":127,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":267,"org.easymock.tests.UsageExpectAndReturnTest.floatType":251,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":139,"org.easymock.tests2.ConstraintsToStringTest.orToString":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":134,"org.easymock.tests.UsageThrowableTest.noUpperLimit":273,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":87,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":46,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":77,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":158,"org.easymock.tests2.SerializationTest.test":192,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":180,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":274,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":250,"org.easymock.tests2.UsageConstraintsTest.testSame":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":242,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":63,"org.easymock.tests2.CaptureTest.testCaptureFirst":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":181,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":48,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":256,"org.easymock.tests.GenericTest.testPackageScope":223,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":75,"org.easymock.tests2.UsageTest.moreThanOneArgument":27,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":202,"org.easymock.tests2.NameTest.nameForMock":73,"org.easymock.tests.UsageExpectAndReturnTest.longType":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":224,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":261,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":280,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":297,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":219,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":307,"org.easymock.tests2.MockedExceptionTest.testRealException":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":257,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":286,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":277,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":114,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":144,"org.easymock.tests2.UsageConstraintsTest.testContains":84,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":137,"org.easymock.tests2.UsageConstraintsTest.testFind":78,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":212,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":23,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":95,"org.easymock.tests.UsageExpectAndReturnTest.object":259,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":199,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":123,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":179,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":269,"org.easymock.tests2.UsageConstraintsTest.testOr":81,"org.easymock.tests.UsageRangeTest.combination":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":9,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":271,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":265,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":205,"org.easymock.tests.UsageTest.wrongArguments":235,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":254,"org.easymock.tests2.EasyMockSupportTest.testVerify":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":262,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":270,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":154,"org.easymock.tests2.UsageConstraintsTest.cmpTo":83,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":195,"org.easymock.tests2.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":58,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":220,"org.easymock.tests2.CaptureTest.testCaptureFromStub":106,"org.easymock.tests.UsageTest.unexpectedCallWithArray":55,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":275,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":54,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":2,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":263,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":232,"org.easymock.tests2.UsageConstraintsTest.constraints":17,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":4,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":287,"org.easymock.samples.ExampleTest.addAndChangeDocument":130,"org.easymock.tests2.ConstraintsToStringTest.notToString":30,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":314,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":225,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":101,"org.easymock.tests2.UsageTest.resumeIfFailure":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":255,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":184}}]
