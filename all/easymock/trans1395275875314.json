[{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matched"}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,1,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,30,39,40,41,42,43,44,46,47,48,55,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,105,108,118,124,127,129,130,131,132,133,134,135,136,138,139,140,141,142,143,145,146,147,1,148,149,150,151,152,153,154,155,156,157,158,159,160,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,208,209,210,211,212,215,216,217,218,221,222,223,224,225,226,227,228,229,230,232,235,236,237,238,241,242,243,244,245,246,247,248,250,251,256,257,268,269,270,271,272,273,274,275,276,277,278,303,304,305,306,307,308,309,310,509,509,312,313,314,315,316,317,318,319,320,323,325,326,327,328,329,330,331,350,352,353,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,392,393,394,395,396,398,399,400,401,402,403,404,405,407,408,409,410,411,412,413,414,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,442,443,445,451,452,453,454,455,456,457,469,470,471,472,473],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[175,176,177,178,179,180,181,182,183,184,185,186,187,188,509],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[510,511,205,305,306,314,315,316,317,318,319,320,512,513,323],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[301],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[514],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[255],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[514],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[17,18,23,515,516],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[140],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,135,143,148,160],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[24,43,48,49,515,516,517,518,519,520,521],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,43,44,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,96,99,100,101,102,105,107,108,110,111,114,115,116,117,118,120,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,1,148,149,150,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,196,198,199,200,201,202,203,204,205,206,207,208,209,210,212,214,215,216,217,220,221,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,263,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,496,497,498,499,500,501,502,503,504,505,506,507,508],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[522,509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"key","this":"this","key":"key"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[136,144],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:163","failures":[209,210],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[66,78,84,85,275,277,278,305,308,314,315,318,319,523,524,356],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[175,176,177,178,179,180,181,182,184,185,186,187,188,509],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[64,66,67,77,78,84,85,162,163,164,165,276,277,278,305,306,308,309,313,315,318,319,525],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[19,20,21,22,95,325,326,327,328,329,330,393,496,497,498],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[510,305],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[279,283,284,293,298,338,415],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[510,511,305,314,512,513],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[209,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[62,65,66,67,74,75,78,79,80,84,85,86,87,135,150,190,194,195,198,212,221,222,223,225,236,238,248,275,277,278,303,305,307,308,309,312,314,315,318,319,320,526,524,400,455,456,457,527,528],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,30,39,40,41,42,43,44,46,47,48,55,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,94,95,105,108,118,124,127,129,130,131,132,133,134,135,136,138,139,140,141,142,143,145,146,147,1,148,149,150,151,152,153,154,155,156,157,158,159,160,166,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,208,209,210,211,212,215,216,217,218,221,222,223,224,225,226,227,228,229,230,232,235,236,237,238,241,242,243,244,245,246,247,248,250,251,256,257,268,269,270,271,272,273,274,275,276,277,278,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,323,325,326,327,328,329,330,331,350,352,353,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,392,393,394,395,396,398,399,400,401,402,403,404,405,407,408,409,410,411,412,413,414,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,442,443,445,451,452,453,454,455,456,457,469,470,471,472,473],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[66,78,84,85,275,277,278,305,308,314,315,318,319,524],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[23,24,202,529,530,531,532,533,519,220],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[135,136,143,144,148,149,160,162],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[175,176,177,178,179,180,181,182,183,184,185,186,187,188,509],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[365],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[534],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[142],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:228","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[219],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[508],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"symbol","methodName":"symbol"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[64,67,68,77,276,277,278,306,309,310,313,355,420,424,425,427,430,508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":136,"org.easymock.tests2.UsageTest.argumentsOrdered":85,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":312,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":289,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":80,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":2,"org.easymock.tests2.DelegateToTest.testReturnException":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":326,"org.easymock.tests.MockingTest.testPartialClassMocking":442,"org.easymock.tests.MockClassControlTest.testToString":460,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":161,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":112,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":416,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":108,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":525,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":40,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":495,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":529,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":357,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":246,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":265,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":447,"org.easymock.tests2.UsageConstraintsTest.testNull":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":227,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":465,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":198,"org.easymock.tests2.CaptureTest.testPrimitive":178,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":361,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":435,"org.easymock.tests.UsageTest.moreThanOneArgument":313,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":471,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":387,"org.easymock.tests.UsageTest.argumentsOrdered":319,"org.easymock.tests.UsageVarargTest.varargIntAccepted":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":362,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":211,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":60,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":366,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":479,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":30,"org.easymock.tests.ReplayStateInvalidUsageTest.times":346,"org.easymock.tests2.DependencyTest.testClassMocking":37,"org.easymock.tests2.AnswerTest.answer":205,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":73,"org.easymock.tests2.CaptureTest.testAnd":175,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":262,"org.easymock.tests2.UsageTest.strictResetToDefault":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":518,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":250,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":391,"org.easymock.tests2.DelegateToTest.testDelegate":174,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":478,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":431,"org.easymock.tests.LimitationsTest.mockFinalMethod":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":329,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":272,"org.easymock.tests2.DependencyTest.testClassMockingSupport":38,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":506,"org.easymock.tests2.CaptureTest.testCapture1_2446744":179,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":429,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":71,"org.easymock.tests.UsageThrowableTest.throwError":407,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":340,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":264,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":528,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":473,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":126,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":482,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests.MockingTest.testInterfaceMocking":444,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":363,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":113,"org.easymock.tests2.UsageTest.niceToStrict":79,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":337,"org.easymock.tests2.ThreadingTest.testChangeDefault":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":279,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":215,"org.easymock.tests2.MockBuilderTest.testCreateMock":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":121,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":33,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":510,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":425,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":194,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":261,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":254,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":449,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageOverloadedMethodTest.overloading":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":117,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":148,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":353,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":378,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":184,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":397,"org.easymock.tests.MockClassControlTest.testEquals":464,"org.easymock.tests2.EasyMockSupportClassTest.testAll":105,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":433,"org.easymock.tests2.CaptureTest.testCaptureAll":176,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":270,"org.easymock.tests.MockNameTest.defaultName":406,"org.easymock.tests2.UsageConstraintsTest.testMatches":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":472,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":338,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":405,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":276,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":271,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":413,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":62,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":533,"org.easymock.tests2.UsageConstraintsTest.greaterThan":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":238,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":483,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":505,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":129,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":239,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":230,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":475,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":331,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":191,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":325,"org.easymock.tests2.CaptureTest.testCaptureFirst":188,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":192,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":87,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":374,"org.easymock.tests2.CaptureTest.testCapture2_2446744":187,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":131,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":297,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":404,"org.easymock.tests.GenericTest.testBridgedEquals":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":456,"org.easymock.tests.UsageExpectAndReturnTest.longType":370,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":434,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":415,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":432,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":497,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":469,"org.easymock.tests.UsageCallCountTest.tooManyCalls":457,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":421,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":412,"org.easymock.tests.MockingTest.testNiceClassMocking":448,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":42,"org.easymock.tests.MockingTest.testClassMocking":440,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":450,"org.easymock.tests2.UsageConstraintsTest.testContains":147,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":21,"org.easymock.tests2.UsageConstraintsTest.testFind":138,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":243,"org.easymock.tests.MockTypeTest.fromEasyMockClass":263,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":168,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":303,"org.easymock.tests.UsageExpectAndReturnTest.object":377,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":530,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":399,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":320,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":284,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":388,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":24,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":394,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":383,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":352,"org.easymock.tests.MockClassControlTest.testHashCode":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":51,"org.easymock.tests2.EasyMockSupportTest.testVerify":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":115,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":389,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":253,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":350,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":526,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":70,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":69,"org.easymock.tests.UsageVarargTest.varargCharAccepted":398,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":302,"org.easymock.tests2.UsageTest.openCallCountByLastCall":81,"org.easymock.tests.DefaultClassInstantiatorTest.object":499,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":200,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":252,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":524,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":410,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":28,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":50,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":481,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":462,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":422,"org.easymock.tests.CapturesMatcherTest.test":509,"org.easymock.tests.ReplayStateInvalidCallsTest.times":487,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":384,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":496,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":488,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":124,"org.easymock.tests2.UsageTest.resumeIfFailure":86,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":260,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":328,"org.easymock.tests2.StubTest.stubWithReturnValue":95,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":519,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":376,"org.easymock.tests2.SerializationTest.testAllMockedMethod":204,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":295,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":511,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":255,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":428,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":301,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":206,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":468,"org.easymock.tests.UsageExpectAndThrowTest.object":426,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":154,"org.easymock.tests2.DelegateToTest.testWrongClass":172,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":485,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":273,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":274,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests.UsageStrictMockTest.range":308,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":100,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":427,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":102,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":318,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":477,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":438,"org.easymock.tests2.CaptureTest.testCaptureNone":183,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":89,"org.easymock.tests.UsageUnorderedTest.message":275,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":527,"org.easymock.tests.UsageVerifyTest.twoReturns":278,"org.easymock.tests.UsageVarargTest.varargByteAccepted":403,"org.easymock.tests2.ThreadingTest.testThreadSafe":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":119,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":454,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":177,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":360,"org.easymock.tests2.UsageConstraintsTest.any":145,"org.easymock.tests2.StubTest.stub":94,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":498,"org.easymock.tests.UsageExpectAndThrowTest.longType":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":503,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":344,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":65,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests2.SerializationTest.testClass":202,"org.easymock.tests.LimitationsTest.mockNativeMethod":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":386,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":27,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":493,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":68,"org.easymock.tests2.NameTest.nameForMocksControl":165,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":29,"org.easymock.tests2.MockedExceptionTest.testMockedException":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":107,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":317,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":445,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":420,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":167,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":218,"org.easymock.tests.MockingTest.testNicePartialClassMocking":443,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":229,"org.easymock.tests2.CaptureTest.testCaptureLast":182,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":25,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":507,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":492,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":48,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":155,"org.easymock.tests.MockingTest.testTwoMocks":441,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":489,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":367,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":424,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":159,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":93,"org.easymock.samples.ExampleTest.removeNonExistingDocument":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":32,"org.easymock.tests.UsageStrictMockTest.differentMethods":309,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":52,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":501,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":92,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":130,"org.easymock.tests2.MockBuilderTest.testCreateMockString":223,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":458,"org.easymock.tests.UsageExpectAndThrowTest.floatType":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":109,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":104,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":208,"org.easymock.tests.UsageVerifyTest.twoThrows":277,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":118,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":290,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":237,"org.easymock.tests.LimitationsTest.privateConstructor":322,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":516,"org.easymock.tests2.UsageConstraintsTest.testNotNull":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":414,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":19,"org.easymock.tests2.UsageTest.defaultResetToNice":83,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":291,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":382,"org.easymock.tests.UsageVarargTest.differentLength":400,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":26,"org.easymock.tests2.CallbackTest.callback":74,"org.easymock.tests2.UsageConstraintsTest.equals":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":233,"org.easymock.tests.UsageTest.openCallCountByLastCall":316,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":359,"org.easymock.tests.UsageCallCountTest.tooFewCalls":452,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":247,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":91,"org.easymock.tests.UsageThrowableTest.throwCheckedException":411,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":513,"org.easymock.tests.MockingTest.testStrictClassMocking":439,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":393,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":31,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":46,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":210,"org.easymock.tests2.CompareToTest.testGreateOrEqual":0,"org.easymock.tests.ObjectMethodsTest.testHashCode":334,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":491,"org.easymock.tests2.NameTest.nameForNiceMock":164,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":132,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":486,"org.easymock.tests2.DependencyTest.testInterfaceMocking":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":531,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":120,"org.easymock.tests2.DelegateToTest.testStubDelegate":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":125,"org.easymock.tests2.AnswerTest.stubAnswer":209,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":306,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":219,"org.easymock.tests.UsageVarargTest.varargLongAccepted":402,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":385,"org.easymock.tests.UsageExpectAndReturnTest.floatType":369,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":23,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests.UsageThrowableTest.noUpperLimit":408,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":59,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":134,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":96,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":180,"org.easymock.tests2.SerializationTest.test":203,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":514,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":500,"org.easymock.tests2.UsageConstraintsTest.testSame":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":368,"org.easymock.samples.SupportTest.addDocument":14,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":45,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":476,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":110,"org.easymock.tests.GenericTest.testPackageScope":256,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":58,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":446,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":474,"org.easymock.tests2.NameTest.nameForMock":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":379,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":521,"org.easymock.tests2.UsageStrictMockTest.differentMethods":67,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":371,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":430,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":251,"org.easymock.tests2.MockedExceptionTest.testRealException":22,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":267,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":293,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":523,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":292,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":349,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":358,"org.easymock.tests2.NameTest.nameForStrictMock":163,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":228,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":99,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":502,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":153,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":212,"org.easymock.tests2.UsageStrictMockTest.range":66,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":480,"org.easymock.tests2.UsageConstraintsTest.lessThan":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":532,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":287,"org.easymock.tests2.CaptureTest.testCaptureRightOne":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":114,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":88,"org.easymock.tests2.UsageConstraintsTest.testOr":141,"org.easymock.tests.UsageRangeTest.combination":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":225,"org.easymock.tests.UsageTest.wrongArguments":315,"org.easymock.tests2.MockBuilderTest.testWithConstructor":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":111,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":459,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":380,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":504,"org.easymock.tests.UsageVarargTest.varargShortAccepted":401,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":455,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":494,"org.easymock.tests2.UsageConstraintsTest.cmpTo":146,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":207,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":282,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests2.CaptureTest.testCaptureFromStub":186,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":339,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":213,"org.easymock.tests.UsageTest.unexpectedCallWithArray":314,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":490,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":305,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":453,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":520,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":381,"org.easymock.tests2.CaptureTest.testCapture":522,"org.easymock.tests2.UsageConstraintsTest.constraints":135,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests.UsageStrictMockTest.testVerify":311,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":11,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":304,"org.easymock.tests2.CompareToTest.testGreateThan":534,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":269,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":364,"org.easymock.tests.LimitationsTest.abstractClass":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":373,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":365,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":195}}]
