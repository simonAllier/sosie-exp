[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"name","key":"name"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1660","sourceCode":"return null","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[4,5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"position":"org.easymock.internal.LastControl:92","failures":[23,24,25,26,27,28,9,11,19],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[31,32,33,34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[36,9,11,12,13,14,15,16,18,2,19,20,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,30,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,252,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,101,104,253,254,105,107,108,111,112,113,114,115,255,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,256,257,137,258,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,259,170,171,177,178,260,179,180,181,261,182,183,184,185,262,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,30,207,210,213,216,217,220,263,221,264,265,266,267,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,268,269,270,271,272,23,24,273,274,275,25,26,276,277,278,279,3,280,281,282,283,284,28,285,286,287,288,289,290,291,292,293,294,295,296,0,297,298,9,10,11,12,14,15,16,17,18,19,22,299,300,301,302,303,304,305,306],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[276,280,290,307],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:56","sourceCode":"final org.easymock.internal.matchers.Equals org.easymock.internal.matchers.Equals = ((org.easymock.internal.matchers.Equals)(java.lang.Object))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:98","sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:65","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = new java.lang.Class[java.lang.String[].int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[308,309,310,311,312,7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[313,314,315,307,316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[317,318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[319],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[320],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[321],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[322,63,65,66,67,70,71,74,83,84,85,88,89,90,91,92,101,103,104,323,324,325,105,107,108,111,255,130,143,144,169,171,172,173,174,175,176,260,180,181,261,182,183,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,203,204,205,30,208,209,210,213,214,217,219,220,222,230,231,238,268,269,326,270,271,272,23,24,273,274,275,25,26,276,277,278,279,3,280,281,282,283,284,28,285,286,287,288,289,290,327,294,296,328,297,35,298,9,10,12,13,16,17,18,19,20,21,22,299,305],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":24,"org.easymock.tests2.UsageTest.argumentsOrdered":212,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":124,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":207,"org.easymock.tests2.StubTest.stubWithReturnValue":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":309,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":287,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":87,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":232,"org.easymock.tests2.DelegateToTest.testReturnException":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":122,"org.easymock.tests.MockingTest.testPartialClassMocking":75,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":5,"org.easymock.samples.SupportTest.voteForRemovals":41,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":157,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":145,"org.easymock.tests.UsageExpectAndThrowTest.object":155,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":285,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":166,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":167,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":276,"org.easymock.tests2.UsageTest.wrongArguments":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":107,"org.easymock.samples.ConstructorCalledMockTest.testTax":38,"org.easymock.tests.UsageStrictMockTest.range":103,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":114,"org.easymock.samples.ExampleTest.answerVsDelegate":45,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":245,"org.easymock.tests2.UsageConstraintsTest.testNull":274,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":240,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":196,"org.easymock.tests2.CaptureTest.testPrimitive":12,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":111,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":72,"org.easymock.tests.UsageTest.moreThanOneArgument":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":164,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":260,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":324,"org.easymock.tests2.CaptureTest.testCaptureNone":17,"org.easymock.tests.UsageUnorderedTest.message":168,"org.easymock.tests.UsageVerifyTest.twoReturns":65,"org.easymock.tests.UsageVarargTest.varargByteAccepted":60,"org.easymock.tests2.ThreadingTest.testThreadSafe":268,"org.easymock.tests.UsageTest.argumentsOrdered":73,"org.easymock.tests.UsageVarargTest.varargIntAccepted":55,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":139,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":51,"org.easymock.tests2.CaptureTest.testCapture_2617107":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":127,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":237,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":252,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":110,"org.easymock.tests2.UsageConstraintsTest.any":277,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":239,"org.easymock.tests2.StubTest.stub":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":123,"org.easymock.tests.UsageExpectAndThrowTest.longType":148,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":218,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":298,"org.easymock.tests2.SerializationTest.testClass":230,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":299,"org.easymock.tests.LimitationsTest.mockNativeMethod":165,"org.easymock.tests2.AnswerTest.answer":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":97,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":27,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":229,"org.easymock.tests2.CaptureTest.testAnd":9,"org.easymock.tests2.UsageTest.strictResetToDefault":204,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":0,"org.easymock.tests2.NameTest.nameForMocksControl":267,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":29,"org.easymock.tests2.MockedExceptionTest.testMockedException":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":191,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":71,"org.easymock.tests2.DelegateToTest.testDelegate":302,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":149,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":291,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":241,"org.easymock.tests.MockingTest.testNicePartialClassMocking":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":160,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":295,"org.easymock.tests2.CompareToTest.testCompareEqual":315,"org.easymock.tests2.CaptureTest.testCaptureLast":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":251,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":136,"org.easymock.tests2.CaptureTest.testCapture1_2446744":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":78,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":153,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":211,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":289,"org.easymock.tests.UsageThrowableTest.throwError":169,"org.easymock.tests.UsageStrictMockTest.differentMethods":104,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":326,"org.easymock.tests2.ConstraintsToStringTest.andToString":319,"org.easymock.tests2.MockBuilderTest.testCreateMockString":244,"org.easymock.tests.UsageExpectAndThrowTest.floatType":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":180,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":282,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":223,"org.easymock.tests.UsageVerifyTest.twoThrows":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":235,"org.easymock.samples.PartialClassMockTest.testGetArea":42,"org.easymock.tests2.CompareToTest.testLessOrEqual":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":128,"org.easymock.samples.ExampleTest.voteAgainstRemoval":47,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":297,"org.easymock.tests2.UsageTest.niceToStrict":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":146,"org.easymock.tests2.UsageConstraintsTest.testNotNull":288,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":176,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":238,"org.easymock.tests2.MockBuilderTest.testCreateMock":242,"org.easymock.tests2.UsageTest.defaultResetToNice":210,"org.easymock.samples.ExampleTest.voteAgainstRemovals":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":93,"org.easymock.tests2.CallbackTest.callback":202,"org.easymock.tests.UsageTest.openCallCountByLastCall":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":154,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":192,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":271,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":112,"org.easymock.tests.UsageCallCountTest.tooFewCalls":258,"org.easymock.tests.UsageOverloadedMethodTest.overloading":143,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":280,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":89,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":142,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":317,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":3,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":115,"org.easymock.tests.UsageThrowableTest.throwCheckedException":173,"org.easymock.tests2.EasyMockSupportClassTest.testAll":233,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":141,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":228,"org.easymock.tests2.CaptureTest.testCaptureAll":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":247,"org.easymock.tests2.UsageConstraintsTest.testMatches":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":249,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":179,"org.easymock.tests2.CompareToTest.testGreateOrEqual":307,"org.easymock.samples.ExampleTest.voteForRemovals":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":7,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":270,"org.easymock.tests2.NameTest.nameForNiceMock":266,"org.easymock.tests.UsageVarargTest.allKinds":62,"org.easymock.tests2.DependencyTest.testInterfaceMocking":200,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":63,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":312,"org.easymock.samples.BasicClassMockTest.testPrintContent":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":135,"org.easymock.samples.ExampleTest.addDocument":48,"org.easymock.tests2.DelegateToTest.testStubDelegate":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":175,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":215,"org.easymock.tests2.AnswerTest.stubAnswer":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":126,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":101,"org.easymock.tests2.UsageConstraintsTest.greaterThan":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":261,"org.easymock.tests.UsageVarargTest.varargLongAccepted":59,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":35,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.samples.ExampleTest.voteForRemoval":46,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":269,"org.easymock.tests.UsageExpectAndReturnTest.floatType":80,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":96,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":221,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":39,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":284,"org.easymock.tests.UsageThrowableTest.noUpperLimit":170,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":272,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":120,"org.easymock.tests2.SerializationTest.test":231,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":14,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":189,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":171,"org.easymock.tests2.UsageConstraintsTest.testSame":275,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":79,"org.easymock.samples.SupportTest.addDocument":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":121,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":190,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":119,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":85,"org.easymock.tests.GenericTest.testPackageScope":140,"org.easymock.tests2.UsageTest.moreThanOneArgument":205,"org.easymock.tests2.CaptureTest.testCapture2_2446744":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":243,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":61,"org.easymock.tests2.NameTest.nameForMock":264,"org.easymock.tests.UsageExpectAndReturnTest.longType":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":132,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":163,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":322,"org.easymock.tests2.UsageStrictMockTest.differentMethods":220,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":159,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":183,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":137,"org.easymock.tests2.MockedExceptionTest.testRealException":306,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":4,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":174,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":246,"org.easymock.tests2.UsageConstraintsTest.testContains":279,"org.easymock.tests2.NameTest.nameForStrictMock":265,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":257,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":305,"org.easymock.tests2.UsageConstraintsTest.testFind":273,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":144,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":294,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":98,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":185,"org.easymock.tests.UsageExpectAndReturnTest.object":88,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":28,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":296,"org.easymock.tests2.UsageStrictMockTest.range":219,"org.easymock.tests2.UsageConstraintsTest.lessThan":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":311,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":57,"org.easymock.tests.UsageTest.exactCallCountByLastCall":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":188,"org.easymock.tests2.CaptureTest.testCaptureRightOne":19,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":320,"org.easymock.tests2.UsageConstraintsTest.testOr":25,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":308,"org.easymock.tests.UsageRangeTest.combination":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":327,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":94,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":53,"org.easymock.tests.UsageTest.wrongArguments":69,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":117,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":259,"org.easymock.tests2.EasyMockSupportTest.testVerify":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":91,"org.easymock.tests.UsageVarargTest.varargShortAccepted":58,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":31,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":226,"org.easymock.tests2.UsageConstraintsTest.cmpTo":278,"org.easymock.tests.UsageVarargTest.varargCharAccepted":56,"org.easymock.tests2.CaptureTest.testCaptureMultiple":36,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":321,"org.easymock.tests2.CompareToTest.testLessThan":313,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":216,"org.easymock.tests2.UsageTest.openCallCountByLastCall":208,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":209,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":198,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests.UsageTest.unexpectedCallWithArray":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":152,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":92,"org.easymock.tests2.CaptureTest.testCapture":2,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":328,"org.easymock.tests2.UsageConstraintsTest.constraints":23,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":102,"org.easymock.samples.ExampleTest.addAndChangeDocument":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":151,"org.easymock.tests.CapturesMatcherTest.test":1,"org.easymock.tests.UsageStrictMockTest.testVerify":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":95,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":236,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":99,"org.easymock.tests2.CompareToTest.testGreateThan":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":133,"org.easymock.tests2.UsageTest.resumeIfFailure":213,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":129,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":84,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":193,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":54}}]
