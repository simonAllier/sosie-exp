[{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[6,7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,9,1,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,6,7,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[186,187,188,189,190,191,192,193,194,195,196,197,198,199,53,200,76,77,78,201,202,203,204,205,206,118,207,208,209],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[10,11,12,13,14,15,16,210,17,18,19,20,21,22,186,211,212,213,214,215,216,187,217,218,219,220,221,222,223,23,224,225,226,227,228,229,230,231,24,25,188,189,190,191,232,192,193,194,233,234,235,236,237,238,26,239,240,241,242,243,244,245,27,28,29,30,31,32,246,247,248,249,250,33,34,35,36,251,37,38,39,40,252,253,254,41,42,43,44,255,256,257,258,259,260,261,262,263,264,195,265,266,196,267,268,269,270,271,272,273,274,275,197,276,277,278,279,280,198,281,282,45,46,47,199,48,283,284,285,49,286,287,50,288,51,9,289,290,291,292,293,294,295,296,297,298,299,300,301,302,0,303,1,304,305,306,307,308,309,310,2,311,3,312,52,53,54,313,55,56,57,314,315,316,317,318,58,59,319,60,320,321,61,62,63,64,65,66,67,68,322,69,70,71,72,323,6,7,8,73,324,325,74,75,326,327,328,200,329,330,331,76,332,77,333,78,334,335,336,201,337,338,202,79,203,204,80,205,339,340,341,342,343,344,345,81,346,347,348,82,83,84,349,350,351,352,353,354,355,356,357,358,359,4,360,85,361,5,362,363,364,365,366,367,368,369,370,371,372,373,374,86,87,88,89,90,91,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,92,400,93,94,95,96,97,401,98,99,402,403,100,101,404,405,102,406,407,206,408,103,104,105,106,107,108,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,109,428,110,111,429,430,431,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,432,433,434,435,436,142,437,143,144,145,438,146,147,439,148,149,150,151,152,440,153,154,155,156,157,158,159,160,441,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,442,443,444,445,446,447,207,208,448,209,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,181,182,183,184,185,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[489],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[19,20,186,211,211,212,212,215,187,188,189,190,191,193,194,195,196,197,198,6,8,327,200,329,76,332,77,78,336,201,338,202,79,204,80,205,339,341,344,345,81,346,348,360,85,361,362,367,206,409,415,447,207,208,209,461,462,463,464,465,466],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[11,13,14,16,22,186,187,24,25,188,189,190,191,192,193,194,28,30,31,195,196,197,198,199,53,200,76,77,78,201,202,79,203,204,80,205,341,345,81,346,353,354,355,356,86,87,93,95,96,206,112,117,118,119,120,121,122,123,124,125,126,127,130,131,133,134,135,137,138,139,140,141,207,208,209,181,182,183,184],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[490],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,186,211,212,213,214,215,216,187,23,24,25,188,189,190,191,192,193,194,26,245,27,28,29,30,31,32,247,248,249,250,33,34,35,36,251,37,38,39,40,252,253,254,41,42,43,44,195,196,197,198,45,46,47,199,48,283,284,285,49,287,50,288,51,9,289,291,292,293,294,295,296,297,298,299,300,301,302,0,303,1,304,305,2,3,52,53,54,55,56,57,314,315,316,317,318,58,59,319,60,320,321,61,62,63,64,65,66,67,68,322,69,70,71,72,323,6,7,8,73,74,75,326,327,200,76,332,77,78,336,201,338,202,79,203,204,80,205,339,341,344,345,81,346,82,83,84,349,350,351,352,353,355,356,360,85,370,371,372,373,374,86,87,88,89,90,91,399,92,400,93,94,95,96,97,491,491,98,99,402,403,100,101,404,405,102,206,103,104,105,106,107,108,409,109,110,111,431,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,437,143,144,145,146,147,439,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,207,208,209,454,455,456,457,458,459,460,181,182,183,184,185],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[186,211,212,187,217,196,197,6,76,334,335,336,338,342,81,348,4,361],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[30,31,383,95,96,126,130,131,133,136,432,435,436,165,169,170,172,175],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[58,319],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[28,34,39,40,42,73,89,91,93,98,100,101,102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[6,7,8,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[308,346,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[49,287],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[493],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[23,26,28,30,31,36,251,253,254,260,365,369,88,89,90,91,400,93,95,96,99,402,403,404,405,411,414,440,485,486],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[312,53,385],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[30,251,253,254,88,90,91,400,95,402,403,404,405,494],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[340],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[28,30,31,36,88,89,90,91,93,95,96,99,495,496,497,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.LastControl:95","failures":[285,49,50,51,9,290,300,1,56,314,60],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":49,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":98,"org.easymock.tests2.UsageTest.argumentsOrdered":254,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":385,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":38,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testReturnException":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":104,"org.easymock.tests.MockingTest.testPartialClassMocking":207,"org.easymock.tests.MockClassControlTest.testToString":463,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":306,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":161,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":196,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":495,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":25,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":112,"org.easymock.tests2.UsageTest.wrongArguments":251,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":351,"org.easymock.samples.ExampleTest.answerVsDelegate":12,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":367,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":450,"org.easymock.tests2.UsageConstraintsTest.testNull":50,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":204,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":468,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":70,"org.easymock.tests2.CaptureTest.testPrimitive":315,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":180,"org.easymock.tests.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":183,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":432,"org.easymock.tests.UsageTest.argumentsOrdered":405,"org.easymock.tests.UsageVarargTest.varargIntAccepted":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":117,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":243,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":121,"org.easymock.tests.ReplayStateInvalidUsageTest.times":424,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":23,"org.easymock.tests2.DependencyTest.testClassMocking":230,"org.easymock.tests2.AnswerTest.answer":73,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":392,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":250,"org.easymock.tests2.CaptureTest.testAnd":56,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":364,"org.easymock.tests2.UsageTest.strictResetToDefault":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":66,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":355,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":436,"org.easymock.tests2.DelegateToTest.testDelegate":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":176,"org.easymock.tests.LimitationsTest.mockFinalMethod":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":374,"org.easymock.tests2.DependencyTest.testClassMockingSupport":231,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":485,"org.easymock.tests2.CaptureTest.testCapture1_2446744":316,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":174,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":248,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":418,"org.easymock.tests.UsageThrowableTest.throwError":153,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":366,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":282,"org.easymock.samples.PartialClassMockTest.testGetArea":186,"org.easymock.tests.MockingTest.testInterfaceMocking":448,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":118,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":443,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":162,"org.easymock.tests2.UsageTest.niceToStrict":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":278,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":226,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":170,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":67,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":363,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":452,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":349,"org.easymock.tests.UsageOverloadedMethodTest.overloading":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":280,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":111,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":133,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":82,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":294,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":319,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":438,"org.easymock.tests.MockClassControlTest.testEquals":467,"org.easymock.tests2.EasyMockSupportClassTest.testAll":195,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":85,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":178,"org.easymock.tests2.CaptureTest.testCaptureAll":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":372,"org.easymock.tests.MockNameTest.defaultName":440,"org.easymock.tests2.UsageConstraintsTest.testMatches":296,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":416,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":184,"org.easymock.samples.ExampleTest.voteForRemovals":16,"org.easymock.tests.UsageVarargTest.allKinds":152,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":89,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":373,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":159,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":240,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":313,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":482,"org.easymock.tests2.UsageConstraintsTest.greaterThan":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":354,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":346,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":483,"org.easymock.samples.ExampleTest.voteForRemoval":13,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":46,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":347,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":368,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":339,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":409,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":64,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":103,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":65,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":42,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":129,"org.easymock.tests2.UsageTest.moreThanOneArgument":36,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":199,"org.easymock.tests2.CaptureTest.testCapture2_2446744":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":201,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":151,"org.easymock.tests.GenericTest.testBridgedEquals":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":459,"org.easymock.tests.UsageExpectAndReturnTest.longType":125,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":370,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":179,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":441,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":177,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":181,"org.easymock.tests.UsageCallCountTest.tooManyCalls":460,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":166,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":158,"org.easymock.tests.MockingTest.testNiceClassMocking":451,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":189,"org.easymock.tests.MockingTest.testClassMocking":446,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":453,"org.easymock.tests2.UsageConstraintsTest.testContains":293,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":215,"org.easymock.tests2.UsageConstraintsTest.testFind":287,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":84,"org.easymock.tests.MockTypeTest.fromEasyMockClass":365,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":3,"org.easymock.tests.UsageExpectAndReturnTest.object":132,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":227,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":490,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":69,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":147,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":413,"org.easymock.tests.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":433,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":217,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":138,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":110,"org.easymock.tests.MockClassControlTest.testHashCode":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":235,"org.easymock.tests2.EasyMockSupportTest.testVerify":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":273,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":434,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":109,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":247,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":246,"org.easymock.tests.UsageVarargTest.varargCharAccepted":146,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":475,"org.easymock.tests2.CaptureTest.testCaptureMultiple":488,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":398,"org.easymock.tests2.UsageTest.openCallCountByLastCall":39,"org.easymock.tests.DefaultClassInstantiatorTest.object":476,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":357,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":411,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":222,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":234,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":465,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":167,"org.easymock.tests.CapturesMatcherTest.test":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":472,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":198,"org.easymock.tests2.UsageTest.resumeIfFailure":41,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":106,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":333,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":131,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":303,"org.easymock.tests2.SerializationTest.testAllMockedMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":391,"org.easymock.samples.SupportTest.voteForRemovals":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":173,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":397,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":324,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":471,"org.easymock.tests.UsageExpectAndThrowTest.object":171,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":301,"org.easymock.tests2.DelegateToTest.testWrongClass":54,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":86,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":87,"org.easymock.tests.UsageStrictMockTest.range":95,"org.easymock.samples.ConstructorCalledMockTest.testTax":211,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":260,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":172,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":426,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":350,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":444,"org.easymock.tests2.CaptureTest.testCaptureNone":59,"org.easymock.tests.UsageUnorderedTest.message":88,"org.easymock.tests.UsageVerifyTest.twoReturns":91,"org.easymock.tests.UsageVarargTest.varargByteAccepted":150,"org.easymock.tests2.ThreadingTest.testThreadSafe":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":276,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":457,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":414,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests2.CaptureTest.testCapture_2617107":314,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":115,"org.easymock.tests2.UsageConstraintsTest.any":291,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":423,"org.easymock.tests2.StubTest.stub":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndThrowTest.longType":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":105,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":480,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":422,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":29,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":26,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests.LimitationsTest.mockNativeMethod":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":141,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":361,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":221,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":32,"org.easymock.tests2.NameTest.nameForMocksControl":310,"org.easymock.tests2.MockedExceptionTest.testMockedException":214,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":266,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":165,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":209,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":311,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":202,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":78,"org.easymock.tests.MockingTest.testNicePartialClassMocking":208,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":205,"org.easymock.tests2.CaptureTest.testCaptureLast":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":219,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":486,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":194,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":302,"org.easymock.tests.MockingTest.testTwoMocks":447,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":233,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":169,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":253,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":304,"org.easymock.samples.ExampleTest.removeNonExistingDocument":210,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":420,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":225,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":236,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":478,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":47,"org.easymock.tests2.MockBuilderTest.testCreateMockString":338,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":461,"org.easymock.tests.UsageExpectAndThrowTest.floatType":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":267,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":264,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":74,"org.easymock.tests.UsageVerifyTest.twoThrows":90,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":218,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":197,"org.easymock.samples.ExampleTest.voteAgainstRemoval":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":81,"org.easymock.tests.LimitationsTest.privateConstructor":407,"org.easymock.tests2.UsageConstraintsTest.testNotNull":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":160,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":213,"org.easymock.tests2.UsageTest.defaultResetToNice":252,"org.easymock.samples.ExampleTest.voteAgainstRemovals":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":137,"org.easymock.tests.UsageVarargTest.differentLength":439,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":220,"org.easymock.tests2.CallbackTest.callback":33,"org.easymock.tests2.UsageConstraintsTest.equals":286,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":342,"org.easymock.tests.UsageTest.openCallCountByLastCall":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":114,"org.easymock.tests.UsageCallCountTest.tooFewCalls":455,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":352,"org.easymock.tests.UsageThrowableTest.throwCheckedException":157,"org.easymock.tests.MockingTest.testStrictClassMocking":445,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":437,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":193,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":224,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":425,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":192,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":326,"org.easymock.tests.ObjectMethodsTest.testHashCode":412,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":48,"org.easymock.tests2.NameTest.nameForNiceMock":309,"org.easymock.tests2.DependencyTest.testInterfaceMocking":24,"org.easymock.samples.ExampleTest.addDocument":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":277,"org.easymock.tests2.DelegateToTest.testStubDelegate":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":281,"org.easymock.tests2.AnswerTest.stubAnswer":75,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":93,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":334,"org.easymock.tests.UsageVarargTest.varargLongAccepted":149,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":140,"org.easymock.tests.UsageExpectAndReturnTest.floatType":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":187,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":212,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests.UsageThrowableTest.noUpperLimit":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":242,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":299,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":284,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":255,"org.easymock.tests2.SerializationTest.test":7,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":317,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":489,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":123,"org.easymock.tests2.UsageConstraintsTest.testSame":288,"org.easymock.samples.SupportTest.addDocument":21,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":232,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":268,"org.easymock.tests.GenericTest.testPackageScope":360,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":241,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":449,"org.easymock.tests2.NameTest.nameForMock":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":134,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":337,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":343,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":175,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":410,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":356,"org.easymock.tests2.MockedExceptionTest.testRealException":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":388,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":113,"org.easymock.tests2.NameTest.nameForStrictMock":308,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":331,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":80,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":259,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":479,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":300,"org.easymock.tests.ErrorMessageTest.testGetters":497,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":200,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":383,"org.easymock.tests2.CaptureTest.testCaptureRightOne":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":272,"org.easymock.tests2.UsageConstraintsTest.testOr":51,"org.easymock.tests.UsageRangeTest.combination":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":79,"org.easymock.tests.UsageTest.wrongArguments":403,"org.easymock.tests2.MockBuilderTest.testWithConstructor":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":269,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":376,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":481,"org.easymock.tests.UsageVarargTest.varargShortAccepted":148,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":458,"org.easymock.tests2.UsageConstraintsTest.cmpTo":292,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":378,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests2.CaptureTest.testCaptureFromStub":320,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":417,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":329,"org.easymock.tests.UsageTest.unexpectedCallWithArray":402,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":456,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":136,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":94,"org.easymock.tests2.UsageConstraintsTest.constraints":285,"org.easymock.samples.ExampleTest.addAndChangeDocument":17,"org.easymock.tests2.ConstraintsToStringTest.containsToString":493,"org.easymock.tests.UsageStrictMockTest.testVerify":401,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":18,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":371,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":119,"org.easymock.tests.LimitationsTest.abstractClass":406,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":128,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":120,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":498,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":68}}]
