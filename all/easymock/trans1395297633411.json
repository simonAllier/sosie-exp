[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[51,52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[55,56,57,58,59,60],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[62,63,64,65,10,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,66,39,43,44,45,67,68,69,70,46,71,47,48,72,49,50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,37,86,87,88,89,90,91,92,93,94,95],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[112,113,114,115,77,78,79,80,116,117,118,88,119,89,90,91,92],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[112,113,114,115,77,78,79,80,116,117,118,88,119,89,90,91,92],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[120,73,74,75,76,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,62,63,64,65,178,179,180,181,96,97,98,99,100,101,102,103,104,105,106,107,108,109,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,10,11,212,77,78,213,214,215,12,216,79,80,217,218,219,220,221,222,223,224,225,226,227,61,228,229,230,231,232,111,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,81,258,82,83,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,51,52,53,7,295,296,297,8,298,299,300,301,302,303,304,305,306,307,308,13,309,310,311,312,313,314,9,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,84,388,389,390,391,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,392,393,394,395,396,397,398,399,400,401,402,403,404,66,405,406,407,408,409,410,411,412,413,414,85,37,86,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,38,432,39,40,41,42,43,44,433,434,435,436,437,438,439,440,441,45,442,87,443,67,68,69,70,46,71,444,445,446,447,448,449,450,451,452,453,454,47,88,119,89,455,48,90,91,456,457,458,459,460,461,462,463,464,465,466,467,468,469,92,93,470,94,95,471,472,473,474,475,476,477,478,479,480,72,49,481,482,55,56,57,58,483,59,484,60,485,486,50,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[51,52,53,54],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[130,137,138,139,140,141,142,145,149,150,151,154,155,156,157,158,159,160,161,162,163,164,165,167,171,173,174,175,176,177,64,180,181,96,97,99,100,103,104,105,106,108,109,184,188,190,192,196,204,10,11,212,77,213,215,12,216,217,218,219,220,221,222,224,225,226,227,61,228,230,231,232,111,233,234,235,236,237,238,239,240,242,243,244,245,247,248,249,250,252,253,254,81,82,83,273,276,286,292,51,52,7,299,314,315,324,325,327,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,365,368,370,372,373,374,375,376,386,387,404,85,86,38,39,40,41,42,43,44,434,435,436,437,87,444,445,47,88,455,48,456,460,461,463,93,94,95,477,479,480,481,485,486,50,487,489,490,492,499,502],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[368,370,371],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[194,504,51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[144,505,506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[51,52,53,54],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.RecordState:327","failures":[15,16,474,475],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[149,150,507,508,188],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[367,371],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[96,98,106,221,222,227,61,229,238],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[137,139,140,142,176,184,188,190,192,196,247,248,249,250,252,253,254,273,276,286,292,7,299,365,373,460,461,463,499],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[167,168,169,170,171,172,260,262,297,439,488],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[143,182,508,184,185,188,189,190,192,195,196,509,510,198,51,370,377,382,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","name":"methodName"}},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[312,430,473,474,475],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":222,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests2.UsageTest.argumentsOrdered":80,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":9,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":214,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":503,"org.easymock.tests2.DelegateToTest.testReturnException":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":68,"org.easymock.tests.MockingTest.testPartialClassMocking":460,"org.easymock.tests.MockClassControlTest.testToString":330,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":120,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":17,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":276,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":1,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":479,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":390,"org.easymock.samples.ExampleTest.answerVsDelegate":488,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":382,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":465,"org.easymock.tests2.UsageConstraintsTest.testNull":225,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":140,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":163,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":335,"org.easymock.tests2.CaptureTest.testPrimitive":99,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":481,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":36,"org.easymock.tests.UsageTest.moreThanOneArgument":88,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":407,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":410,"org.easymock.tests.UsageTest.argumentsOrdered":91,"org.easymock.tests.UsageVarargTest.varargIntAccepted":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":372,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":135,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":265,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":376,"org.easymock.tests.ReplayStateInvalidUsageTest.times":428,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":204,"org.easymock.tests2.DependencyTest.testClassMocking":178,"org.easymock.tests2.AnswerTest.answer":167,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":124,"org.easymock.tests2.CaptureTest.testAnd":96,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":379,"org.easymock.tests2.UsageTest.strictResetToDefault":212,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":158,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":414,"org.easymock.tests2.DelegateToTest.testDelegate":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":32,"org.easymock.tests.LimitationsTest.mockFinalMethod":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":419,"org.easymock.tests2.DependencyTest.testClassMockingSupport":179,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":303,"org.easymock.tests2.CaptureTest.testCapture1_2446744":100,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":122,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":422,"org.easymock.tests.UsageThrowableTest.throwError":38,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":381,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":433,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":294,"org.easymock.samples.PartialClassMockTest.testGetArea":499,"org.easymock.tests.MockingTest.testInterfaceMocking":462,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":373,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":18,"org.easymock.tests2.UsageTest.niceToStrict":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":281,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":341,"org.easymock.tests2.ThreadingTest.testChangeDefault":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":188,"org.easymock.tests2.MockBuilderTest.testCreateMock":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":207,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":112,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":26,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":378,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":446,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":388,"org.easymock.tests.UsageOverloadedMethodTest.overloading":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":291,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":45,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":233,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":485,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":353,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":111,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":105,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":395,"org.easymock.tests2.EasyMockSupportClassTest.testAll":273,"org.easymock.tests.MockClassControlTest.testEquals":334,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":369,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":417,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":123,"org.easymock.tests2.CaptureTest.testCaptureAll":97,"org.easymock.tests.MockNameTest.defaultName":362,"org.easymock.tests2.UsageConstraintsTest.testMatches":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":408,"org.easymock.samples.ExampleTest.voteForRemovals":492,"org.easymock.tests.UsageVarargTest.allKinds":403,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":85,"org.easymock.samples.BasicClassMockTest.testPrintContent":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":418,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":43,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":71,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":301,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":6,"org.easymock.tests2.UsageConstraintsTest.greaterThan":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":435,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":151,"org.easymock.samples.ExampleTest.voteForRemoval":489,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":60,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":174,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":152,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":509,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":383,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":143,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":467,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":11,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":156,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":67,"org.easymock.tests2.CaptureTest.testCaptureFirst":109,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":157,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":218,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":349,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":176,"org.easymock.tests2.CaptureTest.testCapture2_2446744":108,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":322,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":402,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":453,"org.easymock.tests.UsageExpectAndReturnTest.longType":345,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":415,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":154,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":510,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":35,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":438,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":241,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":33,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":474,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":405,"org.easymock.tests.UsageCallCountTest.tooManyCalls":454,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":290,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":350,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":42,"org.easymock.tests.MockingTest.testNiceClassMocking":466,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":248,"org.easymock.tests.MockingTest.testClassMocking":458,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":508,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":447,"org.easymock.tests2.UsageConstraintsTest.testContains":232,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":224,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":50,"org.easymock.tests.MockTypeTest.fromEasyMockClass":380,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":468,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":262,"org.easymock.tests.UsageExpectAndReturnTest.object":352,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":162,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":2,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":339,"org.easymock.tests.UsageTest.exactCallCountByLastCall":456,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":411,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":295,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":358,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":126,"org.easymock.tests.MockClassControlTest.testHashCode":333,"org.easymock.tests2.EasyMockSupportTest.testVerify":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":283,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":412,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":439,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":121,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":246,"org.easymock.tests.UsageVarargTest.varargCharAccepted":396,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":482,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageTest.openCallCountByLastCall":215,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":165,"org.easymock.tests.DefaultClassInstantiatorTest.object":55,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":14,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":202,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":125,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":149,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":23,"org.easymock.tests.CapturesMatcherTest.test":110,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":359,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":292,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":331,"org.easymock.tests2.UsageTest.resumeIfFailure":217,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":70,"org.easymock.tests2.StubTest.stubWithReturnValue":10,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":191,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":242,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":351,"org.easymock.tests2.SerializationTest.testAllMockedMethod":53,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":320,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":504,"org.easymock.samples.SupportTest.voteForRemovals":502,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":114,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":367,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":29,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":54,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":326,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":168,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":478,"org.easymock.tests.UsageExpectAndThrowTest.object":27,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":239,"org.easymock.tests2.DelegateToTest.testWrongClass":300,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":444,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":445,"org.easymock.samples.ConstructorCalledMockTest.testTax":497,"org.easymock.tests.UsageStrictMockTest.range":94,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":268,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":247,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":190,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":430,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":389,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":116,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":387,"org.easymock.tests2.CaptureTest.testCaptureNone":104,"org.easymock.tests.UsageUnorderedTest.message":84,"org.easymock.tests.UsageVerifyTest.twoReturns":86,"org.easymock.tests.UsageVarargTest.varargByteAccepted":401,"org.easymock.tests2.ThreadingTest.testThreadSafe":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":287,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":451,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":495,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":340,"org.easymock.tests2.CaptureTest.testCapture_2617107":98,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":115,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":324,"org.easymock.tests2.UsageConstraintsTest.any":230,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":427,"org.easymock.tests2.StubTest.stub":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":475,"org.easymock.tests.UsageExpectAndThrowTest.longType":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":325,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":483,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":426,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":258,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.SerializationTest.testClass":51,"org.easymock.tests.LimitationsTest.mockNativeMethod":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":361,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":201,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":259,"org.easymock.tests2.NameTest.nameForMocksControl":76,"org.easymock.tests2.MockedExceptionTest.testMockedException":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":275,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":48,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":463,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":21,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":261,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":137,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":192,"org.easymock.tests.MockingTest.testNicePartialClassMocking":461,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":142,"org.easymock.tests2.CaptureTest.testCaptureLast":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":0,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":199,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":304,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":61,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":254,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":240,"org.easymock.tests.MockingTest.testTwoMocks":459,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":25,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":244,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":506,"org.easymock.samples.ExampleTest.removeNonExistingDocument":493,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":424,"org.easymock.tests.UsageStrictMockTest.differentMethods":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":206,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":127,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":57,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":175,"org.easymock.tests2.MockBuilderTest.testCreateMockString":198,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":328,"org.easymock.tests.UsageExpectAndThrowTest.floatType":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":277,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":272,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":170,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":296,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":286,"org.easymock.samples.ExampleTest.voteAgainstRemoval":490,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":315,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":150,"org.easymock.tests.LimitationsTest.privateConstructor":364,"org.easymock.tests2.UsageConstraintsTest.testNotNull":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":44,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":62,"org.easymock.tests2.UsageTest.defaultResetToNice":216,"org.easymock.samples.ExampleTest.voteAgainstRemovals":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":316,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":357,"org.easymock.tests.UsageVarargTest.differentLength":398,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":200,"org.easymock.tests2.CallbackTest.callback":297,"org.easymock.tests2.UsageConstraintsTest.equals":223,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":146,"org.easymock.tests.UsageTest.openCallCountByLastCall":455,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":72,"org.easymock.tests.UsageCallCountTest.tooFewCalls":449,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":250,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":391,"org.easymock.tests.UsageThrowableTest.throwCheckedException":41,"org.easymock.tests.MockingTest.testStrictClassMocking":457,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":117,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":66,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":205,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":249,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":429,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":252,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":172,"org.easymock.tests.ObjectMethodsTest.testHashCode":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":4,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":177,"org.easymock.tests2.NameTest.nameForNiceMock":75,"org.easymock.tests2.DependencyTest.testInterfaceMocking":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":3,"org.easymock.samples.ExampleTest.addDocument":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":293,"org.easymock.tests2.DelegateToTest.testStubDelegate":299,"org.easymock.tests2.AnswerTest.stubAnswer":171,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":93,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":193,"org.easymock.tests.UsageVarargTest.varargLongAccepted":400,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":314,"org.easymock.tests.UsageExpectAndReturnTest.floatType":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":498,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests.UsageThrowableTest.noUpperLimit":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":134,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":237,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":220,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":263,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":101,"org.easymock.tests2.SerializationTest.test":52,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":56,"org.easymock.tests2.UsageConstraintsTest.testSame":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":343,"org.easymock.samples.SupportTest.addDocument":501,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":251,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":278,"org.easymock.tests.GenericTest.testPackageScope":368,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":133,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":464,"org.easymock.tests2.NameTest.nameForMock":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":354,"org.easymock.tests2.UsageStrictMockTest.differentMethods":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":197,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":147,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":31,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":437,"org.easymock.tests2.MockedExceptionTest.testRealException":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":480,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":431,"org.easymock.tests2.NameTest.nameForStrictMock":74,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":187,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":260,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":141,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":267,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":58,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":238,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":184,"org.easymock.tests2.UsageStrictMockTest.range":82,"org.easymock.tests2.UsageConstraintsTest.lessThan":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":129,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":507,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":313,"org.easymock.tests2.CaptureTest.testCaptureRightOne":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":282,"org.easymock.tests2.UsageConstraintsTest.testOr":227,"org.easymock.tests.UsageRangeTest.combination":434,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":138,"org.easymock.tests.UsageTest.wrongArguments":89,"org.easymock.tests2.MockBuilderTest.testWithConstructor":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":279,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":355,"org.easymock.tests.UsageVarargTest.varargShortAccepted":399,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":59,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":452,"org.easymock.tests2.UsageConstraintsTest.cmpTo":231,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":13,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":12,"org.easymock.tests2.CaptureTest.testCaptureFromStub":107,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":421,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":185,"org.easymock.tests.UsageTest.unexpectedCallWithArray":119,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":92,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":450,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":356,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":470,"org.easymock.tests2.UsageConstraintsTest.constraints":221,"org.easymock.samples.ExampleTest.addAndChangeDocument":494,"org.easymock.tests.UsageStrictMockTest.testVerify":472,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":500,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":469,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":416,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":374,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":348,"org.easymock.tests.LimitationsTest.abstractClass":363,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":375,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":160}}]
