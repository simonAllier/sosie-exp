[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[57,58],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[59,60,61,62,63,64,65],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[68,0,1,2,3,4,5,69,6,70,7,71,8,9,72,10,11,73,12,74,75,13,76,14,15,77,78,16,79,17,18,19,20,21,80,22,23,24,81,82,25,26,27,83,28,29,84,85,86,87,88,89,90,91,92,93,94,95,96,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,97,98,99,52,100,53,54,101,55,56],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[102,103,104,105,106,107,108,109,110,66,111,112,113,114,115,116,117,67,118,119,120,121,122,2,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,57,69,155,70,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,17,18,175,19,20,21,22,24,82,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,83,28,29,198,84,88,89,93,94,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,39,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,42,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,97,98,99,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,53,54,56,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[30,31,32,33,35,36],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[68,330,102,103,104,105,106,107,331,108,332,333,0,1,334,335,336,109,110,66,111,112,113,114,115,116,117,67,118,119,120,121,122,2,337,123,124,125,338,126,127,128,129,59,339,130,131,132,133,340,134,135,136,137,138,139,341,140,141,142,143,144,145,146,147,148,149,150,151,342,152,153,154,57,3,4,343,344,5,69,155,6,345,346,70,156,347,157,348,349,158,159,160,350,351,352,353,354,355,356,357,358,359,360,361,7,71,362,8,363,9,72,10,11,73,364,12,74,75,13,365,76,14,15,77,78,16,79,366,367,161,162,163,164,165,166,167,168,169,170,171,172,173,174,17,18,175,19,20,21,80,368,22,369,23,24,81,82,25,26,27,176,177,178,179,180,181,182,183,184,185,186,187,370,371,188,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,189,190,191,192,193,194,195,196,197,387,388,389,390,391,392,393,394,395,396,397,398,83,28,29,198,84,399,85,86,400,87,88,89,90,65,91,401,402,92,93,403,94,199,404,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,95,405,406,407,408,96,409,410,411,30,31,32,33,34,35,412,36,37,38,39,40,230,231,232,413,233,234,414,235,236,237,238,239,240,241,242,243,244,245,41,42,43,44,45,46,47,48,246,247,248,249,250,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,251,252,253,254,255,256,257,258,259,260,261,262,263,264,49,50,51,97,98,439,99,440,441,52,265,266,267,268,269,270,271,272,273,274,275,276,277,442,443,444,445,446,447,278,279,280,281,282,283,284,285,286,287,288,100,53,54,101,55,56,448,289,290,449,450,451,452,453,291,292,293,294,295,296,454,455,456,297,298,299,457,458,459,460,461,300,462,463,464,465,466,467,468,469,301,470,471,472,473,474,302,475,476,477,478,479,480,481,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,482,483,484,485,486,487,488,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[130,147,150,490],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[491],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[407],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[31,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.Range:83","failures":[110,66,112,113,114,115,116,120,124,128,135,140,146,153,157,159,161,163,164,167,168,170,171,173,183,184,185,186,189,190,191,192,193,223,229,239,244,251,252,254,255,256,257,258,259,282,283,284,285,286,290,297,298,299,304,307],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[121,122,2,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[163,164,170,171,183,185,186,189,190,191,192,229,252,254,257,258,282,283,285,286,297,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[229,493],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[109,66,67,132,133,135,137,138,341,149,153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"position":"org.easymock.internal.LastControl:95","failures":[109,66,67,132,133,135,137,138,341,149,153],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[127,306],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[127,437],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[143,239,282],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[121,122,2,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.internal.Range:44","failures":[68,330,102,103,104,105,106,107,331,108,332,333,0,1,334,335,336,109,110,66,111,112,113,114,115,116,117,67,118,119,120,121,122,2,337,123,124,125,338,126,127,128,129,59,339,130,131,132,133,340,134,135,136,137,138,139,341,140,141,142,143,144,145,146,147,148,149,150,151,342,152,153,154,57,3,495,496,497,4,343,344,5,69,155,6,345,346,70,156,347,157,348,349,158,159,160,350,351,352,353,354,355,356,357,358,359,360,361,7,71,362,8,363,9,72,10,11,73,364,12,74,75,13,365,76,14,15,77,78,16,79,366,367,161,162,163,164,165,166,167,168,169,170,171,172,173,174,17,18,175,19,20,21,80,368,22,369,23,24,81,82,25,26,27,176,177,178,179,180,181,182,183,184,185,186,187,370,371,188,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,189,190,191,192,193,194,195,196,197,387,388,389,390,391,392,393,394,395,396,397,398,83,28,29,198,84,399,85,86,400,87,88,89,90,65,91,401,402,92,93,403,94,199,404,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,95,405,406,407,408,96,409,410,411,30,31,32,33,34,35,412,36,37,38,39,40,230,231,232,413,233,234,414,235,236,237,238,239,240,241,242,243,244,245,41,42,43,44,45,46,47,48,246,247,248,249,250,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,251,252,253,254,255,256,257,258,259,260,261,262,263,264,49,50,51,97,98,439,99,440,441,52,265,266,267,268,269,270,271,272,273,274,275,276,277,442,443,444,498,445,446,447,278,279,280,281,282,283,284,285,286,287,288,100,53,54,101,55,56,448,289,290,449,450,451,452,453,291,292,293,294,295,296,454,455,456,297,298,299,457,458,459,460,461,300,462,463,464,465,466,467,468,469,301,470,471,472,473,474,302,475,476,477,478,479,480,481,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[102,104,105,107,333,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":133,"org.easymock.tests2.UsageTest.argumentsOrdered":171,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":251,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":383,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":425,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":166,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":330,"org.easymock.tests2.DelegateToTest.testReturnException":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":241,"org.easymock.tests.MockingTest.testPartialClassMocking":97,"org.easymock.tests.MockClassControlTest.testToString":43,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":386,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":308,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":60,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":139,"org.easymock.tests2.UsageTest.wrongArguments":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":303,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":271,"org.easymock.samples.ExampleTest.answerVsDelegate":103,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":96,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":441,"org.easymock.tests2.UsageConstraintsTest.testNull":135,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":48,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":382,"org.easymock.tests2.CaptureTest.testPrimitive":111,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":307,"org.easymock.tests.UsageTest.moreThanOneArgument":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":327,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":248,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":449,"org.easymock.tests.UsageTest.argumentsOrdered":258,"org.easymock.tests.UsageVarargTest.varargIntAccepted":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":64,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":397,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":277,"org.easymock.tests.ReplayStateInvalidUsageTest.times":478,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":355,"org.easymock.tests2.DependencyTest.testClassMocking":370,"org.easymock.tests2.AnswerTest.answer":157,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":432,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":197,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":406,"org.easymock.tests2.CaptureTest.testAnd":109,"org.easymock.tests2.UsageTest.strictResetToDefault":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":377,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":453,"org.easymock.tests2.DelegateToTest.testDelegate":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":323,"org.easymock.tests.LimitationsTest.mockFinalMethod":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":264,"org.easymock.tests2.DependencyTest.testClassMockingSupport":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":469,"org.easymock.tests2.CaptureTest.testCapture1_2446744":112,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":195,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":473,"org.easymock.tests.UsageThrowableTest.throwError":221,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":408,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":498,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":367,"org.easymock.samples.PartialClassMockTest.testGetArea":68,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":474,"org.easymock.tests.MockingTest.testInterfaceMocking":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":464,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":488,"org.easymock.tests2.UsageTest.niceToStrict":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":317,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":378,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":405,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":468,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":269,"org.easymock.tests.UsageOverloadedMethodTest.overloading":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":365,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":460,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":144,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":143,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":117,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":413,"org.easymock.tests.MockClassControlTest.testEquals":47,"org.easymock.tests2.EasyMockSupportClassTest.testAll":8,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":325,"org.easymock.tests2.CaptureTest.testCaptureAll":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":262,"org.easymock.tests.MockNameTest.defaultName":489,"org.easymock.tests2.UsageConstraintsTest.testMatches":145,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":471,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":249,"org.easymock.samples.ExampleTest.voteForRemovals":107,"org.easymock.tests.UsageVarargTest.allKinds":239,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":297,"org.easymock.samples.BasicClassMockTest.testPrintContent":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":227,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":245,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":338,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":412,"org.easymock.tests2.UsageConstraintsTest.greaterThan":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":363,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.samples.ExampleTest.voteForRemoval":104,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":36,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":177,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":26,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":497,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":80,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":161,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":56,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":375,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":240,"org.easymock.tests2.CaptureTest.testCaptureFirst":120,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":376,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":173,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":208,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":179,"org.easymock.tests2.UsageTest.moreThanOneArgument":163,"org.easymock.tests2.CaptureTest.testCapture2_2446744":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":433,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":93,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":238,"org.easymock.tests.GenericTest.testBridgedEquals":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":455,"org.easymock.tests.UsageExpectAndReturnTest.longType":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":260,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":373,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":326,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":482,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":324,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":246,"org.easymock.tests.UsageCallCountTest.tooManyCalls":456,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":226,"org.easymock.tests.MockingTest.testNiceClassMocking":52,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":69,"org.easymock.tests.MockingTest.testClassMocking":50,"org.easymock.tests2.UsageConstraintsTest.testContains":142,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":292,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":134,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":290,"org.easymock.tests.MockTypeTest.fromEasyMockClass":407,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":200,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests.UsageExpectAndReturnTest.object":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":381,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":61,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":234,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":486,"org.easymock.tests.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":450,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":445,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":217,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":230,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":388,"org.easymock.tests.MockClassControlTest.testHashCode":46,"org.easymock.tests2.EasyMockSupportTest.testVerify":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":75,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":451,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":457,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":194,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":174,"org.easymock.tests.UsageVarargTest.varargCharAccepted":233,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":411,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":438,"org.easymock.tests2.UsageTest.openCallCountByLastCall":167,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":384,"org.easymock.tests.DefaultClassInstantiatorTest.object":30,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":466,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":13,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":387,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":45,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":81,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":314,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":442,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":79,"org.easymock.tests2.UsageTest.resumeIfFailure":172,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":95,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":243,"org.easymock.tests2.StubTest.stubWithReturnValue":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":65,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":152,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":210,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":431,"org.easymock.samples.SupportTest.voteForRemovals":333,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":320,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":437,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":348,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":447,"org.easymock.tests.UsageExpectAndThrowTest.object":318,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":150,"org.easymock.tests2.DelegateToTest.testWrongClass":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":328,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":329,"org.easymock.tests.UsageStrictMockTest.range":285,"org.easymock.samples.ConstructorCalledMockTest.testTax":335,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":343,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":319,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":90,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":7,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":465,"org.easymock.tests2.CaptureTest.testCaptureNone":116,"org.easymock.tests.UsageUnorderedTest.message":229,"org.easymock.tests.UsageVerifyTest.twoReturns":299,"org.easymock.tests.UsageVarargTest.varargByteAccepted":237,"org.easymock.tests2.ThreadingTest.testThreadSafe":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":14,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":296,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":487,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":0,"org.easymock.tests2.CaptureTest.testCapture_2617107":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":306,"org.easymock.tests2.UsageConstraintsTest.any":140,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":477,"org.easymock.tests2.StubTest.stub":127,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":242,"org.easymock.tests.UsageExpectAndThrowTest.longType":311,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":34,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":476,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":184,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":392,"org.easymock.tests2.SerializationTest.testClass":121,"org.easymock.tests.LimitationsTest.mockNativeMethod":39,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":101,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":352,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":187,"org.easymock.tests2.NameTest.nameForMocksControl":192,"org.easymock.tests2.MockedExceptionTest.testMockedException":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":9,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":404,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":312,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":98,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests2.CaptureTest.testCaptureLast":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":350,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":301,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":156,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":138,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":151,"org.easymock.tests.MockingTest.testTwoMocks":51,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":316,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":170,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":154,"org.easymock.samples.ExampleTest.removeNonExistingDocument":331,"org.easymock.tests.UsageStrictMockTest.differentMethods":286,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":389,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":32,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":178,"org.easymock.tests2.MockBuilderTest.testCreateMockString":94,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":10,"org.easymock.tests.UsageExpectAndThrowTest.floatType":310,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":158,"org.easymock.tests.UsageVerifyTest.twoThrows":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":339,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":76,"org.easymock.samples.ExampleTest.voteAgainstRemoval":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":82,"org.easymock.tests.LimitationsTest.privateConstructor":38,"org.easymock.tests2.UsageConstraintsTest.testNotNull":153,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":228,"org.easymock.tests2.UsageTest.defaultResetToNice":169,"org.easymock.samples.ExampleTest.voteAgainstRemovals":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":216,"org.easymock.tests.UsageVarargTest.differentLength":414,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":351,"org.easymock.tests2.CallbackTest.callback":193,"org.easymock.tests2.UsageConstraintsTest.equals":340,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":369,"org.easymock.tests.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":491,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":305,"org.easymock.tests.UsageCallCountTest.tooFewCalls":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":272,"org.easymock.tests.UsageThrowableTest.throwCheckedException":225,"org.easymock.tests.MockingTest.testStrictClassMocking":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":479,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":346,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":160,"org.easymock.tests.ObjectMethodsTest.testHashCode":485,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":63,"org.easymock.tests2.NameTest.nameForNiceMock":191,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":180,"org.easymock.tests2.DependencyTest.testInterfaceMocking":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":62,"org.easymock.samples.ExampleTest.addDocument":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":15,"org.easymock.tests2.DelegateToTest.testStubDelegate":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.stubAnswer":159,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":283,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":401,"org.easymock.tests.UsageVarargTest.varargLongAccepted":236,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.floatType":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":129,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":336,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":396,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":148,"org.easymock.tests.UsageThrowableTest.noUpperLimit":222,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":131,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":3,"org.easymock.tests2.SerializationTest.test":122,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":113,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":31,"org.easymock.tests2.UsageConstraintsTest.testSame":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":202,"org.easymock.samples.SupportTest.addDocument":332,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":345,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":11,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":395,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":440,"org.easymock.tests2.NameTest.nameForMock":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":403,"org.easymock.tests2.UsageStrictMockTest.differentMethods":186,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":23,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":322,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":483,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":268,"org.easymock.tests2.MockedExceptionTest.testRealException":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":344,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":428,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":183,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":481,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":304,"org.easymock.tests2.NameTest.nameForStrictMock":190,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":87,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":4,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":493,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":149,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":33,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":85,"org.easymock.tests2.UsageStrictMockTest.range":185,"org.easymock.tests2.UsageConstraintsTest.lessThan":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":374,"org.easymock.tests2.CaptureTest.testCaptureRightOne":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":74,"org.easymock.tests2.UsageConstraintsTest.testOr":137,"org.easymock.tests.UsageRangeTest.combination":265,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":254,"org.easymock.tests2.MockBuilderTest.testWithConstructor":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":73,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":214,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":35,"org.easymock.tests.UsageVarargTest.varargShortAccepted":235,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":454,"org.easymock.tests2.UsageConstraintsTest.cmpTo":141,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":349,"org.easymock.tests2.CompareToTest.testLessThan":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":168,"org.easymock.tests2.CaptureTest.testCaptureFromStub":118,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":472,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":86,"org.easymock.tests.UsageTest.unexpectedCallWithArray":253,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":215,"org.easymock.tests2.UsageConstraintsTest.constraints":132,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":108,"org.easymock.tests.UsageStrictMockTest.testVerify":288,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":334,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests2.CompareToTest.testGreateThan":490,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":261,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":114,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":275,"org.easymock.tests.LimitationsTest.abstractClass":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":276,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":379}}]
