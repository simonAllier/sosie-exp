[{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.Injector:116","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[5,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"field"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[48,42,43,49,44,45,50,46,51,52,3,53,54,55,56,57,58,59,60,61,62,63,4,64,65,66,67,68,69,6,70,71,72,73,74,32,75,76,77,33,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,10,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,17,19,20,150,151,152,153,154,155,156,157,158,159,160,161,25,26,27,162,163,164,165,166,47,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[12,272,100,273,118,274,275,276,277,278,279,280,184,281,282,283,241,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[48,42,43,49,44,45,50,46,285,51,1,2,52,3,53,54,55,56,286,57,58,59,60,287,288,289,290,291,61,292,293,294,295,296,297,298,299,62,63,4,5,300,64,65,66,67,68,69,6,70,71,301,302,303,304,305,306,72,73,74,32,75,307,76,77,33,34,78,79,80,81,82,83,84,85,86,87,88,308,89,90,91,92,93,94,95,96,7,309,97,8,310,311,9,10,0,312,11,98,313,99,12,272,100,273,314,315,316,317,318,101,319,320,321,322,323,324,325,326,327,328,329,330,102,103,104,331,105,106,107,108,109,110,111,112,332,113,114,115,116,117,333,118,119,120,121,122,334,123,124,125,126,127,128,335,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,336,337,338,339,340,146,341,342,147,148,149,13,14,15,16,17,18,19,20,343,21,22,23,24,344,345,346,347,348,349,150,151,152,153,154,155,156,157,350,158,159,351,160,352,353,354,161,355,356,25,357,358,359,360,361,362,363,364,365,26,366,367,368,369,370,27,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,162,163,164,165,166,47,167,168,403,404,405,406,407,408,169,170,171,172,173,174,175,176,409,177,178,179,180,181,182,183,410,274,275,276,411,412,413,414,415,416,417,418,419,420,421,422,423,277,278,279,280,184,281,28,424,425,426,427,29,428,429,430,431,185,186,187,188,432,189,190,30,191,192,31,433,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,434,435,436,437,438,439,440,441,442,443,282,444,213,445,214,215,446,447,448,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,449,450,237,451,452,453,454,455,456,238,283,457,458,459,460,461,462,239,240,241,242,243,244,245,246,247,248,249,463,250,251,464,252,253,254,255,256,257,258,465,466,467,468,469,470,471,472,259,260,473,261,474,475,476,477,478,479,480,481,482,483,484,262,485,486,487,488,489,490,491,492,493,494,284,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,263,511,512,513,264,265,514,266,267,268,269,270,271],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[48,42,43,49,44,45,50,46,285,51,52,3,53,54,55,56,57,58,59,60,287,288,289,290,291,61,292,293,294,295,296,297,298,299,62,63,300,64,65,66,67,68,69,70,71,72,73,74,75,76,34,78,79,80,81,82,83,84,85,86,87,88,308,89,90,91,92,93,94,95,96,7,309,97,310,311,9,10,0,312,11,98,313,99,12,272,100,273,314,315,316,317,318,101,319,320,321,322,323,324,325,326,327,328,329,330,102,103,104,331,105,106,107,108,109,110,111,112,332,113,114,115,116,117,333,118,119,120,121,122,334,123,124,125,126,127,128,335,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,336,337,338,339,340,146,341,342,147,148,149,13,14,15,16,17,18,19,20,22,23,24,344,347,348,349,150,151,152,153,154,155,156,157,350,158,159,351,160,352,353,161,356,25,357,358,361,364,26,366,367,368,369,370,27,395,396,397,398,399,400,401,402,162,163,164,165,166,47,167,168,403,404,405,406,407,408,169,170,171,172,173,174,175,176,409,177,178,179,180,181,182,183,410,274,275,276,515,411,412,413,414,415,416,516,417,418,419,420,421,422,423,277,278,279,280,184,281,28,426,427,29,428,429,430,431,185,186,187,188,432,189,190,30,191,192,31,433,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,434,435,436,437,438,439,440,441,442,443,282,444,213,445,214,215,446,447,448,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,449,450,237,451,452,453,454,455,456,238,283,457,458,459,460,461,462,239,240,241,242,243,244,245,246,247,248,249,463,250,251,464,252,253,254,255,256,257,258,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,262,485,486,487,488,489,490,491,492,493,494,284,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,263,511,512,513,264,265,514,266,267,268,269,270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[6,70,71,517],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[49,102,104,331,105,214],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[48,42,43,49,44,45,50,46,285,51,52,55,56,57,58,59,60,287,288,289,291,61,292,293,294,297,62,63,4,300,64,65,66,67,68,69,70,72,76,78,79,80,81,82,83,84,85,86,87,88,308,89,90,91,93,98,99,12,272,100,273,314,315,316,318,101,319,320,321,324,325,326,327,328,329,330,102,103,104,331,105,106,107,108,109,110,111,112,332,113,114,115,116,117,333,118,119,120,121,122,123,124,125,126,127,128,335,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,337,338,339,340,146,341,342,147,148,149,13,348,349,150,151,152,153,154,155,156,157,350,158,159,351,160,395,396,397,398,399,400,401,402,162,163,164,165,166,47,167,168,404,406,407,408,169,170,171,172,173,174,175,176,409,177,178,179,180,181,182,183,410,274,275,276,418,419,420,421,422,277,278,279,280,184,281,426,427,428,429,430,431,185,186,187,188,432,189,190,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,434,435,436,437,438,439,440,441,442,443,282,444,213,445,214,215,446,447,448,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,452,453,454,455,456,238,283,457,458,459,460,461,462,239,240,241,242,243,244,245,246,247,248,249,250,251,464,252,253,254,255,256,257,258,465,466,467,468,469,472,473,474,475,485,486,487,503,509,263,511,512,513,264,265,514,266,267,268,269,270,271],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[273,215],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:116","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[371],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[435,444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[518],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[42,43,49,44,45,46,51,1,1,2,2,3,56,57,58,59,60,61,292,62,63,4,300,65,66,67,68,69,6,70,72,73,74,32,75,76,77,33,78,79,80,81,82,83,84,85,86,87,88,308,89,90,91,92,93,94,95,96,7,97,311,9,10,0,11,98,99,12,272,100,273,101,319,326,327,328,329,330,102,103,104,331,105,106,107,108,109,110,111,112,332,113,114,115,116,333,118,119,120,121,122,123,124,125,126,127,128,335,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,337,146,341,342,147,148,149,13,14,15,17,18,19,20,22,23,24,150,151,152,153,154,155,156,157,350,158,159,351,160,161,25,26,27,395,396,397,398,399,400,401,402,162,163,164,165,166,47,167,168,404,406,407,169,170,171,172,173,174,175,176,409,178,179,180,181,182,183,274,275,276,419,420,422,423,277,278,279,280,184,281,28,426,427,29,428,429,185,191,31,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,445,214,215,446,447,448,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,452,453,454,455,456,238,283,457,458,459,460,461,462,239,240,241,242,243,244,245,246,256,257,258,465,466,467,468,469,472,259,260,261,477,479,480,481,482,262,485,486,487,503,509,263,511,512,513,264,265,514,266,267,268,269,270,271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[48,42,43,49,44,45,50,46,285,51,1,2,52,3,53,54,55,56,57,58,59,60,287,288,289,290,291,61,292,293,294,295,296,297,298,299,62,63,4,5,300,64,65,66,67,68,69,6,70,71,72,73,74,32,75,76,77,33,78,79,80,81,82,83,84,85,86,87,88,308,89,90,91,92,93,94,95,96,7,309,97,8,310,311,9,10,0,312,11,98,313,99,12,272,100,273,314,315,316,317,318,101,319,320,321,322,323,324,326,327,328,329,330,102,103,104,331,105,106,107,108,109,110,111,112,332,113,114,115,116,117,333,118,119,120,121,122,334,123,124,125,126,127,128,335,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,336,337,338,339,340,146,341,342,147,148,149,13,14,15,16,17,18,19,20,21,22,23,24,344,347,348,349,150,151,152,153,154,155,156,157,350,158,159,351,160,352,353,354,161,355,356,25,357,358,359,360,361,362,363,364,365,26,366,367,368,369,370,27,371,372,395,396,397,398,399,400,401,402,162,163,164,165,166,47,167,168,403,404,405,406,407,408,169,170,171,172,173,174,175,176,409,177,178,179,180,181,182,183,410,274,275,276,411,412,413,414,415,416,417,418,419,420,421,422,423,277,278,279,280,184,281,28,426,427,29,428,429,430,431,185,186,187,188,432,189,190,30,191,192,31,433,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,434,435,436,437,438,439,440,441,442,443,282,444,213,445,214,215,446,447,448,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,449,450,237,451,452,453,454,455,456,238,283,457,458,459,460,461,462,239,240,241,242,243,244,245,246,247,248,249,463,250,251,464,252,253,254,255,256,257,258,465,466,467,468,469,470,471,472,259,260,473,261,474,475,476,477,478,479,480,481,482,483,484,262,485,486,487,488,489,490,491,492,493,494,284,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,263,511,512,513,264,265,514,266,267,268,269,270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[148,149],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[396],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[49,102,104,331,105,214,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":122,"org.easymock.tests2.UsageTest.argumentsOrdered":159,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":264,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":497,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":155,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":52,"org.easymock.tests2.DelegateToTest.testReturnException":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":278,"org.easymock.tests.MockingTest.testPartialClassMocking":259,"org.easymock.tests.MockClassControlTest.testToString":479,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":336,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":506,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":216,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":63,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":394,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":128,"org.easymock.tests2.UsageTest.wrongArguments":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":239,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":401,"org.easymock.samples.ExampleTest.answerVsDelegate":49,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":29,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":475,"org.easymock.tests2.UsageConstraintsTest.testNull":124,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":94,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":484,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":114,"org.easymock.tests2.CaptureTest.testPrimitive":81,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":235,"org.easymock.tests.UsageTest.moreThanOneArgument":265,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":467,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":452,"org.easymock.tests.UsageTest.argumentsOrdered":270,"org.easymock.tests.UsageVarargTest.varargIntAccepted":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":165,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":346,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":490,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":378,"org.easymock.tests.ReplayStateInvalidUsageTest.times":442,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":61,"org.easymock.tests2.DependencyTest.testClassMocking":298,"org.easymock.tests2.AnswerTest.answer":146,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":504,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":329,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":425,"org.easymock.tests2.CaptureTest.testAnd":78,"org.easymock.tests2.UsageTest.strictResetToDefault":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":466,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":512,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":110,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":456,"org.easymock.tests2.DelegateToTest.testDelegate":105,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":231,"org.easymock.tests.LimitationsTest.mockFinalMethod":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":462,"org.easymock.tests2.DependencyTest.testClassMockingSupport":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":406,"org.easymock.tests2.CaptureTest.testCapture1_2446744":82,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":327,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":436,"org.easymock.tests.UsageThrowableTest.throwError":169,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":427,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":469,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":381,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.MockingTest.testInterfaceMocking":473,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":397,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":423,"org.easymock.tests2.UsageTest.niceToStrict":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":361,"org.easymock.tests2.ThreadingTest.testChangeDefault":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":488,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":17,"org.easymock.tests2.MockBuilderTest.testCreateMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":294,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":225,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":111,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":424,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":487,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":430,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":399,"org.easymock.tests.UsageOverloadedMethodTest.overloading":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":133,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":204,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":244,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":132,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":87,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":463,"org.easymock.tests.MockClassControlTest.testEquals":483,"org.easymock.tests2.EasyMockSupportClassTest.testAll":161,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":460,"org.easymock.tests2.CaptureTest.testCaptureAll":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":328,"org.easymock.tests.MockNameTest.defaultName":457,"org.easymock.tests2.UsageConstraintsTest.testMatches":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":468,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":434,"org.easymock.samples.ExampleTest.voteForRemovals":46,"org.easymock.tests.UsageVarargTest.allKinds":256,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":461,"org.easymock.samples.BasicClassMockTest.testPrintContent":54,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":175,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":320,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":331,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":516,"org.easymock.tests2.UsageConstraintsTest.greaterThan":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":511,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":0,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":382,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":417,"org.easymock.samples.ExampleTest.voteForRemoval":44,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":57,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":428,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":7,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":374,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":262,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":108,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":277,"org.easymock.tests2.CaptureTest.testCaptureFirst":90,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":109,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":200,"org.easymock.tests2.UsageTest.moreThanOneArgument":152,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":59,"org.easymock.tests2.CaptureTest.testCapture2_2446744":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":505,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":23,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":255,"org.easymock.tests.GenericTest.testBridgedEquals":433,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":189,"org.easymock.tests.UsageExpectAndReturnTest.longType":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":458,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":234,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":395,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":141,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":465,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":275,"org.easymock.tests.UsageCallCountTest.tooManyCalls":190,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":174,"org.easymock.tests.MockingTest.testNiceClassMocking":476,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":74,"org.easymock.tests.MockingTest.testClassMocking":471,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":431,"org.easymock.tests2.UsageConstraintsTest.testContains":131,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":100,"org.easymock.tests2.UsageConstraintsTest.testFind":123,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":246,"org.easymock.tests.MockTypeTest.fromEasyMockClass":426,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":99,"org.easymock.tests.UsageExpectAndReturnTest.object":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":97,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":113,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":251,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":421,"org.easymock.tests.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":453,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":403,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":209,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":214,"org.easymock.tests.MockClassControlTest.testHashCode":482,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":363,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":454,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":486,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":213,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":326,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":325,"org.easymock.tests.UsageVarargTest.varargCharAccepted":250,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":515,"org.easymock.tests2.CaptureTest.testCaptureMultiple":518,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":510,"org.easymock.tests2.UsageTest.openCallCountByLastCall":156,"org.easymock.tests.DefaultClassInstantiatorTest.object":411,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":485,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":419,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":290,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":314,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":481,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":9,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":380,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":222,"org.easymock.tests.ReplayStateInvalidCallsTest.times":386,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":210,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":274,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":387,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":27,"org.easymock.tests2.UsageTest.resumeIfFailure":351,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":280,"org.easymock.tests2.StubTest.stubWithReturnValue":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":142,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":202,"org.easymock.tests2.SerializationTest.testAllMockedMethod":71,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":503,"org.easymock.samples.SupportTest.voteForRemovals":42,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":228,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":517,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":509,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":341,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":405,"org.easymock.tests.UsageExpectAndThrowTest.object":226,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":139,"org.easymock.tests2.DelegateToTest.testWrongClass":104,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":384,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":257,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":258,"org.easymock.tests.UsageStrictMockTest.range":181,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":348,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":19,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":269,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":400,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":376,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":398,"org.easymock.tests2.CaptureTest.testCaptureNone":86,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":302,"org.easymock.tests.UsageUnorderedTest.message":236,"org.easymock.tests.UsageVerifyTest.twoReturns":164,"org.easymock.tests.UsageVarargTest.varargByteAccepted":254,"org.easymock.tests2.ThreadingTest.testThreadSafe":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":366,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":188,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":422,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":53,"org.easymock.tests2.CaptureTest.testCapture_2617107":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":507,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":242,"org.easymock.tests2.UsageConstraintsTest.any":129,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":441,"org.easymock.tests2.StubTest.stub":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":508,"org.easymock.tests.UsageExpectAndThrowTest.longType":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":279,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":415,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":440,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":66,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":101,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests.LimitationsTest.mockNativeMethod":237,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":31,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":289,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":392,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":69,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":303,"org.easymock.tests2.NameTest.nameForMocksControl":340,"org.easymock.tests2.MockedExceptionTest.testMockedException":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":356,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":220,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":261,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":313,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":91,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":20,"org.easymock.tests.MockingTest.testNicePartialClassMocking":260,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":96,"org.easymock.tests2.CaptureTest.testCaptureLast":85,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":407,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":391,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":140,"org.easymock.tests.MockingTest.testTwoMocks":472,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":388,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":224,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":144,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":306,"org.easymock.samples.ExampleTest.removeNonExistingDocument":285,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":438,"org.easymock.tests.UsageStrictMockTest.differentMethods":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":293,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":316,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":413,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":305,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":58,"org.easymock.tests2.MockBuilderTest.testCreateMockString":24,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":477,"org.easymock.tests.UsageExpectAndThrowTest.floatType":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":357,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":147,"org.easymock.tests.UsageVerifyTest.twoThrows":163,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":26,"org.easymock.samples.ExampleTest.voteAgainstRemoval":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":498,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":396,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":10,"org.easymock.tests.LimitationsTest.privateConstructor":450,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":36,"org.easymock.tests2.UsageConstraintsTest.testNotNull":143,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":176,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":12,"org.easymock.tests2.UsageTest.defaultResetToNice":350,"org.easymock.samples.ExampleTest.voteAgainstRemovals":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":499,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":208,"org.easymock.tests.UsageVarargTest.differentLength":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":288,"org.easymock.tests2.CallbackTest.callback":72,"org.easymock.tests2.UsageConstraintsTest.equals":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":8,"org.easymock.tests.UsageTest.openCallCountByLastCall":267,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":241,"org.easymock.tests.UsageCallCountTest.tooFewCalls":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":402,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":304,"org.easymock.tests.UsageThrowableTest.throwCheckedException":173,"org.easymock.tests.MockingTest.testStrictClassMocking":470,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":283,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":292,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":443,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":76,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":149,"org.easymock.tests.ObjectMethodsTest.testHashCode":420,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":390,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":60,"org.easymock.tests2.NameTest.nameForNiceMock":339,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":385,"org.easymock.tests2.DependencyTest.testInterfaceMocking":62,"org.easymock.samples.ExampleTest.addDocument":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":367,"org.easymock.tests2.DelegateToTest.testStubDelegate":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.AnswerTest.stubAnswer":148,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":179,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":343,"org.easymock.tests.UsageVarargTest.varargLongAccepted":253,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":496,"org.easymock.tests.UsageExpectAndReturnTest.floatType":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":446,"org.easymock.tests.UsageThrowableTest.noUpperLimit":170,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":322,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":120,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":344,"org.easymock.tests2.SerializationTest.test":70,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":412,"org.easymock.tests2.UsageConstraintsTest.testSame":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":194,"org.easymock.samples.SupportTest.addDocument":48,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":307,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":375,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":358,"org.easymock.tests.GenericTest.testPackageScope":191,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":492,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":321,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":474,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":373,"org.easymock.tests2.NameTest.nameForMock":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":205,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":41,"org.easymock.tests2.UsageStrictMockTest.differentMethods":68,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":230,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":418,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":513,"org.easymock.tests2.MockedExceptionTest.testRealException":273,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":501,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":500,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":65,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":240,"org.easymock.tests2.NameTest.nameForStrictMock":338,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":16,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":95,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":347,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":414,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":138,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":14,"org.easymock.tests2.UsageStrictMockTest.range":67,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":379,"org.easymock.tests2.UsageConstraintsTest.lessThan":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":495,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":107,"org.easymock.tests2.CaptureTest.testCaptureRightOne":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":362,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":301,"org.easymock.tests2.UsageConstraintsTest.testOr":126,"org.easymock.tests.UsageRangeTest.combination":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":92,"org.easymock.tests.UsageTest.wrongArguments":266,"org.easymock.tests2.MockBuilderTest.testWithConstructor":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":359,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":478,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":206,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":416,"org.easymock.tests.UsageVarargTest.varargShortAccepted":252,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":432,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":393,"org.easymock.tests2.UsageConstraintsTest.cmpTo":130,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":342,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":491,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests2.CaptureTest.testCaptureFromStub":308,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":435,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":15,"org.easymock.tests.UsageTest.unexpectedCallWithArray":514,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":389,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":187,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":207,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":180,"org.easymock.tests2.UsageConstraintsTest.constraints":121,"org.easymock.samples.ExampleTest.addAndChangeDocument":51,"org.easymock.tests.UsageStrictMockTest.testVerify":410,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":55,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":459,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":47,"org.easymock.tests.LimitationsTest.abstractClass":449,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":199,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":248}}]
