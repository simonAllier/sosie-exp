[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[4,5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[53],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","sourceCode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))","type":"CtReturnImpl"},"failures":[54,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[57,58],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[4,5,60,61,62,63,64,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[66,67,68,69,70,71,48,72,73,74,75,76,77,78,79,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[7,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[83,84],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[85,86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[88,89,90,67,91,92,93,32,36,37,39,42,94,68,69,95,96,97,98,99,100,101,102,103,104,71,48,72,49,105,106,77,107,108,0,109,110,111,112,113,114,115,116,117,78,79,118,119,120,121,122,123,124,125,2,126,127],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[128,129,130],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[83,84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[131,132,133,134,135,136,68,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,4,4,5,5,50,78,153,119,121,154,122,123,124,155,125,53,126,156,127,157,158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageConstraintsTest.testMatches":125,"org.easymock.tests2.UsageTest.argumentsOrdered":110,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":23,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":151,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":0,"org.easymock.tests2.StubTest.stubWithReturnValue":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":87,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":40,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":82,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":117,"org.easymock.tests2.AnswerTest.stubAnswer":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":28,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":86,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":68,"org.easymock.tests.UsageExpectAndThrowTest.object":38,"org.easymock.tests2.UsageConstraintsTest.greaterThan":53,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":60,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":102,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":59,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":95,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":145,"org.easymock.tests2.UsageTest.wrongArguments":107,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":56,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests.UsageStrictMockTest.range":69,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":126,"org.easymock.tests.UsageThrowableTest.noUpperLimit":89,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":119,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests2.UsageConstraintsTest.testNull":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":39,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":116,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":147,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":47,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":15,"org.easymock.tests.UsageTest.moreThanOneArgument":67,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests2.UsageConstraintsTest.testSame":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":150,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":85,"org.easymock.tests.UsageUnorderedTest.message":66,"org.easymock.tests.GenericTest.testPackageScope":128,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests.UsageVerifyTest.twoReturns":72,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":132,"org.easymock.tests.UsageTest.argumentsOrdered":93,"org.easymock.tests.GenericTest.testBridgedEquals":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":46,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":144,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":62,"org.easymock.tests2.UsageStrictMockTest.differentMethods":80,"org.easymock.tests2.StubTest.stub":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":143,"org.easymock.tests.UsageExpectAndThrowTest.longType":31,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":42,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":64,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":104,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":134,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":33,"org.easymock.tests2.MockedExceptionTest.testMockedException":54,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":149,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":103,"org.easymock.tests2.UsageConstraintsTest.testContains":124,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":24,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":32,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":58,"org.easymock.tests2.UsageConstraintsTest.testFind":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":43,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":22,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":94,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":74,"org.easymock.tests.ErrorMessageTest.testGetters":75,"org.easymock.tests2.UsageStrictMockTest.range":79,"org.easymock.tests2.UsageConstraintsTest.lessThan":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":136,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":133,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":113,"org.easymock.tests.UsageThrowableTest.throwError":14,"org.easymock.tests.UsageStrictMockTest.differentMethods":70,"org.easymock.tests2.UsageConstraintsTest.testOr":123,"org.easymock.tests.UsageRangeTest.combination":101,"org.easymock.tests.UsageTest.wrongArguments":91,"org.easymock.tests2.MockBuilderTest.testCreateMockString":7,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":152,"org.easymock.tests.UsageExpectAndThrowTest.floatType":30,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":2,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":10,"org.easymock.tests.UsageVerifyTest.twoThrows":48,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":26,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":9,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":140,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":81,"org.easymock.tests2.UsageTest.niceToStrict":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":13,"org.easymock.tests2.UsageConstraintsTest.testNotNull":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":20,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":25,"org.easymock.tests2.CaptureTest.testCaptureFromStub":158,"org.easymock.tests2.CallbackTest.callback":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":37,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":35,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":16,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":153,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":27,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":61,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":100,"org.easymock.tests2.UsageConstraintsTest.constraints":120,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":34,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":155,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":21,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":99,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":11,"org.easymock.tests.UsageThrowableTest.throwCheckedException":17,"org.easymock.tests2.UsageTest.resumeIfFailure":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":141,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":142,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":45,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":12,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":115,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":76}}]
