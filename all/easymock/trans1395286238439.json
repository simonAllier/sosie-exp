[{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[1,2,3,4,5],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[6],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,2,204,3,205,6,206,207,208,209,210,211,212,213,214,215,216,217,218,219,4,220,221,222,223,224,5,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,0,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[7,8,9,171,181],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,32,36,37,38,43,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,76,87,88,90,91,92,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,119,121,123,126,129,132,133,134,135,136,137,138,143,146,148,150,151,152,158,168,171,181,187,190,194,196,198,202,203,205,206,207,208,210,211,212,213,214,216,217,219,4,221,222,223,224,5,225,230,231,235,236,237,238,239,240,245,246,248,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,280,283,284,285,287,288,294,295,304,305,307,312,317,325,328,329,330,350,377,378,396,397,398,400,401,402,403,404,405,406,407,408,411,412,413,414,415,416,417,418,419,420,421,422,428,429,430,431,432,433,435,436,446,450,458,459,462,463,465,470,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[7,8,33,114,480,127],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:99","sourceCode":"return ((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","type":"CtReturnImpl"},"failures":[9,15,16,18,20,22,109,111,119,213,350,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[122,482,483,484,485,486,130],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[388,392],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[487,488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[1,2,4,5],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[221],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[58,59,61,62,63,64,65,70,219,224],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[57,59,67,3,205,207,209,210,212,221,225],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[489,411],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[25,35,38,134,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[10,23,71,72,73,74,75,76,77,78,79,80,81,82,153,154,155,156,157,158,159,160,161,162,163,164],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[41,42,43,44,192,238,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,379,413,415,418,419,420,421,422,442,443,444,445,446,447,459],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[49,50,257,258,412],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[236,239,294,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[248],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[224,225,232,234],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[409,410,456,457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[59,3,210,221],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[122,482,483,484,485,486,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1660","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:61","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator","type":"CtReturnImpl"},"failures":[9,11,12,24,25,27,28,29,30,32,34,35,36,37,38,39,40,41,42,43,113,115,116,118,119,120,121,123,125,126,128,132,133,135,137,139,140,152,165,166,168,170,171,172,173,174,176,177,178,179,181,182,183,184,185,186,187,242,243,244,245,246,248,251,491,492,493,331,334,342,343,344,345,346,347,348,349,387,388,389,390,391,392,394,433,434,435,436,437,438,448,449,450,451],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[47,50,51,53,54,55,56,89,255,258,259,280,282,283,296,323,412,413,414],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1039","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[25,27,29,35,38,47,49,50,254,255,257,258,260,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[150,151,152,494],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[14,194,196,198,237],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:115","sourceCode":"for (final org.easymock.internal.MethodSerializationWrapper org.easymock.internal.MethodSerializationWrapper : java.util.Set<org.easymock.internal.MethodSerializationWrapper>) {\n    try {\n        java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n    }\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[150,151,152,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":205,"org.easymock.tests2.UsageTest.argumentsOrdered":97,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":322,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":363,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":92,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testReturnException":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":443,"org.easymock.tests.MockingTest.testPartialClassMocking":245,"org.easymock.tests.MockClassControlTest.testToString":344,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":52,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":440,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":175,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":302,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":482,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":211,"org.easymock.tests2.UsageTest.wrongArguments":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":261,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":340,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":334,"org.easymock.tests2.UsageConstraintsTest.testNull":207,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":109,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":349,"org.easymock.tests2.CaptureTest.testPrimitive":60,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":321,"org.easymock.tests.UsageTest.moreThanOneArgument":323,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":425,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":289,"org.easymock.tests.UsageTest.argumentsOrdered":329,"org.easymock.tests.UsageVarargTest.varargIntAccepted":398,"org.easymock.tests.InvocationTest.testEquals":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":486,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":163,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":432,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":76,"org.easymock.tests.ReplayStateInvalidUsageTest.times":276,"org.easymock.tests2.DependencyTest.testClassMocking":228,"org.easymock.tests2.AnswerTest.answer":143,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":370,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":86,"org.easymock.tests2.CaptureTest.testAnd":57,"org.easymock.tests2.UsageTest.strictResetToDefault":88,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":104,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":352,"org.easymock.tests2.DelegateToTest.testDelegate":198,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":317,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":491,"org.easymock.tests.LimitationsTest.mockFinalMethod":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":446,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":301,"org.easymock.tests2.DependencyTest.testClassMockingSupport":229,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":294,"org.easymock.tests2.CaptureTest.testCapture1_2446744":61,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":84,"org.easymock.tests.UsageThrowableTest.throwError":415,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":270,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":333,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":189,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.MockingTest.testInterfaceMocking":247,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":271,"org.easymock.tests2.CompareToTest.testLessOrEqual":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":429,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":453,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":176,"org.easymock.tests2.UsageTest.niceToStrict":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":119,"org.easymock.tests2.MockBuilderTest.testCreateMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":184,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":79,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":311,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":105,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":410,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":338,"org.easymock.tests.UsageOverloadedMethodTest.overloading":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":217,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":471,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":377,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":216,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":66,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":399,"org.easymock.tests2.EasyMockSupportClassTest.testAll":168,"org.easymock.tests.MockClassControlTest.testEquals":348,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":436,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":319,"org.easymock.tests2.CaptureTest.testCaptureAll":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":299,"org.easymock.tests.MockNameTest.defaultName":395,"org.easymock.tests2.UsageConstraintsTest.testMatches":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":426,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":268,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests.UsageVarargTest.allKinds":407,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":412,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":300,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":421,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":160,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":197,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":393,"org.easymock.tests2.UsageConstraintsTest.greaterThan":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":351,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":394,"org.easymock.samples.ExampleTest.voteForRemoval":15,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":39,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":30,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":433,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":102,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":442,"org.easymock.tests2.CaptureTest.testCaptureFirst":70,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":103,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":99,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":467,"org.easymock.tests2.CaptureTest.testCapture2_2446744":69,"org.easymock.tests2.UsageTest.moreThanOneArgument":89,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":202,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":371,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":406,"org.easymock.tests.GenericTest.testBridgedEquals":438,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":287,"org.easymock.tests.UsageExpectAndReturnTest.longType":463,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":297,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":320,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":224,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":423,"org.easymock.tests.UsageCallCountTest.tooManyCalls":288,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":468,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":420,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":133,"org.easymock.tests.MockingTest.testNiceClassMocking":251,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":493,"org.easymock.tests.MockingTest.testClassMocking":243,"org.easymock.tests2.UsageConstraintsTest.testContains":215,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":281,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":206,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":379,"org.easymock.tests.MockTypeTest.fromEasyMockClass":332,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":234,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests.UsageExpectAndReturnTest.object":470,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":483,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":401,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":383,"org.easymock.tests.UsageTest.exactCallCountByLastCall":330,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":476,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":396,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":237,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":154,"org.easymock.tests.MockClassControlTest.testHashCode":347,"org.easymock.tests2.EasyMockSupportTest.testVerify":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":178,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":409,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":83,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":149,"org.easymock.tests.UsageVarargTest.varargCharAccepted":400,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":386,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":376,"org.easymock.tests2.UsageTest.openCallCountByLastCall":93,"org.easymock.tests.DefaultClassInstantiatorTest.object":387,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":111,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":408,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":179,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":418,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":74,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":153,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":36,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":477,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":187,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":345,"org.easymock.tests2.UsageTest.resumeIfFailure":98,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":445,"org.easymock.tests2.StubTest.stubWithReturnValue":192,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":469,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":5,"org.easymock.tests2.SerializationTest.testAllMockedMethod":152,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":369,"org.easymock.samples.SupportTest.voteForRemovals":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":314,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":494,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":375,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":144,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":441,"org.easymock.tests.UsageExpectAndThrowTest.object":312,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":222,"org.easymock.tests2.DelegateToTest.testWrongClass":196,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":266,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":267,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests.UsageStrictMockTest.range":257,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":141,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":107,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":313,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":165,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":278,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":339,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":454,"org.easymock.tests2.CaptureTest.testCaptureNone":65,"org.easymock.tests.UsageUnorderedTest.message":411,"org.easymock.tests.UsageVerifyTest.twoReturns":414,"org.easymock.tests.UsageVarargTest.varargByteAccepted":405,"org.easymock.tests2.ThreadingTest.testThreadSafe":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":182,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":285,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":384,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":373,"org.easymock.tests2.UsageConstraintsTest.any":213,"org.easymock.tests2.StubTest.stub":191,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":444,"org.easymock.tests.UsageExpectAndThrowTest.longType":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":374,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":391,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":274,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":158,"org.easymock.tests2.SerializationTest.testClass":150,"org.easymock.tests.LimitationsTest.mockNativeMethod":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":479,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":73,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.tests2.NameTest.nameForMocksControl":56,"org.easymock.tests2.MockedExceptionTest.testMockedException":42,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":170,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":327,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":233,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":306,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":24,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":123,"org.easymock.tests.MockingTest.testNicePartialClassMocking":246,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":29,"org.easymock.tests2.CaptureTest.testCaptureLast":64,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":71,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":295,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":138,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":210,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":223,"org.easymock.tests.MockingTest.testTwoMocks":244,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":460,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":310,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":96,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":226,"org.easymock.samples.ExampleTest.removeNonExistingDocument":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":78,"org.easymock.tests.UsageStrictMockTest.differentMethods":258,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":272,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":155,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":488,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":389,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":201,"org.easymock.tests2.MockBuilderTest.testCreateMockString":128,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":172,"org.easymock.tests.UsageExpectAndThrowTest.floatType":304,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":167,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":146,"org.easymock.tests.UsageVerifyTest.twoThrows":413,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":131,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":181,"org.easymock.samples.ExampleTest.voteAgainstRemoval":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":364,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":37,"org.easymock.tests.LimitationsTest.privateConstructor":449,"org.easymock.tests2.UsageConstraintsTest.testNotNull":225,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":422,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":41,"org.easymock.tests2.UsageTest.defaultResetToNice":95,"org.easymock.samples.ExampleTest.voteAgainstRemovals":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":365,"org.easymock.tests.UsageVarargTest.differentLength":402,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":72,"org.easymock.tests2.CallbackTest.callback":190,"org.easymock.tests2.UsageConstraintsTest.equals":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":33,"org.easymock.tests.UsageTest.openCallCountByLastCall":326,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":263,"org.easymock.tests.UsageCallCountTest.tooFewCalls":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":341,"org.easymock.tests.UsageThrowableTest.throwCheckedException":419,"org.easymock.tests.MockingTest.testStrictClassMocking":242,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":459,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":137,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":77,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":136,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":148,"org.easymock.tests.ObjectMethodsTest.testHashCode":382,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":485,"org.easymock.tests2.NameTest.nameForNiceMock":55,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":203,"org.easymock.tests2.DependencyTest.testInterfaceMocking":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":484,"org.easymock.samples.ExampleTest.addDocument":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.DelegateToTest.testStubDelegate":195,"org.easymock.tests2.AnswerTest.stubAnswer":147,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":255,"org.easymock.tests.UsageVarargTest.varargLongAccepted":404,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":478,"org.easymock.tests.UsageExpectAndReturnTest.floatType":462,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":129,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests.UsageThrowableTest.noUpperLimit":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":162,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":220,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":204,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":139,"org.easymock.tests2.SerializationTest.test":151,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":62,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":461,"org.easymock.tests2.UsageConstraintsTest.testSame":208,"org.easymock.samples.SupportTest.addDocument":21,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":492,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":173,"org.easymock.tests.GenericTest.testPackageScope":435,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":161,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":249,"org.easymock.tests2.NameTest.nameForMock":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":472,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":127,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":34,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":464,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":316,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":380,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":353,"org.easymock.tests2.MockedExceptionTest.testRealException":44,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":336,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":366,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":262,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":279,"org.easymock.tests2.NameTest.nameForStrictMock":54,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":118,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":140,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":489,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":390,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":115,"org.easymock.tests2.UsageStrictMockTest.range":49,"org.easymock.tests2.UsageConstraintsTest.lessThan":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":177,"org.easymock.tests2.CaptureTest.testCaptureRightOne":67,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":487,"org.easymock.tests2.UsageConstraintsTest.testOr":209,"org.easymock.tests.UsageRangeTest.combination":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":25,"org.easymock.tests.UsageTest.wrongArguments":325,"org.easymock.tests2.MockBuilderTest.testWithConstructor":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":174,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":355,"org.easymock.tests.UsageVarargTest.varargShortAccepted":403,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":392,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":286,"org.easymock.tests2.UsageConstraintsTest.cmpTo":214,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":356,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.CaptureTest.testCaptureFromStub":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":269,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":116,"org.easymock.tests.UsageTest.unexpectedCallWithArray":324,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":284,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":474,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":256,"org.easymock.samples.ExampleTest.addAndChangeDocument":20,"org.easymock.tests.UsageStrictMockTest.testVerify":260,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":23,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":298,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":430,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":466,"org.easymock.tests.LimitationsTest.abstractClass":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":431,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":106}}]
