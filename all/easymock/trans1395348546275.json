[{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[4,4,5,5,40,41,42,43,44,57,90,91,92,93,94,112,113,116,295,137,138,150,296,297,298,299,300,172,173,176,177,178,179,184,186,187,189,190,196,197,198,217,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:441","sourceCode":"return java.util.List<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.List<java.lang.reflect.Method>.size()])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[301,302,303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[304,305,306,307,308,309,310,311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[29,38,47,48,49,51,52,53,54,55,56,61,95,96,97,108,113,116,149,150,151,152,153,177,182,188,196,207,208,210,211,212,213,214,219,226,242,244,245,248,249,251,252,254,256,258,282,283,313,314,315,316,286,287,288,289],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[25,26,27,28,29,30,317,58,114,318,319,320,321,168,169,170,171,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[25,26,27,28,29,30,47,48,53,58,59,61,62,63,64,65,66,96,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,141,168,169,170,171,242,249,282],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[255,322,323,324,325,326,327,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[222,223,224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[3,6,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[345,346],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,4,5,5,40,41,42,43,44,57,90,91,92,93,94,112,113,116,295,137,138,150,172,173,176,177,178,179,184,186,187,189,190,196,197,198,217,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:259","sourceCode":"return this","type":"CtReturnImpl"},"failures":[0,8,9,11,12,14,21,23,45,46,47,48,49,52,53,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,109,347,110,111,112,113,116,137,138,348,150,152,153,155,156,157,158,159,160,161,162,163,164,165,166,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,213,214,215,216,218,219,220,221,222,223,226,234,235,237,238,240,242,243,244,246,248,249,250,253,254,255,256,258,262,263,264,265,266,267,269,271,272,273,274,275,276,277,278,279,280,282,286,288,289,291,292,293,294],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[149,349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[350],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,4,5,5,6,7,8,9,10,11,12,13,14,351,15,352,353,354,355,356,16,17,18,19,20,357,21,22,358,359,360,361,23,362,25,26,27,28,29,30,363,364,31,32,33,34,35,36,37,38,365,366,367,368,369,370,371,372,373,374,317,375,39,40,41,42,43,44,45,46,47,376,304,377,378,48,49,50,51,52,53,54,55,56,57,58,379,380,381,59,60,61,62,63,64,65,66,382,383,384,385,386,387,388,389,390,391,392,393,67,68,394,69,395,396,397,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,398,101,102,103,104,105,106,107,108,399,400,401,402,403,404,405,406,109,347,110,111,112,113,114,115,116,407,408,409,410,411,412,413,414,415,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,295,137,138,139,416,140,141,417,348,142,318,319,320,143,144,145,146,147,148,149,150,151,152,153,154,418,305,306,307,419,420,421,422,423,424,296,425,426,427,297,298,428,321,429,308,430,309,431,432,299,433,434,435,436,300,310,311,437,312,155,156,157,158,159,160,161,162,163,164,165,166,167,438,439,440,441,168,169,170,171,172,173,174,175,442,176,177,178,179,180,181,443,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,444,329,330,331,445,332,199,333,334,335,446,447,336,200,201,202,203,204,337,338,339,448,340,205,341,342,343,449,450,344,206,207,208,209,210,211,212,213,214,215,216,217,218,219,451,452,220,221,222,223,224,453,225,226,227,454,228,229,230,231,232,233,455,234,456,457,458,235,236,237,459,238,460,239,240,461,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,462,463,256,464,465,257,258,259,260,466,261,262,263,264,265,266,267,268,467,269,468,469,270,271,272,273,470,471,274,275,276,277,278,279,280,281,282,283,472,313,314,315,316,284,285,286,287,288,289,290,473,474,475,291,476,477,292,478,479,480,481,482,483,484,485,486,293,487,488,489,490,491,294,492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":175,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests2.UsageTest.argumentsOrdered":252,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":430,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":247,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":3,"org.easymock.tests2.DelegateToTest.testReturnException":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":26,"org.easymock.tests.MockingTest.testPartialClassMocking":67,"org.easymock.tests.MockClassControlTest.testToString":401,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":472,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":481,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":117,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":292,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":323,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":112,"org.easymock.tests2.UsageTest.wrongArguments":245,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":145,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":413,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":396,"org.easymock.tests2.UsageConstraintsTest.testNull":177,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":265,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":164,"org.easymock.tests2.CaptureTest.testPrimitive":209,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":136,"org.easymock.tests.UsageTest.moreThanOneArgument":49,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":42,"org.easymock.tests.UsageTest.argumentsOrdered":55,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":352,"org.easymock.tests.UsageVarargTest.varargIntAccepted":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":90,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":94,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":303,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests.ReplayStateInvalidUsageTest.times":373,"org.easymock.tests2.DependencyTest.testClassMocking":451,"org.easymock.tests2.AnswerTest.answer":256,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":435,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":232,"org.easymock.tests2.CaptureTest.testAnd":206,"org.easymock.tests2.UsageTest.strictResetToDefault":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":159,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":110,"org.easymock.tests2.DelegateToTest.testDelegate":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":132,"org.easymock.tests.LimitationsTest.mockFinalMethod":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":20,"org.easymock.tests2.DependencyTest.testClassMockingSupport":452,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":407,"org.easymock.tests2.CaptureTest.testCapture1_2446744":210,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":230,"org.easymock.tests.UsageThrowableTest.throwError":59,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":367,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":412,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":493,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":394,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":91,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":482,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":118,"org.easymock.tests2.UsageTest.niceToStrict":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":296,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":235,"org.easymock.tests2.MockBuilderTest.testCreateMock":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":126,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":349,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":160,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":381,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":143,"org.easymock.tests.UsageOverloadedMethodTest.overloading":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":186,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":141,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":81,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":185,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":215,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":398,"org.easymock.tests.MockClassControlTest.testEquals":405,"org.easymock.tests2.EasyMockSupportClassTest.testAll":291,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":18,"org.easymock.tests2.CaptureTest.testCaptureAll":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":231,"org.easymock.tests.MockNameTest.defaultName":378,"org.easymock.tests2.UsageConstraintsTest.testMatches":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":43,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":365,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests.UsageVarargTest.allKinds":108,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":95,"org.easymock.samples.BasicClassMockTest.testPrintContent":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":19,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":65,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":334,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":389,"org.easymock.tests2.UsageConstraintsTest.greaterThan":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":347,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":273,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":390,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":470,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":201,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":350,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":268,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":39,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":242,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":157,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":25,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":453,"org.easymock.tests2.CaptureTest.testCaptureFirst":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":158,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":254,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":77,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":203,"org.easymock.tests2.CaptureTest.testCapture2_2446744":218,"org.easymock.tests2.UsageTest.moreThanOneArgument":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":436,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":240,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":107,"org.easymock.tests.GenericTest.testBridgedEquals":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":36,"org.easymock.tests.UsageExpectAndReturnTest.longType":73,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":135,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":194,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":319,"org.easymock.tests.UsageCallCountTest.tooManyCalls":37,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":301,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":64,"org.easymock.tests.MockingTest.testNiceClassMocking":397,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":275,"org.easymock.tests.MockingTest.testClassMocking":392,"org.easymock.tests2.UsageConstraintsTest.testContains":184,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":170,"org.easymock.tests2.UsageConstraintsTest.testFind":176,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":47,"org.easymock.tests.MockTypeTest.fromEasyMockClass":411,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":147,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":261,"org.easymock.tests.UsageExpectAndReturnTest.object":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":163,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":324,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":422,"org.easymock.tests.UsageTest.exactCallCountByLastCall":56,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":353,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":376,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":462,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":86,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":140,"org.easymock.tests.MockClassControlTest.testHashCode":404,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":330,"org.easymock.tests2.EasyMockSupportTest.testVerify":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":484,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":302,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":139,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":229,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":444,"org.easymock.tests.UsageVarargTest.varargCharAccepted":101,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":382,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":312,"org.easymock.tests2.UsageTest.openCallCountByLastCall":248,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":166,"org.easymock.tests.DefaultClassInstantiatorTest.object":383,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":379,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":485,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":329,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":403,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":123,"org.easymock.tests.CapturesMatcherTest.test":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":87,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":318,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":294,"org.easymock.tests2.UsageTest.resumeIfFailure":253,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":28,"org.easymock.tests2.StubTest.stubWithReturnValue":282,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":459,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":195,"org.easymock.tests2.SerializationTest.testAllMockedMethod":224,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":434,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":357,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":445,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":129,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":437,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":464,"org.easymock.tests.UsageExpectAndThrowTest.object":127,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":377,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":192,"org.easymock.tests2.DelegateToTest.testWrongClass":227,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":138,"org.easymock.tests.UsageStrictMockTest.range":152,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":440,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":128,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":473,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":54,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":144,"org.easymock.tests2.CaptureTest.testCaptureNone":214,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":307,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":97,"org.easymock.tests.UsageVarargTest.varargByteAccepted":106,"org.easymock.tests2.ThreadingTest.testThreadSafe":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":487,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":34,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":423,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":1,"org.easymock.tests2.CaptureTest.testCapture_2617107":208,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":409,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":310,"org.easymock.tests2.UsageConstraintsTest.any":182,"org.easymock.tests2.StubTest.stub":281,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":320,"org.easymock.tests.UsageExpectAndThrowTest.longType":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":311,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":387,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":371,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":287,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":199,"org.easymock.tests2.SerializationTest.testClass":222,"org.easymock.tests.LimitationsTest.mockNativeMethod":23,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":89,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":339,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":290,"org.easymock.tests2.NameTest.nameForMocksControl":316,"org.easymock.tests2.MockedExceptionTest.testMockedException":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":477,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":466,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":121,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":69,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":262,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":238,"org.easymock.tests.MockingTest.testNicePartialClassMocking":68,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":267,"org.easymock.tests2.CaptureTest.testCaptureLast":213,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":337,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":408,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":280,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":193,"org.easymock.tests.MockingTest.testTwoMocks":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":125,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":251,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":197,"org.easymock.samples.ExampleTest.removeNonExistingDocument":351,"org.easymock.tests.UsageStrictMockTest.differentMethods":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":342,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":331,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":385,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":346,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":202,"org.easymock.tests2.MockBuilderTest.testCreateMockString":241,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":478,"org.easymock.tests.UsageExpectAndThrowTest.floatType":119,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":463,"org.easymock.tests.UsageVerifyTest.twoThrows":96,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":293,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":309,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":272,"org.easymock.tests.LimitationsTest.privateConstructor":361,"org.easymock.tests2.UsageConstraintsTest.testNotNull":196,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":168,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":66,"org.easymock.tests2.UsageTest.defaultResetToNice":250,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":85,"org.easymock.tests.UsageVarargTest.differentLength":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":338,"org.easymock.tests2.CallbackTest.callback":283,"org.easymock.tests2.UsageConstraintsTest.equals":442,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":468,"org.easymock.tests.UsageTest.openCallCountByLastCall":52,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":114,"org.easymock.tests.UsageCallCountTest.tooFewCalls":32,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":146,"org.easymock.tests.UsageThrowableTest.throwCheckedException":63,"org.easymock.tests.MockingTest.testStrictClassMocking":391,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":341,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":374,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":278,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":259,"org.easymock.tests.ObjectMethodsTest.testHashCode":421,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":326,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":204,"org.easymock.tests2.NameTest.nameForNiceMock":315,"org.easymock.tests2.DependencyTest.testInterfaceMocking":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":325,"org.easymock.samples.ExampleTest.addDocument":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.DelegateToTest.testStubDelegate":226,"org.easymock.tests2.AnswerTest.stubAnswer":258,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":150,"org.easymock.tests.UsageVarargTest.varargLongAccepted":105,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":308,"org.easymock.tests.UsageExpectAndReturnTest.floatType":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":255,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":446,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":417,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":190,"org.easymock.tests.UsageThrowableTest.noUpperLimit":60,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":173,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":438,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":211,"org.easymock.tests2.SerializationTest.test":223,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":384,"org.easymock.tests2.UsageConstraintsTest.testSame":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":71,"org.easymock.samples.SupportTest.addDocument":7,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":479,"org.easymock.tests.GenericTest.testPackageScope":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":335,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":395,"org.easymock.tests2.NameTest.nameForMock":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":461,"org.easymock.tests2.UsageStrictMockTest.differentMethods":289,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":469,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":131,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":419,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":111,"org.easymock.tests2.MockedExceptionTest.testRealException":171,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":415,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":432,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":113,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":375,"org.easymock.tests2.NameTest.nameForStrictMock":314,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":458,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":260,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":266,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":439,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":386,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":191,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":234,"org.easymock.tests2.UsageStrictMockTest.range":288,"org.easymock.tests2.UsageConstraintsTest.lessThan":198,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":483,"org.easymock.tests2.CaptureTest.testCaptureRightOne":216,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":345,"org.easymock.tests2.UsageConstraintsTest.testOr":179,"org.easymock.tests.UsageRangeTest.combination":109,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":263,"org.easymock.tests.UsageTest.wrongArguments":51,"org.easymock.tests2.MockBuilderTest.testWithConstructor":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":480,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":83,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":388,"org.easymock.tests.UsageVarargTest.varargShortAccepted":104,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":35,"org.easymock.tests2.UsageConstraintsTest.cmpTo":183,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":427,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":249,"org.easymock.tests2.CaptureTest.testCaptureFromStub":217,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":456,"org.easymock.tests.UsageTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":149,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":84,"org.easymock.tests2.UsageConstraintsTest.constraints":174,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":151,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageStrictMockTest.testVerify":418,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":6,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":17,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":76,"org.easymock.tests.LimitationsTest.abstractClass":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":93,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":161,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":99}}]
