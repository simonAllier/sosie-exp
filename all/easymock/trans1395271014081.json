[{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[17,18,19,20,21,8,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,14,46,15,47,48,16,49,50,51,52,53,54,55,56,57],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[58],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[25,32,42,48,51,53],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[59,60,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,58,96,97,98,99,100,101,102,103,104,105,17,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,4,158,18,19,159,160,5,6,161,20,21,162,7,163,164,165,166,167,168,169,170,171,172,173,174,175,176,0,1,2,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,8,197,22,23,198,9,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,35,359,360,36,37,38,361,362,363,364,365,366,367,368,39,40,369,370,10,41,42,43,11,12,44,45,13,371,372,373,374,375,376,377,378,379,380,14,46,15,381,382,383,384,385,386,387,388,389,390,47,391,392,393,394,395,396,397,48,16,398,49,50,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[243,318,321,322,323,324,325,360,361,362,363,46,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,424,498,508],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,510,511,512,513,514,234,237,251,252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[168,169,170,172,173,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,9,201,202,273,359,515],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[63,64,68,69,72,82,85,87,151,152,18,19,20,21,8,22,23,209,210,211,212,218,219,225,228,233,235,239,241,257,260,262,289,39,40,41,42,43,44,45,14,46,15,385,388,389,47,48,16,49,50,463,464,465,478,481,482,483,484,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[470,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[199,202,203,427],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[474,516,517],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[22,46,15,49,518],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[500],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:68","sourceCode":"int += 1","type":"CtOperatorAssignmentImpl"},"failures":[90,91,94,58,96,102,105,107,114,307,319,14,451,454],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[147,148,150,153,154,155,156,157,214,215,217,220,221,222,223,224],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[89,106,109],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[115,519],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[4,6,191,192,193,194,243,291,318,320,321,322,323,324,325,360,10,12,46,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,451,494,495,496,497,498,499],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[62,63,64,65,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,58,96,97,98,99,100,101,102,103,104,105,17,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,4,158,18,19,159,160,5,6,161,20,21,162,7,163,164,165,166,167,168,169,170,171,172,173,174,175,176,0,1,2,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,8,197,22,23,198,9,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,230,231,232,233,235,237,238,239,241,242,243,244,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,35,359,360,36,37,38,361,362,363,364,365,366,367,368,39,40,369,370,10,41,42,43,11,12,44,45,13,371,372,373,374,375,376,377,378,379,380,14,46,15,381,382,383,384,385,386,387,388,389,390,47,391,392,393,394,395,396,397,48,16,398,49,50,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,472,473,474,475,477,478,481,482,483,484,485,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[91,92,95,96,97,99,108,113,177,179,187],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:274","failures":[173,175,176,9,199,200,201,202,203,273,358],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[75,17,106,160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[520,521,522,523],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[326,370,421,425,426,435,440],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[235],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[89,90,94,95,58,96,102,104,105,106,107,113,114,115,188,8,243,267,268,284,285,286,287,288,290,364,365,366,367,368,16,487,488,505,506,509],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":92,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests2.UsageTest.argumentsOrdered":21,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":431,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":160,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":283,"org.easymock.tests2.DelegateToTest.testReturnException":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":495,"org.easymock.tests.MockingTest.testPartialClassMocking":374,"org.easymock.tests.MockClassControlTest.testToString":463,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":208,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":401,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":122,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":510,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":505,"org.easymock.tests2.UsageTest.wrongArguments":19,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":157,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":447,"org.easymock.samples.ExampleTest.answerVsDelegate":273,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":483,"org.easymock.tests2.UsageConstraintsTest.testNull":95,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":379,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":74,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":468,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":263,"org.easymock.tests2.CaptureTest.testPrimitive":180,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":509,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":420,"org.easymock.tests.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":366,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":391,"org.easymock.tests.UsageTest.argumentsOrdered":45,"org.easymock.tests.UsageVarargTest.varargIntAccepted":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":436,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":61,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":225,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":223,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":288,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":28,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":151,"org.easymock.tests.ReplayStateInvalidUsageTest.times":334,"org.easymock.tests2.DependencyTest.testClassMocking":204,"org.easymock.tests2.AnswerTest.answer":9,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":438,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":166,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":480,"org.easymock.tests2.CaptureTest.testAnd":177,"org.easymock.tests2.UsageTest.strictResetToDefault":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":309,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":395,"org.easymock.tests2.DelegateToTest.testDelegate":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":416,"org.easymock.tests.LimitationsTest.mockFinalMethod":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":498,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":493,"org.easymock.tests2.DependencyTest.testClassMockingSupport":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":39,"org.easymock.tests2.CaptureTest.testCapture1_2446744":181,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":78,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":414,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":164,"org.easymock.tests.UsageThrowableTest.throwError":318,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":328,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":482,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":486,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":140,"org.easymock.samples.PartialClassMockTest.testGetArea":282,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":329,"org.easymock.tests.MockingTest.testInterfaceMocking":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":285,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":402,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":389,"org.easymock.tests2.UsageTest.niceToStrict":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":231,"org.easymock.tests2.MockBuilderTest.testCreateMock":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":135,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":154,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":410,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":25,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":259,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":479,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":363,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":452,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":445,"org.easymock.tests.UsageOverloadedMethodTest.overloading":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":104,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":360,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":516,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":103,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":186,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":295,"org.easymock.tests.MockClassControlTest.testEquals":467,"org.easymock.tests2.EasyMockSupportClassTest.testAll":119,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":418,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":491,"org.easymock.tests2.CaptureTest.testCaptureAll":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":165,"org.easymock.tests.MockNameTest.defaultName":289,"org.easymock.tests2.UsageConstraintsTest.testMatches":105,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":367,"org.easymock.samples.ExampleTest.voteForRemovals":277,"org.easymock.tests.UsageVarargTest.allKinds":303,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":492,"org.easymock.samples.BasicClassMockTest.testPrintContent":281,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":324,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":499,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":514,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":476,"org.easymock.tests2.UsageConstraintsTest.greaterThan":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":308,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":85,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":477,"org.easymock.samples.ExampleTest.voteForRemoval":274,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":86,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":77,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":390,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":256,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":494,"org.easymock.tests2.CaptureTest.testCaptureFirst":190,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":257,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":7,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":345,"org.easymock.tests2.CaptureTest.testCapture2_2446744":189,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":439,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":239,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":302,"org.easymock.tests.GenericTest.testBridgedEquals":504,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":459,"org.easymock.tests.UsageExpectAndReturnTest.longType":341,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":489,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":419,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":111,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":417,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":364,"org.easymock.tests.UsageCallCountTest.tooManyCalls":460,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":52,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":346,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":406,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":323,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":63,"org.easymock.tests.MockingTest.testNiceClassMocking":380,"org.easymock.tests.MockingTest.testClassMocking":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":453,"org.easymock.tests2.UsageConstraintsTest.testContains":102,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":193,"org.easymock.tests2.UsageConstraintsTest.testFind":94,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":451,"org.easymock.tests.MockTypeTest.fromEasyMockClass":481,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":396,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":175,"org.easymock.tests.UsageExpectAndReturnTest.object":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":262,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":511,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":297,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":387,"org.easymock.tests.UsageTest.exactCallCountByLastCall":13,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":392,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":381,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":56,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":252,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":292,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":359,"org.easymock.tests.MockClassControlTest.testHashCode":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":214,"org.easymock.tests2.EasyMockSupportTest.testVerify":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":129,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":27,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":393,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":358,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":362,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":163,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":88,"org.easymock.tests.UsageVarargTest.varargCharAccepted":296,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":469,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastCall":5,"org.easymock.tests.DefaultClassInstantiatorTest.object":470,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":361,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":385,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":149,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":213,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":465,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":407,"org.easymock.tests.CapturesMatcherTest.test":515,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":311,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":138,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":29,"org.easymock.tests2.UsageTest.resumeIfFailure":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":478,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":497,"org.easymock.tests2.StubTest.stubWithReturnValue":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":234,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":112,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":347,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":437,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":32,"org.easymock.samples.SupportTest.voteForRemovals":270,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":500,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":413,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":443,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":199,"org.easymock.tests.UsageExpectAndThrowTest.object":411,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":383,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":109,"org.easymock.tests2.DelegateToTest.testWrongClass":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":487,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":488,"org.easymock.tests.UsageStrictMockTest.range":49,"org.easymock.samples.ConstructorCalledMockTest.testTax":267,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":249,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":412,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":116,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":446,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":51,"org.easymock.tests2.CaptureTest.testCaptureNone":185,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":306,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":521,"org.easymock.tests.UsageUnorderedTest.message":47,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":301,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":133,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":457,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":388,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":280,"org.easymock.tests2.CaptureTest.testCapture_2617107":179,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":34,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":369,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":441,"org.easymock.tests2.UsageConstraintsTest.any":100,"org.easymock.tests2.StubTest.stub":242,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndThrowTest.longType":404,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":474,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":332,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":197,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":218,"org.easymock.tests.LimitationsTest.mockNativeMethod":316,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":503,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":357,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":148,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests2.NameTest.nameForMocksControl":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":150,"org.easymock.tests2.MockedExceptionTest.testMockedException":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":121,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":12,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":405,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":174,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":377,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":71,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":235,"org.easymock.tests.MockingTest.testNicePartialClassMocking":375,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":76,"org.easymock.tests2.CaptureTest.testCaptureLast":184,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":40,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":97,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":69,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":110,"org.easymock.tests.MockingTest.testTwoMocks":373,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":409,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":114,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":523,"org.easymock.samples.ExampleTest.removeNonExistingDocument":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":153,"org.easymock.tests.UsageStrictMockTest.differentMethods":50,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":215,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":472,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests2.ConstraintsToStringTest.andToString":31,"org.easymock.tests2.MockBuilderTest.testCreateMockString":241,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":461,"org.easymock.tests.UsageExpectAndThrowTest.floatType":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":123,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":118,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":201,"org.easymock.tests.UsageVerifyTest.twoThrows":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":253,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":132,"org.easymock.samples.ExampleTest.voteAgainstRemoval":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":304,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":84,"org.easymock.tests.LimitationsTest.privateConstructor":315,"org.easymock.tests2.UsageConstraintsTest.testNotNull":113,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":325,"org.easymock.tests2.UsageTest.defaultResetToNice":161,"org.easymock.samples.ExampleTest.voteAgainstRemovals":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":353,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":147,"org.easymock.tests.UsageVarargTest.differentLength":298,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests2.UsageConstraintsTest.equals":93,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":54,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":80,"org.easymock.tests.UsageTest.openCallCountByLastCall":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":507,"org.easymock.tests.UsageCallCountTest.tooFewCalls":455,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":448,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":522,"org.easymock.tests.UsageThrowableTest.throwCheckedException":322,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":53,"org.easymock.tests.MockingTest.testStrictClassMocking":371,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":152,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":64,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":335,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":67,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":203,"org.easymock.tests.ObjectMethodsTest.testHashCode":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":60,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":145,"org.easymock.tests2.NameTest.nameForNiceMock":211,"org.easymock.tests2.DependencyTest.testInterfaceMocking":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":512,"org.easymock.samples.ExampleTest.addDocument":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":134,"org.easymock.tests2.DelegateToTest.testStubDelegate":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":139,"org.easymock.tests2.AnswerTest.stubAnswer":202,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":236,"org.easymock.tests.UsageVarargTest.varargLongAccepted":300,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.floatType":340,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":251,"org.easymock.tests2.ConstraintsToStringTest.orToString":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":268,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":107,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":222,"org.easymock.tests.UsageThrowableTest.noUpperLimit":319,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":90,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":244,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":182,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":517,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":471,"org.easymock.tests2.UsageConstraintsTest.testSame":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":339,"org.easymock.samples.SupportTest.addDocument":269,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":66,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":124,"org.easymock.tests.GenericTest.testPackageScope":501,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":221,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":378,"org.easymock.tests2.NameTest.nameForMock":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":350,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":240,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":415,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":310,"org.easymock.tests2.MockedExceptionTest.testRealException":194,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":250,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":434,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":506,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":337,"org.easymock.tests2.NameTest.nameForStrictMock":210,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":230,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":173,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":75,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":248,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":473,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":108,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":227,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.UsageConstraintsTest.lessThan":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":255,"org.easymock.tests2.CaptureTest.testCaptureRightOne":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":128,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":520,"org.easymock.tests2.UsageConstraintsTest.testOr":96,"org.easymock.tests.UsageRangeTest.combination":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":72,"org.easymock.tests.UsageTest.wrongArguments":43,"org.easymock.tests2.MockBuilderTest.testWithConstructor":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":125,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":351,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":475,"org.easymock.tests.UsageVarargTest.varargShortAccepted":299,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":458,"org.easymock.tests2.UsageConstraintsTest.cmpTo":101,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":200,"org.easymock.tests2.CompareToTest.testLessThan":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":6,"org.easymock.tests2.CaptureTest.testCaptureFromStub":188,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":327,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":228,"org.easymock.tests.UsageTest.unexpectedCallWithArray":42,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":48,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":456,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":352,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":398,"org.easymock.tests2.UsageConstraintsTest.constraints":91,"org.easymock.samples.ExampleTest.addAndChangeDocument":279,"org.easymock.tests2.ConstraintsToStringTest.notToString":26,"org.easymock.tests.UsageStrictMockTest.testVerify":400,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":271,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":397,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":490,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":286,"org.easymock.tests.LimitationsTest.abstractClass":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":344,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":287,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":518,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":260,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":293}}]
