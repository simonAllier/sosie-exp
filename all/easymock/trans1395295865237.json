[{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,0,53,54,55,56,57,58,2,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,3,4,79,80,81,5,6,82,83,84,85,86,87,88,89,90,91,8,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,128,129,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[259],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:94","sourceCode":"final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[260,89,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,80,5,6,7,8,95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[48,51,261,110,262,263,264,265,266,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[269,270,271,272,9,10,11,14,273,274,17,275,18,19,276,20,21,22,23,24,25,26,27,28,29,30,31,32,277,36,37,38,39,40,41,42,43,278,44,46,47,48,49,50,51,52,0,53,1,54,279,280,56,57,58,2,61,62,63,281,65,260,68,282,283,70,72,74,284,77,4,6,82,83,84,86,89,8,92,93,285,94,286,287,288,289,98,99,100,101,102,103,290,104,291,106,292,108,109,293,110,111,294,112,295,113,114,115,116,118,119,120,121,296,297,298,122,123,124,125,299,126,300,127,301,130,302,131,303,304,305,306,132,307,308,309,310,311,133,312,313,314,315,316,317,145,318,319,320,263,264,265,321,322,323,324,325,259,147,326,148,149,327,328,329,330,153,331,332,333,334,335,336,158,159,168,169,171,176,181,186,187,188,189,190,191,192,193,194,195,196,197,200,201,203,208,213,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,233,234,236,237,353,354,355,356,243,357,358,359,360,244,247,248,249,250,361,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:30","sourceCode":"-8447010713532143168L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[11,15,17,275,18,19,39,45,53,1,55,279,280,56,57,61,62,64,281,66,67,282,283,70,73,80,83,89,95,286,287,288,289,132,259,147,326,148,149,157,160,192,352,232,233,234,238,239,240,354,241,242,355,356,243,256],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[17,18,19,259,147,148,149,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[362,363,259,364,365,353],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,80,5,6,7,8,95],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[9,10,11,14,15,274,17,275,18,19,276,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,37,39,42,43,44,45,0,53,56,57,2,61,62,63,64,65,260,66,67,69,70,72,73,74,76,4,80,5,6,95,99,102,106,109,110,111,113,296,297,298,122,123,124,125,299,126,127,301,130,302,132,137,138,139,140,141,318,325,147,326,148,149,327,156,157,158,159,160,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,223,224,225,226,227,342,343,344,345,346,348,349,350,351,352,232,233,234,236,237,238,239,240,241,242,243,245,246,247,248,249,252,253,254,255,256,257],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[269,270,271,272,9,10,11,12,13,14,15,16,273,274,17,275,18,19,276,366,367,368,369,370,20,371,372,373,374,375,376,21,22,23,25,26,28,30,31,32,277,33,34,35,36,37,38,377,39,40,378,41,42,43,278,44,45,48,49,50,51,261,379,380,381,0,53,1,54,55,279,280,56,57,58,2,59,60,61,62,63,64,281,65,260,66,67,68,282,283,69,70,71,72,73,74,75,76,284,77,78,3,4,382,79,80,81,5,6,82,7,83,84,85,86,87,88,89,90,91,8,92,93,285,94,95,96,97,98,99,100,101,102,103,290,104,383,384,291,105,106,107,385,108,386,109,293,110,387,294,388,389,390,391,392,113,393,394,395,396,397,398,114,115,116,117,399,118,400,119,401,402,403,404,405,406,120,407,408,121,409,410,296,297,298,122,123,124,125,299,126,300,127,128,128,129,129,301,130,302,131,411,303,304,305,412,262,306,413,414,415,416,417,418,132,307,308,309,310,311,133,312,313,314,315,316,317,134,135,136,137,138,139,140,141,142,143,144,419,145,318,146,420,319,320,263,264,265,321,322,323,324,325,259,147,326,148,149,327,328,150,151,152,329,330,153,331,332,333,334,335,336,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,154,437,438,439,440,441,155,442,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,443,444,186,445,446,447,448,449,187,188,450,189,451,452,453,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,337,338,339,340,341,223,224,225,226,227,342,343,344,454,345,346,347,348,349,350,351,352,228,229,230,231,232,233,234,235,236,237,238,239,240,353,354,241,242,355,356,243,357,358,359,360,455,244,456,457,267,458,245,246,247,459,248,249,460,250,361,251,252,253,254,255,256,257],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[9,10,11,14,15,16,273,274,17,275,18,19,276,20,21,22,23,24,25,26,27,28,29,30,31,32,277,33,34,35,36,37,38,39,40,41,42,43,278,44,45,46,47,48,49,50,51,52,0,53,1,54,55,279,280,56,57,58,2,60,61,62,63,64,281,65,260,66,67,68,282,283,69,70,72,73,74,76,77,78,3,4,79,80,81,5,6,82,7,83,84,85,86,87,88,89,90,91,8,92,93,285,94,95,96,97,286,287,288,289,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,116,118,119,120,121,296,297,298,122,123,124,125,299,126,127,301,130,302,131,132,145,318,324,325,259,147,326,148,149,327,328,329,153,331,332,333,335,336,422,429,433,154,437,438,156,157,158,159,160,161,162,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,224,225,226,227,342,343,344,345,346,347,348,349,350,351,352,228,229,230,231,232,233,234,236,237,238,239,240,354,241,242,355,356,243,245,246,247,248,249,250,251,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[45,62,67,114,115,116,117,158,159,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,190,192,193,194,195,196,197,219,233,238,239,242,249,252,253,254,255,256,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[18,281,282,283,132,259,148,461,233,234,353,354,355,356],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[269,270,271,272,9,10,11,14,15,16,273,274,17,275,18,19,276,20,21,22,23,24,25,26,27,28,29,30,31,32,277,33,34,35,36,37,38,39,40,41,42,43,278,44,45,46,47,48,49,50,51,52,0,53,1,54,55,279,280,56,57,58,2,59,60,61,62,63,64,281,65,260,66,67,68,282,283,69,70,72,73,74,76,77,78,3,4,79,80,81,5,6,82,83,84,85,86,87,88,89,90,91,8,92,93,285,94,95,96,97,98,99,100,101,102,103,290,104,291,105,106,107,292,108,109,293,110,111,294,112,295,113,114,115,116,117,118,119,120,121,296,297,298,122,123,124,125,299,126,127,128,129,301,130,302,131,132,137,138,139,140,141,145,318,324,325,259,147,326,148,149,327,153,331,332,333,334,335,336,156,157,158,159,160,462,462,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,337,338,339,340,341,223,224,225,226,227,342,343,344,345,346,347,348,349,350,351,352,228,230,231,232,233,234,236,237,238,239,240,353,354,241,242,355,356,243,357,358,359,360,245,246,247,248,249,361,251,252,253,254,255,256,257],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[429,161,164,165],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[419,420],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[465,466,467],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[18,281,282,283,132,259,148,461,233,234,353,354,355,356,361],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[269,270,271,272,9,11,14,15,16,274,17,19,276,33,34,37,38,39,40,41,42,43,278,44,45,47,48,51,52,0,53,1,54,279,280,56,57,58,2,61,63,64,65,260,68,69,72,73,76,77,78,3,4,79,80,81,5,6,82,83,84,85,86,87,88,89,90,91,8,92,93,94,95,96,97,286,287,288,289,98,100,101,102,103,104,291,106,292,109,293,114,115,116,117,122,123,124,125,299,126,127,137,138,139,140,141,145,318,320,325,147,149,327,328,329,330,153,331,332,333,156,157,160,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,337,338,339,340,341,223,224,225,226,227,342,343,344,345,346,348,349,350,351,352,228,229,230,231,232,233,234,237,238,240,357,358,359,360,456,245,246,250,251,252,253,254,255,256,257],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[38,377,468,469,470,471,472,42,473,387],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[273,275,18,19,22,26,27,30,39,62,281,65,260,282,283,69,70,3,89,99,105,107,108,294,112,295,132,324,259,326,148,149,334,335,336,474,266,347,228,475,461,233,234,239,353,354,355,356,243],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":239,"org.easymock.tests2.UsageTest.argumentsOrdered":283,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":431,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":260,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":302,"org.easymock.tests2.DelegateToTest.testReturnException":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":253,"org.easymock.tests.MockingTest.testPartialClassMocking":187,"org.easymock.tests.MockClassControlTest.testToString":263,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":166,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":119,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":468,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":82,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":156,"org.easymock.tests2.UsageTest.wrongArguments":281,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":359,"org.easymock.samples.ExampleTest.answerVsDelegate":123,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":267,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":452,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":30,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":323,"org.easymock.tests2.CaptureTest.testPrimitive":54,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":185,"org.easymock.tests.UsageTest.moreThanOneArgument":240,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":139,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":161,"org.easymock.tests.UsageTest.argumentsOrdered":356,"org.easymock.tests.UsageVarargTest.varargIntAccepted":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":223,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":397,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":227,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":20,"org.easymock.tests.ReplayStateInvalidUsageTest.times":314,"org.easymock.tests2.AnswerTest.answer":11,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":437,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":272,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":25,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":230,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":165,"org.easymock.tests2.DelegateToTest.testDelegate":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":181,"org.easymock.tests.LimitationsTest.mockFinalMethod":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":341,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":455,"org.easymock.tests2.CaptureTest.testCapture1_2446744":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":179,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":270,"org.easymock.tests.UsageThrowableTest.throwError":190,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":309,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":398,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":266,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":410,"org.easymock.samples.PartialClassMockTest.testGetArea":131,"org.easymock.tests.MockingTest.testInterfaceMocking":450,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":224,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":167,"org.easymock.tests2.UsageTest.niceToStrict":65,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":262,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":109,"org.easymock.tests2.MockBuilderTest.testCreateMock":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":268,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":373,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":175,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":362,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":26,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":136,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":357,"org.easymock.tests.UsageOverloadedMethodTest.overloading":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":406,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":87,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":209,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":236,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":86,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":58,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":454,"org.easymock.tests2.EasyMockSupportClassTest.testAll":118,"org.easymock.tests.MockClassControlTest.testEquals":322,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":183,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":339,"org.easymock.tests.MockNameTest.defaultName":446,"org.easymock.tests2.UsageConstraintsTest.testMatches":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":140,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":307,"org.easymock.samples.ExampleTest.voteForRemovals":126,"org.easymock.tests.UsageVarargTest.allKinds":352,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":232,"org.easymock.samples.BasicClassMockTest.testPrintContent":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":340,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":196,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":394,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":472,"org.easymock.tests2.UsageConstraintsTest.greaterThan":90,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":229,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":107,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":418,"org.easymock.samples.ExampleTest.voteForRemoval":124,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":385,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":34,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":290,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":251,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":23,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":252,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":24,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":70,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":205,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":36,"org.easymock.tests2.CaptureTest.testCapture2_2446744":60,"org.easymock.tests2.UsageTest.moreThanOneArgument":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":351,"org.easymock.tests.GenericTest.testBridgedEquals":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":335,"org.easymock.tests.UsageExpectAndReturnTest.longType":201,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":337,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":184,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":235,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":137,"org.easymock.tests.UsageCallCountTest.tooManyCalls":336,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":153,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":195,"org.easymock.tests.MockingTest.testNiceClassMocking":453,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":47,"org.easymock.tests.MockingTest.testClassMocking":448,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":330,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":116,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":238,"org.easymock.tests.MockTypeTest.fromEasyMockClass":457,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":41,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests.UsageExpectAndReturnTest.object":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":469,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":346,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":305,"org.easymock.tests.UsageTest.exactCallCountByLastCall":243,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":162,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":377,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":214,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":342,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":248,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":389,"org.easymock.tests.MockClassControlTest.testHashCode":321,"org.easymock.tests2.EasyMockSupportTest.testVerify":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":404,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":135,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":247,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":269,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":284,"org.easymock.tests.UsageVarargTest.varargCharAccepted":345,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":442,"org.easymock.tests2.UsageTest.openCallCountByLastCall":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":465,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":32,"org.easymock.tests.DefaultClassInstantiatorTest.object":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":134,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":303,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":405,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":388,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":105,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":172,"org.easymock.tests.CapturesMatcherTest.test":462,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":121,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":264,"org.easymock.tests2.UsageTest.resumeIfFailure":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":255,"org.easymock.tests2.StubTest.stubWithReturnValue":45,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":473,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":207,"org.easymock.tests2.SerializationTest.testAllMockedMethod":278,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":154,"org.easymock.samples.SupportTest.voteForRemovals":130,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":363,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":178,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":155,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":12,"org.easymock.tests.UsageExpectAndThrowTest.object":176,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":222,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DelegateToTest.testWrongClass":74,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":245,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":246,"org.easymock.tests.UsageStrictMockTest.range":148,"org.easymock.samples.ConstructorCalledMockTest.testTax":128,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":380,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":28,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":399,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":316,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":358,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":364,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":152,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests.UsageUnorderedTest.message":132,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":474,"org.easymock.tests.UsageVerifyTest.twoReturns":234,"org.easymock.tests.UsageVarargTest.varargByteAccepted":350,"org.easymock.tests2.ThreadingTest.testThreadSafe":33,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":333,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":412,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":297,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":159,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests2.StubTest.stub":44,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":313,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndThrowTest.longType":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":254,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":416,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":312,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests2.SerializationTest.testClass":42,"org.easymock.tests.LimitationsTest.mockNativeMethod":186,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":146,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":368,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests2.NameTest.nameForMocksControl":289,"org.easymock.tests2.MockedExceptionTest.testMockedException":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":400,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":242,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":170,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":378,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":111,"org.easymock.tests.MockingTest.testNicePartialClassMocking":188,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":103,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":244,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":174,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":282,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.samples.ExampleTest.removeNonExistingDocument":300,"org.easymock.tests.UsageStrictMockTest.differentMethods":149,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":390,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":414,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":35,"org.easymock.tests2.MockBuilderTest.testCreateMockString":295,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":319,"org.easymock.tests.UsageExpectAndThrowTest.floatType":168,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":89,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":14,"org.easymock.tests.UsageVerifyTest.twoThrows":233,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":120,"org.easymock.samples.ExampleTest.voteAgainstRemoval":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":150,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":106,"org.easymock.tests.LimitationsTest.privateConstructor":444,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":463,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":197,"org.easymock.tests2.UsageTest.defaultResetToNice":68,"org.easymock.samples.ExampleTest.voteAgainstRemovals":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":213,"org.easymock.tests.UsageVarargTest.differentLength":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":367,"org.easymock.tests2.CallbackTest.callback":39,"org.easymock.tests2.UsageConstraintsTest.equals":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":383,"org.easymock.tests.UsageTest.openCallCountByLastCall":241,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":158,"org.easymock.tests.UsageCallCountTest.tooFewCalls":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":360,"org.easymock.tests.UsageThrowableTest.throwCheckedException":194,"org.easymock.tests.MockingTest.testStrictClassMocking":447,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":365,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":51,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":219,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":315,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":50,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":16,"org.easymock.tests.ObjectMethodsTest.testHashCode":304,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":37,"org.easymock.tests2.NameTest.nameForNiceMock":288,"org.easymock.tests2.DependencyTest.testInterfaceMocking":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":470,"org.easymock.samples.ExampleTest.addDocument":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":409,"org.easymock.tests2.DelegateToTest.testStubDelegate":73,"org.easymock.tests2.AnswerTest.stubAnswer":15,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":147,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":464,"org.easymock.tests.UsageVarargTest.varargLongAccepted":349,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.floatType":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":38,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":129,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":396,"org.easymock.tests.UsageThrowableTest.noUpperLimit":191,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":91,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":261,"org.easymock.tests2.SerializationTest.test":43,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":279,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":413,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.samples.SupportTest.addDocument":301,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":401,"org.easymock.tests.GenericTest.testPackageScope":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":395,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":451,"org.easymock.tests2.NameTest.nameForMock":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":210,"org.easymock.tests2.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":180,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":411,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":231,"org.easymock.tests2.MockedExceptionTest.testRealException":117,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":434,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":157,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":317,"org.easymock.tests2.NameTest.nameForStrictMock":287,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":466,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":102,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":379,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":415,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":8,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":108,"org.easymock.tests2.UsageStrictMockTest.range":18,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":392,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":403,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":258,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":99,"org.easymock.tests.UsageTest.wrongArguments":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":402,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":211,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":417,"org.easymock.tests.UsageVarargTest.varargShortAccepted":348,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":334,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":67,"org.easymock.tests2.CaptureTest.testCaptureFromStub":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":308,"org.easymock.tests.UsageTest.unexpectedCallWithArray":353,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.samples.ExampleTest.addAndChangeDocument":127,"org.easymock.tests.UsageStrictMockTest.testVerify":328,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":296,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":338,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":225,"org.easymock.tests.LimitationsTest.abstractClass":443,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":226,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":27,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":343}}]
