[{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[330,63,65,66,67,68,69,70,72,331,73,74,76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[332],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[28,30,42,45,54,333,334,335,336,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[338,339,340,341,243,303],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,332],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,342,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,196,198,199,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[343,344,345,346,347,348,349,136,140,350,351],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[175,177,191,192,221,316],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,11,12,13,14,15,16,17,19,20,21,22,23,24,25,31,36,37,38,39,41,44,47,48,49,50,51,55,56,59,60,61,62,63,64,65,66,68,69,70,71,72,73,76,80,81,82,84,86,87,89,90,91,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,132,134,135,136,137,138,139,140,141,142,143,148,149,150,151,152,155,157,160,163,164,165,166,169,170,171,172,175,176,178,183,188,352,193,194,195,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,223,224,225,226,227,228,229,230,231,232,233,234,235,239,243,244,247,248,249,252,253,255,260,265,270,271,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,295,296,297,298,299,302,303,305,308,309,322,325,326,327,328,329],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[353,354],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:25","sourceCode":"-1951159588262854559L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[355,356,357],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[3,5,6,8,15,17,19,20,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,63,64,66,67,70,71,72,73,75,76,77,78,79,80,81,83,86,87,88,90,92,93,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,117,118,120,122,123,124,125,126,127,129,131,132,133,134,135,136,137,138,139,140,141,142,143,148,149,152,156,158,159,162,167,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,196,197,198,199,208,221,222,236,237,240,241,242,245,246,249,270,271,272,273,275,276,278,279,280,281,282,283,284,288,290,291,292,293,294,304,306,307],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[358,359,360,361,362],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[29,30,32,34,35,40,43,46,53,92,93,158,159,196,245,246,272,273,363,306,307,364,365],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[19,347,366,367,368,369,370,371,372,351],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[150,151,152,153,162,168,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,272,274,276,279,280,281,282,283,287,310,311,312,313,314,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[31,36,47],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[353,354],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[118],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[37,42,54,336],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[4,26,27,55,56,57],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[371],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[347,367,368,369,370,371,351],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[352,228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,373,374,375,376,377,378,379,22,380,381,23,382,383,384,385,386,387,388,389,390,24,391,392,393,394,395,25,396,397,26,342,27,28,29,30,31,398,32,33,34,35,36,37,399,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,400,401,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,402,82,83,84,403,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,345,114,404,346,405,115,116,117,347,118,406,119,120,349,121,122,123,124,125,126,127,128,407,129,408,409,130,131,132,133,410,411,134,135,136,137,138,139,140,412,413,141,142,414,415,416,417,418,143,419,420,421,422,423,424,425,144,145,146,147,148,351,426,427,428,429,430,431,149,432,433,434,435,436,437,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,438,167,168,439,169,353,440,441,442,354,443,444,445,446,447,170,171,448,172,449,450,451,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,452,352,453,454,193,194,195,455,456,196,197,198,199,200,201,202,203,204,205,206,207,0,208,209,457,332,458,459,460,210,211,212,461,213,214,215,216,217,218,219,220,221,222,462,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,463,464,465,466,467,468,469,470,471,472,473,474,276,277,278,279,280,281,282,283,475,476,284,477,285,478,286,287,479,288,289,290,291,292,293,294,480,363,481,482,483,484,485,486,487,358,488,359,489,490,491,492,493,494,495,496,360,361,497,362,295,296,297,298,299,498,499,500,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,501,364,365,502,503,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[123,125,127,130,133,156,158,159,243,303,304,306,307,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:557","failures":[1,1,2,2,3,4,5,6,8,10,15,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,400,401,56,57,58,63,64,66,67,70,71,72,73,74,75,76,77,78,79,80,81,402,82,83,84,403,85,86,87,88,90,92,93,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,117,118,120,122,123,124,125,126,127,129,131,132,133,134,135,136,137,138,139,140,141,142,143,148,149,150,151,152,153,156,158,159,161,162,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,352,196,197,198,199,208,457,459,221,222,462,223,236,237,238,239,240,241,242,245,246,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,463,464,465,472,473,474,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,493,497,498,499,500,300,304,306,307,310,311,312,313,314,315,501,364,365,502,503,316,317,318,319,320,323],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":31,"org.easymock.tests2.UsageTest.argumentsOrdered":96,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":241,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":488,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":91,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":14,"org.easymock.tests2.DelegateToTest.testReturnException":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":311,"org.easymock.tests.MockingTest.testPartialClassMocking":170,"org.easymock.tests.MockClassControlTest.testToString":202,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":425,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":250,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":367,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":37,"org.easymock.tests2.UsageTest.wrongArguments":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":236,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":424,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":165,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":469,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":450,"org.easymock.tests2.UsageConstraintsTest.testNull":33,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":125,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":108,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":207,"org.easymock.tests2.CaptureTest.testPrimitive":66,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":240,"org.easymock.tests.UsageTest.moreThanOneArgument":242,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":269,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":318,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":501,"org.easymock.tests.UsageTest.argumentsOrdered":248,"org.easymock.tests.UsageVarargTest.varargIntAccepted":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":290,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":436,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":294,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests.ReplayStateInvalidUsageTest.times":232,"org.easymock.tests2.DependencyTest.testClassMocking":412,"org.easymock.tests2.AnswerTest.answer":55,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":494,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":62,"org.easymock.tests2.CaptureTest.testAnd":63,"org.easymock.tests2.UsageTest.strictResetToDefault":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":198,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":503,"org.easymock.tests2.DelegateToTest.testDelegate":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":265,"org.easymock.tests.LimitationsTest.mockFinalMethod":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":299,"org.easymock.tests2.DependencyTest.testClassMockingSupport":413,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":452,"org.easymock.tests2.CaptureTest.testCapture1_2446744":67,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":263,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":60,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":226,"org.easymock.tests.UsageThrowableTest.throwError":276,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":468,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":320,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":397,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.MockingTest.testInterfaceMocking":448,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":227,"org.easymock.tests2.CompareToTest.testLessOrEqual":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":291,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":464,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":386,"org.easymock.tests2.UsageTest.niceToStrict":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":355,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":115,"org.easymock.tests2.MockBuilderTest.testCreateMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":393,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":421,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":259,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":338,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":500,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":163,"org.easymock.tests.UsageOverloadedMethodTest.overloading":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":42,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":184,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":270,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":41,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":72,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":461,"org.easymock.tests2.EasyMockSupportClassTest.testAll":22,"org.easymock.tests.MockClassControlTest.testEquals":206,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":209,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":61,"org.easymock.tests2.CaptureTest.testCaptureAll":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":297,"org.easymock.tests.MockNameTest.defaultName":438,"org.easymock.tests2.UsageConstraintsTest.testMatches":43,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":319,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":220,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":273,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":298,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":282,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":433,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":315,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":443,"org.easymock.tests2.UsageConstraintsTest.greaterThan":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":133,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":444,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":410,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":78,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":128,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":86,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":223,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":101,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":310,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":402,"org.easymock.tests2.CaptureTest.testCaptureFirst":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":485,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":102,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":98,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":180,"org.easymock.tests2.CaptureTest.testCapture2_2446744":75,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":80,"org.easymock.tests2.UsageTest.moreThanOneArgument":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":495,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":120,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":219,"org.easymock.tests.GenericTest.testBridgedEquals":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":328,"org.easymock.tests.UsageExpectAndReturnTest.longType":176,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":295,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":268,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":462,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":316,"org.easymock.tests.UsageCallCountTest.tooManyCalls":329,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":281,"org.easymock.tests.MockingTest.testNiceClassMocking":451,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":135,"org.easymock.tests.MockingTest.testClassMocking":446,"org.easymock.tests2.UsageConstraintsTest.testContains":40,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":322,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":152,"org.easymock.tests2.UsageConstraintsTest.testFind":32,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":272,"org.easymock.tests.MockTypeTest.fromEasyMockClass":467,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":27,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests.UsageExpectAndReturnTest.object":183,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":107,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":368,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":195,"org.easymock.tests.UsageTest.exactCallCountByLastCall":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":364,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":351,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":189,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":210,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":428,"org.easymock.tests.MockClassControlTest.testHashCode":205,"org.easymock.tests2.EasyMockSupportTest.testVerify":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":388,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":499,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":59,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":112,"org.easymock.tests.UsageVarargTest.varargCharAccepted":213,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":439,"org.easymock.tests2.CaptureTest.testCaptureMultiple":330,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":362,"org.easymock.tests2.UsageTest.openCallCountByLastCall":92,"org.easymock.tests.DefaultClassInstantiatorTest.object":169,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":110,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":498,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":389,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":427,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":131,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":256,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":25,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":203,"org.easymock.tests2.UsageTest.resumeIfFailure":97,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":313,"org.easymock.tests2.StubTest.stubWithReturnValue":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":347,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":51,"org.easymock.tests2.SerializationTest.testAllMockedMethod":21,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":493,"org.easymock.samples.SupportTest.voteForRemovals":17,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":339,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":262,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":497,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":400,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":460,"org.easymock.tests.UsageExpectAndThrowTest.object":260,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":48,"org.easymock.tests2.DelegateToTest.testWrongClass":84,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":221,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":222,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":306,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":375,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":261,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":117,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":234,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":164,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":340,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":465,"org.easymock.tests2.CaptureTest.testCaptureNone":71,"org.easymock.tests.UsageUnorderedTest.message":300,"org.easymock.tests.UsageVerifyTest.twoReturns":275,"org.easymock.tests.UsageVarargTest.varargByteAccepted":218,"org.easymock.tests2.ThreadingTest.testThreadSafe":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":391,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":326,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":455,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests2.CaptureTest.testCapture_2617107":65,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":360,"org.easymock.tests2.UsageConstraintsTest.any":38,"org.easymock.tests2.StubTest.stub":161,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":474,"org.easymock.tests.UsageExpectAndThrowTest.longType":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":361,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":442,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":230,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests.LimitationsTest.mockNativeMethod":284,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":457,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":416,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests2.NameTest.nameForMocksControl":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":418,"org.easymock.tests2.MockedExceptionTest.testMockedException":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":381,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":246,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":254,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":342,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":122,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":118,"org.easymock.tests.MockingTest.testNicePartialClassMocking":171,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":414,"org.easymock.tests2.CaptureTest.testCaptureLast":70,"org.easymock.tests2.CompareToTest.testCompareEqual":335,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":352,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":140,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":36,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":49,"org.easymock.tests.MockingTest.testTwoMocks":447,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":350,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":258,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":53,"org.easymock.samples.ExampleTest.removeNonExistingDocument":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":420,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":228,"org.easymock.tests.UsageStrictMockTest.differentMethods":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":429,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":440,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":79,"org.easymock.tests2.MockBuilderTest.testCreateMockString":121,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":200,"org.easymock.tests.UsageExpectAndThrowTest.floatType":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":382,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":56,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":426,"org.easymock.tests.UsageVerifyTest.twoThrows":274,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":24,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":359,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":132,"org.easymock.tests.LimitationsTest.privateConstructor":476,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":344,"org.easymock.tests2.UsageConstraintsTest.testNotNull":52,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":283,"org.easymock.tests2.UsageTest.defaultResetToNice":94,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":188,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":415,"org.easymock.tests.UsageVarargTest.differentLength":215,"org.easymock.tests2.CallbackTest.callback":18,"org.easymock.tests2.UsageConstraintsTest.equals":398,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":408,"org.easymock.tests.UsageTest.openCallCountByLastCall":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":238,"org.easymock.tests.UsageCallCountTest.tooFewCalls":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":166,"org.easymock.tests.UsageThrowableTest.throwCheckedException":280,"org.easymock.tests.MockingTest.testStrictClassMocking":445,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":341,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":419,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":136,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":138,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":58,"org.easymock.tests.ObjectMethodsTest.testHashCode":194,"org.easymock.tests2.CompareToTest.testGreateOrEqual":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":370,"org.easymock.tests2.NameTest.nameForNiceMock":146,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":81,"org.easymock.tests2.DependencyTest.testInterfaceMocking":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":369,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.DelegateToTest.testStubDelegate":83,"org.easymock.tests2.AnswerTest.stubAnswer":57,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":304,"org.easymock.tests.UsageVarargTest.varargLongAccepted":217,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":358,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":191,"org.easymock.tests.UsageExpectAndReturnTest.floatType":175,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":148,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":435,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":46,"org.easymock.tests.UsageThrowableTest.noUpperLimit":277,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":29,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":373,"org.easymock.tests2.SerializationTest.test":20,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":68,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":174,"org.easymock.tests2.UsageConstraintsTest.testSame":34,"org.easymock.samples.SupportTest.addDocument":16,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":383,"org.easymock.tests.GenericTest.testPackageScope":208,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":449,"org.easymock.tests2.NameTest.nameForMock":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":185,"org.easymock.tests2.UsageStrictMockTest.differentMethods":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":349,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":409,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":264,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":199,"org.easymock.tests2.MockedExceptionTest.testRealException":153,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":491,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":490,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":156,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":237,"org.easymock.tests2.NameTest.nameForStrictMock":145,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":405,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":26,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":357,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":126,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":374,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":441,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":47,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":114,"org.easymock.tests2.UsageStrictMockTest.range":158,"org.easymock.tests2.UsageConstraintsTest.lessThan":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":387,"org.easymock.tests2.CaptureTest.testCaptureRightOne":73,"org.easymock.tests2.UsageConstraintsTest.testOr":35,"org.easymock.tests.UsageRangeTest.combination":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":123,"org.easymock.tests.UsageTest.wrongArguments":244,"org.easymock.tests2.MockBuilderTest.testWithConstructor":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":384,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":363,"org.easymock.tests.UsageVarargTest.varargShortAccepted":216,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":354,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":327,"org.easymock.tests2.UsageConstraintsTest.cmpTo":39,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":401,"org.easymock.tests2.CompareToTest.testLessThan":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":482,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":93,"org.easymock.tests2.CaptureTest.testCaptureFromStub":74,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":225,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":404,"org.easymock.tests.UsageTest.unexpectedCallWithArray":243,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":325,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":187,"org.easymock.tests2.CaptureTest.testCapture":331,"org.easymock.tests2.UsageConstraintsTest.constraints":30,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests.UsageStrictMockTest.testVerify":309,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":13,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":296,"org.easymock.tests2.CompareToTest.testGreateThan":334,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":292,"org.easymock.tests.LimitationsTest.abstractClass":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":179,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":105,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":211}}]
