[{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,48,49,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[65,66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[67,14,16,29,54,68,69,70,71,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[11,67,90,12,13,14,15,16,17,91,19,92,93,94,95,96,97,98,99,36,37,38,39,40,41,42,100,43,44,45,46,101,102,103,104,47,48,49,50,51,52,55,105,106,107,108,109,110,111,112,113,56,114,115,57,58,116,117,60,69,70,71,118,119,120,121,122,61,62,63,64,123],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[10,18,124,125,20,21,22,23,126,25,26,127,128,27,28,29,129,30,130,131,31,32,132,34,41,133,44,45,102,103,48,49,50,53,54,115,59],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[0,2,4,6,7,134,8,135,65],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[27,29,30,33,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[135],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[137,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[37,62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[139,140,141,142,143,42,144,6,9,145,146,147,66,148,149,150],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"failMessage"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[173,10,174,11,175,176,177,178,179,180,181,182,183,184,185,186,187,188,73,74,189,190,191,192,193,75,76,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,12,13,14,15,210,16,17,18,19,20,21,22,211,212,213,214,215,216,23,25,27,28,29,30,31,32,34,0,1,2,3,217,218,219,220,221,222,4,5,223,224,36,37,225,38,39,40,41,42,43,44,45,46,144,226,6,7,227,228,229,134,8,9,230,145,231,232,146,233,234,147,235,65,66,148,236,149,237,238,150,103,104,47,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,48,49,50,51,52,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,55,303,81,82,83,304,305,84,85,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,105,322,323,324,325,326,327,328,329,330,331,332,333,56,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,57,58,117,60,69,70,71,118,119,120,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,89,408,409,410,411,412,413,62,63,64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[185,186,414,0,1,2,3,217,218,219,220,221,222,4,5,223,224,42,144,226,6,7,227,228,229,134,8,9,135,230,145,231,232,146,233,234,147,235,65,66,148,236,149,237,238,150,248,252,269,270,278,279,280,281,282,316,317,318,319,320,321,362,363,371,383,89,408],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[415,416,417,418],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[106,110],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[142,9,146,150],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:109","sourceCode":"org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[419],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[11,74,190,75,76,199,205,206,207,208,211,212,213,214,215,25,27,32,1,2,218,219,220,221,224,36,135,230,236,149,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,267,268,51,52,420,280,281,55,83,84,85,307,309,310,311,312,314,315,321,355,373,374,375,376,377,378,379,380,381,382,383,57,58,406,407,89,408,409,410,411,412,413,421,422],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[166],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[126,423,132,133,48,49],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[234],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[152,159,163,167,168],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[173,10,174,179,181,183,184,187,188,73,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,12,13,14,15,210,16,17,18,19,20,21,22,216,25,27,29,30,32,0,1,2,3,217,220,221,222,4,223,224,36,37,225,38,39,40,42,44,45,46,144,226,6,7,227,228,229,134,8,9,230,145,231,232,146,233,234,147,235,65,66,148,236,149,237,238,150,47,240,242,245,246,247,248,249,252,254,255,258,260,262,263,265,50,269,270,271,272,273,278,279,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,81,304,305,306,316,317,318,319,320,321,56,354,356,357,358,359,360,361,362,363,57,384,386,395,402,403,404,405,408,410,411,62,63,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[232],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests2.UsageTest.argumentsOrdered":76,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":303,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":161,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":259,"org.easymock.tests2.DelegateToTest.testReturnException":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":368,"org.easymock.tests.MockingTest.testPartialClassMocking":62,"org.easymock.tests.MockClassControlTest.testToString":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":102,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":334,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":184,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":9,"org.easymock.tests2.UsageTest.wrongArguments":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":278,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":276,"org.easymock.samples.ExampleTest.answerVsDelegate":261,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":54,"org.easymock.tests2.UsageConstraintsTest.testNull":228,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":38,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":120,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":205,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":282,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":353,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":389,"org.easymock.tests.UsageTest.argumentsOrdered":85,"org.easymock.tests.UsageVarargTest.varargIntAccepted":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":316,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":23,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":320,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests.ReplayStateInvalidUsageTest.times":330,"org.easymock.tests2.AnswerTest.answer":179,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":178,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":43,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":200,"org.easymock.tests2.DelegateToTest.testDelegate":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":349,"org.easymock.tests.LimitationsTest.mockFinalMethod":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":371,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":401,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":415,"org.easymock.tests2.CaptureTest.testCapture1_2446744":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":176,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":324,"org.easymock.tests.UsageThrowableTest.throwError":354,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":391,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":325,"org.easymock.tests2.CompareToTest.testLessOrEqual":143,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":317,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":151,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":27,"org.easymock.tests2.MockBuilderTest.testCreateMock":31,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":343,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":201,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":274,"org.easymock.tests.UsageOverloadedMethodTest.overloading":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":99,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":394,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":146,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":294,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":232,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":222,"org.easymock.tests.MockClassControlTest.testEquals":119,"org.easymock.tests2.EasyMockSupportClassTest.testAll":19,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":58,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":351,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":399,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":177,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests2.UsageConstraintsTest.testMatches":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":390,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":322,"org.easymock.samples.ExampleTest.voteForRemovals":265,"org.easymock.tests.UsageVarargTest.allKinds":383,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":400,"org.easymock.samples.BasicClassMockTest.testPrintContent":52,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":360,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":250,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":372,"org.easymock.tests2.UsageConstraintsTest.greaterThan":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":403,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":46,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":111,"org.easymock.samples.ExampleTest.voteForRemoval":262,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":101,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":41,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":55,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":198,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":367,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":137,"org.easymock.tests2.CaptureTest.testCaptureFirst":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":199,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":195,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":290,"org.easymock.tests2.UsageTest.moreThanOneArgument":73,"org.easymock.tests2.CaptureTest.testCapture2_2446744":223,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":168,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":32,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":382,"org.easymock.tests.GenericTest.testBridgedEquals":116,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":314,"org.easymock.tests.UsageExpectAndReturnTest.longType":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":397,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":196,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":352,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":387,"org.easymock.tests.UsageCallCountTest.tooManyCalls":315,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":339,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":359,"org.easymock.tests.MockingTest.testNiceClassMocking":123,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":13,"org.easymock.tests.MockingTest.testClassMocking":122,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":24,"org.easymock.tests2.UsageConstraintsTest.testContains":231,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":308,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":47,"org.easymock.tests2.UsageConstraintsTest.testFind":227,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":273,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":406,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":186,"org.easymock.tests.UsageExpectAndReturnTest.object":293,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":204,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":377,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":366,"org.easymock.tests.UsageTest.exactCallCountByLastCall":306,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":156,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":421,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":124,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":299,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":393,"org.easymock.tests.MockClassControlTest.testHashCode":118,"org.easymock.tests2.EasyMockSupportTest.testVerify":208,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":422,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":392,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":175,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":414,"org.easymock.tests.UsageVarargTest.varargCharAccepted":376,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":172,"org.easymock.tests2.UsageTest.openCallCountByLastCall":191,"org.easymock.tests.DefaultClassInstantiatorTest.object":105,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":207,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":341,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":357,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":44,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":22,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":70,"org.easymock.tests2.UsageTest.resumeIfFailure":194,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":370,"org.easymock.tests2.StubTest.stubWithReturnValue":216,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":292,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":79,"org.easymock.samples.SupportTest.voteForRemovals":258,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":346,"org.easymock.tests.UsageExpectAndThrowTest.object":344,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":66,"org.easymock.tests2.DelegateToTest.testWrongClass":243,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":362,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":363,"org.easymock.tests.UsageStrictMockTest.range":410,"org.easymock.samples.ConstructorCalledMockTest.testTax":48,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":12,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":345,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":29,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":91,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":275,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":86,"org.easymock.tests2.CaptureTest.testCaptureNone":221,"org.easymock.tests.UsageUnorderedTest.message":321,"org.easymock.tests.UsageVerifyTest.twoReturns":386,"org.easymock.tests.UsageVarargTest.varargByteAccepted":381,"org.easymock.tests2.ThreadingTest.testThreadSafe":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":97,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":312,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":51,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":281,"org.easymock.tests2.UsageConstraintsTest.any":230,"org.easymock.tests2.StubTest.stub":215,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":171,"org.easymock.tests.UsageExpectAndThrowTest.longType":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":369,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":109,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":328,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":253,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":240,"org.easymock.tests.LimitationsTest.mockNativeMethod":56,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":302,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":256,"org.easymock.tests2.NameTest.nameForMocksControl":214,"org.easymock.tests2.MockedExceptionTest.testMockedException":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":92,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":305,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":64,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":338,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":36,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":30,"org.easymock.tests.MockingTest.testNicePartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":40,"org.easymock.tests2.CompareToTest.testNotComparable":419,"org.easymock.tests2.CompareToTest.testCompareEqual":141,"org.easymock.tests2.CaptureTest.testCaptureLast":220,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":416,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":17,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":148,"org.easymock.tests.MockingTest.testTwoMocks":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":283,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":342,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":238,"org.easymock.samples.ExampleTest.removeNonExistingDocument":266,"org.easymock.tests.UsageStrictMockTest.differentMethods":411,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":326,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":107,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":247,"org.easymock.tests2.MockBuilderTest.testCreateMockString":34,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":93,"org.easymock.tests.UsageExpectAndThrowTest.floatType":336,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":234,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":180,"org.easymock.tests.UsageVerifyTest.twoThrows":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":125,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":21,"org.easymock.samples.ExampleTest.voteAgainstRemoval":263,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":162,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":45,"org.easymock.tests.LimitationsTest.privateConstructor":113,"org.easymock.tests2.UsageConstraintsTest.testNotNull":237,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":103,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":361,"org.easymock.tests2.UsageTest.defaultResetToNice":193,"org.easymock.samples.ExampleTest.voteAgainstRemovals":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":298,"org.easymock.tests.UsageVarargTest.differentLength":378,"org.easymock.tests2.CallbackTest.callback":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":133,"org.easymock.tests.UsageTest.openCallCountByLastCall":304,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":280,"org.easymock.tests.UsageCallCountTest.tooFewCalls":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":277,"org.easymock.tests.UsageThrowableTest.throwCheckedException":358,"org.easymock.tests.MockingTest.testStrictClassMocking":121,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":16,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":270,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":14,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":210,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":182,"org.easymock.tests2.CompareToTest.testGreateOrEqual":142,"org.easymock.tests.ObjectMethodsTest.testHashCode":365,"org.easymock.tests2.NameTest.nameForNiceMock":213,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":249,"org.easymock.tests2.DependencyTest.testInterfaceMocking":183,"org.easymock.samples.ExampleTest.addDocument":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":98,"org.easymock.tests2.DelegateToTest.testStubDelegate":242,"org.easymock.tests2.AnswerTest.stubAnswer":181,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":408,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":130,"org.easymock.tests.UsageVarargTest.varargLongAccepted":380,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":160,"org.easymock.tests.UsageExpectAndReturnTest.floatType":285,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":49,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":418,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":235,"org.easymock.tests.UsageThrowableTest.noUpperLimit":355,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":226,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":67,"org.easymock.tests2.SerializationTest.test":174,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":218,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":106,"org.easymock.tests2.UsageConstraintsTest.testSame":229,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":284,"org.easymock.samples.SupportTest.addDocument":257,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":94,"org.easymock.tests.GenericTest.testPackageScope":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":155,"org.easymock.tests2.NameTest.nameForMock":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":132,"org.easymock.tests2.UsageStrictMockTest.differentMethods":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":287,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":348,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":405,"org.easymock.tests2.MockedExceptionTest.testRealException":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":164,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":252,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":279,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":333,"org.easymock.tests2.NameTest.nameForStrictMock":212,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":128,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":185,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":39,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":90,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":108,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":65,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":254,"org.easymock.tests2.UsageConstraintsTest.lessThan":150,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":159,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":197,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests2.UsageConstraintsTest.testOr":134,"org.easymock.tests.UsageRangeTest.combination":402,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":37,"org.easymock.tests.UsageTest.wrongArguments":83,"org.easymock.tests2.MockBuilderTest.testWithConstructor":126,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":60,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":296,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":110,"org.easymock.tests.UsageVarargTest.varargShortAccepted":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":313,"org.easymock.tests2.UsageConstraintsTest.cmpTo":145,"org.easymock.tests2.CompareToTest.testLessThan":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":154,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.CaptureTest.testCaptureFromStub":5,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":323,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":26,"org.easymock.tests.UsageTest.unexpectedCallWithArray":82,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":89,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":311,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":297,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":409,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.samples.ExampleTest.addAndChangeDocument":267,"org.easymock.tests.UsageStrictMockTest.testVerify":413,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":268,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":407,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":398,"org.easymock.tests2.CompareToTest.testGreateThan":140,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":219,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":318,"org.easymock.tests.LimitationsTest.abstractClass":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":289,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":202,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":374}}]
