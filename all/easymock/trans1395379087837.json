[{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[57,58,59,60,61,62,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[64],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[65,66,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1764","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[16,16,17,17,68,69,57,65,70,71,53,63,72,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[53,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[2,7,8,9,10,11,12,13,14,15,16,16,17,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[0,73,74,75,76,1,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,2,3,4,5,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,6,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,7,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,8,9,10,221,11,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,12,13,14,321,322,323,324,15,325,326,16,17,327,328,329,330,331,332,333,334,18,19,20,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,21,22,23,362,24,25,26,27,363,65,28,29,30,31,32,33,34,364,365,35,36,366,37,38,367,39,40,41,42,368,43,71,369,44,45,46,47,370,48,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,49,386,387,50,388,389,390,391,392,393,394,395,396,51,397,398,399,400,401,52,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,53,63,427,428,429,430,431,432,433,434,54,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,67,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,55,502,56,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,520,520,122,124,125,128,135,136,137,138,139,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,174,175,176,7,205,206,207,208,209,210,211,212,213,214,215,216,217,218,9,10,11,237,238,239,240,241,242,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,307,308,309,310,311,312,313,314,315,316,317,318,319,12,13,15,325,326,16,17,327,328,329,330,331,332,334,18,19,20,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,21,22,24,25,26,27,28,29,30,31,32,33,34,365,35,36,37,38,367,39,40,41,42,43,44,45,46,47,376,49,50,51,52,409,416,417,418,419,420,423,424,425,53,427,429,430,431,432,433,434,54,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,456,457,458,460,461,462,463,464,465,466,467,468,469,470,471,472,473,475,476,477,478,67,479,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,500,501,55,502,56,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[84,293,294,296,297,299,38,39,41,44,47,465,467,468],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1,2,7,8,9,10,11,12,13,14,15,16,16,17,17,18,19,20,21,521,22,23,24,25,26,27,28,29,522,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,523,524,525,49,50,51,52,53,54,55,56],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[69],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[103,108,109,110,111,148,149,150,151,152,153,156,157,159,160,161,163,164,165,166,167,7,209,210,211,212,213,214,9,10,11,294,296,297,315,316,317,318,319,326,327,329,330,332,20,22,24,26,27,29,31,32,33,34,365,35,36,37,38,367,39,40,41,43,45,46,47,49,50,51,52,53,431,457,465,467,468,500,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[480,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[490,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[80,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,2,3,4,5,119,120,121,122,123,124,125,127,128,135,136,137,138,139,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,7,205,206,207,208,209,210,211,212,213,214,215,216,217,218,9,10,11,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,307,308,309,310,311,312,313,314,315,316,317,318,319,12,13,15,325,326,16,16,17,17,327,328,329,330,331,332,333,334,18,19,20,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,21,22,24,25,26,27,28,29,30,31,32,33,34,365,35,36,37,38,367,39,40,41,42,43,44,45,46,47,376,49,50,51,52,409,416,417,418,419,420,423,424,425,53,427,429,430,431,432,433,434,54,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,456,457,458,460,461,462,463,464,465,466,467,468,469,470,471,472,473,475,476,477,478,67,479,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,500,501,55,502,56,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[473,478,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[495],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[317,326,327,329,330,332],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:105","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[348,461],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[84,526,527,293,528,529],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[530],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":473,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":82,"org.easymock.tests2.UsageTest.argumentsOrdered":347,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":446,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":187,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":342,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":336,"org.easymock.tests2.DelegateToTest.testReturnException":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":113,"org.easymock.tests.MockingTest.testPartialClassMocking":9,"org.easymock.tests.MockClassControlTest.testToString":3,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":450,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":271,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":501,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":479,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":103,"org.easymock.tests2.UsageTest.wrongArguments":340,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":241,"org.easymock.samples.ExampleTest.answerVsDelegate":328,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":1,"org.easymock.tests2.UsageConstraintsTest.testNull":476,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":39,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":445,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":121,"org.easymock.tests2.CaptureTest.testPrimitive":506,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":107,"org.easymock.tests.UsageTest.moreThanOneArgument":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":290,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":213,"org.easymock.tests.UsageTest.argumentsOrdered":89,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":266,"org.easymock.tests.UsageVarargTest.varargIntAccepted":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":315,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":358,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":319,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":248,"org.easymock.tests.ReplayStateInvalidUsageTest.times":233,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":376,"org.easymock.tests2.DependencyTest.testClassMocking":498,"org.easymock.tests2.AnswerTest.answer":420,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":419,"org.easymock.tests2.CaptureTest.testAnd":503,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":74,"org.easymock.tests2.UsageTest.strictResetToDefault":338,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":440,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":110,"org.easymock.tests2.DelegateToTest.testDelegate":460,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":270,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":286,"org.easymock.tests.LimitationsTest.mockFinalMethod":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":139,"org.easymock.tests2.DependencyTest.testClassMockingSupport":499,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":79,"org.easymock.tests2.CaptureTest.testCapture1_2446744":507,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":417,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":227,"org.easymock.tests.UsageThrowableTest.throwError":307,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":76,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":251,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests.MockingTest.testInterfaceMocking":221,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":316,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":392,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":6,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":272,"org.easymock.tests2.UsageTest.niceToStrict":341,"org.easymock.tests2.ThreadingTest.testChangeDefault":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":177,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":24,"org.easymock.tests2.MockBuilderTest.testCreateMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":399,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":379,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":528,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":280,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":441,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":142,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":239,"org.easymock.tests.UsageOverloadedMethodTest.overloading":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":485,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":159,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":216,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":484,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":64,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":512,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":94,"org.easymock.tests.MockClassControlTest.testEquals":120,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":288,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":523,"org.easymock.tests2.CaptureTest.testCaptureAll":504,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":418,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":137,"org.easymock.tests.MockNameTest.defaultName":265,"org.easymock.tests2.UsageConstraintsTest.testMatches":486,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":214,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":225,"org.easymock.samples.ExampleTest.voteForRemovals":332,"org.easymock.tests.UsageVarargTest.allKinds":102,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":138,"org.easymock.samples.BasicClassMockTest.testPrintContent":19,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":313,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":463,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":117,"org.easymock.tests2.UsageConstraintsTest.greaterThan":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":109,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":252,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":306,"org.easymock.samples.ExampleTest.voteForRemoval":329,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":429,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":370,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":42,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":244,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":15,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":337,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":438,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":112,"org.easymock.tests2.CaptureTest.testCaptureFirst":516,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":439,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":349,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":128,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":155,"org.easymock.tests2.CaptureTest.testCapture2_2446744":515,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":431,"org.easymock.tests2.UsageTest.moreThanOneArgument":339,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":195,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":101,"org.easymock.tests.GenericTest.testBridgedEquals":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":175,"org.easymock.tests.UsageExpectAndReturnTest.longType":151,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":436,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":135,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":522,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":289,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":493,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":211,"org.easymock.tests.UsageCallCountTest.tooManyCalls":176,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":312,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":32,"org.easymock.tests.MockingTest.testNiceClassMocking":224,"org.easymock.tests.MockingTest.testClassMocking":220,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":521,"org.easymock.tests2.UsageConstraintsTest.testContains":483,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":169,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.UsageConstraintsTest.testFind":475,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":218,"org.easymock.tests.MockTypeTest.fromEasyMockClass":75,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":519,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":291,"org.easymock.tests.UsageExpectAndReturnTest.object":158,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":444,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":59,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":146,"org.easymock.tests.UsageTest.exactCallCountByLastCall":90,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":182,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":132,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":63,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":164,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":91,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":124,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":405,"org.easymock.tests.MockClassControlTest.testHashCode":119,"org.easymock.tests2.EasyMockSupportTest.testVerify":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":394,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":141,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":416,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":426,"org.easymock.tests.UsageVarargTest.varargCharAccepted":95,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":200,"org.easymock.tests2.UsageTest.openCallCountByLastCall":343,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":447,"org.easymock.tests.DefaultClassInstantiatorTest.object":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":140,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":395,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":404,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":5,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":277,"org.easymock.tests.CapturesMatcherTest.test":520,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":165,"org.easymock.tests.ReplayStateInvalidCallsTest.times":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":129,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":257,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests2.UsageTest.resumeIfFailure":348,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":115,"org.easymock.tests2.StubTest.stubWithReturnValue":462,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":57,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":494,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":157,"org.easymock.tests2.SerializationTest.testAllMockedMethod":56,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":193,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":66,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":529,"org.easymock.samples.SupportTest.voteForRemovals":326,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":283,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":199,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":421,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":134,"org.easymock.tests.UsageExpectAndThrowTest.object":281,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":491,"org.easymock.tests2.DelegateToTest.testWrongClass":458,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":209,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":254,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":210,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests.UsageStrictMockTest.range":296,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":360,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":443,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":282,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":26,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":526,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":246,"org.easymock.tests2.CaptureTest.testCaptureNone":511,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":324,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":351,"org.easymock.tests.UsageUnorderedTest.message":208,"org.easymock.tests.UsageVerifyTest.twoReturns":207,"org.easymock.tests.UsageVarargTest.varargByteAccepted":100,"org.easymock.tests2.ThreadingTest.testThreadSafe":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":397,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":173,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":147,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":18,"org.easymock.tests2.CaptureTest.testCapture_2617107":505,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":197,"org.easymock.tests2.UsageConstraintsTest.any":481,"org.easymock.tests2.StubTest.stub":461,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":198,"org.easymock.tests.UsageExpectAndThrowTest.longType":274,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":304,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":231,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":466,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":409,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":167,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":14,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":525,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":373,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":262,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":469,"org.easymock.tests2.NameTest.nameForMocksControl":454,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":352,"org.easymock.tests2.MockedExceptionTest.testMockedException":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":387,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":87,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":518,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":275,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":27,"org.easymock.tests.MockingTest.testNicePartialClassMocking":10,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":41,"org.easymock.tests2.CaptureTest.testCaptureLast":510,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":80,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":36,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":67,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":261,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":492,"org.easymock.tests.MockingTest.testTwoMocks":8,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":258,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":366,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":279,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":346,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":496,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":355,"org.easymock.samples.ExampleTest.removeNonExistingDocument":333,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":229,"org.easymock.tests.UsageStrictMockTest.differentMethods":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":406,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":302,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":354,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":430,"org.easymock.tests2.MockBuilderTest.testCreateMockString":30,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":388,"org.easymock.tests.UsageExpectAndThrowTest.floatType":273,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":423,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":72,"org.easymock.tests.UsageVerifyTest.twoThrows":206,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":188,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":322,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests.LimitationsTest.privateConstructor":203,"org.easymock.tests2.UsageConstraintsTest.testNotNull":495,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":433,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":314,"org.easymock.tests2.UsageTest.defaultResetToNice":345,"org.easymock.samples.ExampleTest.voteAgainstRemovals":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":189,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":163,"org.easymock.tests.UsageVarargTest.differentLength":97,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":372,"org.easymock.tests2.CallbackTest.callback":449,"org.easymock.tests2.UsageConstraintsTest.equals":474,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":71,"org.easymock.tests.UsageTest.openCallCountByLastCall":86,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":105,"org.easymock.tests.UsageCallCountTest.tooFewCalls":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":242,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":353,"org.easymock.tests.UsageThrowableTest.throwCheckedException":311,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":527,"org.easymock.tests.MockingTest.testStrictClassMocking":219,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":238,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":365,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":425,"org.easymock.tests.ObjectMethodsTest.testHashCode":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":61,"org.easymock.tests2.NameTest.nameForNiceMock":453,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":432,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":260,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":255,"org.easymock.tests2.DependencyTest.testInterfaceMocking":500,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":60,"org.easymock.samples.ExampleTest.addDocument":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":398,"org.easymock.tests2.DelegateToTest.testStubDelegate":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.AnswerTest.stubAnswer":424,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":294,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":363,"org.easymock.tests.UsageVarargTest.varargLongAccepted":99,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":166,"org.easymock.tests.UsageExpectAndReturnTest.floatType":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":53,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests.UsageThrowableTest.noUpperLimit":308,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":471,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":356,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":508,"org.easymock.tests2.SerializationTest.test":502,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":301,"org.easymock.tests2.UsageConstraintsTest.testSame":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":149,"org.easymock.samples.SupportTest.addDocument":325,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":364,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":245,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":389,"org.easymock.tests.GenericTest.testPackageScope":12,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":181,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":222,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":243,"org.easymock.tests2.NameTest.nameForMock":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":160,"org.easymock.tests2.UsageStrictMockTest.differentMethods":468,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":70,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":152,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":285,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":111,"org.easymock.tests2.MockedExceptionTest.testRealException":435,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":361,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":104,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":236,"org.easymock.tests2.NameTest.nameForStrictMock":452,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":517,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":359,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":303,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":467,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":249,"org.easymock.tests2.UsageConstraintsTest.lessThan":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":393,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":350,"org.easymock.tests2.UsageConstraintsTest.testOr":478,"org.easymock.tests.UsageRangeTest.combination":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.UsageTest.wrongArguments":85,"org.easymock.tests2.MockBuilderTest.testWithConstructor":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":390,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":161,"org.easymock.tests.UsageVarargTest.varargShortAccepted":98,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":305,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":174,"org.easymock.tests2.UsageConstraintsTest.cmpTo":482,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":263,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":422,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":253,"org.easymock.tests2.CompareToTest.testLessThan":530,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":180,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":344,"org.easymock.tests2.CaptureTest.testCaptureFromStub":514,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":226,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":23,"org.easymock.tests.UsageTest.unexpectedCallWithArray":84,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":259,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":293,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":172,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":162,"org.easymock.tests2.UsageConstraintsTest.constraints":472,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":334,"org.easymock.tests.UsageStrictMockTest.testVerify":299,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":335,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":136,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":509,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":524,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":154,"org.easymock.tests.LimitationsTest.abstractClass":202,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":442,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":92}}]
