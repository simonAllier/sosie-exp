[{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,3,100,4,101,5,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,9,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[41,42,43,163],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[30,33,34,1,8,111,112,113,164,165,9,11,166,151,152],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[167,122,168,169,170,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[23,24,25,172,172,173,173,27,174,36,37,38,39,40,41,43,87,88,89,90,92,93,175,176,177,178,94,179,95,96,180,181,182,183,99,3,4,101,5,184,102,6,185,103,7,107,108,186,116,117,118,119,120,187,188,189,190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[191,192,193,194,195],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[196,197,40,198,199,200,201,202,203,204,205,206,193,194,195],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[65],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[207,208,209,210,211,212,213],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[214],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[216,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[25,172,172,173,173,27,218,219,174,220,221,36,37,38,39,41,222,175,177,178,94,95,96,181,214,183,3,184,185,103,7,107,108,116,117,118,119,187],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[223,224,225],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[172,173,226,227,228,229],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[216,230,231,232],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[233,0,2,72,234,235,236,237,238,239,240,241,10,12,146,242,151,152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[14,15,16,17,18,19,243,20,21,22,23,24,25,26,27,28,29,233,30,31,32,244,245,246,33,34,247,35,248,249,36,37,38,39,40,250,251,41,42,43,44,45,46,47,48,49,50,252,51,52,53,54,55,56,253,57,254,255,256,257,58,258,259,260,261,59,60,262,61,62,263,63,264,265,64,266,267,65,66,67,68,69,268,269,270,271,70,0,71,1,2,72,234,235,236,237,73,74,230,231,75,76,77,78,272,79,80,81,82,83,84,273,85,274,275,86,87,88,89,90,91,92,93,177,94,95,96,181,97,98,99,3,100,4,101,5,102,185,103,7,104,276,277,278,105,106,107,108,109,110,279,280,238,111,281,282,112,113,114,283,284,199,115,285,164,116,117,118,167,286,119,120,287,288,122,123,168,124,289,290,291,292,125,293,294,295,296,126,297,298,169,170,127,128,129,130,131,132,133,134,299,200,300,301,135,136,302,137,303,304,305,306,138,307,308,309,310,139,311,312,313,314,239,240,241,140,141,142,143,315,144,9,10,145,11,12,146,13,147,148,149,150,242,151,152,205,316,317,318,319,320,321,322,323,324,325,326,153,154,155,156,157,327,158,159,160,161,162,328],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[27,207,213,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[1,11,151,152,333],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[334,335,8,336,337,9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[27,207,208,209,210,338,339,41,213,340],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[64,68,76,77,272,79,80,81,82,85],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[61,299],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[41,42,43,163],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[207,341,342,89,93,343,226,344,213,227,228],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[41,340],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[334,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:95","sourceCode":"return java.util.List<T>","type":"CtReturnImpl"},"failures":[345,76,273],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[346,347,348],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":58,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":280,"org.easymock.tests2.UsageTest.argumentsOrdered":34,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":204,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":32,"org.easymock.tests2.StubTest.stubWithReturnValue":249,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":292,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":69,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":22,"org.easymock.tests2.SerializationTest.testAllMockedMethod":43,"org.easymock.tests2.DelegateToTest.testReturnException":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":202,"org.easymock.tests.MockingTest.testPartialClassMocking":116,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":335,"org.easymock.samples.SupportTest.voteForRemovals":21,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":308,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":300,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":216,"org.easymock.tests.UsageExpectAndThrowTest.object":138,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":66,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":208,"org.easymock.tests2.DelegateToTest.testWrongClass":57,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":167,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":286,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":283,"org.easymock.tests2.UsageTest.wrongArguments":30,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.samples.ConstructorCalledMockTest.testTax":172,"org.easymock.samples.ExampleTest.answerVsDelegate":15,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":87,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":189,"org.easymock.tests2.UsageConstraintsTest.testNull":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":4,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":95,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":52,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":218,"org.easymock.tests2.CaptureTest.testPrimitive":78,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":314,"org.easymock.tests.UsageTest.moreThanOneArgument":238,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":192,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":112,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":100,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":336,"org.easymock.tests2.CaptureTest.testCaptureNone":82,"org.easymock.tests.UsageUnorderedTest.message":164,"org.easymock.tests.UsageVerifyTest.twoReturns":152,"org.easymock.tests.UsageVarargTest.varargByteAccepted":160,"org.easymock.tests2.ThreadingTest.testThreadSafe":276,"org.easymock.tests.UsageTest.argumentsOrdered":113,"org.easymock.tests.UsageVarargTest.varargIntAccepted":155,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":141,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":316,"org.easymock.tests2.CaptureTest.testCapture_2617107":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":212,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":115,"org.easymock.tests2.UsageConstraintsTest.any":61,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":179,"org.easymock.tests2.StubTest.stub":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":203,"org.easymock.tests.UsageExpectAndThrowTest.longType":136,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":223,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":71,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":86,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":104,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests2.AnswerTest.answer":73,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":170,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":187,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":262,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":220,"org.easymock.tests2.CaptureTest.testAnd":75,"org.easymock.tests2.UsageTest.strictResetToDefault":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":344,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":6,"org.easymock.tests2.NameTest.nameForMocksControl":237,"org.easymock.tests2.MockedExceptionTest.testMockedException":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":48,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":282,"org.easymock.tests2.DelegateToTest.testDelegate":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":302,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":118,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":96,"org.easymock.tests.MockingTest.testNicePartialClassMocking":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":139,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":5,"org.easymock.tests2.CaptureTest.testCaptureLast":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":93,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":59,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":67,"org.easymock.tests.MockingTest.testTwoMocks":186,"org.easymock.tests2.CaptureTest.testCapture1_2446744":272,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":305,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":269,"org.easymock.tests.UsageThrowableTest.throwError":127,"org.easymock.tests.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":278,"org.easymock.tests2.MockBuilderTest.testCreateMockString":183,"org.easymock.tests.UsageExpectAndThrowTest.floatType":135,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":64,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":74,"org.easymock.tests.UsageVerifyTest.twoThrows":151,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":317,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":301,"org.easymock.tests2.UsageTest.niceToStrict":31,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":342,"org.easymock.tests2.UsageConstraintsTest.testNotNull":268,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":134,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":348,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":94,"org.easymock.tests2.UsageTest.defaultResetToNice":246,"org.easymock.tests2.MockBuilderTest.testCreateMock":180,"org.easymock.samples.ExampleTest.voteAgainstRemovals":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":126,"org.easymock.tests.UsageVarargTest.differentLength":327,"org.easymock.tests2.CallbackTest.callback":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":229,"org.easymock.tests.UsageTest.openCallCountByLastCall":281,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":306,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":49,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":199,"org.easymock.tests.UsageCallCountTest.tooFewCalls":241,"org.easymock.tests.UsageOverloadedMethodTest.overloading":110,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":264,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":293,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":90,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":109,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":224,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":63,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":83,"org.easymock.tests.UsageThrowableTest.throwCheckedException":131,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":120,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":312,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":219,"org.easymock.tests2.CaptureTest.testCaptureAll":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":200,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.testMatches":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":91,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":231,"org.easymock.samples.ExampleTest.voteForRemovals":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":211,"org.easymock.tests2.NameTest.nameForNiceMock":236,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":106,"org.easymock.tests.UsageVarargTest.allKinds":162,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":242,"org.easymock.tests2.DependencyTest.testInterfaceMocking":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":210,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.samples.ExampleTest.addDocument":18,"org.easymock.tests2.DelegateToTest.testStubDelegate":253,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":133,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests2.AnswerTest.stubAnswer":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":206,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":339,"org.easymock.tests2.UsageConstraintsTest.greaterThan":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":7,"org.easymock.tests.UsageVarargTest.varargLongAccepted":159,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":277,"org.easymock.tests.UsageExpectAndReturnTest.floatType":122,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":169,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":184,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":173,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":267,"org.easymock.tests.UsageThrowableTest.noUpperLimit":128,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":256,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":28,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":107,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":79,"org.easymock.tests2.SerializationTest.test":42,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":340,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":46,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":288,"org.easymock.tests2.UsageConstraintsTest.testSame":260,"org.easymock.samples.SupportTest.addDocument":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":201,"org.easymock.tests2.CaptureTest.testCaptureFirst":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":47,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":35,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":290,"org.easymock.tests.GenericTest.testPackageScope":119,"org.easymock.tests2.CaptureTest.testCapture2_2446744":273,"org.easymock.tests2.UsageTest.moreThanOneArgument":233,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":105,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":181,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":161,"org.easymock.tests2.NameTest.nameForMock":234,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":142,"org.easymock.tests.UsageExpectAndReturnTest.longType":123,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":294,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":182,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":311,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":168,"org.easymock.tests.UsageCallCountTest.tooManyCalls":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":324,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":240,"org.easymock.tests2.MockedExceptionTest.testRealException":198,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":291,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":331,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":137,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":88,"org.easymock.tests2.UsageConstraintsTest.testContains":263,"org.easymock.tests2.NameTest.nameForStrictMock":235,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":176,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":40,"org.easymock.tests2.UsageConstraintsTest.testFind":258,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":347,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":251,"org.easymock.tests.UsageExpectAndReturnTest.object":125,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":65,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":102,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":177,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":209,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":157,"org.easymock.tests.UsageTest.exactCallCountByLastCall":114,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":299,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":338,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":45,"org.easymock.tests2.CaptureTest.testCaptureRightOne":84,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":325,"org.easymock.tests2.UsageConstraintsTest.testOr":261,"org.easymock.tests.UsageRangeTest.combination":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":3,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":153,"org.easymock.tests.UsageTest.wrongArguments":111,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":148,"org.easymock.tests2.MockBuilderTest.testWithConstructor":226,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":190,"org.easymock.tests2.EasyMockSupportTest.testVerify":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":295,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":326,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":147,"org.easymock.tests.UsageVarargTest.varargShortAccepted":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":274,"org.easymock.tests2.UsageConstraintsTest.cmpTo":62,"org.easymock.tests.UsageVarargTest.varargCharAccepted":156,"org.easymock.tests2.CaptureTest.testCaptureMultiple":345,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":217,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":70,"org.easymock.tests2.UsageTest.openCallCountByLastCall":244,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":346,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":54,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":329,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":178,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":304,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":221,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":130,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":140,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":296,"org.easymock.tests2.UsageConstraintsTest.constraints":257,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":145,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":303,"org.easymock.samples.ExampleTest.addAndChangeDocument":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":298,"org.easymock.tests.UsageStrictMockTest.testVerify":13,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":193,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":39,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":144,"org.easymock.tests2.UsageTest.resumeIfFailure":247,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":318,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":289,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":319,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":50,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":154}}]
