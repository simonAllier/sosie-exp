[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[36,37,38,39],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,2,65,66,4,7,8,9,10,11,67,12,13,14,15,16,17,68,69,70,71,72,73,20,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[41,105,106,107,108,78,79,80,109,81,110,82,111,83,84,112,85,113,114,101,102,115],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[116,117,40,118,42,43,44,119,45,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,65,66,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,74,75,163,164,82,165,166,167,168,169,170,171,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[174,175,176,166,167,177,178,168,169,170,171,179,180,181,35,182,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[183,184],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[185,186,187,188,133,134,135,139,65,189,150,157,159,160,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[116,0,1,117,40,41,118,42,190,43,44,119,45,120,121,122,123,124,125,126,127,191,128,129,130,131,132,192,186,187,193,194,188,133,195,196,134,135,197,46,47,48,49,50,51,52,53,54,198,199,55,56,200,57,58,59,201,60,61,62,63,64,202,138,139,2,140,65,66,141,3,203,4,5,142,204,6,205,206,207,208,209,210,211,189,143,212,213,214,215,216,217,7,8,9,10,11,218,219,220,221,222,223,144,145,146,224,147,148,225,149,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,67,12,13,150,249,151,250,251,252,253,254,255,14,15,16,17,18,68,70,71,256,257,258,259,19,260,261,262,152,263,264,265,266,267,153,154,155,156,72,73,268,269,270,271,157,272,158,273,274,275,159,160,276,277,278,161,20,162,74,75,163,76,279,280,281,282,283,284,285,286,108,287,164,77,78,79,80,109,81,82,111,83,84,112,85,113,86,87,88,89,90,91,92,288,183,184,93,289,21,22,290,291,23,24,25,26,292,293,294,295,27,296,28,29,297,30,31,298,299,300,165,301,32,33,34,94,95,96,97,98,99,114,100,302,101,102,103,303,176,166,167,177,178,168,169,170,171,179,181,35,182,172,304,305,104,306,307,308,309,310,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[116,0,0,1,1,117,40,41,118,42,190,43,44,119,45,313,120,121,122,123,124,125,126,127,128,129,130,131,132,192,186,187,193,194,188,133,195,196,134,135,197,137,46,47,48,49,50,51,52,53,54,198,199,55,56,200,57,58,59,201,60,61,62,63,64,202,138,139,2,140,65,66,141,314,3,203,4,5,142,204,6,315,316,317,318,319,320,321,322,323,324,325,326,205,206,207,208,209,327,210,211,328,189,143,212,213,214,215,216,217,7,8,9,10,11,218,219,220,221,222,329,330,223,144,145,146,224,225,149,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,67,12,13,150,331,332,333,334,335,336,337,338,339,340,341,342,249,151,250,251,252,253,254,255,14,15,16,17,18,68,69,70,71,256,258,259,19,260,261,262,152,263,264,265,266,267,153,154,155,156,72,73,268,269,270,271,157,272,158,273,274,275,159,160,276,277,278,161,20,162,74,75,163,76,343,344,345,346,279,280,281,282,283,284,285,286,108,287,164,77,78,79,80,109,82,111,83,84,112,85,113,347,86,87,88,89,90,91,92,288,183,184,93,289,21,22,290,291,23,24,25,26,292,293,294,295,27,296,28,29,297,30,31,298,299,300,301,32,33,34,94,95,96,97,98,99,114,100,302,101,102,103,303,176,166,167,177,178,168,169,170,171,179,181,35,182,172,304,305,104,306,307,308,309,310,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[116,0,0,1,1,117,40,41,118,42,190,43,44,119,45,313,120,121,122,123,124,125,126,127,191,128,129,130,131,132,192,186,187,193,194,188,133,195,196,134,135,197,137,46,47,48,49,50,51,52,53,54,198,199,55,56,200,57,58,59,201,60,61,62,63,64,202,138,139,2,140,65,66,141,314,3,203,4,5,142,204,6,315,316,317,318,319,320,321,322,323,324,325,326,205,206,207,208,209,327,210,211,328,189,143,212,213,214,215,216,217,7,8,9,10,11,218,219,220,221,222,329,330,223,144,145,146,224,147,148,225,149,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,67,12,13,150,331,332,333,334,335,336,337,338,339,340,341,342,249,151,250,251,252,253,254,255,14,15,16,17,18,68,69,70,71,256,258,259,19,260,261,262,152,263,264,265,266,267,153,154,155,156,72,73,268,269,270,271,157,272,158,273,274,275,159,160,276,277,278,161,20,162,74,75,163,76,343,344,345,346,279,280,281,282,283,284,285,286,108,287,164,77,78,79,80,109,81,82,111,83,84,112,85,113,86,87,88,89,90,91,92,288,183,184,93,289,21,22,290,291,23,24,25,26,292,293,294,295,27,296,28,29,297,30,31,298,299,300,165,301,32,33,34,94,95,96,97,98,99,114,100,302,101,102,103,303,176,166,167,177,178,168,169,170,171,179,181,35,182,172,304,305,104,306,307,308,309,310,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[185,186,187,188,133,134,135,139,65,150,157,159,160,74],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:593","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[3,294],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[76,350,351,352],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[353],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[354,355,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[190,123,132,356,192,186,187,193,194,133,195,196,134,135,197,139,2,66,144,146,148,228,150,250,269,271,157,273,274,159,160,277,20,75,343,344,345,346,279,24,25,294,295,32,33,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":291,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":193,"org.easymock.tests2.UsageTest.argumentsOrdered":160,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":354,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":158,"org.easymock.tests2.StubTest.stubWithReturnValue":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":351,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":56,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":118,"org.easymock.tests2.SerializationTest.testAllMockedMethod":164,"org.easymock.tests2.DelegateToTest.testReturnException":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":213,"org.easymock.tests.MockingTest.testPartialClassMocking":46,"org.easymock.samples.SupportTest.voteForRemovals":40,"org.easymock.tests.MockClassControlTest.testToString":333,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":229,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":78,"org.easymock.tests.UsageExpectAndThrowTest.object":239,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":299,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":73,"org.easymock.tests2.DelegateToTest.testWrongClass":306,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":12,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":13,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":4,"org.easymock.tests2.UsageTest.wrongArguments":157,"org.easymock.tests.UsageStrictMockTest.range":65,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":207,"org.easymock.samples.ExampleTest.answerVsDelegate":190,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":86,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":106,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":240,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":97,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":338,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":153,"org.easymock.tests2.CaptureTest.testPrimitive":177,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":325,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":248,"org.easymock.tests.UsageTest.moreThanOneArgument":194,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":206,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":16,"org.easymock.tests2.CaptureTest.testCaptureNone":171,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":37,"org.easymock.tests.UsageUnorderedTest.message":150,"org.easymock.tests.UsageVerifyTest.twoReturns":187,"org.easymock.tests.UsageVarargTest.varargByteAccepted":130,"org.easymock.tests2.ThreadingTest.testThreadSafe":288,"org.easymock.tests.UsageTest.argumentsOrdered":135,"org.easymock.tests.UsageVarargTest.varargIntAccepted":125,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":146,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":7,"org.easymock.tests2.CaptureTest.testCapture_2617107":167,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":204,"org.easymock.tests2.UsageConstraintsTest.any":294,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":111,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":322,"org.easymock.tests2.StubTest.stub":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":11,"org.easymock.tests.UsageExpectAndThrowTest.longType":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":214,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":321,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":162,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":303,"org.easymock.tests2.SerializationTest.testClass":108,"org.easymock.tests.ReplayStateInvalidUsageTest.times":323,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":304,"org.easymock.tests.LimitationsTest.mockNativeMethod":67,"org.easymock.tests2.AnswerTest.answer":279,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":64,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":107,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":286,"org.easymock.tests2.CaptureTest.testAnd":176,"org.easymock.tests2.UsageTest.strictResetToDefault":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":302,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":163,"org.easymock.tests2.NameTest.nameForMocksControl":346,"org.easymock.tests2.MockedExceptionTest.testMockedException":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":263,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":70,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests2.DelegateToTest.testDelegate":307,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":233,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":48,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":84,"org.easymock.tests.MockingTest.testNicePartialClassMocking":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":244,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":99,"org.easymock.tests2.CompareToTest.testNotComparable":349,"org.easymock.tests2.CaptureTest.testCaptureLast":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":216,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":137,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":292,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":92,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":300,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":136,"org.easymock.tests2.CaptureTest.testCapture1_2446744":178,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":237,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":159,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":39,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":317,"org.easymock.tests.UsageThrowableTest.throwError":249,"org.easymock.samples.ExampleTest.removeNonExistingDocument":313,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":319,"org.easymock.tests.UsageStrictMockTest.differentMethods":66,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":184,"org.easymock.tests2.MockBuilderTest.testCreateMockString":113,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":331,"org.easymock.tests.UsageExpectAndThrowTest.floatType":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":18,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":297,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":280,"org.easymock.tests.UsageVerifyTest.twoThrows":186,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":79,"org.easymock.samples.PartialClassMockTest.testGetArea":41,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":8,"org.easymock.samples.ExampleTest.voteAgainstRemoval":44,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":102,"org.easymock.tests2.UsageTest.niceToStrict":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":230,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":308,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":255,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":353,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":82,"org.easymock.tests2.UsageTest.defaultResetToNice":275,"org.easymock.tests2.MockBuilderTest.testCreateMock":112,"org.easymock.samples.ExampleTest.voteAgainstRemovals":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":60,"org.easymock.tests.UsageVarargTest.differentLength":191,"org.easymock.tests2.CallbackTest.callback":268,"org.easymock.tests2.UsageConstraintsTest.equals":348,"org.easymock.tests.UsageTest.openCallCountByLastCall":195,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":238,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":264,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":142,"org.easymock.tests.UsageCallCountTest.tooFewCalls":144,"org.easymock.tests.UsageOverloadedMethodTest.overloading":227,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":211,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":57,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":296,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":208,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":38,"org.easymock.tests.UsageThrowableTest.throwCheckedException":252,"org.easymock.tests.MockClassControlTest.testEquals":337,"org.easymock.tests2.EasyMockSupportClassTest.testAll":77,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":220,"org.easymock.tests2.CaptureTest.testCaptureAll":166,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":203,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":91,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":88,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":324,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":90,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":282,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":17,"org.easymock.tests.ObjectMethodsTest.testHashCode":341,"org.easymock.samples.ExampleTest.voteForRemovals":45,"org.easymock.tests2.NameTest.nameForNiceMock":345,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":289,"org.easymock.tests.UsageVarargTest.allKinds":132,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":192,"org.easymock.tests2.DependencyTest.testInterfaceMocking":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":221,"org.easymock.samples.BasicClassMockTest.testPrintContent":122,"org.easymock.samples.ExampleTest.addDocument":119,"org.easymock.tests2.DelegateToTest.testStubDelegate":104,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":254,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests2.AnswerTest.stubAnswer":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":217,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":2,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":69,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":103,"org.easymock.tests.UsageVarargTest.varargLongAccepted":129,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.samples.ExampleTest.voteForRemoval":43,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":63,"org.easymock.tests.UsageExpectAndReturnTest.floatType":51,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":114,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests.UsageThrowableTest.noUpperLimit":151,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":143,"org.easymock.tests2.SerializationTest.test":287,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":262,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":50,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.samples.SupportTest.addDocument":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":212,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":355,"org.easymock.tests2.CaptureTest.testCaptureFirst":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":152,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":320,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":199,"org.easymock.tests.GenericTest.testPackageScope":225,"org.easymock.tests2.UsageTest.moreThanOneArgument":271,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":93,"org.easymock.tests2.CaptureTest.testCapture2_2446744":182,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":85,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":131,"org.easymock.tests2.NameTest.nameForMock":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":147,"org.easymock.tests.UsageExpectAndReturnTest.longType":52,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":58,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":356,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":245,"org.easymock.tests2.UsageStrictMockTest.differentMethods":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":14,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":53,"org.easymock.tests.UsageCallCountTest.tooManyCalls":148,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":71,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":223,"org.easymock.tests2.MockedExceptionTest.testRealException":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":234,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":253,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":5,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":87,"org.easymock.tests2.NameTest.nameForStrictMock":344,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":330,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":310,"org.easymock.tests2.UsageConstraintsTest.testFind":23,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":228,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":98,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":258,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":202,"org.easymock.tests.UsageExpectAndReturnTest.object":200,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":81,"org.easymock.tests2.UsageStrictMockTest.range":74,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":173,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":267,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":127,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":342,"org.easymock.tests.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":3,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":261,"org.easymock.tests2.CaptureTest.testCaptureRightOne":181,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":36,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":350,"org.easymock.tests.UsageRangeTest.combination":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":61,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":123,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":210,"org.easymock.tests.UsageTest.wrongArguments":133,"org.easymock.tests.MockClassControlTest.testHashCode":336,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":54,"org.easymock.tests2.EasyMockSupportTest.testVerify":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":59,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":209,"org.easymock.tests.UsageVarargTest.varargShortAccepted":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":283,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":224,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":347,"org.easymock.tests2.UsageConstraintsTest.cmpTo":295,"org.easymock.tests.UsageVarargTest.varargCharAccepted":126,"org.easymock.tests2.CaptureTest.testCaptureMultiple":175,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":161,"org.easymock.tests2.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests.DefaultClassInstantiatorTest.object":339,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":155,"org.easymock.tests2.CaptureTest.testCaptureFromStub":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":316,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":110,"org.easymock.tests.UsageTest.unexpectedCallWithArray":188,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":340,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":251,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":139,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":145,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":201,"org.easymock.tests2.CaptureTest.testCapture":180,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":335,"org.easymock.tests2.UsageConstraintsTest.constraints":290,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":101,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":140,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":235,"org.easymock.samples.ExampleTest.addAndChangeDocument":120,"org.easymock.tests.CapturesMatcherTest.test":174,"org.easymock.tests.UsageStrictMockTest.testVerify":314,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":62,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":116,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":80,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":219,"org.easymock.tests2.UsageTest.resumeIfFailure":276,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":198,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":105,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":265,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":124}}]
