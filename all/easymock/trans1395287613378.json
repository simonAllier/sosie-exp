[{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,272,273,273,274],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[20,275,276,277,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[279,280],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[20,281,90],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[72,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,283,284,285,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,281,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,286,53,54,55,56,57,58,59,60,61,62,63,287,64,65,288,289,290,291,66,67,292,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,293,115,116,294,295,117,118,296,297,298,299,119,120,121,122,300,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,301,183,184,185,186,187,188,189,191,198,199,200,201,202,203,204,206,207,208,302,210,211,212,213,218,303,221,223,224,226,229,231,232,233,304,305,234,235,236,306,237,238,239,240,241,242,307,308,309,310,311,312,313,314,315,316,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,317,266,318,319,320,321,268,269,322,270,323,324,325,272,272,273,273,326,274,327,328,329,330,331],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:117","failures":[283,284,285,63,287,65,214,269],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[33,53,56,57,149,184,187,188,332,218,243,244,245],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[33,34,39,40,53,56,288,289,290,291,149,151,154,155,183,184,187,235,244,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[64,272,272,273,273],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:168","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[333],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[334,0,1,2,335,3,283,284,285,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,53,55,56,58,59,60,61,62,63,336,337,287,64,65,66,67,338,69,71,72,74,80,81,82,83,84,85,86,87,88,89,90,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,293,115,116,294,117,118,298,299,119,120,121,122,300,123,127,128,129,130,131,132,133,134,135,136,137,142,143,144,145,146,147,148,149,152,153,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,339,340,341,184,186,187,198,199,200,201,202,342,343,344,203,204,206,207,345,346,208,333,209,210,211,212,213,214,216,217,218,303,232,233,304,305,234,235,236,306,237,238,239,240,241,242,347,348,349,243,244,245,350,351,352,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,353,318,354,355,356,357,358,268,269,322,270,324,325,272,272,273,273,274,329],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[59],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[4,21,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[359,39,154],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[360,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[66,67,292,362],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[364,209,215,365],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[201,204,246,247,254,261],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests2.UsageTest.argumentsOrdered":40,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":148,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":145,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":281,"org.easymock.tests2.StubTest.stubWithReturnValue":115,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":326,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":255,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":26,"org.easymock.tests2.SerializationTest.testAllMockedMethod":292,"org.easymock.tests2.DelegateToTest.testReturnException":0,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":143,"org.easymock.tests.MockingTest.testPartialClassMocking":130,"org.easymock.samples.SupportTest.voteForRemovals":329,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":276,"org.easymock.tests.MockClassControlTest.testToString":192,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":169,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":362,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":346,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":157,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":336,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":349,"org.easymock.tests.UsageExpectAndThrowTest.object":167,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":51,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":24,"org.easymock.tests2.DelegateToTest.testWrongClass":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":203,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":204,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":232,"org.easymock.tests2.UsageTest.wrongArguments":34,"org.easymock.samples.ConstructorCalledMockTest.testTax":272,"org.easymock.tests.UsageStrictMockTest.range":186,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":140,"org.easymock.samples.ExampleTest.answerVsDelegate":269,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":43,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":168,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":71,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests2.CaptureTest.testPrimitive":117,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":230,"org.easymock.tests.UsageTest.moreThanOneArgument":149,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":176,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":200,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":344,"org.easymock.tests2.CaptureTest.testCaptureNone":299,"org.easymock.tests.UsageUnorderedTest.message":235,"org.easymock.tests.UsageVerifyTest.twoReturns":245,"org.easymock.tests.UsageVarargTest.varargByteAccepted":314,"org.easymock.tests2.ThreadingTest.testThreadSafe":81,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":354,"org.easymock.tests.UsageTest.argumentsOrdered":155,"org.easymock.tests.UsageVarargTest.varargIntAccepted":309,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":321,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":330,"org.easymock.tests2.CaptureTest.testCapture_2617107":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":133,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":305,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":70,"org.easymock.tests2.UsageConstraintsTest.any":14,"org.easymock.tests2.StubTest.stub":293,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":144,"org.easymock.tests.UsageExpectAndThrowTest.longType":160,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":360,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":226,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.tests2.SerializationTest.testClass":66,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":30,"org.easymock.tests.ReplayStateInvalidUsageTest.times":228,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests.LimitationsTest.mockNativeMethod":123,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":363,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":265,"org.easymock.tests2.AnswerTest.answer":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":79,"org.easymock.tests2.CaptureTest.testAnd":116,"org.easymock.tests2.UsageTest.strictResetToDefault":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":94,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":57,"org.easymock.tests2.NameTest.nameForMocksControl":291,"org.easymock.tests2.MockedExceptionTest.testMockedException":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":106,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":358,"org.easymock.tests2.DelegateToTest.testDelegate":3,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":161,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":72,"org.easymock.tests.MockingTest.testNicePartialClassMocking":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":172,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":91,"org.easymock.tests2.CaptureTest.testCaptureLast":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":146,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":209,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":49,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":12,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":181,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":364,"org.easymock.tests2.CaptureTest.testCapture1_2446744":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":165,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":28,"org.easymock.tests.UsageThrowableTest.throwError":236,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":222,"org.easymock.samples.ExampleTest.removeNonExistingDocument":271,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":224,"org.easymock.tests.UsageStrictMockTest.differentMethods":187,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":83,"org.easymock.tests2.MockBuilderTest.testCreateMockString":75,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":202,"org.easymock.tests.UsageExpectAndThrowTest.floatType":159,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":20,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":287,"org.easymock.tests.UsageVerifyTest.twoThrows":244,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":60,"org.easymock.samples.PartialClassMockTest.testGetArea":274,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":134,"org.easymock.samples.ExampleTest.voteAgainstRemoval":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":343,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":342,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":96,"org.easymock.tests2.UsageTest.niceToStrict":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":158,"org.easymock.tests2.UsageConstraintsTest.testNotNull":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":242,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":98,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":69,"org.easymock.tests2.MockBuilderTest.testCreateMock":73,"org.easymock.tests2.UsageTest.defaultResetToNice":38,"org.easymock.samples.ExampleTest.voteAgainstRemovals":268,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":261,"org.easymock.tests2.CallbackTest.callback":283,"org.easymock.tests2.UsageConstraintsTest.equals":359,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":278,"org.easymock.tests.UsageTest.openCallCountByLastCall":152,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":166,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":4,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":138,"org.easymock.tests.UsageCallCountTest.tooFewCalls":319,"org.easymock.tests.UsageOverloadedMethodTest.overloading":128,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":217,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":46,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":127,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":17,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":141,"org.easymock.tests.UsageThrowableTest.throwCheckedException":239,"org.easymock.tests.MockClassControlTest.testEquals":196,"org.easymock.tests2.EasyMockSupportClassTest.testAll":58,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":302,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":277,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":174,"org.easymock.tests2.CaptureTest.testCaptureAll":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":207,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":45,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":229,"org.easymock.tests2.UsageConstraintsTest.testMatches":19,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":47,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":65,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":201,"org.easymock.tests.ObjectMethodsTest.testHashCode":125,"org.easymock.samples.ExampleTest.voteForRemovals":324,"org.easymock.tests2.NameTest.nameForNiceMock":290,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":85,"org.easymock.tests.UsageVarargTest.allKinds":316,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":243,"org.easymock.tests2.DependencyTest.testInterfaceMocking":50,"org.easymock.samples.BasicClassMockTest.testPrintContent":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":180,"org.easymock.samples.ExampleTest.addDocument":323,"org.easymock.tests2.DelegateToTest.testStubDelegate":1,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":241,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":52,"org.easymock.tests2.AnswerTest.stubAnswer":64,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":147,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":184,"org.easymock.tests2.UsageConstraintsTest.greaterThan":21,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":211,"org.easymock.tests.UsageVarargTest.varargLongAccepted":313,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":97,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":188,"org.easymock.samples.ExampleTest.voteForRemoval":322,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":264,"org.easymock.tests.UsageExpectAndReturnTest.floatType":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":92,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":80,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":273,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests.UsageThrowableTest.noUpperLimit":306,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":22,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":5,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":296,"org.easymock.tests2.SerializationTest.test":67,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":361,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":247,"org.easymock.tests2.UsageConstraintsTest.testSame":10,"org.easymock.samples.SupportTest.addDocument":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":142,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":334,"org.easymock.tests2.CaptureTest.testCaptureFirst":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":42,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":225,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":219,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":253,"org.easymock.tests.GenericTest.testPackageScope":208,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":84,"org.easymock.tests2.UsageTest.moreThanOneArgument":33,"org.easymock.tests2.CaptureTest.testCapture2_2446744":122,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":357,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":315,"org.easymock.tests2.NameTest.nameForMock":288,"org.easymock.tests.UsageExpectAndReturnTest.longType":249,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":258,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":175,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":353,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":171,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":213,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":318,"org.easymock.tests2.MockedExceptionTest.testRealException":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":254,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":233,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":231,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":44,"org.easymock.tests2.NameTest.nameForStrictMock":289,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":266,"org.easymock.tests2.UsageConstraintsTest.testContains":16,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":100,"org.easymock.tests2.UsageConstraintsTest.testFind":8,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":129,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":90,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":285,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":182,"org.easymock.tests.UsageExpectAndReturnTest.object":256,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":338,"org.easymock.tests2.UsageStrictMockTest.range":55,"org.easymock.tests2.UsageConstraintsTest.lessThan":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":311,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":126,"org.easymock.tests.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":206,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":103,"org.easymock.tests2.CaptureTest.testCaptureRightOne":120,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":355,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":347,"org.easymock.tests2.UsageConstraintsTest.testOr":11,"org.easymock.tests.UsageRangeTest.combination":210,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":307,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":216,"org.easymock.tests.UsageTest.wrongArguments":151,"org.easymock.tests.MockClassControlTest.testHashCode":195,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":251,"org.easymock.tests2.EasyMockSupportTest.testVerify":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":259,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.UsageVarargTest.varargShortAccepted":312,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":214,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":76,"org.easymock.tests2.UsageConstraintsTest.cmpTo":15,"org.easymock.tests.UsageVarargTest.varargCharAccepted":310,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":337,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":286,"org.easymock.tests2.UsageTest.openCallCountByLastCall":36,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":37,"org.easymock.tests.DefaultClassInstantiatorTest.object":205,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":350,"org.easymock.tests2.CaptureTest.testCaptureFromStub":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":221,"org.easymock.tests.UsageTest.unexpectedCallWithArray":150,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":124,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":164,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":238,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":183,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":260,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":194,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":95,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.samples.ExampleTest.addAndChangeDocument":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":263,"org.easymock.tests.UsageStrictMockTest.testVerify":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":339,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":327,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":301,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":178,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":297,"org.easymock.tests2.UsageTest.resumeIfFailure":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":252,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":218,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":136,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108}}]
