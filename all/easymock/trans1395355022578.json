[{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"this.org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[7,8,8,9,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:210","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[137,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[11,12,14,16,17,19,46,47,48,49,50,51,52,53,54,57,58,60,61,62,64,65,66,67,68,72,74,75,79,95,96,97,98,99,133,134,135,145,146,147,148,150,286,151,152,170,171,188,190,191,193,205,206,207,208,287,210,212,213,214,216,217,218,219,220,221,222,226,254,3,255,256,257,258,259,288,261,289,279],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[290,291,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[34,36,41,139,173,180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[292],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1263","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[231,232],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[181],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[231,233,236,293,251,263,273],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[8,9,294,292,295,296,297],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:330","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","actualTypeArgument":"actualTypeArgument","variable":"variable","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[299,300,301,302,303,304],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[231,232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[305,212],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,9,0,72,77,79,80,83,95,96,97,98,99,134,135,306,307,308,309,310,145,146,147,148,149,156,188,228,229,232,233,234,235,240,242,243,245,246,251,252,253,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,8,9,9,0,72,77,79,80,83,311,95,96,97,98,99,134,135,306,307,308,309,310,145,146,147,148,149,156,188,228,229,232,233,234,235,240,242,243,245,246,251,252,253,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":231,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests2.UsageTest.argumentsOrdered":183,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":290,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":178,"org.easymock.tests2.StubTest.stubWithReturnValue":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":300,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":250,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":58,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":13,"org.easymock.tests2.SerializationTest.testAllMockedMethod":204,"org.easymock.tests2.DelegateToTest.testReturnException":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":90,"org.easymock.tests.MockingTest.testPartialClassMocking":46,"org.easymock.samples.SupportTest.voteForRemovals":11,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":125,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":113,"org.easymock.tests.UsageExpectAndThrowTest.object":123,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":248,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":301,"org.easymock.tests2.DelegateToTest.testWrongClass":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":134,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":135,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":79,"org.easymock.tests2.UsageTest.wrongArguments":176,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":86,"org.easymock.samples.ExampleTest.answerVsDelegate":15,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":216,"org.easymock.tests2.UsageConstraintsTest.testNull":233,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":124,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":212,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":166,"org.easymock.tests2.CaptureTest.testPrimitive":266,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":83,"org.easymock.tests.UsageTest.moreThanOneArgument":37,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":132,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":255,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":147,"org.easymock.tests2.CaptureTest.testCaptureNone":271,"org.easymock.tests.UsageUnorderedTest.message":136,"org.easymock.tests.UsageVerifyTest.twoReturns":35,"org.easymock.tests.UsageVarargTest.varargByteAccepted":30,"org.easymock.tests2.ThreadingTest.testThreadSafe":223,"org.easymock.tests.UsageTest.argumentsOrdered":43,"org.easymock.tests.UsageVarargTest.varargIntAccepted":25,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":108,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":21,"org.easymock.tests2.CaptureTest.testCapture_2617107":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":95,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":82,"org.easymock.tests2.UsageConstraintsTest.any":238,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":211,"org.easymock.tests2.StubTest.stub":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":91,"org.easymock.tests.UsageExpectAndThrowTest.longType":116,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":189,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":262,"org.easymock.tests2.SerializationTest.testClass":202,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":277,"org.easymock.tests.LimitationsTest.mockNativeMethod":133,"org.easymock.tests2.AnswerTest.answer":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":68,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":201,"org.easymock.tests2.CaptureTest.testAnd":263,"org.easymock.tests2.UsageTest.strictResetToDefault":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":260,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":192,"org.easymock.tests2.MockedExceptionTest.testMockedException":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":146,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":161,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.DelegateToTest.testDelegate":281,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":298,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":48,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":117,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":254,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":213,"org.easymock.tests.MockingTest.testNicePartialClassMocking":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":128,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":258,"org.easymock.tests2.CaptureTest.testCaptureLast":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":93,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":236,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":222,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":45,"org.easymock.tests2.CaptureTest.testCapture1_2446744":267,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":121,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":252,"org.easymock.tests.UsageThrowableTest.throwError":137,"org.easymock.tests.UsageStrictMockTest.differentMethods":75,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":225,"org.easymock.tests2.MockBuilderTest.testCreateMockString":215,"org.easymock.tests.UsageExpectAndThrowTest.floatType":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":149,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":244,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":195,"org.easymock.tests.UsageVerifyTest.twoThrows":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":207,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":96,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":1,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":114,"org.easymock.tests2.UsageTest.niceToStrict":177,"org.easymock.tests2.UsageConstraintsTest.testNotNull":251,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":210,"org.easymock.tests2.UsageTest.defaultResetToNice":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":64,"org.easymock.tests2.CallbackTest.callback":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":297,"org.easymock.tests.UsageTest.openCallCountByLastCall":40,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":122,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":81,"org.easymock.tests.UsageCallCountTest.tooFewCalls":106,"org.easymock.tests.UsageOverloadedMethodTest.overloading":111,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":60,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":241,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":87,"org.easymock.tests.UsageThrowableTest.throwCheckedException":141,"org.easymock.tests2.EasyMockSupportClassTest.testAll":205,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":110,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":130,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":295,"org.easymock.tests2.CaptureTest.testCaptureAll":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":78,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":218,"org.easymock.tests2.UsageConstraintsTest.testMatches":243,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":220,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":197,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":148,"org.easymock.samples.ExampleTest.voteForRemovals":19,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":227,"org.easymock.tests.UsageVarargTest.allKinds":32,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":33,"org.easymock.tests2.DependencyTest.testInterfaceMocking":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":303,"org.easymock.samples.BasicClassMockTest.testPrintContent":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":103,"org.easymock.samples.ExampleTest.addDocument":18,"org.easymock.tests2.DelegateToTest.testStubDelegate":279,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":143,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":186,"org.easymock.tests2.AnswerTest.stubAnswer":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":94,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":304,"org.easymock.tests2.UsageConstraintsTest.greaterThan":245,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":286,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":289,"org.easymock.tests.UsageVarargTest.varargLongAccepted":29,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":67,"org.easymock.tests.UsageExpectAndReturnTest.floatType":51,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":193,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":246,"org.easymock.tests.UsageThrowableTest.noUpperLimit":138,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":229,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":88,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":268,"org.easymock.tests2.SerializationTest.test":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":159,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":139,"org.easymock.tests2.UsageConstraintsTest.testSame":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":50,"org.easymock.samples.SupportTest.addDocument":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":89,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":291,"org.easymock.tests2.CaptureTest.testCaptureFirst":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":160,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":56,"org.easymock.tests.GenericTest.testPackageScope":109,"org.easymock.tests2.CaptureTest.testCapture2_2446744":275,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":226,"org.easymock.tests2.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":31,"org.easymock.tests.UsageExpectAndReturnTest.longType":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":100,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":61,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":131,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":296,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":129,"org.easymock.tests2.UsageStrictMockTest.differentMethods":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":127,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":152,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":105,"org.easymock.tests2.MockedExceptionTest.testRealException":285,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":118,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":217,"org.easymock.tests2.UsageConstraintsTest.testContains":240,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":284,"org.easymock.tests2.UsageConstraintsTest.testFind":232,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":112,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":257,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":69,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":154,"org.easymock.tests.UsageExpectAndReturnTest.object":59,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":247,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":259,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":287,"org.easymock.tests2.UsageStrictMockTest.range":190,"org.easymock.tests2.UsageConstraintsTest.lessThan":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":302,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":27,"org.easymock.tests.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":158,"org.easymock.tests2.CaptureTest.testCaptureRightOne":273,"org.easymock.tests2.UsageConstraintsTest.testOr":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":299,"org.easymock.tests.UsageRangeTest.combination":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":65,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":23,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":3,"org.easymock.tests.UsageTest.wrongArguments":39,"org.easymock.tests2.MockBuilderTest.testWithConstructor":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":54,"org.easymock.tests2.EasyMockSupportTest.testVerify":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":62,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":4,"org.easymock.tests.UsageVarargTest.varargShortAccepted":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":198,"org.easymock.tests2.UsageConstraintsTest.cmpTo":239,"org.easymock.tests.UsageVarargTest.varargCharAccepted":26,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":187,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":168,"org.easymock.tests2.CaptureTest.testCaptureFromStub":274,"org.easymock.tests.UsageTest.unexpectedCallWithArray":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":120,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":107,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":63,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":288,"org.easymock.tests2.UsageConstraintsTest.constraints":230,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.samples.ExampleTest.addAndChangeDocument":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":119,"org.easymock.tests.CapturesMatcherTest.test":312,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":66,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":208,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":70,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":101,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":269,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":98,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":24,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":163}}]
