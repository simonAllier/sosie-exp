[{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[55,191],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[246,247,202],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[248,249,250,251,252,253],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[254],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[256,256,257,257,258,151,259,260,261,262,263,264,265,266,267,268,269,270,271,272],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[248,273,9,274,275,59,66,67,251,111,276,145,277,224],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[278,258,279,280,281,282,283,262,263,264],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:268","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[284,66,67,111,224],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[248,249,250,251,252,253],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[285,286,287],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[162],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[251,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[289,290],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[291,292,41,293,294,295,296,297,254,298,299,96,97,300,98,301,302,105,303,304,289,305,306,307,290,308,309,310,311,312,313,314,118,119,315,256,256,257,257,134,135,316,317,318,319,320,321,322,323,258,324,325,326,150,151,153,154,155,327,156,259,328,260,329,330,261,331,332,188,189,190,262,206,263,264,333,334,335,336,265,219,266,337,338,339,340,341,267,342,343,344,345,268,346,347,348,349,350,351,352,269,270,229,353,271,230,354,272],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[159,165],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[299,98],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"value"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[162],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[6,273,9,274,59,66,67,251,109,112,140,276,145,277,355,356,357,358,222,225],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[359,262,205,206],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[174,360],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[159,160,164,165,361,176,232,234,242],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:277","sourceCode":"return this","type":"CtReturnImpl"},"failures":[53,128,184,185,187,192,193,199],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[362,363,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,248,273,7,8,9,274,10,365,366,367,291,368,369,370,371,292,372,373,374,375,376,362,363,364,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,377,34,35,378,36,37,38,39,40,41,379,380,42,43,44,45,381,46,47,382,48,49,293,294,295,296,297,383,254,384,385,298,50,386,51,52,53,387,54,55,388,389,390,56,57,58,391,392,393,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,394,395,396,397,398,299,96,97,300,98,99,100,101,102,103,104,301,302,105,303,399,400,401,402,403,404,405,406,407,408,409,410,411,304,289,305,306,307,290,412,308,413,414,415,416,417,418,419,420,421,422,246,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,106,440,441,107,442,443,444,108,251,109,110,111,112,113,445,114,115,288,446,447,448,449,116,117,450,451,452,309,310,311,312,313,314,118,119,120,121,122,123,124,125,315,126,127,128,129,130,131,132,453,133,256,257,134,135,136,137,138,139,140,276,141,142,143,144,454,145,277,146,147,316,455,317,318,456,319,320,321,322,278,323,457,258,324,325,458,326,459,460,148,149,150,151,152,153,154,155,327,461,156,259,328,260,329,330,261,331,332,157,158,159,160,462,161,162,163,164,165,166,361,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,463,464,185,186,187,465,466,467,468,188,189,190,191,192,469,193,194,195,196,197,198,199,470,471,472,473,474,200,475,476,477,478,479,480,247,201,202,203,481,204,262,205,206,263,264,482,207,208,209,210,211,212,213,483,214,215,216,217,218,484,355,356,357,358,333,485,486,487,334,488,489,335,336,265,219,266,337,338,339,340,341,267,342,343,344,345,268,346,347,348,349,350,351,352,269,270,490,491,492,493,494,220,495,496,497,498,499,500,501,221,222,223,224,225,226,227,228,502,229,353,271,230,503,231,354,272,504,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":160,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.UsageTest.argumentsOrdered":277,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":216,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":246,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":142,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":126,"org.easymock.tests2.DelegateToTest.testReturnException":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":100,"org.easymock.tests.MockingTest.testPartialClassMocking":296,"org.easymock.tests.MockClassControlTest.testToString":311,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":484,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":11,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":338,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":279,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":60,"org.easymock.tests2.UsageTest.wrongArguments":276,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":500,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":438,"org.easymock.samples.ExampleTest.answerVsDelegate":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":292,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":385,"org.easymock.tests2.UsageConstraintsTest.testNull":162,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":153,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":119,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":215,"org.easymock.tests2.CaptureTest.testPrimitive":235,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":64,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":30,"org.easymock.tests.UsageTest.moreThanOneArgument":6,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":2,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":449,"org.easymock.tests.UsageTest.argumentsOrdered":274,"org.easymock.tests.UsageVarargTest.varargIntAccepted":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":120,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":316,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":124,"org.easymock.tests.ReplayStateInvalidUsageTest.times":407,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":220,"org.easymock.tests2.DependencyTest.testClassMocking":459,"org.easymock.tests2.AnswerTest.answer":184,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":429,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":468,"org.easymock.tests2.CaptureTest.testAnd":232,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":369,"org.easymock.tests2.UsageTest.strictResetToDefault":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":456,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":1,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":211,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":451,"org.easymock.tests2.DelegateToTest.testDelegate":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":26,"org.easymock.tests.LimitationsTest.mockFinalMethod":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":398,"org.easymock.tests2.DependencyTest.testClassMockingSupport":460,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":391,"org.easymock.tests2.CaptureTest.testCapture1_2446744":236,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":24,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":466,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":401,"org.easymock.tests.UsageThrowableTest.throwError":88,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":371,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":270,"org.easymock.samples.PartialClassMockTest.testGetArea":315,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":402,"org.easymock.tests.MockingTest.testInterfaceMocking":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":121,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":446,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":443,"org.easymock.tests2.UsageTest.niceToStrict":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":285,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":320,"org.easymock.tests2.MockBuilderTest.testCreateMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":349,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":20,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":252,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":212,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":364,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":436,"org.easymock.tests.UsageOverloadedMethodTest.overloading":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":351,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":171,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":55,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":79,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":170,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":241,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":377,"org.easymock.tests.MockClassControlTest.testEquals":118,"org.easymock.tests2.EasyMockSupportClassTest.testAll":219,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":97,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":467,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":396,"org.easymock.tests2.CaptureTest.testCaptureAll":233,"org.easymock.tests.MockNameTest.defaultName":382,"org.easymock.tests2.UsageConstraintsTest.testMatches":172,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":3,"org.easymock.samples.ExampleTest.voteForRemovals":132,"org.easymock.tests.UsageVarargTest.allKinds":40,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":397,"org.easymock.samples.BasicClassMockTest.testPrintContent":135,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":94,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":501,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":104,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":412,"org.easymock.tests2.UsageConstraintsTest.greaterThan":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":261,"org.easymock.samples.ExampleTest.voteForRemoval":129,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":308,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":195,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":331,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":487,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":327,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":41,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":209,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":99,"org.easymock.tests2.CaptureTest.testCaptureFirst":245,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":210,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":147,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":75,"org.easymock.tests2.UsageTest.moreThanOneArgument":140,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":197,"org.easymock.tests2.CaptureTest.testCapture2_2446744":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":430,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":325,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":39,"org.easymock.tests.GenericTest.testBridgedEquals":98,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":46,"org.easymock.tests.UsageExpectAndReturnTest.longType":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":394,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":29,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":448,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":375,"org.easymock.tests.UsageCallCountTest.tooManyCalls":47,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":350,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":499,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":93,"org.easymock.tests.MockingTest.testNiceClassMocking":298,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":353,"org.easymock.tests.MockingTest.testClassMocking":294,"org.easymock.tests2.UsageConstraintsTest.testContains":169,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":380,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":190,"org.easymock.tests2.UsageConstraintsTest.testFind":161,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":58,"org.easymock.tests.MockTypeTest.fromEasyMockClass":370,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":444,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":193,"org.easymock.tests.UsageExpectAndReturnTest.object":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":214,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":280,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":107,"org.easymock.tests.UsageTest.exactCallCountByLastCall":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":116,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":365,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":264,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":84,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":54,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":471,"org.easymock.tests.MockClassControlTest.testHashCode":314,"org.easymock.tests2.EasyMockSupportTest.testVerify":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":344,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":117,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":53,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":465,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":502,"org.easymock.tests.UsageVarargTest.varargCharAccepted":34,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":411,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastCall":143,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":286,"org.easymock.tests.DefaultClassInstantiatorTest.object":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":362,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":440,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":345,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":493,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":470,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":313,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":374,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":352,"org.easymock.tests2.UsageTest.resumeIfFailure":146,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":291,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":102,"org.easymock.tests2.StubTest.stubWithReturnValue":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":278,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":77,"org.easymock.tests2.SerializationTest.testAllMockedMethod":206,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":428,"org.easymock.samples.SupportTest.voteForRemovals":137,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":253,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":23,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":359,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":434,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":463,"org.easymock.tests.UsageExpectAndThrowTest.object":21,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":367,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":177,"org.easymock.tests2.DelegateToTest.testWrongClass":203,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":114,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":115,"org.easymock.tests.UsageStrictMockTest.range":111,"org.easymock.samples.ConstructorCalledMockTest.testTax":256,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":488,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":483,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":22,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":322,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":409,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":437,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":249,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":447,"org.easymock.tests2.CaptureTest.testCaptureNone":240,"org.easymock.tests.UsageUnorderedTest.message":59,"org.easymock.tests.UsageVerifyTest.twoReturns":67,"org.easymock.tests.UsageVarargTest.varargByteAccepted":38,"org.easymock.tests2.ThreadingTest.testThreadSafe":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":347,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":45,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":442,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":134,"org.easymock.tests2.CaptureTest.testCapture_2617107":234,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":63,"org.easymock.tests2.UsageConstraintsTest.any":167,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":406,"org.easymock.tests2.StubTest.stub":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":101,"org.easymock.tests.UsageExpectAndThrowTest.longType":14,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":307,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":405,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":223,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests2.SerializationTest.testClass":262,"org.easymock.tests.LimitationsTest.mockNativeMethod":105,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":87,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":492,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":226,"org.easymock.tests2.NameTest.nameForMocksControl":358,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":494,"org.easymock.tests2.MockedExceptionTest.testMockedException":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":337,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":8,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":15,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":323,"org.easymock.tests.MockingTest.testNicePartialClassMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":155,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":490,"org.easymock.tests2.CaptureTest.testCaptureLast":239,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":392,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":272,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":178,"org.easymock.tests.MockingTest.testTwoMocks":295,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":504,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":19,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":145,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":182,"org.easymock.samples.ExampleTest.removeNonExistingDocument":453,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":496,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":403,"org.easymock.tests.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":472,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":305,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":196,"org.easymock.tests2.MockBuilderTest.testCreateMockString":326,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":309,"org.easymock.tests.UsageExpectAndThrowTest.floatType":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":339,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":185,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":482,"org.easymock.tests.UsageVerifyTest.twoThrows":66,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":346,"org.easymock.samples.ExampleTest.voteAgainstRemoval":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":288,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":330,"org.easymock.tests.LimitationsTest.privateConstructor":302,"org.easymock.tests2.UsageConstraintsTest.testNotNull":181,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":95,"org.easymock.tests2.UsageTest.defaultResetToNice":454,"org.easymock.samples.ExampleTest.voteAgainstRemovals":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":491,"org.easymock.tests.UsageVarargTest.differentLength":378,"org.easymock.tests2.CallbackTest.callback":199,"org.easymock.tests2.UsageConstraintsTest.equals":462,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":259,"org.easymock.tests.UsageTest.openCallCountByLastCall":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":62,"org.easymock.tests.UsageCallCountTest.tooFewCalls":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":439,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":255,"org.easymock.tests.UsageThrowableTest.throwCheckedException":92,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":250,"org.easymock.tests.MockingTest.testStrictClassMocking":293,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":495,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":271,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":408,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":231,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":187,"org.easymock.tests.ObjectMethodsTest.testHashCode":441,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":198,"org.easymock.tests2.NameTest.nameForNiceMock":357,"org.easymock.tests2.DependencyTest.testInterfaceMocking":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":281,"org.easymock.samples.ExampleTest.addDocument":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":348,"org.easymock.tests2.DelegateToTest.testStubDelegate":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":269,"org.easymock.tests2.AnswerTest.stubAnswer":186,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":109,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":457,"org.easymock.tests.UsageVarargTest.varargLongAccepted":37,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.floatType":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":263,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":175,"org.easymock.tests.UsageThrowableTest.noUpperLimit":89,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":158,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":333,"org.easymock.tests2.SerializationTest.test":205,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":237,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":289,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":69,"org.easymock.samples.SupportTest.addDocument":136,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":503,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":340,"org.easymock.tests.GenericTest.testPackageScope":96,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":384,"org.easymock.tests2.NameTest.nameForMock":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":80,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":458,"org.easymock.tests2.UsageStrictMockTest.differentMethods":225,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":328,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":72,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":25,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":52,"org.easymock.tests2.MockedExceptionTest.testRealException":191,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":425,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":222,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":410,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":61,"org.easymock.tests2.NameTest.nameForStrictMock":356,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":319,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":287,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":154,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":334,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":176,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":306,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":317,"org.easymock.tests2.UsageStrictMockTest.range":224,"org.easymock.tests2.UsageConstraintsTest.lessThan":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":282,"org.easymock.tests2.CaptureTest.testCaptureRightOne":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":343,"org.easymock.tests2.UsageConstraintsTest.testOr":164,"org.easymock.tests.UsageRangeTest.combination":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":151,"org.easymock.tests.UsageTest.wrongArguments":273,"org.easymock.tests2.MockBuilderTest.testWithConstructor":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":341,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":81,"org.easymock.tests.UsageVarargTest.varargShortAccepted":36,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":290,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":381,"org.easymock.tests2.UsageConstraintsTest.cmpTo":168,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":144,"org.easymock.tests2.CaptureTest.testCaptureFromStub":243,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":400,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":318,"org.easymock.tests.UsageTest.unexpectedCallWithArray":248,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":251,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":82,"org.easymock.tests2.UsageConstraintsTest.constraints":159,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.samples.ExampleTest.addAndChangeDocument":133,"org.easymock.tests.UsageStrictMockTest.testVerify":445,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":125,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":395,"org.easymock.tests2.CompareToTest.testGreateThan":360,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":122,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":74,"org.easymock.tests.LimitationsTest.abstractClass":301,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":123,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":213,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":284}}]
