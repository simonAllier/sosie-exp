[{"position":"org.easymock.internal.RecordState:315","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[43,44,45],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[47,48,49,50,51,52,53,54,55],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[71,72,73,74,70,75,76,77,78,79,80],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[81,82,83,78,84,79,85,86,87,88,89,90,91,92,80,93,94,95,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[97,98,99,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[101,102,103,104,105,106,107,108,109,110,111,43,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,36,37,38,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,204,205,205,206],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[207,0,58,208,60,209,210,211,212,213,214,215,216,5,6,217,82,218,33,219,220,221,71,72,222,73,223,74,70,224,75,225,226,227,228,229,230,231,232,233,76,234,235,236,237,77,238,239,49,50,78,84,79,85,86,87,88,89,90,91,80,93,94,95,240,191],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[241,242,243,244,245,137,246],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[247],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[241,242,243,244,245,137,246],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[136,137,138,142,145,248,249,250,246,155,251,252,253,254,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,204,205],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[255],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[109,112],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[71,72,73,74,70,75,76,77,78,79,80],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[256,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[100,258,259],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[260,232],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[261,56,57,101,102,103,104,105,262,106,263,264,107,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,255,301,108,109,110,111,43,112,113,207,0,302,303,304,58,305,306,307,308,309,310,311,312,313,314,315,208,316,317,1,318,319,320,321,322,323,114,324,325,60,209,326,61,327,328,329,210,211,212,213,214,330,331,332,333,334,115,256,335,2,257,336,337,3,4,215,216,5,6,217,338,339,340,341,342,343,344,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,27,367,62,63,368,28,64,65,369,370,371,372,373,374,375,376,377,378,116,117,118,119,120,121,379,380,381,382,122,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,82,218,123,124,125,126,29,30,31,32,33,34,401,402,403,127,128,129,130,131,132,133,134,404,405,406,47,407,408,35,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,97,98,99,450,100,136,137,48,451,452,453,454,455,456,457,458,459,460,461,462,463,464,219,465,66,466,467,138,468,139,220,221,71,72,469,222,73,223,74,70,224,75,225,226,227,228,229,230,231,232,233,76,234,235,236,237,77,238,239,470,471,472,473,474,475,476,477,478,479,480,481,482,140,141,142,143,483,484,144,145,248,485,486,487,488,146,148,149,150,151,152,153,154,489,155,156,157,159,36,37,38,39,490,49,491,50,40,492,493,67,494,495,496,41,46,68,69,497,498,51,499,500,52,53,54,501,502,503,504,505,78,84,79,85,86,87,88,89,90,91,80,93,94,95,96,42,506,258,507,508,240,509,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,510,187,188,189,190,259,191,192,193,194,195,196,197,198,199,511,512,513,514,200,515,516,201,517,518,519,520,202,203,521,204,205,206,522,55,523,524,525,526,527,528,529],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[261,56,57,103,104,105,106,265,266,267,268,269,270,271,272,273,274,275,276,277,278,295,255,207,0,302,303,304,58,305,306,307,309,310,311,312,313,314,315,208,316,317,1,318,324,325,60,209,326,61,327,328,329,210,211,212,213,214,330,331,332,333,334,115,256,335,2,257,336,337,3,4,215,216,5,6,217,339,340,341,342,343,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,367,62,63,368,28,64,65,369,370,372,373,374,375,376,377,378,117,118,119,385,386,387,388,82,218,125,29,30,31,32,33,34,401,402,403,405,47,407,408,35,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,437,444,445,446,447,448,449,136,48,456,463,464,219,465,66,466,467,138,468,139,220,221,71,72,222,73,223,74,70,224,75,225,226,227,228,229,230,231,232,233,76,234,235,236,237,77,238,239,470,471,472,473,474,475,476,477,478,479,480,481,482,140,141,142,143,484,144,145,485,486,487,488,146,148,151,152,153,154,156,157,159,36,37,38,39,49,50,40,492,493,67,494,495,496,41,46,68,69,497,498,51,499,500,52,53,54,502,503,504,505,78,84,79,85,86,87,88,89,90,91,80,93,94,95,96,42,506,507,508,240,509,163,166,176,182,185,186,510,187,188,189,190,191,194,195,196,197,513,514,519,520,202,203,521,204,204,205,205,206,522,55,523,524,525,526,528,529],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:262","failures":[56,0,1,256,2,257,336,337,3,4,5,6,339,340,341,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,401,402,403,35,36,37,38,39,40,41,42],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":72,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.UsageTest.argumentsOrdered":69,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":480,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":289,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":495,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":521,"org.easymock.tests2.DelegateToTest.testReturnException":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":30,"org.easymock.tests.MockingTest.testPartialClassMocking":104,"org.easymock.tests.MockClassControlTest.testToString":129,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":501,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":405,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":170,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":7,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":514,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":366,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":241,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":224,"org.easymock.tests2.UsageTest.wrongArguments":67,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":215,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":462,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":387,"org.easymock.samples.ExampleTest.answerVsDelegate":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":122,"org.easymock.tests2.UsageConstraintsTest.testNull":73,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":264,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":187,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":479,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":134,"org.easymock.tests2.CaptureTest.testPrimitive":85,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":26,"org.easymock.tests.UsageTest.moreThanOneArgument":367,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":510,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":332,"org.easymock.tests.UsageTest.argumentsOrdered":65,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":265,"org.easymock.tests.UsageVarargTest.varargIntAccepted":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":210,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":245,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":516,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":442,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":214,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":350,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":456,"org.easymock.tests.ReplayStateInvalidUsageTest.times":397,"org.easymock.tests2.DependencyTest.testClassMocking":511,"org.easymock.tests2.AnswerTest.answer":51,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":488,"org.easymock.tests2.CaptureTest.testAnd":78,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":380,"org.easymock.tests2.UsageTest.strictResetToDefault":492,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":194,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":272,"org.easymock.tests2.DelegateToTest.testDelegate":449,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":269,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":22,"org.easymock.tests.LimitationsTest.mockFinalMethod":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":278,"org.easymock.tests2.DependencyTest.testClassMockingSupport":512,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":342,"org.easymock.tests2.CaptureTest.testCapture1_2446744":86,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":486,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":391,"org.easymock.tests.UsageThrowableTest.throwError":256,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":382,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":334,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":184,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":353,"org.easymock.samples.PartialClassMockTest.testGetArea":206,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":392,"org.easymock.tests.MockingTest.testInterfaceMocking":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":211,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":303,"org.easymock.tests2.UsageTest.niceToStrict":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":171,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":8,"org.easymock.tests2.ThreadingTest.testChangeDefault":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":279,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":151,"org.easymock.tests2.MockBuilderTest.testCreateMock":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":179,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":459,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":16,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":475,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":403,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":385,"org.easymock.tests.UsageOverloadedMethodTest.overloading":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":175,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":35,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":423,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":316,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":44,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":228,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":91,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":308,"org.easymock.tests2.EasyMockSupportClassTest.testAll":163,"org.easymock.tests.MockClassControlTest.testEquals":133,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":118,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":24,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":487,"org.easymock.tests2.CaptureTest.testCaptureAll":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":276,"org.easymock.tests.MockNameTest.defaultName":338,"org.easymock.tests2.UsageConstraintsTest.testMatches":230,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":333,"org.easymock.samples.ExampleTest.voteForRemovals":526,"org.easymock.tests.UsageVarargTest.allKinds":208,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":261,"org.easymock.samples.BasicClassMockTest.testPrintContent":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":3,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":463,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":34,"org.easymock.tests2.UsageConstraintsTest.greaterThan":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":197,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":354,"org.easymock.samples.ExampleTest.voteForRemoval":523,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":113,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":507,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":383,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":190,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":346,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":115,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":472,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":29,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":444,"org.easymock.tests2.CaptureTest.testCaptureFirst":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":473,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":498,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":419,"org.easymock.tests2.UsageTest.moreThanOneArgument":493,"org.easymock.tests2.CaptureTest.testCapture2_2446744":94,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":240,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":297,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":315,"org.easymock.tests.GenericTest.testBridgedEquals":120,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":377,"org.easymock.tests.UsageExpectAndReturnTest.longType":415,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":470,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":274,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":25,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":236,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":340,"org.easymock.tests.UsageCallCountTest.tooManyCalls":378,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":337,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":141,"org.easymock.tests.MockingTest.testNiceClassMocking":107,"org.easymock.tests.MockingTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":147,"org.easymock.tests2.UsageConstraintsTest.testContains":227,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":371,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":222,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":1,"org.easymock.tests.MockTypeTest.fromEasyMockClass":381,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":50,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests.UsageExpectAndReturnTest.object":422,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":478,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":242,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":310,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":322,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":247,"org.easymock.tests.UsageTest.exactCallCountByLastCall":369,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":284,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":404,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":266,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":428,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":305,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":433,"org.easymock.tests.MockClassControlTest.testHashCode":132,"org.easymock.tests2.EasyMockSupportTest.testVerify":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":173,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":267,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":402,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":47,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":485,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":490,"org.easymock.tests.UsageVarargTest.varargCharAccepted":309,"org.easymock.tests2.CaptureTest.testCaptureMultiple":83,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":301,"org.easymock.tests2.UsageTest.openCallCountByLastCall":496,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":481,"org.easymock.tests.DefaultClassInstantiatorTest.object":108,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":401,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":320,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":432,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":131,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":195,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":13,"org.easymock.tests.CapturesMatcherTest.test":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":429,"org.easymock.tests.ReplayStateInvalidCallsTest.times":358,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":339,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":182,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":130,"org.easymock.tests2.UsageTest.resumeIfFailure":497,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":515,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":32,"org.easymock.tests2.StubTest.stubWithReturnValue":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":246,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":421,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":237,"org.easymock.tests2.SerializationTest.testAllMockedMethod":139,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":295,"org.easymock.samples.SupportTest.voteForRemovals":520,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":19,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":255,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":499,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":406,"org.easymock.tests.UsageExpectAndThrowTest.object":17,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":234,"org.easymock.tests2.DelegateToTest.testWrongClass":447,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":82,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":356,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":218,"org.easymock.tests.UsageStrictMockTest.range":61,"org.easymock.samples.ConstructorCalledMockTest.testTax":204,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":517,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":477,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":153,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":160,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":386,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":348,"org.easymock.tests2.CaptureTest.testCaptureNone":90,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":304,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":98,"org.easymock.tests.UsageUnorderedTest.message":58,"org.easymock.tests.UsageVerifyTest.twoReturns":57,"org.easymock.tests.UsageVarargTest.varargByteAccepted":314,"org.easymock.tests2.ThreadingTest.testThreadSafe":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":177,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":375,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":202,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":323,"org.easymock.tests2.CaptureTest.testCapture_2617107":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":299,"org.easymock.tests2.UsageConstraintsTest.any":225,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":396,"org.easymock.tests2.StubTest.stub":96,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":31,"org.easymock.tests.UsageExpectAndThrowTest.longType":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":300,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":43,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":395,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":465,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":437,"org.easymock.tests2.SerializationTest.testClass":138,"org.easymock.tests.LimitationsTest.mockNativeMethod":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":431,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":119,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":453,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":364,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":467,"org.easymock.tests2.NameTest.nameForMocksControl":505,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":455,"org.easymock.tests2.MockedExceptionTest.testMockedException":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":165,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":491,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":11,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":154,"org.easymock.tests.MockingTest.testNicePartialClassMocking":105,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":451,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":343,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":145,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":70,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":363,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":235,"org.easymock.tests.MockingTest.testTwoMocks":103,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":360,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":15,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":68,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":238,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":100,"org.easymock.samples.ExampleTest.removeNonExistingDocument":527,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":458,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":393,"org.easymock.tests.UsageStrictMockTest.differentMethods":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":434,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":450,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":110,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":508,"org.easymock.tests2.MockBuilderTest.testCreateMockString":159,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":167,"org.easymock.tests.UsageExpectAndThrowTest.floatType":9,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":162,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":52,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":176,"org.easymock.samples.ExampleTest.voteAgainstRemoval":524,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":302,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":196,"org.easymock.tests.LimitationsTest.privateConstructor":124,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":254,"org.easymock.tests2.UsageConstraintsTest.testNotNull":77,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":4,"org.easymock.tests2.UsageTest.defaultResetToNice":46,"org.easymock.samples.ExampleTest.voteAgainstRemovals":522,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":452,"org.easymock.tests.UsageVarargTest.differentLength":311,"org.easymock.tests2.CallbackTest.callback":48,"org.easymock.tests2.UsageConstraintsTest.equals":469,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":192,"org.easymock.tests.UsageTest.openCallCountByLastCall":368,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":5,"org.easymock.tests.UsageCallCountTest.tooFewCalls":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":388,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":99,"org.easymock.tests.UsageThrowableTest.throwCheckedException":336,"org.easymock.tests.MockingTest.testStrictClassMocking":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":144,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":0,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":457,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":142,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":484,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":54,"org.easymock.tests.ObjectMethodsTest.testHashCode":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":244,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":509,"org.easymock.tests2.NameTest.nameForNiceMock":504,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":362,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":357,"org.easymock.tests2.DependencyTest.testInterfaceMocking":513,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":243,"org.easymock.samples.ExampleTest.addDocument":525,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":178,"org.easymock.tests2.DelegateToTest.testStubDelegate":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":183,"org.easymock.tests2.AnswerTest.stubAnswer":53,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":209,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":489,"org.easymock.tests.UsageVarargTest.varargLongAccepted":313,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":430,"org.easymock.tests.UsageExpectAndReturnTest.floatType":414,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":136,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":441,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":233,"org.easymock.tests.UsageThrowableTest.noUpperLimit":335,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":221,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":200,"org.easymock.tests2.SerializationTest.test":468,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":87,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":45,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":413,"org.easymock.tests2.UsageConstraintsTest.testSame":223,"org.easymock.samples.SupportTest.addDocument":519,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":483,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":347,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":168,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":440,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":263,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":345,"org.easymock.tests2.NameTest.nameForMock":502,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":424,"org.easymock.tests2.UsageStrictMockTest.differentMethods":466,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":416,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":21,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":319,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":273,"org.easymock.tests2.MockedExceptionTest.testRealException":39,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":293,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":292,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":216,"org.easymock.tests2.NameTest.nameForStrictMock":503,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":150,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":188,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":201,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":111,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":76,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":148,"org.easymock.tests2.UsageStrictMockTest.range":66,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":351,"org.easymock.tests2.UsageConstraintsTest.lessThan":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":436,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":172,"org.easymock.tests2.CaptureTest.testCaptureRightOne":80,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":97,"org.easymock.tests2.UsageConstraintsTest.testOr":74,"org.easymock.tests.UsageRangeTest.combination":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":186,"org.easymock.tests.UsageTest.wrongArguments":63,"org.easymock.tests2.MockBuilderTest.testWithConstructor":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":169,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":280,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":112,"org.easymock.tests.UsageVarargTest.varargShortAccepted":312,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":376,"org.easymock.tests2.UsageConstraintsTest.cmpTo":226,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":365,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":500,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":282,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.CaptureTest.testCaptureFromStub":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":390,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":149,"org.easymock.tests.UsageTest.unexpectedCallWithArray":62,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":361,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":374,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":251,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":426,"org.easymock.tests2.CaptureTest.testCapture":92,"org.easymock.tests2.UsageConstraintsTest.constraints":71,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.samples.ExampleTest.addAndChangeDocument":528,"org.easymock.tests.UsageStrictMockTest.testVerify":329,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":529,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests2.CompareToTest.testGreateThan":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":275,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":88,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":212,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":418,"org.easymock.tests.LimitationsTest.abstractClass":123,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":476,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":306}}]
