[{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"expected"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[26,3,27,28,29,7,30,31,32,33],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[56,57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:115","sourceCode":"final java.util.Stack<org.easymock.internal.Invocation> java.util.Stack<org.easymock.internal.Invocation> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:58","sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[59,26,3,60,61,62,63,64,65,66,67,68,69,24,70,71,72,73,74,75,76,7,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,56],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[120,120,121,121,122,3,60,62,63,66,68,69,24,70,71,72,73,123,124,125,126,127,128,129,130,131,132,133,7,78,79,82,83,84,85,91,93,94,96,97,103,104,105,118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[61,64,134,135,136,137,138,67,139,140,141,142,143,133,144,145,146,147],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[148,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[78,96,102,151],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[86,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[152,107,108,109,110,111,112,113,114,116,117,118,119,56],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":81,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":61,"org.easymock.tests2.UsageConstraintsTest.testMatches":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":131,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.samples.ExampleTest.voteForRemovals":23,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":102,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":51,"org.easymock.tests.UsageVarargTest.allKinds":59,"org.easymock.tests2.DelegateToTest.testReturnException":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":136,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":46,"org.easymock.tests.MockingTest.testPartialClassMocking":17,"org.easymock.samples.SupportTest.voteForRemovals":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":139,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":13,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":3,"org.easymock.tests2.UsageConstraintsTest.greaterThan":96,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":99,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":55,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":43,"org.easymock.tests2.DelegateToTest.testWrongClass":12,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":45,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":72,"org.easymock.samples.ExampleTest.voteForRemoval":21,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":73,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":62,"org.easymock.samples.ConstructorCalledMockTest.testTax":120,"org.easymock.tests.UsageStrictMockTest.range":27,"org.easymock.samples.ExampleTest.answerVsDelegate":9,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":35,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":121,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":97,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":79,"org.easymock.tests2.UsageConstraintsTest.testNull":83,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":112,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":32,"org.easymock.tests2.CaptureTest.testPrimitive":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":143,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":15,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":66,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":134,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":4,"org.easymock.tests2.UsageConstraintsTest.testSame":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":135,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":37,"org.easymock.tests2.CaptureTest.testCaptureNone":115,"org.easymock.tests2.CaptureTest.testCaptureFirst":56,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":36,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":6,"org.easymock.tests.UsageUnorderedTest.message":74,"org.easymock.tests2.CaptureTest.testCapture2_2446744":119,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":77,"org.easymock.tests.UsageVerifyTest.twoReturns":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":124,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":34,"org.easymock.tests2.CaptureTest.testCapture_2617107":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":25,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":122,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":65,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests2.UsageConstraintsTest.any":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":142,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":137,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":39,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":57,"org.easymock.tests2.AnswerTest.answer":8,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":88,"org.easymock.tests2.MockedExceptionTest.testRealException":147,"org.easymock.tests2.CaptureTest.testAnd":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":126,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":53,"org.easymock.tests2.MockedExceptionTest.testMockedException":145,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":129,"org.easymock.tests2.UsageConstraintsTest.testContains":91,"org.easymock.tests2.DelegateToTest.testDelegate":14,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":146,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":38,"org.easymock.tests2.UsageConstraintsTest.testFind":82,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":75,"org.easymock.tests2.CaptureTest.testCaptureLast":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":67,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":76,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":98,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":52,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":86,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":106,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":100,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":40,"org.easymock.tests2.UsageConstraintsTest.lessThan":105,"org.easymock.tests2.CaptureTest.testCapture1_2446744":111,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":49,"org.easymock.tests.UsageTest.exactCallCountByLastCall":2,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":125,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":104,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":149,"org.easymock.tests2.CaptureTest.testCaptureRightOne":117,"org.easymock.tests.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.UsageConstraintsTest.testOr":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":10,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":132,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":58,"org.easymock.tests.UsageVerifyTest.twoThrows":0,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":16,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":54,"org.easymock.tests2.UsageConstraintsTest.cmpTo":90,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":42,"org.easymock.tests2.CompareToTest.testLessOrEqual":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":69,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":44,"org.easymock.samples.ExampleTest.voteAgainstRemoval":22,"org.easymock.tests2.ThreadingTest.testChangeDefault":148,"org.easymock.tests2.UsageConstraintsTest.testNotNull":103,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":123,"org.easymock.tests2.CaptureTest.testCaptureFromStub":118,"org.easymock.samples.ExampleTest.voteAgainstRemovals":20,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":50,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":26,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":64,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":41,"org.easymock.tests2.UsageConstraintsTest.constraints":80,"org.easymock.tests.CapturesMatcherTest.test":152,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":93,"org.easymock.tests.ReplayStateInvalidCallsTest.times":47,"org.easymock.tests.UsageStrictMockTest.testVerify":29,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":140,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":92,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":116,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":48,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":70,"org.easymock.tests2.CaptureTest.testCaptureAll":108}}]
