[{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:318","failures":[16,17],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[32,33],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[37,38,39,40],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:108","failures":[41,16,17,42,43,44,45,46,28,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,30],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[40,69],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[70,71],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[72,73,74,75],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[76,77,78,79],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[80],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[81],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[83,84,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[86,87,88,89,90,91,92,93,68,94,95,96,97,98],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[32,33],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.RecordState:274","failures":[99,100,101,102,103,104,105,106,107,108,109],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[2,3,4,5,6,7,8],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[110,16,111,17,42,43,44,45,112,113,46,24,25,26,27,28,29,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,30,114,115,116,117,118,119],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[120,121,122,123,124,125,126,127,88,128,16,111,17,42,43,44,45,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,112,150,151,113,152,153,154,155,156,157,81,158,159,160,161,31,162,163,164,165,166,167,168,169,170,47,171,172,173,174,94,175,176,177,178,179,180,181,182,183,184,95,185,30,186,187,188,189,190,191,192,114,193,194,195,196,115,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,101,105,0,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,38,242,243,244,245,246,247,248,249,250,251,252,253,80,254,1,18,39,255,256,40,69,257,258,259,260,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[220,261,227,243,244,246,248,249,262,256,258],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[263,264,265,16,111,17,42,43,44,45,112,113,266,46,28,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,30,114,115],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":244,"org.easymock.tests2.UsageTest.argumentsOrdered":98,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":112,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":27,"org.easymock.tests2.StubTest.stubWithReturnValue":30,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":257,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":138,"org.easymock.tests2.SerializationTest.testAllMockedMethod":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":25,"org.easymock.tests.MockingTest.testPartialClassMocking":164,"org.easymock.samples.SupportTest.voteForRemovals":180,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":32,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":149,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":60,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":76,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":48,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":102,"org.easymock.tests.UsageExpectAndThrowTest.object":58,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":40,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":167,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":168,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":250,"org.easymock.tests2.UsageTest.wrongArguments":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":123,"org.easymock.tests.UsageStrictMockTest.range":88,"org.easymock.samples.ExampleTest.answerVsDelegate":100,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":186,"org.easymock.tests2.UsageConstraintsTest.testNull":246,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":59,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":206,"org.easymock.tests2.CaptureTest.testPrimitive":222,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":125,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":67,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":19,"org.easymock.tests.UsageTest.moreThanOneArgument":150,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":214,"org.easymock.tests2.CaptureTest.testCaptureNone":225,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":163,"org.easymock.tests.UsageUnorderedTest.message":86,"org.easymock.tests.UsageVerifyTest.twoReturns":94,"org.easymock.tests2.ThreadingTest.testThreadSafe":199,"org.easymock.tests.UsageTest.argumentsOrdered":93,"org.easymock.tests2.CaptureTest.testCapture_2617107":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":155,"org.easymock.tests2.UsageConstraintsTest.any":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":23,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":161,"org.easymock.tests.UsageExpectAndThrowTest.longType":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":156,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":83,"org.easymock.tests2.SerializationTest.testClass":77,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":241,"org.easymock.tests.LimitationsTest.mockNativeMethod":126,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":82,"org.easymock.tests2.AnswerTest.answer":101,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":122,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":148,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":262,"org.easymock.tests2.CaptureTest.testAnd":220,"org.easymock.tests2.UsageTest.strictResetToDefault":193,"org.easymock.tests2.MockedExceptionTest.testMockedException":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":172,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":52,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":166,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":212,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":207,"org.easymock.tests.MockingTest.testNicePartialClassMocking":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":63,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":217,"org.easymock.tests2.CaptureTest.testCaptureLast":224,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":28,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":10,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":249,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":192,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":9,"org.easymock.tests2.CaptureTest.testCapture1_2446744":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":56,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":97,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":259,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":35,"org.easymock.tests.UsageThrowableTest.throwError":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":75,"org.easymock.tests.UsageStrictMockTest.differentMethods":128,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":201,"org.easymock.tests.UsageExpectAndThrowTest.floatType":50,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":18,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":104,"org.easymock.tests.UsageVerifyTest.twoThrows":68,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":210,"org.easymock.samples.PartialClassMockTest.testGetArea":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":158,"org.easymock.samples.ExampleTest.voteAgainstRemoval":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":154,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":162,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":219,"org.easymock.tests2.UsageTest.niceToStrict":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":49,"org.easymock.tests2.ThreadingTest.testChangeDefault":34,"org.easymock.tests2.UsageConstraintsTest.testNotNull":258,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":45,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":15,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":205,"org.easymock.samples.ExampleTest.voteAgainstRemovals":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":144,"org.easymock.tests2.CallbackTest.callback":109,"org.easymock.tests.UsageTest.openCallCountByLastCall":151,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":57,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":235,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":38,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":265,"org.easymock.tests.UsageOverloadedMethodTest.overloading":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":254,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":140,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":189,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":84,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":80,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":226,"org.easymock.tests.UsageThrowableTest.throwCheckedException":42,"org.easymock.tests2.EasyMockSupportClassTest.testAll":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":65,"org.easymock.tests2.CaptureTest.testCaptureAll":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":110,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":188,"org.easymock.tests2.UsageConstraintsTest.testMatches":1,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":190,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":106,"org.easymock.samples.ExampleTest.voteForRemovals":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":203,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":174,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":44,"org.easymock.tests2.AnswerTest.stubAnswer":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":29,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":127,"org.easymock.tests2.UsageConstraintsTest.greaterThan":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":153,"org.easymock.samples.ExampleTest.voteForRemoval":176,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":200,"org.easymock.tests.UsageExpectAndReturnTest.floatType":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":147,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":204,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":255,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":12,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":242,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests2.SerializationTest.test":78,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":232,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":111,"org.easymock.tests2.UsageConstraintsTest.testSame":247,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":24,"org.easymock.tests2.CaptureTest.testCaptureFirst":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":233,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":198,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":136,"org.easymock.tests.GenericTest.testPackageScope":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":228,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":202,"org.easymock.tests2.UsageTest.moreThanOneArgument":194,"org.easymock.tests.GenericTest.testBridgedEquals":33,"org.easymock.tests.UsageExpectAndReturnTest.longType":132,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":66,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":141,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":64,"org.easymock.tests2.UsageStrictMockTest.differentMethods":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":22,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":133,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":62,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":173,"org.easymock.tests2.MockedExceptionTest.testRealException":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":53,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":124,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":187,"org.easymock.tests2.UsageConstraintsTest.testContains":253,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":245,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":47,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":14,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":216,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":108,"org.easymock.tests.UsageExpectAndReturnTest.object":139,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":218,"org.easymock.tests2.UsageStrictMockTest.range":95,"org.easymock.tests2.UsageConstraintsTest.lessThan":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":237,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.UsageTest.exactCallCountByLastCall":152,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":120,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":231,"org.easymock.tests2.CaptureTest.testCaptureRightOne":227,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":71,"org.easymock.tests2.UsageConstraintsTest.testOr":248,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":7,"org.easymock.tests.UsageRangeTest.combination":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":145,"org.easymock.tests.UsageTest.wrongArguments":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":142,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":264,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":99,"org.easymock.tests2.UsageConstraintsTest.cmpTo":252,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":157,"org.easymock.tests2.UsageTest.openCallCountByLastCall":196,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":115,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":13,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":263,"org.easymock.tests.UsageTest.unexpectedCallWithArray":90,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":55,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":17,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":143,"org.easymock.tests2.UsageConstraintsTest.constraints":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":54,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":211,"org.easymock.tests2.CompareToTest.testGreateThan":37,"org.easymock.tests2.UsageTest.resumeIfFailure":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":159,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":236}}]
