[{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[12,13,14,15,16],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:155","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[55,56,34,57,58,59,60,61,62,63],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[64,65],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[34,66,67,68],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[69,70,4,71,72,73,74,75,76,77,78,9,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[14,108,109,110,111,112,113,114,18,19,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:61","sourceCode":"org.easymock.internal.MocksBehavior.lastBehaviorList().addExpected(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result, org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[115,116,117,118,119,120,121,122,123,124,125,126,127,30,2,55,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,69,146,147,148,149,150,151,70,152,153,154,155,156,4,157,31,32,33,158,159,160,161,162,13,163,14,108,164,109,165,110,111,166,167,168,169,170,171,172,173,15,174,113,175,176,177,16,114,178,179,180,181,182,183,184,185,18,186,19,20,21,22,23,24,187,25,27,188,29,189,190,191,192,193,194,195,196,197,198,199,200,34,66,67,201,202,203,204,38,40,41,205,206,207,208,209,210,211,46,47,212,213,214,71,215,216,217,218,219,220,221,222,223,75,224,225,226,227,228,229,230,231,77,232,233,234,78,235,236,237,238,9,239,240,241,79,242,243,244,245,80,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,81,285,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[295],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[295,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[14,108,109,110,111,112,113,114,18,19,27],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[297],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[140,69,151,70,155,201,223,224,227,77,234,78,237],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[140,142,143,147,148,152,153,298,299,300,301,223,75,224,226,227,229,230,232,233,235,236,302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[56,53,133,137,303,304,305,306,307,308,309,310,311,312,62,313,314],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[56,57,58,59,315,316,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[115,116,117,118,119,120,121,122,123,124,125,126,127,30,2,55,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,69,146,147,148,149,150,151,70,152,153,154,155,156,4,157,31,32,33,158,159,160,161,162,13,163,14,108,164,109,165,110,111,166,167,168,169,170,171,172,173,15,174,113,175,176,177,16,114,178,179,180,181,182,183,184,185,18,186,19,20,21,22,23,24,187,25,27,188,29,189,190,191,192,193,194,195,196,197,198,199,200,34,66,67,201,202,203,38,40,41,205,206,207,208,209,210,211,47,213,214,71,215,216,217,218,219,220,221,222,223,75,224,225,226,227,228,229,230,231,77,232,233,234,78,235,236,237,238,9,239,240,241,79,242,243,244,245,80,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,81,285,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":108,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests2.UsageTest.argumentsOrdered":153,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":8,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":150,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":261,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":16,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":115,"org.easymock.tests2.SerializationTest.testAllMockedMethod":67,"org.easymock.tests2.DelegateToTest.testReturnException":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":6,"org.easymock.tests.MockingTest.testPartialClassMocking":286,"org.easymock.samples.SupportTest.voteForRemovals":127,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":100,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":88,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":31,"org.easymock.tests.UsageExpectAndThrowTest.object":98,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":302,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":130,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":57,"org.easymock.tests2.DelegateToTest.testWrongClass":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":220,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":221,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":243,"org.easymock.tests2.UsageTest.wrongArguments":148,"org.easymock.tests.UsageStrictMockTest.range":229,"org.easymock.samples.ExampleTest.answerVsDelegate":117,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":51,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":131,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":307,"org.easymock.tests2.UsageConstraintsTest.testNull":109,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":208,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":99,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":40,"org.easymock.tests2.CaptureTest.testPrimitive":20,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":246,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":235,"org.easymock.tests.UsageTest.moreThanOneArgument":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":107,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":207,"org.easymock.tests2.CaptureTest.testCaptureNone":187,"org.easymock.tests.UsageUnorderedTest.message":222,"org.easymock.tests.UsageVerifyTest.twoReturns":224,"org.easymock.tests.UsageVarargTest.varargByteAccepted":282,"org.easymock.tests2.ThreadingTest.testThreadSafe":158,"org.easymock.tests.UsageTest.argumentsOrdered":236,"org.easymock.tests.UsageVarargTest.varargIntAccepted":277,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":292,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":247,"org.easymock.tests2.CaptureTest.testCapture_2617107":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":316,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":80,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":39,"org.easymock.tests2.UsageConstraintsTest.any":167,"org.easymock.tests2.StubTest.stub":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":251,"org.easymock.tests.UsageExpectAndThrowTest.longType":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":7,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.SerializationTest.testClass":34,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":138,"org.easymock.tests.LimitationsTest.mockNativeMethod":238,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":271,"org.easymock.tests2.AnswerTest.answer":201,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":49,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":112,"org.easymock.tests2.CaptureTest.testAnd":18,"org.easymock.tests2.UsageTest.strictResetToDefault":146,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":312,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests2.NameTest.nameForMocksControl":301,"org.easymock.tests2.MockedExceptionTest.testMockedException":1,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":193,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":78,"org.easymock.tests2.DelegateToTest.testDelegate":185,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":92,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":205,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":41,"org.easymock.tests.MockingTest.testNicePartialClassMocking":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":103,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":210,"org.easymock.tests2.CompareToTest.testNotComparable":297,"org.easymock.tests2.CaptureTest.testCaptureLast":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":111,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":137,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":176,"org.easymock.tests2.CaptureTest.testCapture1_2446744":21,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":303,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":96,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":152,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":178,"org.easymock.tests.UsageThrowableTest.throwError":81,"org.easymock.tests.UsageStrictMockTest.differentMethods":230,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":296,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":160,"org.easymock.tests2.MockBuilderTest.testCreateMockString":44,"org.easymock.tests.UsageExpectAndThrowTest.floatType":90,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":173,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":202,"org.easymock.tests.UsageVerifyTest.twoThrows":75,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.PartialClassMockTest.testGetArea":30,"org.easymock.tests2.CompareToTest.testLessOrEqual":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":248,"org.easymock.samples.ExampleTest.voteAgainstRemoval":119,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":89,"org.easymock.tests2.UsageTest.niceToStrict":149,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":305,"org.easymock.tests2.UsageConstraintsTest.testNotNull":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":87,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":0,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":54,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":38,"org.easymock.tests2.MockBuilderTest.testCreateMock":42,"org.easymock.samples.ExampleTest.voteAgainstRemovals":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":267,"org.easymock.tests2.CallbackTest.callback":145,"org.easymock.tests.UsageTest.openCallCountByLastCall":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":97,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":13,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":245,"org.easymock.tests.UsageCallCountTest.tooFewCalls":290,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":308,"org.easymock.tests.UsageOverloadedMethodTest.overloading":214,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":79,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":263,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":134,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":170,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":25,"org.easymock.tests.UsageThrowableTest.throwCheckedException":84,"org.easymock.tests2.EasyMockSupportClassTest.testAll":157,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":219,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":105,"org.easymock.tests2.CaptureTest.testCaptureAll":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":11,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":133,"org.easymock.tests2.UsageConstraintsTest.testMatches":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":135,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":204,"org.easymock.samples.ExampleTest.voteForRemovals":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":315,"org.easymock.tests2.NameTest.nameForNiceMock":300,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":162,"org.easymock.tests.UsageVarargTest.allKinds":284,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":223,"org.easymock.tests2.DependencyTest.testInterfaceMocking":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":59,"org.easymock.samples.BasicClassMockTest.testPrintContent":125,"org.easymock.samples.ExampleTest.addDocument":120,"org.easymock.tests2.DelegateToTest.testStubDelegate":183,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":86,"org.easymock.tests2.AnswerTest.stubAnswer":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":10,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":61,"org.easymock.tests2.UsageConstraintsTest.greaterThan":15,"org.easymock.tests.UsageVarargTest.varargLongAccepted":281,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":212,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.samples.ExampleTest.voteForRemoval":118,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":159,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":270,"org.easymock.tests.UsageExpectAndReturnTest.floatType":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":45,"org.easymock.tests.UsageThrowableTest.noUpperLimit":285,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":174,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":239,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":163,"org.easymock.tests2.SerializationTest.test":66,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":22,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":191,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":82,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":253,"org.easymock.tests2.UsageConstraintsTest.testSame":165,"org.easymock.samples.SupportTest.addDocument":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":5,"org.easymock.tests2.CaptureTest.testCaptureFirst":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":192,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":259,"org.easymock.tests.GenericTest.testPackageScope":218,"org.easymock.tests2.UsageTest.moreThanOneArgument":147,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":161,"org.easymock.tests2.CaptureTest.testCapture2_2446744":188,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":283,"org.easymock.tests.GenericTest.testBridgedEquals":65,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":309,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":306,"org.easymock.tests2.NameTest.nameForMock":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":293,"org.easymock.tests.UsageExpectAndReturnTest.longType":255,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":264,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":106,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":177,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":104,"org.easymock.tests2.UsageStrictMockTest.differentMethods":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":256,"org.easymock.tests.UsageCallCountTest.tooManyCalls":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":217,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":289,"org.easymock.tests2.MockedExceptionTest.testRealException":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":93,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":244,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":85,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":132,"org.easymock.tests2.NameTest.nameForStrictMock":299,"org.easymock.tests2.UsageConstraintsTest.testContains":169,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":2,"org.easymock.tests2.UsageConstraintsTest.testFind":164,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":53,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":180,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":209,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":181,"org.easymock.tests.UsageExpectAndReturnTest.object":262,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":211,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":142,"org.easymock.tests2.UsageConstraintsTest.lessThan":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":196,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":58,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":310,"org.easymock.tests.UsageTest.exactCallCountByLastCall":237,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":60,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":190,"org.easymock.tests2.CaptureTest.testCaptureRightOne":27,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":295,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":272,"org.easymock.tests2.UsageConstraintsTest.testOr":110,"org.easymock.tests.UsageRangeTest.combination":215,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":56,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":206,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":241,"org.easymock.tests.UsageTest.wrongArguments":233,"org.easymock.tests2.MockBuilderTest.testWithConstructor":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":257,"org.easymock.tests2.EasyMockSupportTest.testVerify":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":265,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":273,"org.easymock.tests.UsageVarargTest.varargShortAccepted":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":240,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":73,"org.easymock.tests2.UsageConstraintsTest.cmpTo":168,"org.easymock.tests.UsageVarargTest.varargCharAccepted":278,"org.easymock.tests2.CaptureTest.testCaptureMultiple":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":76,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests2.UsageTest.openCallCountByLastCall":151,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":52,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":72,"org.easymock.tests2.CaptureTest.testCaptureFromStub":28,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":37,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":95,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":291,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":266,"org.easymock.tests2.CaptureTest.testCapture":26,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":228,"org.easymock.tests2.UsageConstraintsTest.constraints":14,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":46,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":94,"org.easymock.samples.ExampleTest.addAndChangeDocument":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":269,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":123,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":33,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":23,"org.easymock.tests2.UsageTest.resumeIfFailure":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":258,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":250,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":195}}]
