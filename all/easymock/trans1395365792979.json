[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"message"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[30,31,32,33,34,35,36,37,38,38,39,39,6,40,7,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,8,9,10,11,12,67,13,14,15,16,17,18,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,0,1,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,19,20,21,22,23,187,24,25,26,27,28,29,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,2,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,3,324,325,326,327,328,329,4,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,5,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:827","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[93,94],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[117],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,6,40,7,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,8,9,10,11,12,67,13,14,15,16,17,18,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,0,1,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,159,160,161,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,19,20,21,22,23,187,24,25,26,27,28,29,188,189,190,191,479,192,193,194,480,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,2,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,3,324,325,326,327,328,329,4,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,481,482,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,5,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[58,61,62,172,262,265,266,301,302,303,308,396,477],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[30,31,32,33,35,37,38,38,39,39,40,42,47,48,53,55,56,58,59,60,61,62,63,64,65,66,67,13,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,0,1,112,113,114,116,117,118,119,120,121,122,124,127,128,129,130,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,160,161,162,164,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,24,188,189,190,191,192,193,194,195,196,201,204,214,220,228,229,230,231,232,233,234,2,235,236,237,238,239,241,243,245,246,247,248,249,259,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,301,302,303,304,305,306,307,324,4,333,334,335,337,341,342,343,344,345,346,348,351,352,353,354,355,356,357,358,361,365,386,387,388,392,393,394,395,396,397,398,399,400,401,402,403,415,416,417,418,419,420,421,422,423,424,425,426,5,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[78],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[183,184,185,186,235,288,289,290,291,292,293,305,316,382,392,393,394,426],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[40,43,44,50,116,117,119,120,121,122,124,126,127,128,129,130,131,132,133,154,156,157,159,160,161,162,164,166,167,169,183,184,185,188,189,191,193,197,201,204,214,220,241,242,243,331,332,333,334,335,337,340,353,356,361,384,385,386,387,388,389,390,391,423],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[111,229,231,472,474],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[421],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[38,38,39,39,125,133,134,483,165,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[484],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[183,184,185,186,235,288,289,290,291,292,293,305,316,392,393,394,426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[170,177,235,292,302,346,395,400,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,458,459,460,461,462,463,469,470,471,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[30,31,32,33,34,35,36,37,38,38,39,39,6,40,7,41,42,43,44,47,48,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,127,128,129,130,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,160,161,162,164,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,201,204,214,220,224,225,226,227,229,230,231,233,234,2,235,236,237,238,239,241,242,245,246,247,248,249,251,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,301,302,303,304,305,334,335,337,344,345,346,348,349,350,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,395,396,397,398,399,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,423,424,425,426,5,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,472,474,475,477,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:45","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[485,486,261,487,488,397],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[393,394,470,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,113,114,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[230],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[58,60,61,117,119,121,127,130,261,262,264,265,267,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":71,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":395,"org.easymock.tests2.UsageTest.argumentsOrdered":180,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":319,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":7,"org.easymock.tests2.DelegateToTest.testReturnException":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":289,"org.easymock.tests.MockingTest.testPartialClassMocking":334,"org.easymock.tests.MockClassControlTest.testToString":386,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":223,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":435,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":204,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":48,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":424,"org.easymock.tests2.UsageTest.wrongArguments":173,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":238,"org.easymock.samples.ExampleTest.answerVsDelegate":31,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":356,"org.easymock.tests2.UsageConstraintsTest.testNull":74,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":339,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":119,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":150,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":427,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":454,"org.easymock.tests.UsageTest.moreThanOneArgument":396,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":247,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":464,"org.easymock.tests.UsageTest.argumentsOrdered":402,"org.easymock.tests.UsageVarargTest.varargIntAccepted":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":416,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":28,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":420,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":67,"org.easymock.tests.ReplayStateInvalidUsageTest.times":380,"org.easymock.tests2.DependencyTest.testClassMocking":45,"org.easymock.tests2.AnswerTest.answer":111,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":66,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":482,"org.easymock.tests2.CaptureTest.testAnd":97,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":296,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":468,"org.easymock.tests2.DelegateToTest.testDelegate":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":450,"org.easymock.tests.LimitationsTest.mockFinalMethod":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":434,"org.easymock.tests2.DependencyTest.testClassMockingSupport":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":306,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":448,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":64,"org.easymock.tests.UsageThrowableTest.throwError":456,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":374,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":355,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":222,"org.easymock.samples.PartialClassMockTest.testGetArea":40,"org.easymock.tests.MockingTest.testInterfaceMocking":336,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":436,"org.easymock.tests2.UsageTest.niceToStrict":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":209,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":160,"org.easymock.tests2.MockBuilderTest.testCreateMock":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":15,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":485,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":444,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":146,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":481,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":471,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":236,"org.easymock.tests.UsageOverloadedMethodTest.overloading":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":219,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":475,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":279,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":344,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":407,"org.easymock.tests.MockClassControlTest.testEquals":390,"org.easymock.tests2.EasyMockSupportClassTest.testAll":201,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":242,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":432,"org.easymock.tests2.CaptureTest.testCaptureAll":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":65,"org.easymock.tests.MockNameTest.defaultName":422,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":248,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":372,"org.easymock.samples.ExampleTest.voteForRemovals":35,"org.easymock.tests.UsageVarargTest.allKinds":415,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":433,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":462,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":25,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":293,"org.easymock.tests2.UsageConstraintsTest.greaterThan":87,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":295,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":130,"org.easymock.samples.ExampleTest.voteForRemoval":32,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":258,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":131,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":489,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":357,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":122,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":423,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":288,"org.easymock.tests2.CaptureTest.testCaptureFirst":110,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":275,"org.easymock.tests2.UsageTest.moreThanOneArgument":172,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.CaptureTest.testCapture2_2446744":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":326,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":414,"org.easymock.tests.GenericTest.testBridgedEquals":244,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":484,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":370,"org.easymock.tests.UsageExpectAndReturnTest.longType":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":430,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":453,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":421,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":451,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":245,"org.easymock.tests.UsageCallCountTest.tooManyCalls":371,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":440,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":461,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":189,"org.easymock.tests.MockingTest.testNiceClassMocking":340,"org.easymock.tests.MockingTest.testClassMocking":332,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":185,"org.easymock.tests2.UsageConstraintsTest.testFind":73,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":346,"org.easymock.tests.MockTypeTest.fromEasyMockClass":354,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":55,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":259,"org.easymock.tests.UsageExpectAndReturnTest.object":278,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":149,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":409,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":350,"org.easymock.tests.UsageTest.exactCallCountByLastCall":403,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":465,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":134,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":404,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":474,"org.easymock.tests.MockClassControlTest.testHashCode":389,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":20,"org.easymock.tests2.EasyMockSupportTest.testVerify":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":211,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":466,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":472,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":470,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":63,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":115,"org.easymock.tests.UsageVarargTest.varargCharAccepted":408,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":250,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":330,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":152,"org.easymock.tests.DefaultClassInstantiatorTest.object":251,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":469,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":212,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":11,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":19,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":388,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":128,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":441,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":392,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":220,"org.easymock.tests2.UsageTest.resumeIfFailure":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":291,"org.easymock.tests2.StubTest.stubWithReturnValue":235,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":277,"org.easymock.tests2.SerializationTest.testAllMockedMethod":197,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":324,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":486,"org.easymock.samples.SupportTest.voteForRemovals":42,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":447,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":4,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.UsageExpectAndThrowTest.object":445,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":300,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":90,"org.easymock.tests2.DelegateToTest.testWrongClass":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":428,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":429,"org.easymock.samples.ConstructorCalledMockTest.testTax":38,"org.easymock.tests.UsageStrictMockTest.range":264,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":51,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":446,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":162,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":198,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":237,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":487,"org.easymock.tests2.CaptureTest.testCaptureNone":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":343,"org.easymock.tests.UsageUnorderedTest.message":455,"org.easymock.tests.UsageVerifyTest.twoReturns":303,"org.easymock.tests.UsageVarargTest.varargByteAccepted":413,"org.easymock.tests2.ThreadingTest.testThreadSafe":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":215,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":368,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":351,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":308,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":328,"org.easymock.tests2.UsageConstraintsTest.any":80,"org.easymock.tests2.StubTest.stub":2,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":394,"org.easymock.tests.UsageExpectAndThrowTest.longType":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":329,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":255,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":378,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":59,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":187,"org.easymock.tests2.SerializationTest.testClass":195,"org.easymock.tests.LimitationsTest.mockNativeMethod":361,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":287,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":10,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":62,"org.easymock.tests2.NameTest.nameForMocksControl":227,"org.easymock.tests2.MockedExceptionTest.testMockedException":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":203,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":439,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":54,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":164,"org.easymock.tests.MockingTest.testNicePartialClassMocking":335,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":121,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":307,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":77,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":194,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":91,"org.easymock.tests.MockingTest.testTwoMocks":333,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":443,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":179,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":95,"org.easymock.samples.ExampleTest.removeNonExistingDocument":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":14,"org.easymock.tests.UsageStrictMockTest.differentMethods":265,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":21,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":253,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":138,"org.easymock.tests2.MockBuilderTest.testCreateMockString":169,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":384,"org.easymock.tests.UsageExpectAndThrowTest.floatType":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":205,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":200,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":135,"org.easymock.tests.UsageVerifyTest.twoThrows":302,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":214,"org.easymock.samples.ExampleTest.voteAgainstRemoval":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":320,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":341,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":129,"org.easymock.tests.LimitationsTest.privateConstructor":360,"org.easymock.tests2.UsageConstraintsTest.testNotNull":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":463,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":183,"org.easymock.tests2.UsageTest.defaultResetToNice":178,"org.easymock.samples.ExampleTest.voteAgainstRemovals":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":321,"org.easymock.tests.UsageVarargTest.differentLength":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":9,"org.easymock.tests2.CallbackTest.callback":234,"org.easymock.tests2.UsageConstraintsTest.equals":72,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":125,"org.easymock.tests.UsageTest.openCallCountByLastCall":399,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":426,"org.easymock.tests.UsageCallCountTest.tooFewCalls":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":239,"org.easymock.tests.UsageThrowableTest.throwCheckedException":460,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":488,"org.easymock.tests.MockingTest.testStrictClassMocking":331,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":13,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":192,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":114,"org.easymock.tests.ObjectMethodsTest.testHashCode":349,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests2.NameTest.nameForNiceMock":226,"org.easymock.tests2.DependencyTest.testInterfaceMocking":47,"org.easymock.samples.ExampleTest.addDocument":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.DelegateToTest.testStubDelegate":230,"org.easymock.tests2.AnswerTest.stubAnswer":113,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":262,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":483,"org.easymock.tests.UsageVarargTest.varargLongAccepted":412,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":318,"org.easymock.tests.UsageExpectAndReturnTest.floatType":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":133,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":39,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":476,"org.easymock.tests.UsageThrowableTest.noUpperLimit":457,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":27,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":69,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":49,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.SerializationTest.test":196,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":252,"org.easymock.tests2.UsageConstraintsTest.testSame":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":269,"org.easymock.samples.SupportTest.addDocument":41,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":479,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":206,"org.easymock.tests.GenericTest.testPackageScope":241,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":26,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":338,"org.easymock.tests2.NameTest.nameForMock":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":168,"org.easymock.tests2.UsageStrictMockTest.differentMethods":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":126,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":449,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":297,"org.easymock.tests2.MockedExceptionTest.testRealException":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":322,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":425,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":383,"org.easymock.tests2.NameTest.nameForStrictMock":225,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":159,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":120,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":50,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":156,"org.easymock.tests2.UsageStrictMockTest.range":60,"org.easymock.tests2.UsageConstraintsTest.lessThan":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":317,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":210,"org.easymock.tests2.UsageConstraintsTest.testOr":76,"org.easymock.tests.UsageRangeTest.combination":294,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":117,"org.easymock.tests.UsageTest.wrongArguments":398,"org.easymock.tests2.MockBuilderTest.testWithConstructor":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":207,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":310,"org.easymock.tests.UsageVarargTest.varargShortAccepted":411,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":256,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":369,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":312,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.CaptureTest.testCaptureFromStub":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":373,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":157,"org.easymock.tests.UsageTest.unexpectedCallWithArray":397,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":261,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":282,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":263,"org.easymock.samples.ExampleTest.addAndChangeDocument":37,"org.easymock.tests.UsageStrictMockTest.testVerify":267,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":6,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":431,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":274,"org.easymock.tests.LimitationsTest.abstractClass":359,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":477,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":419,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":147}}]
