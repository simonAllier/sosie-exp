[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[4,5,6,7,8,9],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[11,4,4,5,5,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,7,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,9,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,2,167,168,169,3,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,0,351,352,353,1,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,10,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[34,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,85,86,87,88,89,90,91,92,93,94,95,96,97,98,107,118,154,230,356,360,361,413,426,427,428,429,430,435,436,437,438,439,453,467,468,471,472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[371],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[481,86,96,97,482],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[39,55,72,82,83,84,100,110,112,136,139,140,141,145,146,147,148,153,185,189,190,193,228,231,232,233,483,484,485,486,325,329,331,332,335,336,337,356,408,456,457,464,465,466,469,471,473,474,475],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[11,4,5,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,78,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,109,110,111,112,115,116,117,118,119,120,121,122,123,129,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,160,167,168,169,170,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,200,203,213,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,284,285,287,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,314,316,317,319,320,325,326,327,328,329,330,331,332,333,334,335,336,337,338,344,345,346,347,348,350,356,360,361,363,364,365,366,367,368,369,370,372,373,376,377,378,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,424,426,427,428,429,430,431,432,433,434,435,436,437,438,439,444,445,446,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:2124","failures":[13,34,35,36,222,225,226],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[100],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[481,85,87,88,89,90,91,92,94,487,95,96,98],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[488,489,490,491,331,471],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[492,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[495,47,53,65],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[118,296,440,442],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[49,360],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[496,37,56,59],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[4,5,71,6,497,7,9],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[488,489,490,491,331,471],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[129,160,312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[11,4,4,5,5,12,13,14,15,17,19,25,26,34,36,37,38,39,40,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,72,76,78,80,83,85,86,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,107,110,111,112,115,116,117,118,119,120,121,122,123,129,136,137,138,140,142,143,144,147,148,151,152,153,160,2,167,168,169,3,170,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,200,203,213,219,222,223,224,225,226,227,230,232,233,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,284,285,287,303,304,305,306,307,314,316,317,319,322,324,325,326,327,328,329,330,333,334,337,338,339,340,341,342,343,356,357,358,359,360,361,363,364,365,366,367,368,369,370,372,374,376,377,378,394,400,424,426,427,428,429,430,435,436,437,438,439,441,449,450,451,452,453,454,455,456,457,460,467,468,472,474,475,478,479,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[41,145,335],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,30,31,32,33,34,36,37,38,39,40,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,72,76,78,80,83,85,86,87,88,90,91,92,93,94,95,98,99,100,101,102,103,104,107,110,111,112,115,116,119,122,129,136,137,138,139,140,141,145,146,147,148,151,152,153,160,167,168,170,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,200,203,213,219,222,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,284,285,287,319,325,326,327,328,329,330,332,335,336,337,338,356,360,364,365,372,373,377,378,402,403,404,406,407,408,409,410,411,412,413,424,426,427,428,429,430,435,436,437,438,439,453,455,456,457,458,460,461,462,463,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[43,61,118,413],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[258,357],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[371],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[39,55,72,82,83,84,100,110,112,117,136,139,140,141,145,146,147,148,153,185,189,190,193,228,231,232,233,325,329,331,332,335,336,337,356,408,456,457,464,465,466,469,471,473,474,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[498,499,76,110,111],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[117],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":40,"org.easymock.tests2.UsageTest.argumentsOrdered":146,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":329,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":389,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":141,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":20,"org.easymock.tests2.DelegateToTest.testReturnException":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":450,"org.easymock.tests.MockingTest.testPartialClassMocking":284,"org.easymock.tests.MockClassControlTest.testToString":416,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":29,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":207,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":238,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":152,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":426,"org.easymock.tests2.UsageTest.wrongArguments":139,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":433,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":311,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":289,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":193,"org.easymock.tests2.CaptureTest.testPrimitive":88,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":430,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":257,"org.easymock.tests.UsageTest.moreThanOneArgument":330,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":305,"org.easymock.tests.UsageTest.argumentsOrdered":336,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":339,"org.easymock.tests.UsageVarargTest.varargIntAccepted":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":435,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":134,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":439,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":160,"org.easymock.tests.ReplayStateInvalidUsageTest.times":299,"org.easymock.tests2.DependencyTest.testClassMocking":149,"org.easymock.tests2.AnswerTest.answer":222,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":69,"org.easymock.tests2.CaptureTest.testAnd":85,"org.easymock.tests2.UsageTest.strictResetToDefault":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":327,"org.easymock.tests2.DelegateToTest.testDelegate":170,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":253,"org.easymock.tests.LimitationsTest.mockFinalMethod":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":453,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":348,"org.easymock.tests2.DependencyTest.testClassMockingSupport":150,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":321,"org.easymock.tests2.CaptureTest.testCapture1_2446744":89,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":67,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":293,"org.easymock.tests.UsageThrowableTest.throwError":363,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":310,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":307,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":221,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.MockingTest.testInterfaceMocking":286,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":436,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":479,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":448,"org.easymock.tests2.UsageTest.niceToStrict":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":239,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":163,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":488,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":247,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":431,"org.easymock.tests.UsageOverloadedMethodTest.overloading":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":218,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":53,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":272,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":376,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":52,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":94,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":405,"org.easymock.tests.MockClassControlTest.testEquals":420,"org.easymock.tests2.EasyMockSupportClassTest.testAll":200,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":373,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":255,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":497,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":68,"org.easymock.tests2.CaptureTest.testCaptureAll":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":346,"org.easymock.tests.MockNameTest.defaultName":362,"org.easymock.tests2.UsageConstraintsTest.testMatches":54,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":306,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":413,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":455,"org.easymock.samples.BasicClassMockTest.testPrintContent":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":347,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":369,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":454,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":131,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":3,"org.easymock.tests2.UsageConstraintsTest.greaterThan":56,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":201,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":326,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":112,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":355,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":116,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":113,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":105,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":338,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":186,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":449,"org.easymock.tests2.CaptureTest.testCaptureFirst":98,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":268,"org.easymock.tests2.UsageTest.moreThanOneArgument":138,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":118,"org.easymock.tests2.CaptureTest.testCapture2_2446744":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":396,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":83,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":412,"org.easymock.tests.GenericTest.testBridgedEquals":375,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":465,"org.easymock.tests.UsageExpectAndReturnTest.longType":264,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":344,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":256,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":61,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":254,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":303,"org.easymock.tests.UsageCallCountTest.tooManyCalls":466,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":368,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":178,"org.easymock.tests.MockingTest.testNiceClassMocking":290,"org.easymock.tests.MockingTest.testClassMocking":282,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":459,"org.easymock.tests2.UsageConstraintsTest.testContains":51,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":122,"org.easymock.tests2.UsageConstraintsTest.testFind":42,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":378,"org.easymock.tests.MockTypeTest.fromEasyMockClass":309,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":469,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":36,"org.easymock.tests.UsageExpectAndReturnTest.object":271,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":192,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":407,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":446,"org.easymock.tests.UsageTest.exactCallCountByLastCall":337,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":27,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":402,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":277,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":316,"org.easymock.tests.MockClassControlTest.testHashCode":419,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":125,"org.easymock.tests2.EasyMockSupportTest.testVerify":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":210,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":341,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":358,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":485,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":66,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":154,"org.easymock.tests.UsageVarargTest.varargCharAccepted":406,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":349,"org.easymock.tests2.CaptureTest.testCaptureMultiple":481,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":401,"org.easymock.tests2.UsageTest.openCallCountByLastCall":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":492,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":195,"org.easymock.tests.DefaultClassInstantiatorTest.object":350,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":357,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":444,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":211,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":245,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":366,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":158,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":124,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":418,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":244,"org.easymock.tests.CapturesMatcherTest.test":482,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":278,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":258,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":219,"org.easymock.tests2.UsageTest.resumeIfFailure":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":452,"org.easymock.tests2.StubTest.stubWithReturnValue":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":270,"org.easymock.tests2.SerializationTest.testAllMockedMethod":237,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":394,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":489,"org.easymock.samples.SupportTest.voteForRemovals":25,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":127,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":250,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":400,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":223,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":442,"org.easymock.tests.UsageExpectAndThrowTest.object":248,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":59,"org.easymock.tests2.DelegateToTest.testWrongClass":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":467,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":468,"org.easymock.tests.UsageStrictMockTest.range":474,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":173,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":177,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":197,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":301,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":432,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":480,"org.easymock.tests2.CaptureTest.testCaptureNone":93,"org.easymock.tests.UsageUnorderedTest.message":356,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":483,"org.easymock.tests.UsageVerifyTest.twoReturns":457,"org.easymock.tests.UsageVarargTest.varargByteAccepted":411,"org.easymock.tests2.ThreadingTest.testThreadSafe":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":214,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":463,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":447,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":21,"org.easymock.tests2.CaptureTest.testCapture_2617107":87,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":323,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":398,"org.easymock.tests2.UsageConstraintsTest.any":49,"org.easymock.tests2.StubTest.stub":175,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndThrowTest.longType":241,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":353,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":297,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":231,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests2.SerializationTest.testClass":235,"org.easymock.tests.LimitationsTest.mockNativeMethod":424,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":280,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":157,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests2.NameTest.nameForMocksControl":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":159,"org.easymock.tests2.MockedExceptionTest.testMockedException":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":202,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":334,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":242,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":287,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":285,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":155,"org.easymock.tests2.CaptureTest.testCaptureLast":92,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":322,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":183,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":60,"org.easymock.tests.MockingTest.testTwoMocks":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":246,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":145,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":64,"org.easymock.samples.ExampleTest.removeNonExistingDocument":18,"org.easymock.tests.UsageStrictMockTest.differentMethods":475,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":162,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":295,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":126,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":351,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":117,"org.easymock.tests2.MockBuilderTest.testCreateMockString":84,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":204,"org.easymock.tests.UsageExpectAndThrowTest.floatType":240,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":199,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests.UsageVerifyTest.twoThrows":456,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":28,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":213,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":390,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":111,"org.easymock.tests.LimitationsTest.privateConstructor":423,"org.easymock.tests2.UsageConstraintsTest.testNotNull":63,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":370,"org.easymock.tests2.UsageTest.defaultResetToNice":144,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":276,"org.easymock.tests.UsageVarargTest.differentLength":408,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":156,"org.easymock.tests2.CallbackTest.callback":153,"org.easymock.tests2.UsageConstraintsTest.equals":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":9,"org.easymock.tests.UsageTest.openCallCountByLastCall":333,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":428,"org.easymock.tests.UsageCallCountTest.tooFewCalls":461,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":180,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":434,"org.easymock.tests.UsageThrowableTest.throwCheckedException":367,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":281,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":361,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":161,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":300,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":181,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":227,"org.easymock.tests2.CompareToTest.testGreateOrEqual":495,"org.easymock.tests.ObjectMethodsTest.testHashCode":445,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":119,"org.easymock.tests2.NameTest.nameForNiceMock":32,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":215,"org.easymock.tests2.DelegateToTest.testStubDelegate":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":220,"org.easymock.tests2.AnswerTest.stubAnswer":226,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":472,"org.easymock.tests.UsageVarargTest.varargLongAccepted":410,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.floatType":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":26,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":133,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":57,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests.UsageThrowableTest.noUpperLimit":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":38,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":171,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":90,"org.easymock.tests2.SerializationTest.test":236,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests2.UsageConstraintsTest.testSame":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":262,"org.easymock.samples.SupportTest.addDocument":24,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":205,"org.easymock.tests.GenericTest.testPackageScope":372,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":132,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":288,"org.easymock.tests2.NameTest.nameForMock":30,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":7,"org.easymock.tests2.UsageStrictMockTest.differentMethods":233,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":252,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":443,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":328,"org.easymock.tests2.MockedExceptionTest.testRealException":123,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":392,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":427,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":302,"org.easymock.tests2.NameTest.nameForStrictMock":31,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":493,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":172,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":58,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":352,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":72,"org.easymock.tests2.UsageStrictMockTest.range":232,"org.easymock.tests2.UsageConstraintsTest.lessThan":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":128,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":209,"org.easymock.tests2.UsageConstraintsTest.testOr":45,"org.easymock.tests.UsageRangeTest.combination":325,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":100,"org.easymock.tests.UsageTest.wrongArguments":332,"org.easymock.tests2.MockBuilderTest.testWithConstructor":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":206,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":380,"org.easymock.tests.UsageVarargTest.varargShortAccepted":409,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":464,"org.easymock.tests2.UsageConstraintsTest.cmpTo":50,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":143,"org.easymock.tests2.CaptureTest.testCaptureFromStub":96,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":292,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":73,"org.easymock.tests.UsageTest.unexpectedCallWithArray":331,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":471,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":462,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":275,"org.easymock.tests2.CaptureTest.testCapture":487,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":473,"org.easymock.tests2.UsageConstraintsTest.constraints":39,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests.UsageStrictMockTest.testVerify":477,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":23,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":470,"org.easymock.tests2.CompareToTest.testGreateThan":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":345,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":437,"org.easymock.tests.LimitationsTest.abstractClass":422,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":438,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":190}}]
