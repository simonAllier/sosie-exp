[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:65","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[31,32,33,34,35,36,37,38,39,2,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,9,63,64,65,66,16,17,67,68,69,70,71,72,73,74,75,76,77,78,14,79,80,15,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[161,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[163],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:108","failures":[164,165,20,25,166,167,117,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[36,71,74,75,90,93,115,198,168,199,138,139,140,141,142],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[200,201,202,203,204,205,206],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[76,117],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[207,72,208],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[200,201,202,203,204,205,206],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[209,210],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[211],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[107,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[215,138],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[216,217,218,219,220,78,221,222,223,224,225,226,227,227,228,228,86,87,101,102,229,230,231,232,233,234,235,236,237,238,239,240,163,241,123,242,243,244,245,246,247,248,249,250,153,154,155,156,157,158,159,160],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[36,215,251,93,168,199,138],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[252],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"e":"e"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[55,56,57,254,255,58,59,60,61,256,257,258,259,62,260],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[215,138],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[261,90],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[211],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[262,206],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[263,264,265,266,267,268,269,270,271,272,273,211,274,275,55,56,57,254,257,258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[36,71,74,75,90,93,115,198,168,199,138,139,140,141,142],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":264,"org.easymock.tests2.UsageTest.argumentsOrdered":75,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":24,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":72,"org.easymock.tests2.StubTest.stubWithReturnValue":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":205,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":14,"org.easymock.tests2.SerializationTest.testAllMockedMethod":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":22,"org.easymock.tests.MockingTest.testPartialClassMocking":247,"org.easymock.samples.SupportTest.voteForRemovals":80,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":163,"org.easymock.tests.MockClassControlTest.testToString":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":7,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":169,"org.easymock.tests.UsageExpectAndThrowTest.object":179,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":211,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":200,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":270,"org.easymock.tests2.UsageTest.wrongArguments":71,"org.easymock.samples.ConstructorCalledMockTest.testTax":227,"org.easymock.tests.UsageStrictMockTest.range":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":99,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":64,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":240,"org.easymock.tests2.UsageConstraintsTest.testNull":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":180,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":65,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":160,"org.easymock.tests2.CaptureTest.testPrimitive":254,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":113,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":188,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":98,"org.easymock.tests2.CaptureTest.testCaptureNone":61,"org.easymock.tests.UsageUnorderedTest.message":138,"org.easymock.tests.UsageVerifyTest.twoReturns":199,"org.easymock.tests.UsageVarargTest.varargByteAccepted":132,"org.easymock.tests.UsageTest.argumentsOrdered":142,"org.easymock.tests.UsageVarargTest.varargIntAccepted":126,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":149,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":86,"org.easymock.tests2.CaptureTest.testCapture_2617107":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":204,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":117,"org.easymock.tests2.UsageConstraintsTest.any":272,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":50,"org.easymock.tests2.StubTest.stub":76,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":110,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":23,"org.easymock.tests.UsageExpectAndThrowTest.longType":172,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":232,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":109,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":9,"org.easymock.tests2.SerializationTest.testClass":161,"org.easymock.tests.LimitationsTest.mockNativeMethod":237,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":2,"org.easymock.tests.ReplayStateInvalidUsageTest.times":111,"org.easymock.tests2.AnswerTest.answer":252,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":242,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":70,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":78,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":38,"org.easymock.tests2.NameTest.nameForMocksControl":46,"org.easymock.tests2.MockedExceptionTest.testMockedException":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":1,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":190,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":173,"org.easymock.tests.MockingTest.testNicePartialClassMocking":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":184,"org.easymock.tests.LimitationsTest.mockFinalMethod":238,"org.easymock.tests2.CaptureTest.testCaptureLast":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":25,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":214,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":122,"org.easymock.tests.MockingTest.testTwoMocks":246,"org.easymock.tests2.CaptureTest.testCapture1_2446744":255,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":212,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":182,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":177,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":74,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":275,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":105,"org.easymock.tests.UsageThrowableTest.throwError":191,"org.easymock.samples.ExampleTest.removeNonExistingDocument":84,"org.easymock.tests.UsageStrictMockTest.differentMethods":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":4,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":107,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":230,"org.easymock.tests2.MockBuilderTest.testCreateMockString":53,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":153,"org.easymock.tests.UsageExpectAndThrowTest.floatType":171,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":207,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":31,"org.easymock.tests.UsageVerifyTest.twoThrows":168,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":253,"org.easymock.samples.PartialClassMockTest.testGetArea":226,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":106,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":170,"org.easymock.tests.LimitationsTest.privateConstructor":236,"org.easymock.tests2.ThreadingTest.testChangeDefault":216,"org.easymock.tests2.UsageConstraintsTest.testNotNull":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":197,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":16,"org.easymock.tests2.UsageTest.defaultResetToNice":73,"org.easymock.tests2.MockBuilderTest.testCreateMock":51,"org.easymock.tests.UsageVarargTest.differentLength":129,"org.easymock.tests2.CallbackTest.callback":42,"org.easymock.tests2.UsageConstraintsTest.equals":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":219,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":261,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":116,"org.easymock.tests.UsageCallCountTest.tooFewCalls":147,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":167,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":100,"org.easymock.tests.UsageThrowableTest.throwCheckedException":194,"org.easymock.tests.MockClassControlTest.testEquals":159,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":123,"org.easymock.tests.MockingTest.testStrictClassMocking":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":186,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":69,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":120,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":30,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":3,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":112,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":103,"org.easymock.tests.ObjectMethodsTest.testHashCode":136,"org.easymock.samples.ExampleTest.voteForRemovals":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":203,"org.easymock.tests2.NameTest.nameForNiceMock":45,"org.easymock.tests.UsageVarargTest.allKinds":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":202,"org.easymock.samples.BasicClassMockTest.testPrintContent":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":121,"org.easymock.samples.ExampleTest.addDocument":82,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":196,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":26,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":91,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":223,"org.easymock.tests.UsageVarargTest.varargLongAccepted":131,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":95,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":234,"org.easymock.samples.ExampleTest.voteForRemoval":81,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":77,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":12,"org.easymock.tests.UsageThrowableTest.noUpperLimit":143,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":101,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":58,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":162,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":229,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":192,"org.easymock.tests2.UsageConstraintsTest.testSame":267,"org.easymock.samples.SupportTest.addDocument":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":21,"org.easymock.tests2.CaptureTest.testCaptureFirst":62,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":108,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":115,"org.easymock.tests.GenericTest.testPackageScope":241,"org.easymock.tests2.CaptureTest.testCapture2_2446744":259,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":52,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":133,"org.easymock.tests.GenericTest.testBridgedEquals":243,"org.easymock.tests2.NameTest.nameForMock":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":151,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":187,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":47,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":28,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":220,"org.easymock.tests.UsageCallCountTest.tooManyCalls":152,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":183,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":146,"org.easymock.tests2.MockedExceptionTest.testRealException":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":6,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":195,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":114,"org.easymock.tests.MockingTest.testNiceClassMocking":250,"org.easymock.tests.MockingTest.testClassMocking":245,"org.easymock.tests2.NameTest.nameForStrictMock":44,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":145,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":18,"org.easymock.tests2.UsageConstraintsTest.testFind":265,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":166,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":208,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":88,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":41,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":273,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":231,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":215,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":218,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":5,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":201,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":8,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":137,"org.easymock.tests2.CaptureTest.testCaptureRightOne":257,"org.easymock.tests2.UsageConstraintsTest.testOr":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":206,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":124,"org.easymock.tests.UsageTest.wrongArguments":140,"org.easymock.tests.MockClassControlTest.testHashCode":158,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":154,"org.easymock.tests2.EasyMockSupportTest.testVerify":66,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":233,"org.easymock.tests.UsageVarargTest.varargShortAccepted":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":67,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":150,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":54,"org.easymock.tests.UsageVarargTest.varargCharAccepted":127,"org.easymock.tests2.CompareToTest.testLessThan":209,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":33,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests.DefaultClassInstantiatorTest.object":102,"org.easymock.tests2.CaptureTest.testCaptureFromStub":258,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":104,"org.easymock.tests.UsageTest.unexpectedCallWithArray":139,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":135,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":176,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":193,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":0,"org.easymock.tests2.UsageConstraintsTest.constraints":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":221,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":92,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":157,"org.easymock.samples.ExampleTest.addAndChangeDocument":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":175,"org.easymock.tests.CapturesMatcherTest.test":260,"org.easymock.tests.UsageStrictMockTest.testVerify":96,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":27,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":89,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":119,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":59,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":239,"org.easymock.tests.LimitationsTest.abstractClass":235,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":251,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":125}}]
