[{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[0],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MocksControl:131","failures":[1],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,27,28,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,2,3,46,4,47,5,6,48,49,50,51,52,53,54,55,56,57,8,58,59,60,9,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,10,86,11,87,88,89,90,91,92,93,12,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[120,126,127,141,300,301,258,259,262,263,278,286,289,294,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[97,98,99,302],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[303,304,305,306,307,308],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[0,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[119,139,141,142,311,312,313,314,257,278,287,289,290,293,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[4,7,8,9],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:643","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:54","sourceCode":"try {\n    return java.lang.reflect.Constructor<?>.newInstance(java.lang.Object[]);\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException);\n}","type":"CtTryImpl"},"failures":[303,304,305,306,307,308],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[97,98,99,302],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[52],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[97,98,99,302],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[97,98,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[32,319,320,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[13,14,15,16,17,18,19,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,2,3,46,4,47,5,6,48,49,50,51,52,53,54,55,56,57,8,58,59,60,9,61,62,63,65,67,68,69,70,71,72,73,74,75,76,77,82,83,85,10,86,11,87,89,90,91,92,93,12,96,97,98,99,100,101,115,118,119,121,122,125,128,131,132,135,136,138,139,142,143,144,146,147,148,149,150,151,152,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,228,229,230,231,232,233,234,235,236,237,239,240,246,247,248,249,250,251,252,253,254,255,257,265,266,267,268,269,270,271,272,273,276,279,280,281,282,283,285,287,290,291,292,293,294,295,296,297,298,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[13,14,15,16,17,18,322,19,20,21,22,23,24,25,26,27,28,29,323,30,31,32,33,324,34,35,36,37,38,39,40,41,42,325,43,44,45,2,3,326,46,4,47,5,6,48,7,49,50,51,52,53,54,55,56,57,8,58,59,327,60,9,61,62,328,329,63,64,65,330,66,67,68,69,70,71,331,332,72,73,74,75,333,334,335,76,77,78,79,336,337,338,80,81,315,82,83,84,316,85,10,86,11,87,88,89,90,91,92,93,12,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,339,340,341,342,343,116,344,345,346,347,348,349,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,350,134,135,136,351,137,138,139,140,141,142,143,144,145,146,147,148,149,352,1,150,353,354,151,355,152,356,357,358,359,360,361,362,363,364,153,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,154,380,381,155,382,383,384,385,386,387,388,389,390,156,391,392,393,394,395,157,396,397,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,398,399,400,186,187,401,188,402,403,404,317,189,190,405,318,191,192,193,194,195,406,407,196,408,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,409,410,411,310,412,413,222,414,223,224,319,225,415,416,226,417,227,228,229,230,418,231,232,419,233,234,235,236,237,238,239,240,241,242,243,244,245,420,246,421,422,423,424,425,426,427,428,429,247,248,249,250,251,430,431,432,433,434,435,436,437,438,439,440,441,252,253,254,255,256,257,258,259,260,261,262,263,264,442,443,444,445,446,447,303,304,305,306,448,307,308,265,266,267,268,269,270,271,449,450,451,272,273,274,275,276,452,277,453,278,454,455,456,320,457,321,279,280,281,282,458,459,460,461,462,283,463,464,284,285,286,287,288,289,290,291,292,293,294,295,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,296,297,487,298,299,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[330,512,513,514,515,516,517,518,519,132,136,351],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[520,521,522],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[10,11,87,88,89,90,91,93,523,12,94,96],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[523,524],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[525,526,527,528,529,530,119,139,141,142,531,300,301,257,452,277,278,287,289,290,293,294,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":127,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":256,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":498,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":122,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":20,"org.easymock.tests2.DelegateToTest.testReturnException":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":159,"org.easymock.tests.MockingTest.testPartialClassMocking":186,"org.easymock.tests.MockClassControlTest.testToString":421,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":324,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":507,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":385,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":166,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":155,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":311,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":64,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":486,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":48,"org.easymock.tests2.UsageTest.wrongArguments":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":272,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":254,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":439,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":403,"org.easymock.tests2.UsageConstraintsTest.testNull":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":147,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests2.CaptureTest.testPrimitive":87,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":185,"org.easymock.tests.UsageTest.moreThanOneArgument":257,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":219,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":409,"org.easymock.tests.UsageTest.argumentsOrdered":263,"org.easymock.tests.UsageVarargTest.varargIntAccepted":230,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":530,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":191,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":373,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":490,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":195,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":470,"org.easymock.tests.ReplayStateInvalidUsageTest.times":416,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":153,"org.easymock.tests2.DependencyTest.testClassMocking":328,"org.easymock.tests2.AnswerTest.answer":71,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":505,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":70,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":436,"org.easymock.tests2.CaptureTest.testAnd":10,"org.easymock.tests2.UsageTest.strictResetToDefault":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":516,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":281,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":412,"org.easymock.tests2.DelegateToTest.testDelegate":85,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":181,"org.easymock.tests.LimitationsTest.mockFinalMethod":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":251,"org.easymock.tests2.DependencyTest.testClassMockingSupport":329,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":452,"org.easymock.tests2.CaptureTest.testCapture1_2446744":88,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":179,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":68,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":414,"org.easymock.tests.UsageThrowableTest.throwError":238,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":438,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":221,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":473,"org.easymock.samples.PartialClassMockTest.testGetArea":24,"org.easymock.tests.MockingTest.testInterfaceMocking":401,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":428,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":167,"org.easymock.tests2.UsageTest.niceToStrict":121,"org.easymock.tests2.ThreadingTest.testChangeDefault":323,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":488,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":393,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":367,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":526,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":175,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":435,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":456,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":252,"org.easymock.tests.UsageOverloadedMethodTest.overloading":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":390,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":461,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":53,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":487,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":0,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":52,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":93,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":418,"org.easymock.tests.MockClassControlTest.testEquals":425,"org.easymock.tests2.EasyMockSupportClassTest.testAll":154,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":190,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":183,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":69,"org.easymock.tests2.CaptureTest.testCaptureAll":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":249,"org.easymock.tests.MockNameTest.defaultName":430,"org.easymock.tests2.UsageConstraintsTest.testMatches":54,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":220,"org.easymock.samples.ExampleTest.voteForRemovals":18,"org.easymock.tests.UsageVarargTest.allKinds":237,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":293,"org.easymock.samples.BasicClassMockTest.testPrintContent":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":250,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":244,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":163,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":345,"org.easymock.tests2.UsageConstraintsTest.greaterThan":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":280,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":356,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":474,"org.easymock.samples.ExampleTest.voteForRemoval":15,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":308,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":30,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":357,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":440,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":352,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":466,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":265,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":495,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":158,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":204,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":32,"org.easymock.tests2.CaptureTest.testCapture2_2446744":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":506,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":80,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":236,"org.easymock.tests.GenericTest.testBridgedEquals":318,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":514,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":450,"org.easymock.tests.UsageExpectAndReturnTest.longType":200,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":184,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":464,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":432,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":217,"org.easymock.tests.UsageCallCountTest.tooManyCalls":451,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":243,"org.easymock.tests.MockingTest.testNiceClassMocking":404,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":131,"org.easymock.tests.MockingTest.testClassMocking":399,"org.easymock.tests2.UsageConstraintsTest.testContains":51,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":267,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":40,"org.easymock.tests2.UsageConstraintsTest.testFind":46,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":299,"org.easymock.tests.MockTypeTest.fromEasyMockClass":437,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":43,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests.UsageExpectAndReturnTest.object":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":232,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":445,"org.easymock.tests.UsageTest.exactCallCountByLastCall":264,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":410,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":330,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":213,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":228,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":460,"org.easymock.tests.MockClassControlTest.testHashCode":424,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":340,"org.easymock.tests2.EasyMockSupportTest.testVerify":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":388,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":411,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":458,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":455,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":67,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":66,"org.easymock.tests.UsageVarargTest.varargCharAccepted":231,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":511,"org.easymock.tests2.UsageTest.openCallCountByLastCall":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":520,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests.DefaultClassInstantiatorTest.object":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":454,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":443,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":389,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":339,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":472,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":423,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":172,"org.easymock.tests.CapturesMatcherTest.test":524,"org.easymock.tests.ReplayStateInvalidCallsTest.times":478,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":431,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":479,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":528,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests2.UsageTest.resumeIfFailure":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":434,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":161,"org.easymock.tests2.StubTest.stubWithReturnValue":101,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":517,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":206,"org.easymock.tests2.SerializationTest.testAllMockedMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":504,"org.easymock.samples.SupportTest.voteForRemovals":26,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":178,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":302,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":510,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":331,"org.easymock.tests.UsageExpectAndThrowTest.object":176,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":321,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":58,"org.easymock.tests2.DelegateToTest.testWrongClass":84,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":476,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":296,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":297,"org.easymock.samples.ConstructorCalledMockTest.testTax":27,"org.easymock.tests.UsageStrictMockTest.range":289,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":375,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":78,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":417,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":253,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":468,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":429,"org.easymock.tests2.CaptureTest.testCaptureNone":92,"org.easymock.tests.UsageUnorderedTest.message":278,"org.easymock.tests.UsageVerifyTest.twoReturns":295,"org.easymock.tests.UsageVarargTest.varargByteAccepted":235,"org.easymock.tests2.ThreadingTest.testThreadSafe":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":391,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":271,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":446,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":22,"org.easymock.tests2.CaptureTest.testCapture_2617107":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":508,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":275,"org.easymock.tests2.UsageConstraintsTest.any":49,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":415,"org.easymock.tests2.StubTest.stub":100,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":509,"org.easymock.tests.UsageExpectAndThrowTest.longType":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":160,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":448,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":225,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":140,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":116,"org.easymock.tests2.SerializationTest.testClass":97,"org.easymock.tests.LimitationsTest.mockNativeMethod":196,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":405,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":362,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":484,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.tests2.NameTest.nameForMocksControl":37,"org.easymock.tests2.MockedExceptionTest.testMockedException":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":381,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":188,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":170,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":325,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":79,"org.easymock.tests.MockingTest.testNicePartialClassMocking":187,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":149,"org.easymock.tests2.CaptureTest.testCaptureLast":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":277,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":483,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":136,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":59,"org.easymock.tests.MockingTest.testTwoMocks":400,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":480,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":174,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":61,"org.easymock.samples.ExampleTest.removeNonExistingDocument":322,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":224,"org.easymock.tests.UsageStrictMockTest.differentMethods":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":341,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":305,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":359,"org.easymock.tests2.ConstraintsToStringTest.andToString":529,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":31,"org.easymock.tests2.MockBuilderTest.testCreateMockString":81,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":420,"org.easymock.tests.UsageExpectAndThrowTest.floatType":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":382,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":72,"org.easymock.tests.UsageVerifyTest.twoThrows":294,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":156,"org.easymock.samples.ExampleTest.voteAgainstRemoval":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":499,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":427,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":152,"org.easymock.tests.LimitationsTest.privateConstructor":407,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":513,"org.easymock.tests2.UsageConstraintsTest.testNotNull":9,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":245,"org.easymock.tests2.UsageTest.defaultResetToNice":125,"org.easymock.samples.ExampleTest.voteAgainstRemovals":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":500,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":212,"org.easymock.tests.UsageVarargTest.differentLength":419,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":361,"org.easymock.tests2.CallbackTest.callback":115,"org.easymock.tests2.UsageConstraintsTest.equals":326,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":353,"org.easymock.tests.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":274,"org.easymock.tests.UsageCallCountTest.tooFewCalls":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":255,"org.easymock.tests.UsageThrowableTest.throwCheckedException":242,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":531,"org.easymock.tests.MockingTest.testStrictClassMocking":398,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":165,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":135,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":365,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":134,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":74,"org.easymock.tests.ObjectMethodsTest.testHashCode":444,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":482,"org.easymock.tests2.NameTest.nameForNiceMock":36,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":33,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":477,"org.easymock.tests2.DependencyTest.testInterfaceMocking":63,"org.easymock.samples.ExampleTest.addDocument":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.DelegateToTest.testStubDelegate":83,"org.easymock.tests2.AnswerTest.stubAnswer":73,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":287,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":336,"org.easymock.tests.UsageVarargTest.varargLongAccepted":234,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":497,"org.easymock.tests.UsageExpectAndReturnTest.floatType":199,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":215,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":65,"org.easymock.tests2.ConstraintsToStringTest.orToString":525,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":28,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":57,"org.easymock.tests.UsageThrowableTest.noUpperLimit":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":45,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":371,"org.easymock.tests2.SerializationTest.test":98,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":89,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":309,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":304,"org.easymock.tests2.UsageConstraintsTest.testSame":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":198,"org.easymock.samples.SupportTest.addDocument":25,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":350,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":467,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":383,"org.easymock.tests.GenericTest.testPackageScope":189,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":492,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":346,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":402,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":465,"org.easymock.tests2.NameTest.nameForMock":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":209,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":519,"org.easymock.tests2.UsageStrictMockTest.differentMethods":142,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":201,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":180,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":282,"org.easymock.tests2.MockedExceptionTest.testRealException":41,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":502,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":376,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":501,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":139,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":227,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":273,"org.easymock.tests2.NameTest.nameForStrictMock":35,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":521,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":374,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":8,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":306,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":312,"org.easymock.tests.ErrorMessageTest.testGetters":313,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":333,"org.easymock.tests2.UsageStrictMockTest.range":141,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":471,"org.easymock.tests2.UsageConstraintsTest.lessThan":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":496,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":387,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":279,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":145,"org.easymock.tests.UsageTest.wrongArguments":259,"org.easymock.tests2.MockBuilderTest.testWithConstructor":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":384,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":210,"org.easymock.tests.UsageVarargTest.varargShortAccepted":233,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":307,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":449,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":485,"org.easymock.tests2.UsageConstraintsTest.cmpTo":50,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":332,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":491,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureFromStub":94,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":222,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":334,"org.easymock.tests.UsageTest.unexpectedCallWithArray":258,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":481,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":270,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":518,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":211,"org.easymock.tests2.CaptureTest.testCapture":523,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests2.ConstraintsToStringTest.notToString":527,"org.easymock.tests.UsageStrictMockTest.testVerify":292,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":21,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":248,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":193,"org.easymock.tests.LimitationsTest.abstractClass":406,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":194,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":229,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":314}}]
