[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[1,2,3,4,5,6,7],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[8,8,9,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,8,8,9,9,57,58,59,60,61,62,63,64,65,66,67,10,68,69,70,71,72,73,74,75,76,77,78,79,80,81,11,12,82,83,13,14,15,16,84,85,86,87,88,17,89,18,19,90,20,21,91,92,93,94,95,22,23,24,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,25,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,26,27,28,29,30,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,31,32,33,34,35,245,246,247,248,36,249,250,251,252,37,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,38,39,294,295,40,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,41,42,316],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[70,71,72,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[318,319,320],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[321,322,323,324,325,252],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[43,45,46,47,48,50,51,53,8,8,9,9,57,58,60,61,64,65,66,67,10,68,69,70,71,73,74,75,76,77,78,79,80,81,11,12,82,83,13,14,15,16,84,85,87,88,17,89,18,19,90,20,21,91,92,93,95,22,23,24,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,25,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,221,222,223,224,225,226,26,27,28,29,30,227,228,229,230,232,233,236,238,239,240,241,242,243,244,31,32,33,34,35,245,246,247,326,248,327,36,249,37,254,255,258,260,261,262,263,264,265,266,267,268,269,271,277,278,279,280,282,283,285,286,287,288,289,290,291,293,328,38,39,294,295,40,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,41,42,316],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[73,329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[330,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[331],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"message","key":"message"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[70,71,72,317],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[15],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[319,320],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[70,71,72,317],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[116,332,321,333,334,335,322,336,25,145,146,208,323,324,337,338,230,325,252,37,254,255,277,278,279,292,293],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[118,155],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[57,59,67,82,83,16,84,86,91],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[57,59,60,61,62,63,64,66,339,67],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[340,341],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[342],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[8,9,343,342,344],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[318,319,345,346,320,347],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[104,105],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[43,70,81,110,111,112,113,128,348,134,135,136,349,350,351,352,353,354,355,173,356,174,175,176,177,357,358,209,238,239,240,258,260,261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.UsageTest.argumentsOrdered":124,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":329,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":119,"org.easymock.tests2.StubTest.stubWithReturnValue":80,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":189,"org.easymock.tests2.SerializationTest.testAllMockedMethod":72,"org.easymock.tests2.DelegateToTest.testReturnException":74,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":222,"org.easymock.tests.MockingTest.testPartialClassMocking":238,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":322,"org.easymock.samples.SupportTest.voteForRemovals":53,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":308,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":296,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":228,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":111,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":104,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":327,"org.easymock.tests.UsageExpectAndThrowTest.object":306,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":149,"org.easymock.tests2.DelegateToTest.testWrongClass":76,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":41,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":42,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":38,"org.easymock.tests2.UsageTest.wrongArguments":117,"org.easymock.tests.UsageStrictMockTest.range":254,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.samples.ExampleTest.answerVsDelegate":46,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests2.UsageConstraintsTest.testNull":14,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":130,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":159,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":175,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":349,"org.easymock.tests2.CaptureTest.testPrimitive":60,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":315,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":234,"org.easymock.tests.UsageTest.moreThanOneArgument":230,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":129,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":288,"org.easymock.tests2.CaptureTest.testCaptureNone":65,"org.easymock.tests.UsageUnorderedTest.message":208,"org.easymock.tests.UsageVerifyTest.twoReturns":279,"org.easymock.tests.UsageVarargTest.varargByteAccepted":218,"org.easymock.tests2.ThreadingTest.testThreadSafe":137,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":265,"org.easymock.tests.UsageTest.argumentsOrdered":235,"org.easymock.tests.UsageVarargTest.varargIntAccepted":212,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":274,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":54,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":31,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":355,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":295,"org.easymock.tests2.UsageConstraintsTest.any":87,"org.easymock.tests2.StubTest.stub":79,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":35,"org.easymock.tests.UsageExpectAndThrowTest.longType":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":223,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":331,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":144,"org.easymock.tests2.SerializationTest.testClass":70,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":168,"org.easymock.tests.LimitationsTest.mockNativeMethod":209,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":109,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":199,"org.easymock.tests2.AnswerTest.answer":103,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":86,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":352,"org.easymock.tests2.CaptureTest.testAnd":57,"org.easymock.tests2.UsageTest.strictResetToDefault":115,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":147,"org.easymock.tests2.NameTest.nameForMocksControl":166,"org.easymock.tests2.MockedExceptionTest.testMockedException":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":154,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":233,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":269,"org.easymock.tests2.DelegateToTest.testDelegate":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":300,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":240,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":127,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":176,"org.easymock.tests.MockingTest.testNicePartialClassMocking":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":311,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":132,"org.easymock.tests2.CaptureTest.testCaptureLast":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":293,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":84,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":237,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":292,"org.easymock.tests2.CaptureTest.testCapture1_2446744":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":304,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":123,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":23,"org.easymock.tests.UsageThrowableTest.throwError":200,"org.easymock.tests.UsageStrictMockTest.differentMethods":255,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":345,"org.easymock.tests2.ConstraintsToStringTest.andToString":335,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":139,"org.easymock.tests2.MockBuilderTest.testCreateMockString":358,"org.easymock.tests.UsageExpectAndThrowTest.floatType":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":30,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":90,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":106,"org.easymock.tests.UsageVerifyTest.twoThrows":278,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":112,"org.easymock.samples.PartialClassMockTest.testGetArea":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":287,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":286,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":297,"org.easymock.tests2.UsageTest.niceToStrict":118,"org.easymock.tests2.UsageConstraintsTest.testNotNull":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":207,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":169,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":174,"org.easymock.tests2.UsageTest.defaultResetToNice":122,"org.easymock.samples.ExampleTest.voteAgainstRemovals":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":195,"org.easymock.tests.UsageVarargTest.differentLength":215,"org.easymock.tests2.CallbackTest.callback":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":343,"org.easymock.tests.UsageTest.openCallCountByLastCall":232,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":305,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":11,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":270,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":294,"org.easymock.tests.UsageCallCountTest.tooFewCalls":272,"org.easymock.tests.UsageOverloadedMethodTest.overloading":263,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":283,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":18,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":262,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":191,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":89,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":66,"org.easymock.tests.UsageThrowableTest.throwCheckedException":204,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":259,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":313,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":350,"org.easymock.tests2.CaptureTest.testCaptureAll":58,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":249,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests2.UsageConstraintsTest.testMatches":19,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":100,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":29,"org.easymock.samples.ExampleTest.voteForRemovals":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":141,"org.easymock.tests2.NameTest.nameForNiceMock":165,"org.easymock.tests.UsageVarargTest.allKinds":220,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":277,"org.easymock.tests2.DependencyTest.testInterfaceMocking":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.BasicClassMockTest.testPrintContent":55,"org.easymock.samples.ExampleTest.addDocument":49,"org.easymock.tests2.DelegateToTest.testStubDelegate":75,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":206,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests2.AnswerTest.stubAnswer":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":226,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":77,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":37,"org.easymock.tests2.UsageConstraintsTest.greaterThan":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":242,"org.easymock.tests.UsageVarargTest.varargLongAccepted":217,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":136,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":256,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":347,"org.easymock.samples.ExampleTest.voteForRemoval":47,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":138,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":198,"org.easymock.tests.UsageExpectAndReturnTest.floatType":182,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":357,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":348,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":81,"org.easymock.tests2.ConstraintsToStringTest.orToString":332,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests.UsageThrowableTest.noUpperLimit":201,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":21,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":261,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":12,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests2.SerializationTest.test":71,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":62,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":152,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":202,"org.easymock.tests2.UsageConstraintsTest.testSame":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":181,"org.easymock.samples.SupportTest.addDocument":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":221,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":73,"org.easymock.tests2.CaptureTest.testCaptureFirst":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":153,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":126,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":187,"org.easymock.tests.GenericTest.testPackageScope":258,"org.easymock.tests2.CaptureTest.testCapture2_2446744":68,"org.easymock.tests2.UsageTest.moreThanOneArgument":116,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":140,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":330,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":177,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":219,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":275,"org.easymock.tests2.NameTest.nameForMock":163,"org.easymock.tests.UsageExpectAndReturnTest.longType":183,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":192,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":316,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":94,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":312,"org.easymock.tests2.UsageStrictMockTest.differentMethods":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":184,"org.easymock.tests.UsageCallCountTest.tooManyCalls":276,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":244,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":271,"org.easymock.tests2.MockedExceptionTest.testRealException":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":188,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":301,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":39,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests2.UsageConstraintsTest.testContains":17,"org.easymock.tests2.NameTest.nameForStrictMock":164,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":171,"org.easymock.tests2.UsageConstraintsTest.testFind":13,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":264,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":178,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":131,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":250,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":179,"org.easymock.tests.UsageExpectAndReturnTest.object":190,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":346,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":133,"org.easymock.tests.ErrorMessageTest.testGetters":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":173,"org.easymock.tests2.UsageStrictMockTest.range":145,"org.easymock.tests2.UsageConstraintsTest.lessThan":24,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":158,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.UsageTest.exactCallCountByLastCall":236,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":354,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":36,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":151,"org.easymock.tests2.CaptureTest.testCaptureRightOne":67,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":326,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":266,"org.easymock.tests2.UsageConstraintsTest.testOr":16,"org.easymock.tests.UsageRangeTest.combination":241,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":128,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":282,"org.easymock.tests.UsageTest.wrongArguments":231,"org.easymock.tests2.MockBuilderTest.testWithConstructor":342,"org.easymock.tests2.EasyMockSupportTest.testVerify":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":193,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":267,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":320,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":280,"org.easymock.tests.UsageVarargTest.varargShortAccepted":216,"org.easymock.tests2.UsageConstraintsTest.cmpTo":88,"org.easymock.tests.UsageVarargTest.varargCharAccepted":213,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":105,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":143,"org.easymock.tests2.UsageTest.openCallCountByLastCall":120,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests.DefaultClassInstantiatorTest.object":318,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":161,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":289,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":356,"org.easymock.tests.UsageTest.unexpectedCallWithArray":325,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":338,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":303,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":353,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":203,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":194,"org.easymock.tests2.CaptureTest.testCapture":339,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":253,"org.easymock.tests2.UsageConstraintsTest.constraints":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":134,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":302,"org.easymock.samples.ExampleTest.addAndChangeDocument":51,"org.easymock.tests2.ConstraintsToStringTest.notToString":333,"org.easymock.tests.UsageStrictMockTest.testVerify":257,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":197,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":245,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":56,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":334,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":113,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":63,"org.easymock.tests2.UsageTest.resumeIfFailure":125,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":33,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":186,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":34,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":156}}]
