[{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[0,1,2],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[17,18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[22,23,7,9,24,25],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[27,28,21,29,30,31,32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[33,34,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[36],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,15,65,66,67,68,69,70,71,72],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[73,74,75,76,77,18,78,79,80,81,82],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,36,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,0,165,1,2,166,167,168,169],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[170,171,120,172],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[173,174],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[89,175,176,177],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[178,179,180,181],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[182,96,99,107,183,184,111,113,185,186,170,164,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[160,187,188],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[170,171,120,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[189],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[65,67],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[22,23,190,7,191,9,10,192,63,11,12,193,24,25,194],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[170,171,120,172],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[87,88,90,94,97,195,3,196,7,191,8,197,198,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[73,74,199,200,201,202,203,204,205,75,206,207],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[208,208,209,209,83,86,87,88,89,90,91,92,182,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,210,113,211,212,185,186,114,115,213,116,117,214,118,119,170,120,123,36,132,138,139,140,141,142,143,144,145,146,147,148,150,152,153,154,155,215,156,157,158,159,160,161,162,163,164,0,1,166,167,168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[89,175,176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[184,216,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[217,184,218,219,220,26,221,185,186,170],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[84,85,86,87,88,89,90,92,97,102,114,116,120,123,222,148,153,154,155,163,0,165,2,168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[170,171,120,172],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[73,74,75,76,77,18,78,79,80,81,82],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:71","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[239],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[92,195,73,240,74,199,200,201,202,203,241,204,75,206,242,207,243,179,244,76,77,245,18,246,78,79,247,80,248,249,250,251,252,253,176,180,254,81,255,256,19,181,82,257,174,190,258,7,191,259,260,261,41,262,263,264,20,14,265,266,267,268,269,72,270,271],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":77,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests2.UsageTest.argumentsOrdered":6,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.tests2.StubTest.stubWithReturnValue":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":217,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":181,"org.easymock.tests2.SerializationTest.testAllMockedMethod":120,"org.easymock.tests2.DelegateToTest.testReturnException":28,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":216,"org.easymock.tests.MockingTest.testPartialClassMocking":142,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":23,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":164,"org.easymock.tests.MockClassControlTest.testToString":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":99,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":172,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":42,"org.easymock.tests.UsageExpectAndThrowTest.object":52,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":218,"org.easymock.tests2.DelegateToTest.testWrongClass":21,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":264,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":259,"org.easymock.tests2.UsageTest.wrongArguments":4,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":230,"org.easymock.samples.ConstructorCalledMockTest.testTax":208,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.samples.ExampleTest.answerVsDelegate":27,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":114,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":147,"org.easymock.tests2.UsageConstraintsTest.testNull":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":88,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":155,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":211,"org.easymock.tests2.CaptureTest.testPrimitive":199,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":61,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":121,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":24,"org.easymock.tests2.CaptureTest.testCaptureNone":241,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":16,"org.easymock.tests.UsageTest.argumentsOrdered":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":133,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":265,"org.easymock.tests2.CaptureTest.testCapture_2617107":74,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":41,"org.easymock.tests2.UsageConstraintsTest.any":248,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":269,"org.easymock.tests.UsageExpectAndThrowTest.longType":45,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":160,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":177,"org.easymock.tests2.SerializationTest.testClass":170,"org.easymock.tests.LimitationsTest.mockNativeMethod":168,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":1,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":80,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":224,"org.easymock.tests2.CaptureTest.testAnd":73,"org.easymock.tests2.UsageTest.strictResetToDefault":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":225,"org.easymock.tests2.MockedExceptionTest.testMockedException":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":124,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":63,"org.easymock.tests2.DelegateToTest.testDelegate":30,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":46,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":144,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":110,"org.easymock.tests.MockingTest.testNicePartialClassMocking":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":57,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":90,"org.easymock.tests.LimitationsTest.mockFinalMethod":169,"org.easymock.tests2.CaptureTest.testCaptureLast":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":72,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":214,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":79,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":256,"org.easymock.tests.MockingTest.testTwoMocks":141,"org.easymock.tests2.CaptureTest.testCapture1_2446744":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":50,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":257,"org.easymock.tests.UsageThrowableTest.throwError":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":226,"org.easymock.tests.UsageStrictMockTest.differentMethods":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":232,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":158,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":238,"org.easymock.tests2.MockBuilderTest.testCreateMockString":113,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":148,"org.easymock.tests.UsageExpectAndThrowTest.floatType":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":125,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":176,"org.easymock.tests.UsageVerifyTest.twoThrows":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":132,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests2.CompareToTest.testLessOrEqual":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":266,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":96,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":128,"org.easymock.tests.LimitationsTest.privateConstructor":167,"org.easymock.tests2.UsageConstraintsTest.testNotNull":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":71,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":100,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":35,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":107,"org.easymock.tests2.MockBuilderTest.testCreateMock":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":135,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":182,"org.easymock.tests.UsageTest.openCallCountByLastCall":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":51,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":22,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":239,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":137,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":252,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":40,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":116,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":251,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":187,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":204,"org.easymock.tests.UsageThrowableTest.throwCheckedException":68,"org.easymock.tests2.EasyMockSupportClassTest.testAll":123,"org.easymock.tests.MockClassControlTest.testEquals":154,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":59,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":25,"org.easymock.tests.MockingTest.testStrictClassMocking":139,"org.easymock.tests2.CaptureTest.testCaptureAll":240,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":271,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":117,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":213,"org.easymock.tests2.UsageConstraintsTest.testMatches":253,"org.easymock.tests.UsageVarargTest.allKinds":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":220,"org.easymock.samples.BasicClassMockTest.testPrintContent":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":134,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":29,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":221,"org.easymock.tests2.UsageConstraintsTest.greaterThan":180,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":183,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":97,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":162,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":98,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":185,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":209,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":244,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":163,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":118,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":201,"org.easymock.tests2.SerializationTest.test":171,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":184,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":188,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":157,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":66,"org.easymock.tests2.UsageConstraintsTest.testSame":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":122,"org.easymock.tests2.CaptureTest.testCaptureFirst":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":126,"org.easymock.tests.GenericTest.testPackageScope":0,"org.easymock.tests2.CaptureTest.testCapture2_2446744":242,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests.GenericTest.testBridgedEquals":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":60,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":19,"org.easymock.tests2.UsageStrictMockTest.differentMethods":196,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":58,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":229,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":195,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":260,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":69,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":115,"org.easymock.tests.MockingTest.testNiceClassMocking":145,"org.easymock.tests.MockingTest.testClassMocking":140,"org.easymock.tests2.UsageConstraintsTest.testContains":250,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":102,"org.easymock.tests2.UsageConstraintsTest.testFind":245,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":64,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":34,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":190,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":89,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":258,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":119,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":81,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":92,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":228,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":233,"org.easymock.tests.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":270,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":26,"org.easymock.tests2.CaptureTest.testCaptureRightOne":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":129,"org.easymock.tests2.UsageConstraintsTest.testOr":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.UsageTest.wrongArguments":10,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":31,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":231,"org.easymock.tests.MockClassControlTest.testHashCode":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":127,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":130,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":161,"org.easymock.tests2.UsageConstraintsTest.cmpTo":249,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":243,"org.easymock.tests2.CompareToTest.testLessThan":173,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":38,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":33,"org.easymock.tests.DefaultClassInstantiatorTest.object":156,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":194,"org.easymock.tests2.CaptureTest.testCaptureFromStub":206,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":105,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":13,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":131,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":67,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests2.CaptureTest.testCapture":205,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":95,"org.easymock.tests2.UsageConstraintsTest.constraints":76,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":152,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":48,"org.easymock.tests.UsageStrictMockTest.testVerify":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":138,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":151,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":267,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":212,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":146,"org.easymock.tests.LimitationsTest.abstractClass":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":268}}]
