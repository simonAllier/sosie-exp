[{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[1,6,7,8,2,9,10,11,3,4,5],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[12,28,28,29,29,30,31,32,13,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,1,6,409,410,7,411,8,2,412,9,413,414,415,416,417,418,419,420,421,10,422,423,424,425,11,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,14,15,16,445,17,446,447,18,19,448,449,20,450,451,452,453,3,454,4,455,456,457,458,459,460,461,5,462,463,464,21,22,23,465,24,466,467,25,26,468,469,27,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,448,449,20,22,23,24,25,26,468,469,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[61,63,68,127,130,131,152,157,158,159,160,161,162,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,267,269,270,271,272,273,274,293,312,319,476,477,478,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[28,28,29,29,31,32,33,34,35,36,38,40,43,44,45,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,83,84,85,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,120,121,122,124,126,127,128,129,130,131,132,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,178,186,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,215,217,218,219,244,250,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,340,341,342,343,344,345,346,347,348,349,350,351,356,359,369,375,378,380,384,385,386,388,390,391,393,395,396,397,398,399,400,401,402,403,404,405,406,407,408,1,6,410,7,411,8,2,412,9,413,414,415,416,417,418,419,420,421,10,422,423,424,425,11,426,427,428,429,430,431,432,433,434,436,439,440,441,442,446,3,454,4,455,456,457,458,459,460,461,5,462,463,464,466,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[75,388],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[84,85,87,400,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[481],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[133,134,135,136,137,139,140,141,142,143,144,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[504,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[416],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[290],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[506,507,65,113,508,509],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[32,75,78,188,350,359,369,375,378,380,381,384,386,388,391,393,434,440,441,444],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[60,67,68,116,117,178,192,229,268,276,277,285,318,319,329,330,408,1,410,411,8,415,418,421,426],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[6,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[43,44,45,61,63,68,131,152,161,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,231,267,269,270,271,272,273,274,293,312,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[350,351,352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[391,444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[78,386],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,83,84,85,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,215,217,218,219,220,221,222,223,224,225,226,227,244,250,253,262,263,264,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,356,359,369,375,378,380,384,385,386,388,390,391,393,395,396,397,398,399,400,401,402,403,404,405,407,408,1,6,410,7,411,8,2,412,9,413,414,415,416,417,418,419,420,421,10,422,423,424,425,11,426,427,428,429,430,431,432,433,434,436,439,440,441,442,446,3,454,4,455,456,457,458,459,460,461,5,462,463,464,466,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:268","sourceCode":"return this","type":"CtReturnImpl"},"failures":[61,63,68,192,193,194,197,199,200,201,202,204,205,206,207,209,210,211,212,293,319],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[121,122,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.UsageTest.argumentsOrdered":322,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":238,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":317,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":13,"org.easymock.tests2.DelegateToTest.testReturnException":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":158,"org.easymock.tests.MockingTest.testPartialClassMocking":84,"org.easymock.tests.MockClassControlTest.testToString":222,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":335,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":193,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":359,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":310,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":128,"org.easymock.tests2.UsageTest.wrongArguments":315,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":147,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":78,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":431,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":227,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":303,"org.easymock.tests2.CaptureTest.testPrimitive":455,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":132,"org.easymock.tests.UsageTest.moreThanOneArgument":64,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":212,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":430,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":282,"org.easymock.tests.UsageTest.argumentsOrdered":70,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":275,"org.easymock.tests.UsageVarargTest.varargIntAccepted":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":163,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":449,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":167,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":487,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":466,"org.easymock.tests.ReplayStateInvalidUsageTest.times":141,"org.easymock.tests2.DependencyTest.testClassMocking":307,"org.easymock.tests2.AnswerTest.answer":340,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":349,"org.easymock.tests2.CaptureTest.testAnd":3,"org.easymock.tests2.UsageTest.strictResetToDefault":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":439,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":281,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":298,"org.easymock.tests2.DelegateToTest.testDelegate":475,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":279,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":486,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":208,"org.easymock.tests.LimitationsTest.mockFinalMethod":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":172,"org.easymock.tests2.DependencyTest.testClassMockingSupport":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":72,"org.easymock.tests2.CaptureTest.testCapture1_2446744":456,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":347,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":135,"org.easymock.tests.UsageThrowableTest.throwError":267,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":77,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":490,"org.easymock.samples.PartialClassMockTest.testGetArea":32,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":136,"org.easymock.tests.MockingTest.testInterfaceMocking":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":164,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":194,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":266,"org.easymock.tests2.UsageTest.niceToStrict":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":228,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":384,"org.easymock.tests2.MockBuilderTest.testCreateMock":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":372,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":26,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":202,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":299,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":176,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":145,"org.easymock.tests.UsageOverloadedMethodTest.overloading":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":374,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":417,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":152,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":102,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":416,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":461,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":49,"org.easymock.tests.MockClassControlTest.testEquals":226,"org.easymock.tests2.EasyMockSupportClassTest.testAll":356,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":187,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":210,"org.easymock.tests2.CaptureTest.testCaptureAll":454,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":348,"org.easymock.tests.MockNameTest.defaultName":58,"org.easymock.tests2.UsageConstraintsTest.testMatches":418,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":283,"org.easymock.samples.ExampleTest.voteForRemovals":38,"org.easymock.tests.UsageVarargTest.allKinds":57,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":171,"org.easymock.samples.BasicClassMockTest.testPrintContent":42,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":273,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":325,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":18,"org.easymock.tests2.UsageConstraintsTest.greaterThan":420,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":286,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":442,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":491,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":260,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":443,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":403,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":434,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":483,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":156,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":312,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":296,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":157,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":470,"org.easymock.tests2.CaptureTest.testCaptureFirst":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":297,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":324,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":98,"org.easymock.tests2.CaptureTest.testCapture2_2446744":463,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":405,"org.easymock.tests2.UsageTest.moreThanOneArgument":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":246,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":56,"org.easymock.tests.GenericTest.testBridgedEquals":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":183,"org.easymock.tests.UsageExpectAndReturnTest.longType":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":168,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":294,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":505,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":211,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":424,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":59,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":280,"org.easymock.tests.UsageCallCountTest.tooManyCalls":184,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":198,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":272,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":396,"org.easymock.tests.MockingTest.testNiceClassMocking":90,"org.easymock.tests.MockingTest.testClassMocking":82,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":504,"org.easymock.tests2.UsageConstraintsTest.testContains":415,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":177,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":478,"org.easymock.tests2.UsageConstraintsTest.testFind":410,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":192,"org.easymock.tests.MockTypeTest.fromEasyMockClass":76,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":111,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":291,"org.easymock.tests.UsageExpectAndReturnTest.object":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":436,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":302,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":51,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":264,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":0,"org.easymock.tests.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":233,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":123,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":333,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":107,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":46,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":151,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":15,"org.easymock.tests.MockClassControlTest.testHashCode":225,"org.easymock.tests2.EasyMockSupportTest.testVerify":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":366,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":277,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":149,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":44,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":346,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":394,"org.easymock.tests.UsageVarargTest.varargCharAccepted":50,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":252,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":251,"org.easymock.tests2.UsageTest.openCallCountByLastCall":318,"org.easymock.tests.DefaultClassInstantiatorTest.object":253,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":305,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":43,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":367,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":14,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":489,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":440,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":224,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":199,"org.easymock.tests.ReplayStateInvalidCallsTest.times":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":108,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":173,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":496,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":375,"org.easymock.tests2.UsageTest.resumeIfFailure":323,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":160,"org.easymock.tests2.StubTest.stubWithReturnValue":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":387,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":425,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":100,"org.easymock.tests2.SerializationTest.testAllMockedMethod":352,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":244,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":481,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":509,"org.easymock.samples.SupportTest.voteForRemovals":31,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":445,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":205,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":250,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":341,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":125,"org.easymock.tests.UsageExpectAndThrowTest.object":203,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":422,"org.easymock.tests2.DelegateToTest.testWrongClass":473,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":493,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":217,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":218,"org.easymock.tests.UsageStrictMockTest.range":116,"org.easymock.samples.ConstructorCalledMockTest.testTax":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":452,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":204,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":386,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":143,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":146,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":506,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":485,"org.easymock.tests2.CaptureTest.testCaptureNone":460,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":122,"org.easymock.tests.UsageUnorderedTest.message":219,"org.easymock.tests.UsageVerifyTest.twoReturns":62,"org.easymock.tests.UsageVarargTest.varargByteAccepted":55,"org.easymock.tests2.ThreadingTest.testThreadSafe":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":370,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":181,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":41,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":265,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":248,"org.easymock.tests2.UsageConstraintsTest.any":413,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":140,"org.easymock.tests2.StubTest.stub":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":159,"org.easymock.tests.UsageExpectAndThrowTest.longType":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":249,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":257,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":139,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":446,"org.easymock.tests2.SerializationTest.testClass":350,"org.easymock.tests.LimitationsTest.mockNativeMethod":215,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":23,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":501,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":331,"org.easymock.tests2.NameTest.nameForMocksControl":339,"org.easymock.tests2.MockedExceptionTest.testMockedException":477,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":358,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":197,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":290,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":428,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":388,"org.easymock.tests.MockingTest.testNicePartialClassMocking":85,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":433,"org.easymock.tests2.CaptureTest.testCaptureLast":459,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":73,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":500,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":401,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":2,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":423,"org.easymock.tests.MockingTest.testTwoMocks":83,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":497,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":201,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":321,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":426,"org.easymock.samples.ExampleTest.removeNonExistingDocument":39,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":137,"org.easymock.tests.UsageStrictMockTest.differentMethods":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":25,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":16,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":255,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":404,"org.easymock.tests2.MockBuilderTest.testCreateMockString":393,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":220,"org.easymock.tests.UsageExpectAndThrowTest.floatType":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":360,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":343,"org.easymock.tests.UsageVerifyTest.twoThrows":61,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":334,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":369,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":239,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":441,"org.easymock.tests.LimitationsTest.privateConstructor":214,"org.easymock.tests2.UsageConstraintsTest.testNotNull":11,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":476,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":274,"org.easymock.tests2.UsageTest.defaultResetToNice":320,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":22,"org.easymock.tests.UsageVarargTest.differentLength":52,"org.easymock.tests2.CallbackTest.callback":311,"org.easymock.tests2.UsageConstraintsTest.equals":409,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":437,"org.easymock.tests.UsageTest.openCallCountByLastCall":67,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":407,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":130,"org.easymock.tests.UsageCallCountTest.tooFewCalls":179,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":398,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":148,"org.easymock.tests.UsageThrowableTest.throwCheckedException":271,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":507,"org.easymock.tests.MockingTest.testStrictClassMocking":81,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":400,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":467,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":397,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":399,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":345,"org.easymock.tests.ObjectMethodsTest.testHashCode":263,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":499,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":406,"org.easymock.tests2.NameTest.nameForNiceMock":338,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":494,"org.easymock.tests2.DependencyTest.testInterfaceMocking":309,"org.easymock.samples.ExampleTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":371,"org.easymock.tests2.DelegateToTest.testStubDelegate":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.AnswerTest.stubAnswer":344,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":114,"org.easymock.tests.UsageVarargTest.varargLongAccepted":54,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":109,"org.easymock.tests.UsageExpectAndReturnTest.floatType":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":332,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":448,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":421,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":153,"org.easymock.tests.UsageThrowableTest.noUpperLimit":268,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":408,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":450,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":457,"org.easymock.tests2.SerializationTest.test":351,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":254,"org.easymock.tests2.UsageConstraintsTest.testSame":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":92,"org.easymock.samples.SupportTest.addDocument":30,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":484,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":361,"org.easymock.tests.GenericTest.testPackageScope":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":232,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":19,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":88,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":482,"org.easymock.tests2.NameTest.nameForMock":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":392,"org.easymock.tests2.UsageStrictMockTest.differentMethods":330,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":438,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":207,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":288,"org.easymock.tests2.MockedExceptionTest.testRealException":479,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":80,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":241,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":327,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":129,"org.easymock.tests2.NameTest.nameForStrictMock":337,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":383,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":289,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":432,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":451,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":256,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":380,"org.easymock.tests2.UsageStrictMockTest.range":329,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":488,"org.easymock.tests2.UsageConstraintsTest.lessThan":427,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":236,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":295,"org.easymock.tests2.CaptureTest.testCaptureRightOne":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":365,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":429,"org.easymock.tests.UsageTest.wrongArguments":66,"org.easymock.tests2.MockBuilderTest.testWithConstructor":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":362,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":229,"org.easymock.tests.UsageVarargTest.varargShortAccepted":53,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":258,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":182,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":502,"org.easymock.tests2.UsageConstraintsTest.cmpTo":414,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":342,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":231,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":319,"org.easymock.tests2.CaptureTest.testCaptureFromStub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":134,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":381,"org.easymock.tests.UsageTest.unexpectedCallWithArray":65,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":498,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":113,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":180,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":105,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":115,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.samples.ExampleTest.addAndChangeDocument":40,"org.easymock.tests.UsageStrictMockTest.testVerify":119,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":169,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":458,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":165,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":97,"org.easymock.tests.LimitationsTest.abstractClass":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":166,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":300}}]
