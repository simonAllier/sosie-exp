[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[2,3,4,5],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[23,24],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[28,0,29,30,31,32,33,34,35,36,37],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[28,0,29,30,31,32,33,34,35,36,37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,28,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,0,187,29,188,30,31,189,190,191,192,193,194,195,196,197,198,32,199,200,201,33,202,203,204,205,206,207,208,209,34,210,211,212,213,35,36,214,215,37,216,217,3,4,5,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,6,237,238,239,240,241,242,243,244,245,246,8,11,13,17,18,19,20,247,21,22,27,248,249,250,251,252,253,254,255,256,257,258,259,260,261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[203,262],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[263,82,264,265,266,115,116,267,163,164,231,268,269,270,250,251,252,253,255,256],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[272,273,274],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[186,0,29,30,31,276,32,33,209,210,215],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[47,48,49,50,51,52,277,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,278,279,280,263,281,282,283,284,285,286,287,288,289,290,291,292,74,75,76,77,78,79,293,80,81,294,82,295,264,296,297,265,266,298,83,299,300,84,85,301,302,303,304,305,306,307,308,86,87,309,88,310,311,312,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,313,122,123,124,125,28,314,126,315,316,317,318,319,320,127,128,129,130,131,132,321,25,133,322,134,323,324,325,326,327,328,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,23,329,24,330,157,331,158,159,160,161,332,162,267,163,333,334,164,165,166,335,336,337,338,339,340,341,342,180,181,182,183,184,185,186,0,187,29,188,30,31,189,190,191,192,193,194,195,196,197,198,32,199,200,343,201,33,202,203,344,204,205,206,345,346,207,209,34,210,211,347,212,213,35,36,214,215,348,349,37,216,3,4,5,218,219,350,220,221,222,223,224,225,351,352,353,226,227,354,355,356,357,230,231,268,232,233,358,359,234,269,270,235,360,236,6,237,238,239,240,241,242,361,243,244,245,246,362,8,10,11,12,13,14,15,18,19,21,22,27,248,249,250,251,252,253,363,254,255,364,365,256,257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[48,24,366,218,350,367,220],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[29,32,33],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[234],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[38,42,42,43,43,46,47,48,49,50,52,53,368,369,370,7,371,59,372,61,62,63,64,65,66,67,70,71,73,280,263,74,75,76,77,78,79,293,80,81,272,294,82,296,297,265,266,298,83,299,373,374,375,300,84,85,301,302,303,304,305,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,28,127,128,129,130,131,132,321,25,133,376,322,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,377,155,156,23,24,330,157,378,379,380,332,162,163,333,334,164,165,381,273,274,382,26,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,0,187,29,188,30,31,189,190,191,192,193,194,195,196,197,198,32,199,200,343,201,33,202,203,204,205,206,345,346,207,208,209,34,210,211,347,212,213,35,36,214,215,348,349,37,216,217,3,4,383,218,219,350,367,220,351,226,228,229,355,357,230,231,232,233,358,359,234,269,270,235,360,236,6,384,385,237,238,239,240,241,242,361,243,244,245,246,8,12,13,14,17,18,19,20,247,21,22,27,248,249,363,254,255,364,365,256,257,258,259,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[263,387,388,295,264,265,266,115,116,331,267,334,268,269,270,365],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[389,390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[391,392,393],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[53,263,81,82,89,95,101,105,107,135,141,147,151,153,394,382,184,194,197,203,205,206,345,34,35,36,37,220,231,240,241,249],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[206,345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[395],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":386,"org.easymock.tests2.UsageTest.argumentsOrdered":270,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":294,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":177,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":233,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":41,"org.easymock.tests2.DelegateToTest.testReturnException":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":63,"org.easymock.tests.MockingTest.testPartialClassMocking":86,"org.easymock.tests.MockClassControlTest.testToString":315,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":272,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":135,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":259,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":217,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":131,"org.easymock.tests2.UsageTest.wrongArguments":268,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":160,"org.easymock.samples.ExampleTest.answerVsDelegate":48,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":326,"org.easymock.tests2.UsageConstraintsTest.testNull":29,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":311,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":244,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":176,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":320,"org.easymock.tests2.CaptureTest.testPrimitive":211,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":154,"org.easymock.tests.UsageTest.moreThanOneArgument":82,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":77,"org.easymock.tests.UsageTest.argumentsOrdered":266,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":368,"org.easymock.tests.UsageVarargTest.varargIntAccepted":119,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":109,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":225,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":339,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":113,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":393,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":208,"org.easymock.tests.ReplayStateInvalidUsageTest.times":289,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":224,"org.easymock.tests2.CaptureTest.testAnd":209,"org.easymock.tests2.UsageTest.strictResetToDefault":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":171,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":129,"org.easymock.tests2.DelegateToTest.testDelegate":220,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":371,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":376,"org.easymock.tests2.CaptureTest.testCapture1_2446744":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":148,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":222,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":283,"org.easymock.tests.UsageThrowableTest.throwError":300,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":79,"org.easymock.samples.PartialClassMockTest.testGetArea":38,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":284,"org.easymock.tests.MockingTest.testInterfaceMocking":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":136,"org.easymock.tests2.UsageTest.niceToStrict":232,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":226,"org.easymock.tests2.MockBuilderTest.testCreateMock":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":144,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":172,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":375,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":158,"org.easymock.tests.UsageOverloadedMethodTest.overloading":80,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":194,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":100,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":293,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":193,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":214,"org.easymock.tests2.EasyMockSupportClassTest.testAll":258,"org.easymock.tests.MockClassControlTest.testEquals":319,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":152,"org.easymock.tests2.CaptureTest.testCaptureAll":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":223,"org.easymock.tests2.UsageConstraintsTest.testMatches":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":78,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":281,"org.easymock.samples.ExampleTest.voteForRemovals":52,"org.easymock.tests.UsageVarargTest.allKinds":28,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":114,"org.easymock.samples.BasicClassMockTest.testPrintContent":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":57,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":304,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":67,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":367,"org.easymock.tests2.UsageConstraintsTest.greaterThan":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":128,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":14,"org.easymock.samples.ExampleTest.voteForRemoval":49,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":15,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":206,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":327,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":362,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":74,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":169,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":62,"org.easymock.tests2.CaptureTest.testCaptureFirst":37,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":170,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":360,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":96,"org.easymock.tests2.UsageTest.moreThanOneArgument":231,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":346,"org.easymock.tests2.CaptureTest.testCapture2_2446744":349,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":355,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":125,"org.easymock.tests.GenericTest.testBridgedEquals":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":279,"org.easymock.tests.UsageExpectAndReturnTest.longType":92,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":153,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":343,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":75,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":379,"org.easymock.tests.UsageCallCountTest.tooManyCalls":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":391,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":140,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":303,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":18,"org.easymock.tests.MockingTest.testNiceClassMocking":312,"org.easymock.tests.MockingTest.testClassMocking":308,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":69,"org.easymock.tests2.UsageConstraintsTest.testContains":192,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":182,"org.easymock.tests2.UsageConstraintsTest.testFind":187,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":81,"org.easymock.tests.MockTypeTest.fromEasyMockClass":324,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":241,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":332,"org.easymock.tests.UsageExpectAndReturnTest.object":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":175,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":121,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":337,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":1,"org.easymock.tests.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":83,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":369,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":105,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":24,"org.easymock.tests.MockClassControlTest.testHashCode":318,"org.easymock.tests2.EasyMockSupportTest.testVerify":179,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":392,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":370,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":23,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":374,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":221,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":344,"org.easymock.tests.UsageVarargTest.varargCharAccepted":120,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":254,"org.easymock.tests2.UsageTest.openCallCountByLastCall":358,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":178,"org.easymock.tests.DefaultClassInstantiatorTest.object":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":373,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":335,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":388,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":142,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":301,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":12,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":261,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":316,"org.easymock.tests2.UsageTest.resumeIfFailure":235,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":65,"org.easymock.tests2.StubTest.stubWithReturnValue":248,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":201,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":382,"org.easymock.samples.SupportTest.voteForRemovals":46,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":147,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":26,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":384,"org.easymock.tests.UsageExpectAndThrowTest.object":145,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":199,"org.easymock.tests2.DelegateToTest.testWrongClass":350,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":156,"org.easymock.samples.ConstructorCalledMockTest.testTax":42,"org.easymock.tests.UsageStrictMockTest.range":334,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":228,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":265,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":159,"org.easymock.tests2.CaptureTest.testCaptureNone":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":274,"org.easymock.tests.UsageUnorderedTest.message":263,"org.easymock.tests.UsageVerifyTest.twoReturns":116,"org.easymock.tests.UsageVarargTest.varargByteAccepted":124,"org.easymock.tests2.ThreadingTest.testThreadSafe":205,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":73,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":39,"org.easymock.tests2.CaptureTest.testCapture_2617107":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":25,"org.easymock.tests2.UsageConstraintsTest.any":190,"org.easymock.tests2.StubTest.stub":27,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":380,"org.easymock.tests.UsageExpectAndThrowTest.longType":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":64,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":287,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":364,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":204,"org.easymock.tests.LimitationsTest.mockNativeMethod":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":108,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":372,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":257,"org.easymock.tests2.NameTest.nameForMocksControl":253,"org.easymock.tests2.MockedExceptionTest.testMockedException":181,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":297,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":139,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":88,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":242,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":229,"org.easymock.tests.MockingTest.testNicePartialClassMocking":87,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":246,"org.easymock.tests2.CompareToTest.testNotComparable":271,"org.easymock.tests2.CaptureTest.testCaptureLast":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":322,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":31,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":200,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":143,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":269,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":202,"org.easymock.samples.ExampleTest.removeNonExistingDocument":277,"org.easymock.tests.UsageStrictMockTest.differentMethods":164,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":285,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":345,"org.easymock.tests2.MockBuilderTest.testCreateMockString":356,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":314,"org.easymock.tests.UsageExpectAndThrowTest.floatType":137,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":196,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":237,"org.easymock.tests.UsageVerifyTest.twoThrows":115,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":260,"org.easymock.samples.ExampleTest.voteAgainstRemoval":50,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":13,"org.easymock.tests2.UsageConstraintsTest.testNotNull":33,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":305,"org.easymock.tests2.UsageTest.defaultResetToNice":234,"org.easymock.samples.ExampleTest.voteAgainstRemovals":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":104,"org.easymock.tests.UsageVarargTest.differentLength":313,"org.easymock.tests2.CallbackTest.callback":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":9,"org.easymock.tests.UsageTest.openCallCountByLastCall":296,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":321,"org.easymock.tests.UsageCallCountTest.tooFewCalls":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":20,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":161,"org.easymock.tests.UsageThrowableTest.throwCheckedException":302,"org.easymock.tests.MockingTest.testStrictClassMocking":307,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":21,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":299,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":19,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":290,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":247,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":239,"org.easymock.tests.ObjectMethodsTest.testHashCode":336,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":207,"org.easymock.tests2.NameTest.nameForNiceMock":252,"org.easymock.tests2.DependencyTest.testInterfaceMocking":216,"org.easymock.samples.ExampleTest.addDocument":51,"org.easymock.tests2.DelegateToTest.testStubDelegate":219,"org.easymock.tests2.AnswerTest.stubAnswer":238,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":163,"org.easymock.tests.UsageVarargTest.varargLongAccepted":123,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":107,"org.easymock.tests.UsageExpectAndReturnTest.floatType":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":236,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":43,"org.easymock.tests.UsageThrowableTest.noUpperLimit":84,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":198,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":185,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":212,"org.easymock.tests2.UsageConstraintsTest.testSame":188,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":90,"org.easymock.samples.SupportTest.addDocument":45,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":286,"org.easymock.tests.GenericTest.testPackageScope":59,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":7,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":310,"org.easymock.tests2.NameTest.nameForMock":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":101,"org.easymock.tests2.UsageStrictMockTest.differentMethods":256,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":149,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":130,"org.easymock.tests2.MockedExceptionTest.testRealException":183,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":328,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":342,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":387,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":255,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":132,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":292,"org.easymock.tests2.NameTest.nameForStrictMock":251,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":353,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":245,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":341,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":351,"org.easymock.tests2.UsageStrictMockTest.range":365,"org.easymock.tests2.UsageConstraintsTest.lessThan":203,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":395,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":168,"org.easymock.tests2.CaptureTest.testCaptureRightOne":215,"org.easymock.tests2.UsageConstraintsTest.testOr":30,"org.easymock.tests.UsageRangeTest.combination":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":361,"org.easymock.tests.UsageTest.wrongArguments":264,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":102,"org.easymock.tests.UsageVarargTest.varargShortAccepted":122,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":278,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":385,"org.easymock.tests2.CompareToTest.testLessThan":262,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":359,"org.easymock.tests2.CaptureTest.testCaptureFromStub":348,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":282,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":352,"org.easymock.tests.UsageTest.unexpectedCallWithArray":295,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":103,"org.easymock.tests2.UsageConstraintsTest.constraints":186,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":333,"org.easymock.samples.ExampleTest.addAndChangeDocument":53,"org.easymock.tests.UsageStrictMockTest.testVerify":166,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":44,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":55,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":95,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":173,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":118}}]
