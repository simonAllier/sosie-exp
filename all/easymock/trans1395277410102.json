[{"transplant":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[121,128,133,145,295],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[0,1,2,3,4,5,6,7,8,297,9,10,11,12,13,14,15,16,17,18,19,20,21,22,298,23,299,300,24,25,26,27,301,302,303,304,305,306,307,28,308,309,310,311,312,313,29,30,314,315,31,32,33,34,316,317,35,36,37,38,39,40,41,42,318,43,44,45,46,47,48,49,319,320,321,322,323,50,324,325,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,326,327,328,329,330,331,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,332,88,89,90,91,92,93,94,95,333,96,97,98,334,99,100,101,102,103,104,105,106,107,108,109,110,111,335,336,112,113,337,338,339,340,341,114,342,343,344,345,346,347,115,116,117,118,119,120,121,122,348,123,124,125,126,127,128,349,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,350,146,147,148,351,149,352,150,151,152,353,354,355,356,357,358,359,360,153,361,362,154,363,364,365,366,367,368,369,370,371,155,372,373,374,375,376,156,377,378,157,158,159,379,160,161,162,163,164,165,166,167,168,169,170,171,172,380,173,174,175,176,177,178,179,180,181,182,183,184,381,185,186,382,383,187,384,188,189,385,386,387,388,190,191,192,193,194,195,196,197,198,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,199,200,201,202,203,204,205,206,411,207,208,209,210,211,412,413,414,415,416,417,212,213,418,214,419,420,421,215,216,217,218,219,220,221,222,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,223,224,225,226,227,438,439,440,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,441,442,443,444,445,446,447,448,248,449,249,250,450,451,452,453,454,455,456,457,458,459,460,461,462,296,463,464,465,466,467,468,469,470,471,472,251,252,253,473,474,475,476,477,478,479,480,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,290,504,505,506,507,291,292,293,294],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[2,3,5,6,8,15,16,17,18,19,20,21,23,25,26,27,30,31,33,34,36,42,45,47,48,90,92,93,94,95,96,97,98,112,113,147,153,154,155,156,168,169,170,171,172,173,188,385,202,204,205,413,414,212,213,214,223,224,225,226,228,229,230,231,232,233,236,237,239,240,241,243,244,245,246,247,248,449,249,250,275,288,289,489,290,506],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[2,3,4,5,6,8,9,10,10,11,11,15,16,17,18,19,20,21,23,25,26,27,28,30,31,33,34,36,38,39,40,41,42,45,47,48,50,324,325,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,70,71,72,73,74,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,105,106,107,110,111,112,113,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,350,146,147,148,351,149,150,152,153,154,155,156,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,383,188,385,190,197,198,202,204,205,412,413,414,212,213,214,215,216,217,218,219,220,221,222,423,223,224,225,226,227,438,439,440,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,449,249,250,465,471,251,252,253,473,474,475,476,477,478,479,480,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,282,283,286,287,288,289,489,290,506],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[508,509,510,511,512],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[17,24,27,94,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[413,489,506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[50,296],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[73,75,83,121,127],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[2,31,33,34,513],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[47,102,108,109,201,204,252,253,280,281,284,285,287,514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[38,39,40,41,71,175,178,179,180,181,182,183,198,457,473,474,475,500],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:262","failures":[38,39,40,41,71,99,106,175,176,178,179,180,181,182,183,186,198,215,217,218,219,220,221,222,438,439,440,252,473,474,475,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,277,278,283],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[510,511,512],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[188,385,386],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:47","sourceCode":"throw new java.lang.IllegalStateException((((((((((\"\" + (org.easymock.internal.Invocation.getArguments().int)) + \" matchers expected, \") + (java.util.List<org.easymock.IArgumentMatcher>.size())) + \" recorded.\\n\") + \"This exception usually occurs when matchers are mixed with raw values when recording a method:\\n\") + \"\\tfoo(5, eq(6));\\t// wrong\\n\") + \"You need to use no matcher at all or a matcher for every single param:\\n\") + \"\\tfoo(eq(5), eq(6));\\t// right\\n\") + \"\\tfoo(5, 6);\\t// also right\"))","type":"CtThrowImpl"},"failures":[349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[464,471,492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[172,224,231,237,244,245],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[24,213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[515,121],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[353,356],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[516,517,518,519,520,318,521,522,523,94,98,334],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[70,176,464,471,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[384],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[17,19,21,24,27,45,47,48,201,202,204,205,411,280],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,297,9,10,11,12,13,14,15,16,17,18,19,20,21,22,298,23,299,300,24,25,26,27,301,302,303,304,305,306,307,28,308,309,310,311,312,313,29,516,30,314,517,315,31,32,33,518,34,316,317,35,36,520,37,38,39,40,41,42,318,524,43,44,45,46,47,48,49,319,320,321,322,323,50,324,325,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,326,327,328,525,329,330,331,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,333,96,97,98,334,99,100,101,102,103,104,105,106,107,108,109,110,111,335,336,112,113,337,338,339,340,341,114,342,343,344,345,346,347,115,116,117,118,119,120,121,122,348,123,124,125,126,127,128,349,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,350,146,147,148,351,149,352,150,151,152,358,359,360,153,361,362,154,363,364,365,366,367,368,369,370,371,155,372,373,374,375,376,156,377,378,526,157,158,159,379,160,161,162,163,164,165,166,167,168,169,170,171,172,380,173,174,175,176,177,178,179,180,181,182,183,184,381,185,186,382,383,187,384,188,189,385,386,387,388,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,411,207,208,209,210,211,412,413,414,415,416,417,212,213,418,214,419,420,421,215,216,217,218,219,220,221,222,422,423,424,527,425,426,427,428,429,430,528,431,432,433,434,435,436,437,223,224,225,226,227,438,439,440,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,441,442,443,444,445,446,447,448,248,449,249,250,450,451,452,453,454,455,456,457,458,459,460,461,462,296,463,464,465,466,467,468,469,470,471,472,251,252,253,473,474,475,476,477,478,479,480,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,290,504,505,506,507,291,292,293,294],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[518,318,529,530,531,511,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[10,10,11,11,16,24,30,31,35,37,42,43,94,98],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":122,"org.easymock.tests2.UsageTest.argumentsOrdered":109,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":278,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":64,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":460,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":104,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":12,"org.easymock.tests2.DelegateToTest.testReturnException":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":179,"org.easymock.tests.MockingTest.testPartialClassMocking":212,"org.easymock.tests.MockClassControlTest.testToString":443,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":319,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":254,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":113,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":410,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":529,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageTest.wrongArguments":102,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":486,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":420,"org.easymock.tests2.UsageConstraintsTest.testNull":124,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":448,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":63,"org.easymock.tests2.CaptureTest.testPrimitive":76,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":273,"org.easymock.tests.UsageTest.moreThanOneArgument":279,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":225,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":476,"org.easymock.tests.UsageTest.argumentsOrdered":285,"org.easymock.tests.UsageVarargTest.varargIntAccepted":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":512,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":29,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":312,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":328,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":172,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":394,"org.easymock.tests.ReplayStateInvalidUsageTest.times":498,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":114,"org.easymock.tests2.DependencyTest.testClassMocking":335,"org.easymock.tests2.AnswerTest.answer":50,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":466,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":118,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":483,"org.easymock.tests2.CaptureTest.testAnd":73,"org.easymock.tests2.UsageTest.strictResetToDefault":100,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":517,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":58,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":249,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":480,"org.easymock.tests2.DelegateToTest.testDelegate":149,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":393,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":269,"org.easymock.tests.LimitationsTest.mockFinalMethod":504,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":211,"org.easymock.tests2.DependencyTest.testClassMockingSupport":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":422,"org.easymock.tests2.CaptureTest.testCapture1_2446744":77,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":116,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":492,"org.easymock.tests.UsageThrowableTest.throwError":215,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":485,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":526,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":227,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":397,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":493,"org.easymock.tests.MockingTest.testInterfaceMocking":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":169,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":413,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":437,"org.easymock.tests2.UsageTest.niceToStrict":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":367,"org.easymock.tests2.ThreadingTest.testChangeDefault":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":31,"org.easymock.tests2.MockBuilderTest.testCreateMock":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":263,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":59,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":482,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":440,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":376,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":186,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":239,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":275,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":132,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":82,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":379,"org.easymock.tests.MockClassControlTest.testEquals":447,"org.easymock.tests2.EasyMockSupportClassTest.testAll":153,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":189,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":117,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":209,"org.easymock.tests.MockNameTest.defaultName":380,"org.easymock.tests2.UsageConstraintsTest.testMatches":134,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":490,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":226,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":167,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":251,"org.easymock.samples.BasicClassMockTest.testPrintContent":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":210,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":221,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":309,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":351,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":528,"org.easymock.tests2.UsageConstraintsTest.greaterThan":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":449,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":27,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":398,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":431,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":88,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":301,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":487,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":525,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":22,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":390,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":99,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":274,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":56,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":178,"org.easymock.tests2.CaptureTest.testCaptureFirst":86,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":57,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":111,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":235,"org.easymock.tests2.UsageTest.moreThanOneArgument":101,"org.easymock.tests2.CaptureTest.testCapture2_2446744":85,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":467,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":36,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":166,"org.easymock.tests.GenericTest.testBridgedEquals":386,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":523,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":195,"org.easymock.tests.UsageExpectAndReturnTest.longType":231,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":207,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":513,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":272,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":489,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":141,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":474,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":223,"org.easymock.tests.UsageCallCountTest.tooManyCalls":196,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":220,"org.easymock.tests.MockingTest.testNiceClassMocking":421,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":93,"org.easymock.tests.MockingTest.testClassMocking":416,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":388,"org.easymock.tests2.UsageConstraintsTest.testContains":131,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":40,"org.easymock.tests2.UsageConstraintsTest.testFind":123,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":277,"org.easymock.tests.MockTypeTest.fromEasyMockClass":484,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":152,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":199,"org.easymock.tests.UsageExpectAndReturnTest.object":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":530,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":161,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":435,"org.easymock.tests.UsageTest.exactCallCountByLastCall":286,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":505,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":477,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":318,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":244,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":185,"org.easymock.tests.MockClassControlTest.testHashCode":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":304,"org.easymock.tests2.EasyMockSupportTest.testVerify":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":369,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":478,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":439,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":115,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":352,"org.easymock.tests.UsageVarargTest.varargCharAccepted":160,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":527,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastCall":105,"org.easymock.tests.DefaultClassInstantiatorTest.object":425,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":65,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":438,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":433,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":514,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":370,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":303,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":445,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":396,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":260,"org.easymock.tests.ReplayStateInvalidCallsTest.times":402,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":473,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":403,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":156,"org.easymock.tests2.UsageTest.resumeIfFailure":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":181,"org.easymock.tests2.StubTest.stubWithReturnValue":71,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":518,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":142,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":237,"org.easymock.tests2.SerializationTest.testAllMockedMethod":69,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":465,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":509,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":266,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":471,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":324,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":507,"org.easymock.tests.UsageExpectAndThrowTest.object":264,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":139,"org.easymock.tests2.DelegateToTest.testWrongClass":148,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":400,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":289,"org.easymock.samples.ConstructorCalledMockTest.testTax":10,"org.easymock.tests.UsageStrictMockTest.range":204,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":330,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":61,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":265,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":500,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":392,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":414,"org.easymock.tests2.CaptureTest.testCaptureNone":81,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":354,"org.easymock.tests.UsageUnorderedTest.message":287,"org.easymock.tests.UsageVerifyTest.twoReturns":253,"org.easymock.tests.UsageVarargTest.varargByteAccepted":165,"org.easymock.tests2.ThreadingTest.testThreadSafe":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":372,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":193,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":436,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":0,"org.easymock.tests2.CaptureTest.testCapture_2617107":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":176,"org.easymock.tests2.UsageConstraintsTest.any":129,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":497,"org.easymock.tests2.StubTest.stub":70,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":180,"org.easymock.tests.UsageExpectAndThrowTest.longType":257,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":429,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":496,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":28,"org.easymock.tests2.SerializationTest.testClass":67,"org.easymock.tests.LimitationsTest.mockNativeMethod":290,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":385,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":247,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":339,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":408,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":49,"org.easymock.tests2.NameTest.nameForMocksControl":323,"org.easymock.tests2.MockedExceptionTest.testMockedException":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":362,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":283,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":151,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":214,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":258,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":16,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":34,"org.easymock.tests.MockingTest.testNicePartialClassMocking":213,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":510,"org.easymock.tests2.CaptureTest.testCaptureLast":80,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":337,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":423,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":407,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":98,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":140,"org.easymock.tests.MockingTest.testTwoMocks":417,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":404,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":228,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":262,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":108,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":144,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":357,"org.easymock.samples.ExampleTest.removeNonExistingDocument":297,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":494,"org.easymock.tests.UsageStrictMockTest.differentMethods":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":305,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":427,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":356,"org.easymock.tests2.ConstraintsToStringTest.andToString":515,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":89,"org.easymock.tests2.MockBuilderTest.testCreateMockString":37,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":441,"org.easymock.tests.UsageExpectAndThrowTest.floatType":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":363,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":51,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":524,"org.easymock.tests.UsageVerifyTest.twoThrows":252,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":155,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":412,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":26,"org.easymock.tests.LimitationsTest.privateConstructor":503,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":522,"org.easymock.tests2.UsageConstraintsTest.testNotNull":143,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":222,"org.easymock.tests2.UsageTest.defaultResetToNice":107,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":243,"org.easymock.tests.UsageVarargTest.differentLength":162,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":338,"org.easymock.tests2.CallbackTest.callback":72,"org.easymock.tests2.UsageConstraintsTest.equals":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":299,"org.easymock.tests.UsageTest.openCallCountByLastCall":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":175,"org.easymock.tests.UsageCallCountTest.tooFewCalls":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":355,"org.easymock.tests.UsageThrowableTest.throwCheckedException":219,"org.easymock.tests.MockingTest.testStrictClassMocking":415,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":97,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":198,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":342,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":499,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":96,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":53,"org.easymock.tests.ObjectMethodsTest.testHashCode":434,"org.easymock.tests2.CompareToTest.testGreateOrEqual":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":511,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":406,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":91,"org.easymock.tests2.NameTest.nameForNiceMock":322,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":401,"org.easymock.tests2.DependencyTest.testInterfaceMocking":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":531,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":373,"org.easymock.tests2.DelegateToTest.testStubDelegate":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.stubAnswer":52,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":202,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":316,"org.easymock.tests.UsageVarargTest.varargLongAccepted":164,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.floatType":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":246,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":11,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":137,"org.easymock.tests.UsageThrowableTest.noUpperLimit":216,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":311,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":120,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":326,"org.easymock.tests2.SerializationTest.test":68,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":78,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":426,"org.easymock.tests2.UsageConstraintsTest.testSame":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":229,"org.easymock.samples.SupportTest.addDocument":14,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":333,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":391,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":364,"org.easymock.tests.GenericTest.testPackageScope":188,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":310,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":419,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":389,"org.easymock.tests2.NameTest.nameForMock":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":240,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":520,"org.easymock.tests2.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":300,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":268,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":250,"org.easymock.tests2.MockedExceptionTest.testRealException":41,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":331,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":508,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":296,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":501,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":174,"org.easymock.tests2.NameTest.nameForStrictMock":321,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":315,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":329,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":428,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":138,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":30,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":395,"org.easymock.tests2.UsageConstraintsTest.lessThan":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":55,"org.easymock.tests2.CaptureTest.testCaptureRightOne":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":368,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":353,"org.easymock.tests2.UsageConstraintsTest.testOr":126,"org.easymock.tests.UsageRangeTest.combination":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":17,"org.easymock.tests.UsageTest.wrongArguments":281,"org.easymock.tests2.MockBuilderTest.testWithConstructor":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":365,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":241,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":430,"org.easymock.tests.UsageVarargTest.varargShortAccepted":163,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":194,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":409,"org.easymock.tests2.UsageConstraintsTest.cmpTo":130,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":325,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.CaptureTest.testCaptureFromStub":84,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":491,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":314,"org.easymock.tests.UsageTest.unexpectedCallWithArray":280,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":405,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":201,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":192,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":519,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":242,"org.easymock.tests2.UsageConstraintsTest.constraints":121,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":203,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageStrictMockTest.testVerify":411,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":13,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":208,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":170,"org.easymock.tests.LimitationsTest.abstractClass":502,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":171,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":60}}]
