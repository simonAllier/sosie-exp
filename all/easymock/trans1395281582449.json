[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,0,1,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,5,108,109,110,111,112,113,114,115,116,117,118,12],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[0,1,104,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[120,169,125,126,170,129,132,133,171,135,137,154,157,158,161],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[173],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[13,174,119,175,176,177,178,179,180,181,182,183,14,15,16,17,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,18,19,20,21,22,211,120,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,121,122,240,241,23,24,25,26,27,28,29,30,242,243,244,245,246,247,248,249,250,251,252,253,31,32,33,34,35,36,37,38,254,255,123,256,257,258,259,260,261,262,263,264,265,124,125,126,39,266,267,268,269,40,270,271,127,128,170,129,130,131,132,133,134,272,273,274,275,276,277,278,279,280,281,282,283,171,284,285,135,136,286,137,138,287,288,41,42,43,44,45,289,46,290,291,47,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,139,319,140,320,321,141,322,323,142,324,325,326,327,328,329,330,331,332,333,48,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,143,354,355,356,357,358,359,360,361,362,363,144,145,364,49,50,51,52,173,365,366,53,54,367,55,56,57,58,368,59,60,61,62,0,1,63,64,65,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,388,91,92,93,389,146,390,391,392,393,394,94,395,95,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,97,98,99,100,421,422,101,102,423,424,147,148,149,150,425,426,427,428,429,151,103,105,106,107,5,108,109,110,111,112,113,115,116,117,430,431,152,432,153,154,433,434,155,156,435,157,158,436,159,437,438,160,439,161,162,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,163,164,469,470,471,472,165,166,473,474,475,476,477,478,479,480,481,482,483,484,167,168,485,486,487,488,118,12],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[18,19,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[18],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[137,138,161,162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[13,174,119,175,176,177,178,179,180,181,182,183,14,15,16,17,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,18,19,20,21,22,211,120,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,121,122,240,241,23,489,24,25,26,27,28,29,490,30,491,242,243,244,245,246,247,248,249,250,251,252,253,31,32,33,34,35,36,37,38,254,255,123,256,257,258,259,260,261,262,263,264,265,124,125,126,39,266,267,268,269,40,270,271,127,128,170,129,130,131,132,133,134,272,273,274,275,276,277,278,279,280,281,282,283,171,284,285,135,136,286,137,138,287,288,41,42,43,44,45,289,46,290,291,47,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,139,319,140,320,321,141,322,323,142,324,325,326,327,328,329,330,331,332,333,48,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,143,354,355,356,357,358,359,360,361,362,363,144,145,364,49,50,51,52,173,365,366,53,54,367,55,56,57,58,368,59,60,61,62,0,1,63,64,65,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,388,91,92,93,389,146,390,391,392,393,394,94,395,95,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,97,98,99,100,421,422,101,102,423,424,147,148,149,150,425,426,427,428,429,151,103,492,105,106,493,107,5,108,109,11,110,494,111,112,113,495,115,116,496,497,498,117,430,431,152,432,153,154,433,434,155,156,435,157,158,436,159,437,438,160,439,161,162,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,163,164,469,470,471,472,165,166,473,474,475,476,477,478,479,480,481,482,483,484,167,168,485,499,486,487,488,118,12,500],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[369,371,379,465,466,163,469,470,472,480,167],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[501,94,395,95],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[470],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[120,232,502,491,503,169,125,126,127,170,129,132,133,134,284,135,286,137,138,320,321,141,359,54,0,63,388,397,401,402,405,105,112,113,115,152,154,433,434,157,158,436,159,437,439,161,162,465,477],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[13,174,119,175,176,177,178,180,181,182,183,14,15,16,17,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,19,20,120,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,23,242,243,244,245,246,247,248,249,250,254,255,123,256,257,258,259,260,261,262,263,264,265,124,125,126,127,128,170,129,130,131,132,133,134,272,273,274,275,276,277,278,280,281,171,284,285,135,136,286,137,138,287,44,45,46,318,139,319,140,320,321,141,322,323,142,324,325,326,327,328,346,347,348,349,350,143,354,355,357,358,359,360,361,362,363,144,145,364,51,53,54,367,55,56,57,58,59,62,0,1,63,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,69,72,82,88,388,91,92,93,389,146,392,393,394,94,395,95,396,397,398,399,400,401,402,403,404,405,406,407,408,414,97,98,99,100,422,101,102,426,427,428,151,103,105,5,108,109,110,112,113,115,152,432,153,154,433,434,155,156,435,157,158,436,159,437,438,160,439,161,162,440,441,442,443,444,447,448,449,450,456,463,464,465,466,468,163,164,469,470,471,165,166,473,474,475,476,477,478,479,480,481,482,483,484,167,168,485,486,487,488,118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[24,25,26,27,29,30],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[506,6,7,8,9,10,504,118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[25,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[507,485],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[508,463,478,484],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[120,236,237,261,262,263,264,265,276,135,136,346,347,348,349,350,144,145,364,59,369,370,371,372,373,374,375,376,377,378,379,380,381,382,386,160,463,464,465,466,468,163,164,469,470,471,472,165,166,473,474,475,476,477,478,479,480,481,482,483,484,167,168,485,499,486,488],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[239,240,241,300],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[251,252,253,299,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[496,497,498],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":466,"org.easymock.tests2.UsageTest.argumentsOrdered":158,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":406,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":302,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":434,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":184,"org.easymock.tests2.DelegateToTest.testReturnException":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":273,"org.easymock.tests.MockingTest.testPartialClassMocking":44,"org.easymock.tests.MockClassControlTest.testToString":33,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":424,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":185,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":72,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":6,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":471,"org.easymock.tests2.UsageTest.wrongArguments":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":261,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":420,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":244,"org.easymock.samples.ExampleTest.answerVsDelegate":119,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":40,"org.easymock.tests2.UsageConstraintsTest.testNull":163,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":291,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":405,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":38,"org.easymock.tests2.CaptureTest.testPrimitive":372,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":265,"org.easymock.tests.UsageTest.moreThanOneArgument":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":204,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":326,"org.easymock.tests.UsageTest.argumentsOrdered":133,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":239,"org.easymock.tests.UsageVarargTest.varargIntAccepted":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":346,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":10,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":461,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":350,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":414,"org.easymock.tests.ReplayStateInvalidUsageTest.times":342,"org.easymock.tests2.DependencyTest.testClassMocking":445,"org.easymock.tests2.AnswerTest.answer":146,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":444,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":267,"org.easymock.tests2.CaptureTest.testAnd":369,"org.easymock.tests2.UsageTest.strictResetToDefault":432,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":400,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests2.DelegateToTest.testDelegate":151,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":200,"org.easymock.tests.LimitationsTest.mockFinalMethod":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":250,"org.easymock.tests2.DependencyTest.testClassMockingSupport":446,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":173,"org.easymock.tests2.CaptureTest.testCapture1_2446744":373,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":442,"org.easymock.tests.UsageThrowableTest.throwError":254,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":336,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":269,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":491,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":462,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":90,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests.MockingTest.testInterfaceMocking":289,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":337,"org.easymock.tests2.CompareToTest.testLessOrEqual":508,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":347,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":206,"org.easymock.tests2.UsageTest.niceToStrict":433,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":186,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":5,"org.easymock.tests2.MockBuilderTest.testCreateMock":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":85,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":417,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":194,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":401,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":242,"org.easymock.tests.UsageOverloadedMethodTest.overloading":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":87,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":475,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":223,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":322,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":474,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":378,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":356,"org.easymock.tests.MockClassControlTest.testEquals":37,"org.easymock.tests2.EasyMockSupportClassTest.testAll":69,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":20,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":202,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":2,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":443,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":248,"org.easymock.tests2.CaptureTest.testCaptureAll":370,"org.easymock.tests.MockNameTest.defaultName":211,"org.easymock.tests2.UsageConstraintsTest.testMatches":476,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":327,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":334,"org.easymock.samples.ExampleTest.voteForRemovals":178,"org.easymock.tests.UsageVarargTest.allKinds":144,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":124,"org.easymock.samples.BasicClassMockTest.testPrintContent":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":249,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":259,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":458,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":504,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":490,"org.easymock.tests2.UsageConstraintsTest.greaterThan":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":70,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":233,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":63,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":30,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":384,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":270,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":58,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":152,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":23,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":398,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":272,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":425,"org.easymock.tests2.CaptureTest.testCaptureFirst":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":399,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":219,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":386,"org.easymock.tests2.UsageTest.moreThanOneArgument":153,"org.easymock.tests2.CaptureTest.testCapture2_2446744":381,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":310,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":363,"org.easymock.tests.GenericTest.testBridgedEquals":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":321,"org.easymock.tests.UsageExpectAndReturnTest.longType":215,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":246,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":203,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":483,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":201,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":324,"org.easymock.tests.UsageCallCountTest.tooManyCalls":141,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":419,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":258,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":98,"org.easymock.tests.MockingTest.testNiceClassMocking":47,"org.easymock.tests.MockingTest.testClassMocking":42,"org.easymock.tests2.UsageConstraintsTest.testContains":473,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":104,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":317,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":93,"org.easymock.tests2.UsageConstraintsTest.testFind":468,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":142,"org.easymock.tests.MockTypeTest.fromEasyMockClass":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":488,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests.UsageExpectAndReturnTest.object":222,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":404,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":7,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":358,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":332,"org.easymock.tests.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":121,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":208,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":228,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":280,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":452,"org.easymock.tests.MockClassControlTest.testHashCode":36,"org.easymock.tests2.EasyMockSupportTest.testVerify":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":79,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":122,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":352,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":503,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":441,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":499,"org.easymock.tests.UsageVarargTest.varargCharAccepted":357,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":489,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":315,"org.easymock.tests2.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":407,"org.easymock.tests.DefaultClassInstantiatorTest.object":24,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":351,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":330,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":192,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":412,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":451,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":35,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":0,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":191,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":251,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":88,"org.easymock.tests2.UsageTest.resumeIfFailure":436,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":39,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":275,"org.easymock.tests2.StubTest.stubWithReturnValue":450,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":484,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":221,"org.easymock.tests2.SerializationTest.testAllMockedMethod":95,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":308,"org.easymock.samples.SupportTest.voteForRemovals":182,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":197,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":314,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":390,"org.easymock.tests.UsageExpectAndThrowTest.object":195,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":210,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":481,"org.easymock.tests2.DelegateToTest.testWrongClass":428,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":145,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":364,"org.easymock.tests.UsageStrictMockTest.range":137,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":430,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":403,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":196,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":66,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":243,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":207,"org.easymock.tests2.CaptureTest.testCaptureNone":377,"org.easymock.tests.UsageUnorderedTest.message":120,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":502,"org.easymock.tests.UsageVerifyTest.twoReturns":126,"org.easymock.tests.UsageVarargTest.varargByteAccepted":362,"org.easymock.tests2.ThreadingTest.testThreadSafe":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":83,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":140,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":16,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":333,"org.easymock.tests2.CaptureTest.testCapture_2617107":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":366,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":312,"org.easymock.tests2.UsageConstraintsTest.any":165,"org.easymock.tests2.StubTest.stub":449,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":341,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.UsageExpectAndThrowTest.longType":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":313,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":28,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":340,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":439,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":456,"org.easymock.tests2.SerializationTest.testClass":94,"org.easymock.tests.LimitationsTest.mockNativeMethod":51,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":3,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":440,"org.easymock.tests2.NameTest.nameForMocksControl":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":413,"org.easymock.tests2.MockedExceptionTest.testMockedException":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":71,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":487,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":189,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":46,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":110,"org.easymock.tests.MockingTest.testNicePartialClassMocking":45,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":506,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests2.CaptureTest.testCaptureLast":376,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":365,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":470,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":482,"org.easymock.tests.MockingTest.testTwoMocks":43,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":212,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":193,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":157,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":168,"org.easymock.samples.ExampleTest.removeNonExistingDocument":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":416,"org.easymock.tests.UsageStrictMockTest.differentMethods":138,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":338,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":453,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":26,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":385,"org.easymock.tests2.MockBuilderTest.testCreateMockString":115,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":31,"org.easymock.tests.UsageExpectAndThrowTest.floatType":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":73,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":68,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":392,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":500,"org.easymock.tests.UsageVerifyTest.twoThrows":125,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":82,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":303,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":1,"org.easymock.tests.LimitationsTest.privateConstructor":50,"org.easymock.tests2.UsageConstraintsTest.testNotNull":167,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":260,"org.easymock.tests2.UsageTest.defaultResetToNice":435,"org.easymock.samples.ExampleTest.voteAgainstRemovals":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":304,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests.UsageVarargTest.differentLength":359,"org.easymock.tests2.CallbackTest.callback":388,"org.easymock.tests2.UsageConstraintsTest.equals":467,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":60,"org.easymock.tests.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":263,"org.easymock.tests.UsageCallCountTest.tooFewCalls":139,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":245,"org.easymock.tests.UsageThrowableTest.throwCheckedException":257,"org.easymock.tests.MockingTest.testStrictClassMocking":41,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":415,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":99,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":422,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":394,"org.easymock.tests.ObjectMethodsTest.testHashCode":331,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":9,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":387,"org.easymock.tests2.NameTest.nameForNiceMock":149,"org.easymock.tests2.DependencyTest.testInterfaceMocking":447,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":8,"org.easymock.samples.ExampleTest.addDocument":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":84,"org.easymock.tests2.DelegateToTest.testStubDelegate":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.AnswerTest.stubAnswer":393,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":136,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":494,"org.easymock.tests.UsageVarargTest.varargLongAccepted":361,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":301,"org.easymock.tests.UsageExpectAndReturnTest.floatType":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":118,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":460,"org.easymock.tests.UsageThrowableTest.noUpperLimit":255,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":464,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":116,"org.easymock.tests2.SerializationTest.test":395,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":374,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":25,"org.easymock.tests2.UsageConstraintsTest.testSame":164,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":213,"org.easymock.samples.SupportTest.addDocument":181,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":421,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":74,"org.easymock.tests.GenericTest.testPackageScope":19,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":459,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":290,"org.easymock.tests2.NameTest.nameForMock":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":224,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":495,"org.easymock.tests2.UsageStrictMockTest.differentMethods":162,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":216,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":199,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":329,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests2.MockedExceptionTest.testRealException":389,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":271,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":262,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":345,"org.easymock.tests2.NameTest.nameForStrictMock":148,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":107,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":486,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":117,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":480,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":27,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":105,"org.easymock.tests2.UsageStrictMockTest.range":161,"org.easymock.tests2.UsageConstraintsTest.lessThan":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":455,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":78,"org.easymock.tests2.CaptureTest.testCaptureRightOne":379,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":505,"org.easymock.tests2.UsageConstraintsTest.testOr":469,"org.easymock.tests.UsageRangeTest.combination":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":54,"org.easymock.tests.UsageTest.wrongArguments":129,"org.easymock.tests2.MockBuilderTest.testWithConstructor":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":75,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":32,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":293,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":29,"org.easymock.tests.UsageVarargTest.varargShortAccepted":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":320,"org.easymock.tests2.UsageConstraintsTest.cmpTo":166,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":391,"org.easymock.tests2.CompareToTest.testLessThan":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":295,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.CaptureTest.testCaptureFromStub":380,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":335,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":106,"org.easymock.tests.UsageTest.unexpectedCallWithArray":170,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":135,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":226,"org.easymock.tests2.UsageConstraintsTest.constraints":465,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":286,"org.easymock.samples.ExampleTest.addAndChangeDocument":180,"org.easymock.tests.UsageStrictMockTest.testVerify":288,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":183,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":247,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":375,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":96,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":348,"org.easymock.tests.LimitationsTest.abstractClass":49,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":218,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":402,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":354}}]
