[{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[4,5],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[23,24,25,26],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[27],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[28],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[29,30,31,32,33,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[35,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,7,8,9,10,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,3,91,92,93,6,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,11,144,27,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,24,166,167,168,169,170,171,25,172,173,174,26,175,176,177,178,179,180,181,182,183,184,31,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,32,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,13,14,15,16,17,18,290,291,22,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[312,313,314],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[317,72,82,83,318],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[4,5],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[29,30,31,32,33,34],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[64,92,97,98,31,187,32,238,241,242,319,265,267,268],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[320],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[146],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[35,35,36,36,37,38,39,40,41,42,43,44,45,46,321,47,48,49,50,51,52,53,54,55,56,322,57,323,324,58,325,59,326,327,7,8,9,10,60,61,62,63,64,65,66,28,71,72,73,74,75,76,77,78,79,80,81,82,83,84,328,329,330,331,332,85,333,334,335,336,337,338,86,87,88,89,90,3,91,92,93,6,94,95,96,97,98,99,100,101,102,103,105,106,108,110,111,112,113,339,316,115,116,117,340,341,121,342,124,125,126,127,343,344,345,346,129,347,348,130,131,132,133,134,135,136,349,350,351,352,353,137,354,355,356,357,358,359,360,138,361,139,362,363,364,365,366,367,140,368,369,141,370,371,142,143,11,372,144,27,145,373,146,147,148,149,150,151,152,153,154,155,374,156,157,158,159,160,161,375,162,163,164,165,24,166,167,168,169,170,171,25,376,172,173,174,26,175,176,177,377,178,378,379,380,381,382,179,383,384,385,386,180,181,387,182,388,389,390,183,184,31,185,186,187,188,189,190,191,192,193,194,195,196,197,391,198,392,199,200,393,201,394,395,202,396,203,204,205,206,207,208,209,397,398,399,400,401,402,403,404,405,210,406,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,32,238,239,240,241,242,243,407,408,409,410,244,245,246,247,411,248,412,413,414,415,416,417,249,250,251,252,418,419,420,421,422,423,424,12,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,253,254,442,443,444,445,446,447,448,449,450,451,0,452,453,454,255,256,257,455,258,259,456,260,261,262,263,264,457,458,459,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,4,288,289,460,5,461,462,463,13,14,15,16,17,18,464,465,290,466,467,468,469,19,20,21,291,22,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[62,64,65,67,68,69,70,91,92,97,98,31,185,187,188,237,238,241,242,470,471,472,265,266,267,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[35,35,36,36,37,41,42,43,44,46,47,49,51,52,53,54,55,56,322,57,58,325,59,326,7,8,9,10,60,62,63,64,65,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,3,91,92,93,6,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,339,115,116,117,118,341,119,120,121,122,123,124,125,126,127,128,129,347,348,130,131,132,134,135,137,138,139,140,141,142,143,11,372,144,27,145,373,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,375,162,163,164,165,24,166,167,168,169,170,171,25,376,172,173,174,26,175,176,177,178,378,379,380,381,382,179,383,386,180,181,182,183,31,185,186,187,188,189,191,192,193,194,195,196,197,206,400,401,402,403,404,405,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,32,238,239,240,241,242,243,410,244,245,246,247,249,250,251,252,433,439,441,253,254,264,457,458,459,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,460,462,13,14,15,16,17,18,290,467,468,469,19,20,21,291,22,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[448,449,450,451,452,453],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[35,36,473,474,475,340,476,477,121,342,124,128,478,479,480,134,360,481,482,138,483,361,139,484,362,363,485,486,364,365,366,367,140,487,368,488,489,369,141,370,371],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[35,35,36,36,37,38,39,40,41,42,43,44,45,46,321,47,48,49,50,51,52,53,54,55,56,322,490,57,323,324,58,325,59,326,327,491,7,8,9,10,60,61,62,63,64,65,66,28,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,328,329,330,331,332,85,333,334,335,336,337,338,86,87,88,89,90,3,91,92,93,6,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,473,339,492,474,316,115,116,117,475,118,340,341,119,477,120,121,342,493,122,123,124,125,126,127,128,343,344,345,346,129,347,348,130,131,132,133,134,135,136,349,350,351,352,353,137,354,355,356,357,358,359,360,481,482,138,483,361,139,484,362,363,485,486,364,365,366,367,140,487,368,488,489,369,141,370,371,142,143,11,372,144,27,145,373,146,147,148,149,150,151,152,153,154,155,374,156,157,158,159,160,161,375,162,163,164,165,24,166,167,168,169,170,171,25,376,172,173,174,26,494,495,175,176,177,377,178,378,379,380,381,382,179,383,384,385,386,180,181,387,182,388,389,390,183,184,31,185,186,187,188,189,190,191,192,193,194,195,196,197,391,198,392,199,200,393,201,394,395,202,396,203,204,205,206,207,208,209,397,398,399,400,401,402,403,404,405,210,406,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,32,238,239,240,241,242,243,496,407,497,408,498,409,410,244,245,246,247,411,248,412,413,414,415,416,417,249,250,251,252,418,419,420,421,422,423,424,12,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,253,254,442,443,444,445,446,447,499,448,449,450,451,0,452,500,453,454,255,256,257,455,258,259,456,260,261,262,263,264,457,458,459,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,4,288,289,460,5,461,462,463,13,14,15,16,17,18,464,465,290,466,467,468,469,19,20,21,291,22,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[475,340,501,502,503,504,121,342,134],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[64,92,97,98,31,187,32,238,241,242,319,265,267,268],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[134,135,136],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[64,92,97,98,31,187,32,238,241,242,319,265,267,268],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[29,30,31,32,33,34],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[505,168],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[167],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:471","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[109,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[505,168],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[5],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[506],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[347,131,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[150,157,376,264],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[62,64,65,67,68,69,70,91,92,97,98,31,185,187,188,237,238,241,242,470,471,472,265,266,267,268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[418,419,420,421,422,423,424,12,425,426,427,428,429,430,431,432,434,435,436,437,438,440],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[35,35,36,36,37,41,42,43,44,46,47,49,51,52,53,54,55,56,57,325,59,326,7,8,9,10,62,64,65,71,72,74,75,78,79,80,81,82,83,84,85,90,3,91,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,339,115,117,118,119,121,122,123,124,125,126,127,128,129,347,348,130,131,132,134,135,137,138,139,140,141,142,143,11,372,144,27,145,373,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,24,166,167,168,169,170,171,25,172,173,174,26,175,176,177,178,378,380,381,179,180,181,182,185,187,188,191,192,193,194,195,196,197,393,206,400,401,402,403,404,210,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,243,410,249,250,251,252,433,439,441,253,254,457,458,459,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,460,461,462,463,13,14,15,16,17,18,290,467,468,469,19,20,21,291,22,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[90,95,11,381,194,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,240,421,254,457,458,459,267,269,271,272,273,274,275,276,17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[29,30,31,32,33,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[35,35,36,36,37,39,40,51,52,54,55,56,322,57,323,324,58,325,59,326,327,491,7,8,9,114,339,492,316,115,116,117,118,340,341,119,120,121,342,122,123,124,125,127,128,343,507,508,344,134,136,360,481,482,138,483,361,139,484,362,363,485,486,364,365,366,367,140,487,368,488,489,369,141,370,371,494,495,384,385,386,180,181,182,390,496,408,411,248,412,413,414,415,416,417,448,449,450,451,0,452,453,287,4,288,289,460,5,464,465,290,466],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":155,"org.easymock.tests2.UsageTest.argumentsOrdered":98,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":236,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":427,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":6,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":38,"org.easymock.tests2.DelegateToTest.testReturnException":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":14,"org.easymock.tests.MockingTest.testPartialClassMocking":180,"org.easymock.tests.MockClassControlTest.testToString":412,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":28,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":485,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":216,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":470,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":501,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":191,"org.easymock.tests2.UsageTest.wrongArguments":92,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":246,"org.easymock.samples.ExampleTest.answerVsDelegate":42,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":408,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":389,"org.easymock.tests2.UsageConstraintsTest.testNull":157,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":54,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":417,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":110,"org.easymock.tests2.CaptureTest.testPrimitive":74,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":235,"org.easymock.tests.UsageTest.moreThanOneArgument":237,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":279,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":400,"org.easymock.tests.UsageTest.argumentsOrdered":242,"org.easymock.tests.UsageVarargTest.varargIntAccepted":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":282,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":114,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":508,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":358,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":286,"org.easymock.tests.ReplayStateInvalidUsageTest.times":395,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests2.DependencyTest.testClassMocking":494,"org.easymock.tests2.AnswerTest.answer":129,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":89,"org.easymock.tests2.CaptureTest.testAnd":71,"org.easymock.tests2.UsageTest.strictResetToDefault":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":474,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":58,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":251,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":404,"org.easymock.tests2.DelegateToTest.testDelegate":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":231,"org.easymock.tests.LimitationsTest.mockFinalMethod":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":215,"org.easymock.tests2.DependencyTest.testClassMockingSupport":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":405,"org.easymock.tests2.CaptureTest.testCapture1_2446744":75,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":87,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":392,"org.easymock.tests.UsageThrowableTest.throwError":269,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":497,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":281,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":371,"org.easymock.samples.PartialClassMockTest.testGetArea":37,"org.easymock.tests.MockingTest.testInterfaceMocking":387,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":486,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":447,"org.easymock.tests2.UsageTest.niceToStrict":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":314,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":115,"org.easymock.tests2.MockBuilderTest.testCreateMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":488,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":335,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":29,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":225,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":459,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageOverloadedMethodTest.overloading":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":369,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":24,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":381,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":303,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":165,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":80,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":455,"org.easymock.tests.MockClassControlTest.testEquals":416,"org.easymock.tests2.EasyMockSupportClassTest.testAll":138,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":233,"org.easymock.tests2.CaptureTest.testCaptureAll":72,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":213,"org.easymock.tests.MockNameTest.defaultName":454,"org.easymock.tests2.UsageConstraintsTest.testMatches":166,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":280,"org.easymock.samples.ExampleTest.voteForRemovals":46,"org.easymock.tests.UsageVarargTest.allKinds":264,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":266,"org.easymock.samples.BasicClassMockTest.testPrintContent":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":214,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":275,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":355,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":373,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":504,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":500,"org.easymock.tests2.UsageConstraintsTest.greaterThan":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":483,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":250,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":326,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":453,"org.easymock.samples.ExampleTest.voteForRemoval":43,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":148,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":327,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":322,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":90,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":287,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":103,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":13,"org.easymock.tests2.CaptureTest.testCaptureFirst":84,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":104,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":299,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":150,"org.easymock.tests2.CaptureTest.testCapture2_2446744":83,"org.easymock.tests2.UsageTest.moreThanOneArgument":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":119,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":263,"org.easymock.tests.GenericTest.testBridgedEquals":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":398,"org.easymock.tests.UsageExpectAndReturnTest.longType":295,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":234,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":410,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":277,"org.easymock.tests.UsageCallCountTest.tooManyCalls":399,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":489,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":274,"org.easymock.tests.MockingTest.testNiceClassMocking":390,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":123,"org.easymock.tests.MockingTest.testClassMocking":385,"org.easymock.tests2.UsageConstraintsTest.testContains":164,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":205,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":9,"org.easymock.tests2.UsageConstraintsTest.testFind":156,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":254,"org.easymock.tests.MockTypeTest.fromEasyMockClass":407,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":178,"org.easymock.tests.UsageExpectAndReturnTest.object":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":502,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":259,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":445,"org.easymock.tests.UsageTest.exactCallCountByLastCall":243,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":401,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":342,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":255,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":380,"org.easymock.tests.MockClassControlTest.testHashCode":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":350,"org.easymock.tests2.EasyMockSupportTest.testVerify":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":365,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":402,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":458,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":86,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":133,"org.easymock.tests.UsageVarargTest.varargCharAccepted":258,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":499,"org.easymock.tests2.CaptureTest.testCaptureMultiple":317,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastCall":94,"org.easymock.tests.DefaultClassInstantiatorTest.object":448,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":312,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":457,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":443,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":349,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":414,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":222,"org.easymock.tests.CapturesMatcherTest.test":318,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":19,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":141,"org.easymock.tests2.UsageTest.resumeIfFailure":99,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":496,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":507,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":16,"org.easymock.tests2.StubTest.stubWithReturnValue":11,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":475,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":301,"org.easymock.tests2.SerializationTest.testAllMockedMethod":136,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":433,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":30,"org.easymock.samples.SupportTest.voteForRemovals":49,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":228,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":439,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":347,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":463,"org.easymock.tests.UsageExpectAndThrowTest.object":226,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":171,"org.easymock.tests2.DelegateToTest.testWrongClass":145,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":196,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":197,"org.easymock.tests.UsageStrictMockTest.range":187,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":345,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":117,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":396,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":33,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":469,"org.easymock.tests2.CaptureTest.testCaptureNone":79,"org.easymock.tests.UsageUnorderedTest.message":265,"org.easymock.tests.UsageVerifyTest.twoReturns":268,"org.easymock.tests.UsageVarargTest.varargByteAccepted":262,"org.easymock.tests2.ThreadingTest.testThreadSafe":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":487,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":209,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":446,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":39,"org.easymock.tests2.CaptureTest.testCapture_2617107":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":194,"org.easymock.tests2.UsageConstraintsTest.any":162,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":394,"org.easymock.tests2.StubTest.stub":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":15,"org.easymock.tests.UsageExpectAndThrowTest.longType":219,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":201,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":63,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":137,"org.easymock.tests2.SerializationTest.testClass":134,"org.easymock.tests.LimitationsTest.mockNativeMethod":290,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":460,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":330,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests2.NameTest.nameForMocksControl":70,"org.easymock.tests2.MockedExceptionTest.testMockedException":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":361,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":240,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":220,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":377,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":118,"org.easymock.tests.MockingTest.testNicePartialClassMocking":181,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":56,"org.easymock.tests2.CompareToTest.testNotComparable":315,"org.easymock.tests2.CaptureTest.testCaptureLast":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":210,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":160,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":128,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":25,"org.easymock.tests.MockingTest.testTwoMocks":386,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":224,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":97,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":174,"org.easymock.samples.ExampleTest.removeNonExistingDocument":321,"org.easymock.tests.UsageStrictMockTest.differentMethods":188,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":351,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":450,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":149,"org.easymock.tests2.MockBuilderTest.testCreateMockString":120,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":484,"org.easymock.tests.UsageExpectAndThrowTest.floatType":218,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":482,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":493,"org.easymock.tests.UsageVerifyTest.twoThrows":267,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":140,"org.easymock.samples.ExampleTest.voteAgainstRemoval":44,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":428,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":59,"org.easymock.tests.LimitationsTest.privateConstructor":465,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":480,"org.easymock.tests2.UsageConstraintsTest.testNotNull":173,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":276,"org.easymock.tests2.UsageTest.defaultResetToNice":96,"org.easymock.samples.ExampleTest.voteAgainstRemovals":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":307,"org.easymock.tests.UsageVarargTest.differentLength":456,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":329,"org.easymock.tests2.CallbackTest.callback":142,"org.easymock.tests2.UsageConstraintsTest.equals":374,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":323,"org.easymock.tests.UsageTest.openCallCountByLastCall":239,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":193,"org.easymock.tests.UsageCallCountTest.tooFewCalls":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":247,"org.easymock.tests.UsageThrowableTest.throwCheckedException":273,"org.easymock.tests.MockingTest.testStrictClassMocking":384,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":34,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":22,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":333,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":126,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":132,"org.easymock.tests.ObjectMethodsTest.testHashCode":444,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":151,"org.easymock.tests2.NameTest.nameForNiceMock":69,"org.easymock.tests2.DependencyTest.testInterfaceMocking":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":503,"org.easymock.samples.ExampleTest.addDocument":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":368,"org.easymock.tests2.DelegateToTest.testStubDelegate":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.AnswerTest.stubAnswer":131,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":185,"org.easymock.tests.UsageVarargTest.varargLongAccepted":261,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndReturnTest.floatType":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":121,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":169,"org.easymock.tests.UsageThrowableTest.noUpperLimit":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":357,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":153,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":343,"org.easymock.tests2.SerializationTest.test":135,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":76,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":449,"org.easymock.tests2.UsageConstraintsTest.testSame":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":293,"org.easymock.samples.SupportTest.addDocument":48,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":362,"org.easymock.tests.GenericTest.testPackageScope":288,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":356,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":388,"org.easymock.tests2.NameTest.nameForMock":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":304,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":477,"org.easymock.tests2.UsageStrictMockTest.differentMethods":65,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":324,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":230,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":252,"org.easymock.tests2.MockedExceptionTest.testRealException":10,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":430,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":192,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":203,"org.easymock.tests2.NameTest.nameForStrictMock":68,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":316,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":344,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":471,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":451,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":170,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":339,"org.easymock.tests2.UsageStrictMockTest.range":64,"org.easymock.tests2.UsageConstraintsTest.lessThan":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":353,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":102,"org.easymock.tests2.CaptureTest.testCaptureRightOne":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":364,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":320,"org.easymock.tests2.UsageConstraintsTest.testOr":159,"org.easymock.tests.UsageRangeTest.combination":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":52,"org.easymock.tests.UsageTest.wrongArguments":238,"org.easymock.tests2.MockBuilderTest.testWithConstructor":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":363,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":305,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":452,"org.easymock.tests.UsageVarargTest.varargShortAccepted":260,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":397,"org.easymock.tests2.UsageConstraintsTest.cmpTo":163,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":348,"org.easymock.tests2.CompareToTest.testLessThan":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":421,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests2.CaptureTest.testCaptureFromStub":82,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":198,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":492,"org.easymock.tests.UsageTest.unexpectedCallWithArray":32,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":208,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":306,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.UsageConstraintsTest.constraints":154,"org.easymock.samples.ExampleTest.addAndChangeDocument":47,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":50,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests2.CompareToTest.testGreateThan":505,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":212,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":77,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":284,"org.easymock.tests.LimitationsTest.abstractClass":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":298,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":285,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":107,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":256}}]
