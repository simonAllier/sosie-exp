[{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methodArgs":"methodArgs","this":"this","methodTypes":"methodTypes","i":"i"}},{"position":"org.easymock.internal.Range:36","failures":[1],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","value":"shouldBeUsedInOneThread"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[208,209,121,210,211,168],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[212,77],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[213,214,104,215,216,217,218,219,220,221],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[222,223,121,224,225,168],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[208,209,121,210,211],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[222,86,90,91,121,224,130,131,226,168,169,170,171,227,207],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6,7,228,229,229,230,230,9,10,11,12,13,14,15,16,17,231,232,233,18,234,19,222,223,20,21,22,23,24,25,235,236,237,26,238,239,240,241,27,28,29,30,242,31,243,244,32,245,246,33,34,35,37,247,248,249,38,39,40,41,250,42,43,44,45,46,47,251,252,48,49,50,253,254,51,52,53,54,55,56,58,59,60,61,255,256,257,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,258,83,84,85,259,86,87,88,260,261,89,90,91,262,92,93,94,95,263,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,264,265,266,267,111,268,112,269,270,271,272,113,114,115,116,117,118,273,274,275,276,277,278,120,121,279,122,224,225,123,124,280,281,125,126,282,127,283,284,285,286,128,287,288,289,290,129,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,130,131,306,307,133,134,135,137,308,141,309,142,310,311,143,144,149,151,152,154,157,159,161,312,313,168,169,314,315,170,171,172,173,174,175,176,177,178,179,180,181,182,316,317,318,319,320,183,321,322,323,184,324,325,326,185,186,187,188,189,327,328,190,191,329,192,330,331,332,333,193,334,335,336,337,194,338,339,340,341,227,195,196,197,198,199,200,201,202,206],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[342,343,344,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"this.org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,228,229,229,230,230,9,10,11,12,13,14,15,16,17,231,232,233,18,234,19,222,223,20,21,22,23,24,25,235,236,237,26,238,239,240,241,27,28,29,30,242,31,243,244,32,245,246,33,34,35,37,247,248,249,38,39,40,41,250,42,43,44,45,46,47,251,252,48,49,346,0,50,253,254,51,52,53,54,55,56,58,59,347,60,348,61,255,256,257,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,349,78,79,80,81,258,83,84,85,259,86,87,88,260,261,89,90,91,262,92,93,94,95,263,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,350,111,268,112,351,269,270,271,272,113,114,115,116,117,118,352,273,274,275,276,277,278,120,121,279,122,224,225,123,280,281,125,126,282,127,283,284,285,286,128,287,288,289,290,129,291,292,293,294,295,296,297,298,299,300,301,302,303,304,353,305,130,131,306,307,354,132,355,356,133,134,135,357,358,359,136,137,308,141,310,311,143,144,360,342,343,312,313,168,169,314,315,170,171,172,173,174,175,176,177,178,179,180,181,182,316,317,318,319,320,361,183,321,322,323,184,324,325,326,185,186,187,188,189,327,328,190,191,329,192,330,331,332,333,193,334,335,336,337,194,338,339,340,341,227,195,196,197,198,199,200,201,202,362,363,364,365,1,366,344,345,203,204,205,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,228,229,230,9,10,11,12,13,14,15,16,17,231,232,233,18,234,19,222,223,20,21,22,23,24,25,235,236,237,26,238,239,240,241,27,28,29,30,242,31,243,244,32,245,246,33,34,35,36,37,247,248,249,38,39,40,41,250,42,43,44,45,46,47,251,252,48,49,50,253,254,51,52,53,54,55,56,57,58,59,347,60,348,61,255,256,257,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,349,78,79,80,81,82,258,83,84,85,259,86,87,88,260,261,89,90,91,262,92,93,94,95,263,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,268,112,269,270,271,272,113,114,115,116,117,118,273,274,275,276,277,278,120,121,279,122,224,225,123,280,281,125,126,282,127,283,284,285,286,128,287,288,289,290,129,291,292,293,294,295,296,297,298,299,300,301,303,304,305,130,131,306,307,133,134,135,367,367,136,137,308,141,310,311,143,144,145,146,147,312,313,168,169,314,315,170,171,172,173,174,175,176,177,368,178,179,180,181,182,316,317,318,319,320,183,321,322,323,184,324,325,326,185,186,187,188,189,327,328,190,191,329,192,330,331,332,333,193,334,335,336,337,194,338,339,340,341,227,195,196,197,198,199,200,201,202,203,204,205,207],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[239,369,33,247],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,228,9,10,11,12,13,14,15,16,17,231,232,18,234,19,222,223,20,25,235,236,237,26,238,239,240,241,27,28,29,30,242,31,243,244,32,245,246,33,34,35,36,37,247,248,249,38,39,40,41,250,42,43,44,45,46,47,252,48,49,50,253,51,52,53,54,55,56,58,60,61,255,256,257,62,63,64,65,66,67,68,69,70,72,73,74,75,76,78,80,81,84,85,259,86,87,88,260,261,90,91,262,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,268,112,269,270,271,272,117,118,120,121,279,122,224,225,123,280,281,125,126,282,127,283,284,285,286,128,287,288,289,290,129,291,292,293,294,299,301,302,303,304,305,130,131,306,133,134,135,136,137,308,141,310,311,143,144,146,147,312,313,169,314,315,170,171,172,173,174,175,176,177,178,179,180,181,182,316,317,318,319,320,183,321,322,323,184,324,325,326,327,328,190,191,329,192,330,331,332,333,193,334,335,336,337,194,338,339,340,341,227,195,196,197,198,199,200,201,202,203,204,205,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":26,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":312,"org.easymock.tests2.UsageTest.argumentsOrdered":91,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":298,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":88,"org.easymock.tests2.StubTest.stubWithReturnValue":272,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":214,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":286,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":37,"org.easymock.tests2.SerializationTest.testAllMockedMethod":106,"org.easymock.tests2.DelegateToTest.testReturnException":111,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":296,"org.easymock.tests.MockingTest.testPartialClassMocking":133,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":209,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.MockClassControlTest.testToString":162,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":335,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":327,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":108,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":346,"org.easymock.tests.UsageExpectAndThrowTest.object":193,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":17,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":216,"org.easymock.tests2.DelegateToTest.testWrongClass":112,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":325,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":326,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":321,"org.easymock.tests2.UsageTest.wrongArguments":86,"org.easymock.samples.ConstructorCalledMockTest.testTax":229,"org.easymock.tests.UsageStrictMockTest.range":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":115,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":97,"org.easymock.tests2.UsageConstraintsTest.testNull":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":334,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":80,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":73,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":167,"org.easymock.tests2.CaptureTest.testPrimitive":41,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":324,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":341,"org.easymock.tests.UsageTest.moreThanOneArgument":313,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":158,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":170,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":275,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":210,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":359,"org.easymock.tests2.CaptureTest.testCaptureNone":45,"org.easymock.tests.UsageUnorderedTest.message":227,"org.easymock.tests.UsageVerifyTest.twoReturns":131,"org.easymock.tests.UsageVarargTest.varargByteAccepted":180,"org.easymock.tests2.ThreadingTest.testThreadSafe":255,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":362,"org.easymock.tests.UsageTest.argumentsOrdered":171,"org.easymock.tests.UsageVarargTest.varargIntAccepted":175,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":144,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":316,"org.easymock.tests2.CaptureTest.testCapture_2617107":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":220,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":184,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":79,"org.easymock.tests2.UsageConstraintsTest.any":29,"org.easymock.tests2.StubTest.stub":271,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":297,"org.easymock.tests.UsageExpectAndThrowTest.longType":191,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":154,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":19,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests2.SerializationTest.testClass":104,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":25,"org.easymock.tests.LimitationsTest.mockNativeMethod":141,"org.easymock.tests.ReplayStateInvalidUsageTest.times":156,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":352,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":294,"org.easymock.tests2.AnswerTest.answer":49,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":24,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":59,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":20,"org.easymock.tests2.NameTest.nameForMocksControl":267,"org.easymock.tests2.MockedExceptionTest.testMockedException":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":68,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":315,"org.easymock.tests2.DelegateToTest.testDelegate":269,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":1,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":329,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":135,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":81,"org.easymock.tests.MockingTest.testNicePartialClassMocking":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":194,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":215,"org.easymock.tests2.CaptureTest.testCaptureLast":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":132,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":354,"org.easymock.tests2.CaptureTest.testCapture1_2446744":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":22,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":248,"org.easymock.tests.UsageThrowableTest.throwError":195,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":150,"org.easymock.samples.ExampleTest.removeNonExistingDocument":8,"org.easymock.tests.UsageStrictMockTest.differentMethods":225,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":152,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":257,"org.easymock.tests2.MockBuilderTest.testCreateMockString":83,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":277,"org.easymock.tests.UsageExpectAndThrowTest.floatType":190,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":32,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":50,"org.easymock.tests.UsageVerifyTest.twoThrows":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":109,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":317,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":358,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":357,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":328,"org.easymock.tests2.UsageTest.niceToStrict":87,"org.easymock.tests2.UsageConstraintsTest.testNotNull":247,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":202,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":93,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.UsageTest.defaultResetToNice":89,"org.easymock.tests2.MockBuilderTest.testCreateMock":82,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests.UsageVarargTest.differentLength":368,"org.easymock.tests2.CallbackTest.callback":270,"org.easymock.tests.UsageTest.openCallCountByLastCall":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":333,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":208,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":69,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":235,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":309,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":113,"org.easymock.tests.UsageCallCountTest.tooFewCalls":311,"org.easymock.tests.UsageOverloadedMethodTest.overloading":137,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":243,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":100,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":136,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":31,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":116,"org.easymock.tests.UsageThrowableTest.throwCheckedException":199,"org.easymock.tests2.EasyMockSupportClassTest.testAll":107,"org.easymock.tests.MockClassControlTest.testEquals":166,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":118,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":339,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":23,"org.easymock.tests2.CaptureTest.testCaptureAll":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":307,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":99,"org.easymock.tests2.UsageConstraintsTest.testMatches":244,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":101,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":276,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":148,"org.easymock.tests.ObjectMethodsTest.testHashCode":139,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":219,"org.easymock.tests2.NameTest.nameForNiceMock":266,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":63,"org.easymock.tests.UsageVarargTest.allKinds":182,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":305,"org.easymock.tests2.DependencyTest.testInterfaceMocking":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":218,"org.easymock.samples.BasicClassMockTest.testPrintContent":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":188,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testStubDelegate":268,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":201,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":233,"org.easymock.tests2.AnswerTest.stubAnswer":253,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":300,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":279,"org.easymock.tests2.UsageConstraintsTest.greaterThan":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":302,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":348,"org.easymock.tests.UsageVarargTest.varargLongAccepted":179,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":123,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":256,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":293,"org.easymock.tests.UsageExpectAndReturnTest.floatType":125,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":57,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":230,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":246,"org.easymock.tests.UsageThrowableTest.noUpperLimit":196,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":236,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":183,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":42,"org.easymock.tests2.SerializationTest.test":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":66,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":281,"org.easymock.tests2.UsageConstraintsTest.testSame":240,"org.easymock.samples.SupportTest.addDocument":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":295,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":350,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":67,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":153,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":284,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests2.UsageTest.moreThanOneArgument":259,"org.easymock.tests2.CaptureTest.testCapture2_2446744":252,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":62,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":365,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":258,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":181,"org.easymock.tests2.NameTest.nameForMock":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":146,"org.easymock.tests.UsageExpectAndReturnTest.longType":126,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":185,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":288,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":361,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":36,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":338,"org.easymock.tests2.UsageStrictMockTest.differentMethods":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":282,"org.easymock.tests.UsageCallCountTest.tooManyCalls":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":337,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":304,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":310,"org.easymock.tests2.MockedExceptionTest.testRealException":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":285,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":234,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":200,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":159,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":98,"org.easymock.tests2.NameTest.nameForStrictMock":265,"org.easymock.tests2.UsageConstraintsTest.testContains":242,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":142,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":95,"org.easymock.tests2.UsageConstraintsTest.testFind":238,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":308,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":55,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":232,"org.easymock.tests.UsageExpectAndReturnTest.object":128,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":33,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":58,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":349,"org.easymock.tests2.UsageStrictMockTest.range":222,"org.easymock.tests2.UsageConstraintsTest.lessThan":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":217,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":177,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":140,"org.easymock.tests.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":306,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":212,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":65,"org.easymock.tests2.CaptureTest.testCaptureRightOne":47,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":363,"org.easymock.tests2.UsageConstraintsTest.testOr":241,"org.easymock.tests.UsageRangeTest.combination":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":52,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":173,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":204,"org.easymock.tests.UsageTest.wrongArguments":169,"org.easymock.tests.MockClassControlTest.testHashCode":165,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":161,"org.easymock.tests2.EasyMockSupportTest.testVerify":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":289,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":364,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":203,"org.easymock.tests.UsageVarargTest.varargShortAccepted":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":21,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":145,"org.easymock.tests2.UsageConstraintsTest.cmpTo":30,"org.easymock.tests.UsageVarargTest.varargCharAccepted":176,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":18,"org.easymock.tests2.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":75,"org.easymock.tests.DefaultClassInstantiatorTest.object":119,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":366,"org.easymock.tests2.CaptureTest.testCaptureFromStub":251,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":149,"org.easymock.tests.UsageTest.unexpectedCallWithArray":168,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":138,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":226,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":198,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":143,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":290,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":347,"org.easymock.tests2.UsageConstraintsTest.constraints":237,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":164,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":330,"org.easymock.samples.ExampleTest.addAndChangeDocument":228,"org.easymock.tests.CapturesMatcherTest.test":367,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":292,"org.easymock.tests.UsageStrictMockTest.testVerify":124,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":360,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":110,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":120,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":186,"org.easymock.tests2.UsageTest.resumeIfFailure":262,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":318,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":319,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":70,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":174}}]
