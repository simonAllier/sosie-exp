[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:67","sourceCode":"if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (this.int);\n} else {\n    return ((\"between \" + (this.int)) + \" and \") + (this.int);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[48,49,50,51,52,53,54,55,56,40,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum","maximum":"minimum","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[69,70,71,72,73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[74,75],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[76,0,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,1,2,96,48,97,98,99,100,101,102,103,104,105,106,69,107,108,109,110,111,112,113,49,50,114,51,52,115,116,3,117,4,5,6,7,8,9,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,10,53,144,54,145,11,55,56,146,147,148,149,150,151,152,153,70,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,71,72,73,170,171,172,173,174,175,176,177,178,179,180,181,182,183,12,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,13,14,15,16,17,18,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,243,244,245,246,247,40,57,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,272,273,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,58,299,59,60,300,301,41,302,303,304,305,306,307,308,309,310,311,312,42,313,61,62,314,315,316,43,317,63,64,318,319,44,45,46,47,320,321,322,323,324,325,326,327,65,66,67,68,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,75,459,460,461,462,463,464,465,466,467,468,469,470,471],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[49,472],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[473,440,442,75,464],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[89,90,91,93,108,109,110,111,170,209,210,211,212,213,215,218,233,234,235,236,237,238,239,240,252,253,254,255,256,257,258,272,273,274,277,278,302,303,306,307,308,309,311,312,44,45,46,340,343,345,347,348,351,354,357,358,361,365,366,368,369,370,371,373,375,376,377,378,379,380,381,470],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:305","failures":[76,0,90,94,95,96,48,110,50,51,52,3,4,5,6,7,8,9,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,10,53,145,11,146,162,171,172,173,174,175,176,181,183,12,185,212,213,215,17,230,231,233,241,242,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,243,244,245,246,247,40,57,264,265,266,267,269,274,280,286,295,296,58,59,60,41,306,307,308,309,310,311,312,42,313,61,314,316,43,317,318,319,46,320,321,322,323,324,325,329,332,334,335,338,343,346,356,362,365,366,367,368,369,370,373,377,378,379,382,386,387,392,393,394,396,397,398,399,400,401,404,405,406,407,409,410,411,412,413,414,415,416,417,418,419,420,421,422,429,440,441,442,443,445,446,447,448,449,450,452,453,454,455,456,457,458,75,459,460,461,462,463,464,465,466,467,468,469,471],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[77,78,79,150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[272,273,308,312,474,325,326,475,476,477,336,478,479,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,480,481,468],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[89,93],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[482,372,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"value","key":"value"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"matched"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[336,484,468],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[49,485,486,144,472,487],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[76,0,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,1,2,96,48,97,98,99,100,101,102,103,104,105,106,69,107,108,109,110,111,112,113,49,50,114,51,52,115,116,3,117,4,5,6,7,8,9,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,10,53,144,54,145,11,55,56,146,147,148,149,150,151,152,153,70,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,71,72,73,170,171,172,173,174,175,176,177,178,179,180,181,182,183,12,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,13,14,15,16,17,18,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,243,244,245,246,247,40,57,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,58,299,59,60,300,301,41,302,303,304,305,306,307,308,309,310,311,312,42,313,61,62,314,315,316,43,317,63,64,318,319,44,45,46,47,320,321,322,323,324,325,326,327,65,66,67,68,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,75,459,460,461,462,463,464,465,466,467,468,469,470,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[89,90,91,92,93,108,109,110,111,170,209,210,211,212,213,215,218,224,227,233,234,235,236,237,238,239,240,488,252,253,254,255,256,257,489,258,272,272,273,273,274,277,278,293,294,302,490,491,303,306,307,308,309,311,312,44,45,46,325,326,492,328,475,329,330,476,331,332,333,334,477,335,336,337,338,479,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,373,374,375,376,377,378,379,380,381,468,470],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[76,0,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,1,2,96,48,97,98,99,100,101,102,103,104,105,106,69,107,108,109,110,111,112,113,49,50,114,51,52,115,116,3,117,4,5,6,7,8,9,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,10,53,144,54,145,11,55,56,146,147,148,149,150,151,152,153,70,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,71,72,73,170,171,172,173,174,175,176,177,178,179,180,181,182,183,12,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,13,14,15,16,17,18,219,220,221,222,223,225,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,243,244,245,246,247,40,57,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,272,273,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,295,296,297,298,58,299,59,60,300,301,41,302,303,304,305,308,309,310,311,42,313,61,62,314,315,316,43,317,63,64,318,319,44,45,46,47,320,321,322,323,324,325,326,327,329,331,332,333,334,336,337,340,343,345,346,348,349,352,353,354,355,356,358,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,415,416,418,420,421,422,423,493,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,75,459,460,461,462,463,464,465,466,467,468,469,470,471],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[100,322,380],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[76,0,77,78,79,80,82,90,92,94,95,1,2,96,48,110,112,49,50,114,51,52,115,3,117,4,5,6,7,8,9,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,10,53,144,54,145,11,55,56,146,162,168,71,72,73,170,171,172,173,174,175,176,177,178,179,180,181,182,183,12,184,185,186,198,199,200,201,203,204,206,207,208,211,212,213,215,13,14,15,16,17,18,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,241,242,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,243,244,245,246,247,40,57,248,249,250,251,259,260,261,262,263,264,265,266,267,269,271,272,272,273,273,274,280,286,287,295,296,297,58,299,59,60,300,301,41,306,307,308,309,310,311,312,42,313,61,62,314,315,316,43,317,63,64,318,319,44,45,46,47,320,321,322,323,324,325,65,328,329,330,332,333,334,335,337,338,339,343,346,356,362,365,366,367,368,369,370,371,373,376,377,378,379,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,429,430,436,437,438,439,440,441,442,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,75,459,460,461,462,463,464,465,466,467,468,469,471],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[495,496,497,498,499,325,326,477,336,468],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[83,85,88,48,49,50,51,52,4,10,53,54,145,11,55,56,146,187,198,199,220,221,19,247,40,57,265,58,59,60,42,61,62,316,43,63,64,319,65,66,67,68,382,396,446,447,452,453,465,466],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[500,468,469,470],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:434","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[459],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[500,468,469,470],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[449],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[400],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2124","failures":[265,382,385,386,388,389,390],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[449],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[443,449,460],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":443,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests2.UsageTest.argumentsOrdered":64,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":156,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":315,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":275,"org.easymock.tests2.DelegateToTest.testReturnException":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":14,"org.easymock.tests.MockingTest.testPartialClassMocking":212,"org.easymock.tests.MockClassControlTest.testToString":235,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":327,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":20,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":346,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":296,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":450,"org.easymock.tests2.UsageTest.wrongArguments":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":94,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":435,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":250,"org.easymock.samples.ExampleTest.answerVsDelegate":265,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":227,"org.easymock.tests2.UsageConstraintsTest.testNull":446,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":217,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":368,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":420,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":240,"org.easymock.tests2.CaptureTest.testPrimitive":400,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":39,"org.easymock.tests.UsageTest.moreThanOneArgument":53,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":261,"org.easymock.tests.UsageTest.argumentsOrdered":56,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":219,"org.easymock.tests.UsageVarargTest.varargIntAccepted":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":171,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":328,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":291,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":175,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":429,"org.easymock.tests.ReplayStateInvalidUsageTest.times":105,"org.easymock.tests2.DependencyTest.testClassMocking":293,"org.easymock.tests2.AnswerTest.answer":382,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":439,"org.easymock.tests2.CaptureTest.testAnd":397,"org.easymock.tests2.UsageTest.strictResetToDefault":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":245,"org.easymock.tests2.DelegateToTest.testDelegate":396,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":35,"org.easymock.tests.LimitationsTest.mockFinalMethod":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":180,"org.easymock.tests2.DependencyTest.testClassMockingSupport":294,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":138,"org.easymock.tests2.CaptureTest.testCapture1_2446744":401,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":437,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":99,"org.easymock.tests.UsageThrowableTest.throwError":3,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":226,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":263,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":364,"org.easymock.samples.PartialClassMockTest.testGetArea":274,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":100,"org.easymock.tests.MockingTest.testInterfaceMocking":214,"org.easymock.tests2.CompareToTest.testLessOrEqual":473,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":21,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":207,"org.easymock.tests2.UsageTest.niceToStrict":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests2.ThreadingTest.testChangeDefault":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":147,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":332,"org.easymock.tests2.MockBuilderTest.testCreateMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":432,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":472,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":29,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":416,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":248,"org.easymock.tests.UsageOverloadedMethodTest.overloading":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":361,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":456,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":12,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":129,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":241,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":455,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":406,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":190,"org.easymock.tests.MockClassControlTest.testEquals":239,"org.easymock.tests2.EasyMockSupportClassTest.testAll":343,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":438,"org.easymock.tests2.CaptureTest.testCaptureAll":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":178,"org.easymock.tests.MockNameTest.defaultName":232,"org.easymock.tests2.UsageConstraintsTest.testMatches":457,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":262,"org.easymock.samples.ExampleTest.voteForRemovals":269,"org.easymock.tests.UsageVarargTest.allKinds":198,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":179,"org.easymock.samples.BasicClassMockTest.testPrintContent":278,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":8,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":499,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":489,"org.easymock.tests2.UsageConstraintsTest.greaterThan":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":244,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":379,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":258,"org.easymock.samples.ExampleTest.voteForRemoval":266,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":321,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":380,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":371,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":170,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":413,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":13,"org.easymock.tests2.CaptureTest.testCaptureFirst":410,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":414,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":319,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":409,"org.easymock.tests2.UsageTest.moreThanOneArgument":61,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":164,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":338,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":197,"org.easymock.tests.GenericTest.testBridgedEquals":93,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":87,"org.easymock.tests.UsageExpectAndReturnTest.longType":121,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":411,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":38,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":463,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":36,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":259,"org.easymock.tests.UsageCallCountTest.tooManyCalls":88,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":7,"org.easymock.tests.MockingTest.testNiceClassMocking":218,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":307,"org.easymock.tests.MockingTest.testClassMocking":210,"org.easymock.tests2.UsageConstraintsTest.testContains":454,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":81,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":445,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":19,"org.easymock.tests.MockTypeTest.fromEasyMockClass":225,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":390,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":112,"org.easymock.tests.UsageExpectAndReturnTest.object":128,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":373,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":496,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":192,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":205,"org.easymock.tests.UsageTest.exactCallCountByLastCall":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":152,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":141,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":326,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":134,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":183,"org.easymock.tests.MockClassControlTest.testHashCode":238,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":282,"org.easymock.tests2.EasyMockSupportTest.testVerify":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":221,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":181,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":436,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":493,"org.easymock.tests.UsageVarargTest.varargCharAccepted":191,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":488,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":169,"org.easymock.tests2.UsageTest.openCallCountByLastCall":316,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":422,"org.easymock.tests.DefaultClassInstantiatorTest.object":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":77,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":5,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":281,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":237,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":377,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":71,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":362,"org.easymock.tests2.UsageTest.resumeIfFailure":318,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":224,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":16,"org.easymock.tests2.StubTest.stubWithReturnValue":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":477,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":464,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":127,"org.easymock.tests2.SerializationTest.testAllMockedMethod":470,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":162,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":484,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":487,"org.easymock.samples.SupportTest.voteForRemovals":280,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":32,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":500,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":168,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":383,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":143,"org.easymock.tests.UsageExpectAndThrowTest.object":30,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":461,"org.easymock.tests2.DelegateToTest.testWrongClass":394,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":231,"org.easymock.tests.UsageStrictMockTest.range":51,"org.easymock.samples.ConstructorCalledMockTest.testTax":272,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":304,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":418,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":31,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":334,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":249,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":485,"org.easymock.tests2.CaptureTest.testCaptureNone":405,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":201,"org.easymock.tests.UsageUnorderedTest.message":48,"org.easymock.tests.UsageVerifyTest.twoReturns":57,"org.easymock.tests.UsageVarargTest.varargByteAccepted":196,"org.easymock.tests2.ThreadingTest.testThreadSafe":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":357,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":85,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":206,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":277,"org.easymock.tests2.CaptureTest.testCapture_2617107":399,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":2,"org.easymock.tests2.UsageConstraintsTest.any":452,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":104,"org.easymock.tests2.StubTest.stub":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":15,"org.easymock.tests.UsageExpectAndThrowTest.longType":23,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":256,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":103,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.tests2.SerializationTest.testClass":468,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":286,"org.easymock.tests.LimitationsTest.mockNativeMethod":110,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":137,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":92,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":426,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests2.NameTest.nameForMocksControl":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":428,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":345,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":389,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":24,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":215,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":365,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":335,"org.easymock.tests.MockingTest.testNicePartialClassMocking":213,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":424,"org.easymock.tests2.CaptureTest.testCaptureLast":404,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":139,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":449,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":312,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":462,"org.easymock.tests.MockingTest.testTwoMocks":211,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":474,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":28,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":466,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":483,"org.easymock.samples.ExampleTest.removeNonExistingDocument":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":431,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":101,"org.easymock.tests.UsageStrictMockTest.differentMethods":52,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":283,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":254,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":322,"org.easymock.tests2.MockBuilderTest.testCreateMockString":339,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":233,"org.easymock.tests.UsageExpectAndThrowTest.floatType":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":492,"org.easymock.tests.UsageVerifyTest.twoThrows":40,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":356,"org.easymock.samples.ExampleTest.voteAgainstRemoval":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":157,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":199,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":378,"org.easymock.tests.LimitationsTest.privateConstructor":109,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":481,"org.easymock.tests2.UsageConstraintsTest.testNotNull":465,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":9,"org.easymock.tests2.UsageTest.defaultResetToNice":317,"org.easymock.samples.ExampleTest.voteAgainstRemovals":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":133,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":425,"org.easymock.tests.UsageVarargTest.differentLength":193,"org.easymock.tests2.CallbackTest.callback":471,"org.easymock.tests2.UsageConstraintsTest.equals":444,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":374,"org.easymock.tests.UsageTest.openCallCountByLastCall":145,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":1,"org.easymock.tests.UsageCallCountTest.tooFewCalls":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":251,"org.easymock.tests.UsageThrowableTest.throwCheckedException":6,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":486,"org.easymock.tests.MockingTest.testStrictClassMocking":209,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":0,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":430,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":308,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":310,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":387,"org.easymock.tests.ObjectMethodsTest.testHashCode":204,"org.easymock.tests2.NameTest.nameForNiceMock":67,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":324,"org.easymock.tests2.DependencyTest.testInterfaceMocking":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":497,"org.easymock.samples.ExampleTest.addDocument":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":358,"org.easymock.tests2.DelegateToTest.testStubDelegate":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.AnswerTest.stubAnswer":386,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":50,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":494,"org.easymock.tests.UsageVarargTest.varargLongAccepted":195,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":136,"org.easymock.tests.UsageExpectAndReturnTest.floatType":120,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":325,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":273,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":459,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests.UsageThrowableTest.noUpperLimit":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":290,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":441,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":302,"org.easymock.tests2.SerializationTest.test":469,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":402,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":253,"org.easymock.tests2.UsageConstraintsTest.testSame":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":119,"org.easymock.samples.SupportTest.addDocument":279,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":90,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":151,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":289,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":216,"org.easymock.tests2.NameTest.nameForMock":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":479,"org.easymock.tests2.UsageStrictMockTest.differentMethods":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":375,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":122,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":34,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":246,"org.easymock.tests2.MockedExceptionTest.testRealException":47,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":160,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":159,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":58,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":95,"org.easymock.tests2.NameTest.nameForStrictMock":66,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":331,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":388,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":369,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":303,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":460,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":329,"org.easymock.tests2.UsageStrictMockTest.range":59,"org.easymock.tests2.UsageConstraintsTest.lessThan":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":498,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":154,"org.easymock.tests2.CaptureTest.testCaptureRightOne":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.UsageConstraintsTest.testOr":448,"org.easymock.tests.UsageRangeTest.combination":243,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":366,"org.easymock.tests.UsageTest.wrongArguments":54,"org.easymock.tests2.MockBuilderTest.testWithConstructor":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":131,"org.easymock.tests.UsageVarargTest.varargShortAccepted":194,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":257,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":86,"org.easymock.tests2.UsageConstraintsTest.cmpTo":453,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":150,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests2.CaptureTest.testCaptureFromStub":408,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":98,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":330,"org.easymock.tests.UsageTest.unexpectedCallWithArray":144,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":84,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":478,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":132,"org.easymock.tests2.UsageConstraintsTest.constraints":442,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":114,"org.easymock.samples.ExampleTest.addAndChangeDocument":271,"org.easymock.tests.UsageStrictMockTest.testVerify":116,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":276,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":177,"org.easymock.tests2.CompareToTest.testGreateThan":74,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":173,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":124,"org.easymock.tests.LimitationsTest.abstractClass":108,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":417,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":188}}]
