[{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[22,23,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[48,49,50,51,52,53,54,55,10,11,19],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[56,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[58,59,60,61],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[62,63,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[66],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[51,67,68,16,69,21,70,71,72,73,74,75,76,77,78,79,80,81,63,82,83,84,85,86],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,48,49,111,50,112,51,52,113,67,114,115,116,117,118,119,120,121,54,122,123,124,55,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,26,141,142,143,144,145,10,68,11,12,13,14,15,16,69,17,19,20,146,21,58,59,60,62,147,31,148,56,149,150,32,151,152,153,154,155,156,157,158,159,1,2,160,34,161,70,162,35,36,163,164,165,166,167,168,169,170,37,171,172,173,174,175,71,176,72,73,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,39,40,197,198,199,74,75,76,77,78,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,79,80,81,63,82,23,83,44,271,272,273,274,45,275,276,84,277,46,47,278,279,280,281,282,85,86,283,284],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[87,88,89,90,91,92,93,286,287,288,289,290,291,292,94,95,96,97,98,105,107,108,109,110,48,49,111,50,112,51,52,113,67,114,115,116,117,118,119,120,121,54,122,123,293,124,55,125,126,127,294,128,134,135,136,137,139,0,295,142,143,144,145,10,68,11,12,13,14,15,16,69,17,19,146,21,58,59,60,147,296,27,297,298,299,28,29,300,30,301,302,303,31,304,148,56,149,150,32,151,152,153,155,156,158,305,159,1,306,307,2,160,161,70,162,35,36,163,164,165,166,167,168,169,170,171,308,309,310,311,312,71,72,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,39,40,197,198,199,74,75,76,77,78,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,255,256,258,259,260,261,262,263,264,267,268,269,270,313,314,79,80,81,63,82,83,44,315,316,317,275,276,84,277,46,47,278,280,281,282,85,86,318,283,284],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[319,320,321],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[87,88,89,90,91,92,322,93,286,287,288,289,290,291,292,323,324,94,95,96,97,98,325,99,100,101,102,103,104,105,106,107,326,108,109,110,48,49,327,111,50,112,51,52,113,53,67,114,115,116,117,118,119,120,121,54,122,123,293,124,55,125,126,328,329,127,294,128,330,331,129,130,131,132,133,134,332,333,135,136,137,138,334,335,336,337,285,139,140,0,338,295,339,340,341,26,342,141,343,142,143,144,344,145,10,68,11,12,13,14,15,16,69,17,19,20,146,21,58,59,60,62,147,296,27,297,298,299,28,29,345,300,30,301,302,303,31,346,347,348,349,350,304,351,352,353,354,355,356,148,56,149,150,32,151,152,153,154,155,156,157,158,305,159,1,306,33,307,2,160,357,34,161,70,162,35,36,163,164,165,166,167,168,169,358,359,170,360,57,37,361,171,362,363,364,365,366,367,368,369,308,370,371,372,373,374,375,3,376,377,378,379,380,381,382,383,384,309,385,386,310,387,388,389,390,391,392,393,394,395,311,396,397,398,399,400,312,401,402,172,173,174,175,71,176,72,73,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,403,38,404,39,40,41,197,405,42,43,66,198,199,406,407,74,75,76,77,78,408,409,200,410,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,411,412,413,414,415,416,417,418,419,226,420,421,422,423,424,425,426,227,228,229,427,230,231,428,232,233,234,235,236,237,238,239,240,241,242,243,244,429,245,4,5,6,430,431,432,433,434,435,246,247,248,249,250,436,437,438,439,440,441,442,443,444,7,445,446,251,252,253,254,255,256,257,258,259,260,261,262,263,447,448,449,450,451,8,452,453,454,455,456,319,457,458,459,264,265,266,267,268,269,270,460,313,314,79,80,81,63,82,22,23,461,83,462,463,464,465,466,467,44,271,272,273,315,24,316,317,25,274,468,469,45,275,276,84,277,46,47,278,279,280,281,282,85,86,318,283,284,9,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,64,485,486,487,488,489,490,65,491],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[58,59,60,61],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[62],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:159","failures":[323,324,334,492,342,360],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:136","sourceCode":"if (java.lang.reflect.Method.isVarArgs()) {\n    int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1));\n} ","type":"CtIfImpl"},"failures":[227,236,237],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[99,100,101,102,149,150,155,156,70,35,36,256,258,261,262,83,274,276,84,46,47,280,281,282],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[58,59,60,61],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[100,362,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[119,293,68,11,13,14,15,16,69,21],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[119,293,68,11,13,14,15,16,69,21],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":49,"org.easymock.tests2.UsageTest.argumentsOrdered":156,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":480,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":151,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":286,"org.easymock.tests2.DelegateToTest.testReturnException":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":173,"org.easymock.tests.MockingTest.testPartialClassMocking":39,"org.easymock.tests.MockClassControlTest.testToString":4,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":325,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":177,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":310,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":294,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":113,"org.easymock.tests2.UsageTest.wrongArguments":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":79,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":253,"org.easymock.samples.ExampleTest.answerVsDelegate":88,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":7,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":42,"org.easymock.tests2.UsageConstraintsTest.testNull":50,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":167,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":432,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":30,"org.easymock.tests2.CaptureTest.testPrimitive":12,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":82,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":196,"org.easymock.tests.UsageTest.moreThanOneArgument":256,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":223,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":411,"org.easymock.tests.UsageTest.argumentsOrdered":262,"org.easymock.tests.UsageVarargTest.varargIntAccepted":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":74,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":355,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":78,"org.easymock.tests.ReplayStateInvalidUsageTest.times":423,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":308,"org.easymock.tests2.DependencyTest.testClassMocking":328,"org.easymock.tests2.AnswerTest.answer":134,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":486,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":133,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":442,"org.easymock.tests2.CaptureTest.testAnd":10,"org.easymock.tests2.UsageTest.strictResetToDefault":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":299,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":415,"org.easymock.tests2.DelegateToTest.testDelegate":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":192,"org.easymock.tests.LimitationsTest.mockFinalMethod":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":250,"org.easymock.tests2.DependencyTest.testClassMockingSupport":329,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":22,"org.easymock.tests2.CaptureTest.testCapture1_2446744":13,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":131,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":418,"org.easymock.tests.UsageThrowableTest.throwError":237,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":444,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":9,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":402,"org.easymock.samples.PartialClassMockTest.testGetArea":290,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":419,"org.easymock.tests.MockingTest.testInterfaceMocking":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":75,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":178,"org.easymock.tests2.UsageTest.niceToStrict":32,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":139,"org.easymock.tests2.MockBuilderTest.testCreateMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":398,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":372,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":186,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":28,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":441,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":464,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":251,"org.easymock.tests.UsageOverloadedMethodTest.overloading":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":117,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":212,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":318,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":116,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":320,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":17,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":427,"org.easymock.tests.MockClassControlTest.testEquals":431,"org.easymock.tests2.EasyMockSupportClassTest.testAll":309,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":199,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":132,"org.easymock.tests2.CaptureTest.testCaptureAll":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":248,"org.easymock.tests.MockNameTest.defaultName":436,"org.easymock.tests2.UsageConstraintsTest.testMatches":118,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":416,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":224,"org.easymock.samples.ExampleTest.voteForRemovals":92,"org.easymock.tests.UsageVarargTest.allKinds":236,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":249,"org.easymock.samples.BasicClassMockTest.testPrintContent":289,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":243,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":176,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":352,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":458,"org.easymock.tests2.UsageConstraintsTest.greaterThan":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":385,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":362,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":459,"org.easymock.samples.ExampleTest.voteForRemoval":89,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":95,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":363,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":445,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":378,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":358,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":148,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":264,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":297,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":172,"org.easymock.tests2.CaptureTest.testCaptureFirst":21,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":298,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":158,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":468,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":208,"org.easymock.tests2.UsageTest.moreThanOneArgument":149,"org.easymock.tests2.CaptureTest.testCapture2_2446744":146,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":487,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":26,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":235,"org.easymock.tests.GenericTest.testBridgedEquals":407,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":313,"org.easymock.tests.UsageExpectAndReturnTest.longType":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":246,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":195,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":469,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":221,"org.easymock.tests.UsageCallCountTest.tooManyCalls":314,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":242,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":159,"org.easymock.tests.MockingTest.testNiceClassMocking":43,"org.easymock.tests.MockingTest.testClassMocking":38,"org.easymock.tests2.UsageConstraintsTest.testContains":115,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":266,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":105,"org.easymock.tests2.UsageConstraintsTest.testFind":111,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":284,"org.easymock.tests.MockTypeTest.fromEasyMockClass":443,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":108,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":45,"org.easymock.tests.UsageExpectAndReturnTest.object":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":300,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":231,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":450,"org.easymock.tests.UsageTest.exactCallCountByLastCall":263,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":412,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":330,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":217,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":227,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":316,"org.easymock.tests.MockClassControlTest.testHashCode":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":347,"org.easymock.tests2.EasyMockSupportTest.testVerify":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":393,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":413,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":463,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":315,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":130,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":129,"org.easymock.tests.UsageVarargTest.varargCharAccepted":230,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":452,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":491,"org.easymock.tests2.UsageTest.openCallCountByLastCall":152,"org.easymock.tests.DefaultClassInstantiatorTest.object":453,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":462,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":394,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":346,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":6,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":361,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":437,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":312,"org.easymock.tests2.UsageTest.resumeIfFailure":157,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":175,"org.easymock.tests2.StubTest.stubWithReturnValue":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":338,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":124,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":210,"org.easymock.tests2.SerializationTest.testAllMockedMethod":60,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":485,"org.easymock.samples.SupportTest.voteForRemovals":292,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":189,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":61,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":65,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":332,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":467,"org.easymock.tests.UsageExpectAndThrowTest.object":187,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":122,"org.easymock.tests2.DelegateToTest.testWrongClass":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":86,"org.easymock.tests.UsageStrictMockTest.range":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":323,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":380,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":188,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":0,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":425,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":435,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.UsageUnorderedTest.message":83,"org.easymock.tests.UsageVerifyTest.twoReturns":282,"org.easymock.tests.UsageVarargTest.varargByteAccepted":234,"org.easymock.tests2.ThreadingTest.testThreadSafe":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":396,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":270,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":451,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":288,"org.easymock.tests2.CaptureTest.testCapture_2617107":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":489,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":63,"org.easymock.tests2.UsageConstraintsTest.any":67,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":422,"org.easymock.tests2.StubTest.stub":62,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":490,"org.easymock.tests.UsageExpectAndThrowTest.longType":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":174,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":319,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":421,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":162,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":304,"org.easymock.tests.LimitationsTest.mockNativeMethod":200,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":367,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":163,"org.easymock.tests2.NameTest.nameForMocksControl":102,"org.easymock.tests2.MockedExceptionTest.testMockedException":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":386,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":181,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":197,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":326,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":164,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":295,"org.easymock.tests.MockingTest.testNicePartialClassMocking":40,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":169,"org.easymock.tests2.CaptureTest.testCaptureLast":16,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":365,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":23,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":160,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":52,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":123,"org.easymock.tests.MockingTest.testTwoMocks":404,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":185,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":155,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":125,"org.easymock.samples.ExampleTest.removeNonExistingDocument":322,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":348,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":455,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":96,"org.easymock.tests2.MockBuilderTest.testCreateMockString":141,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":387,"org.easymock.tests.UsageExpectAndThrowTest.floatType":179,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":135,"org.easymock.tests.UsageVerifyTest.twoThrows":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":331,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":311,"org.easymock.samples.ExampleTest.voteAgainstRemoval":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":481,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":433,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":171,"org.easymock.tests.LimitationsTest.privateConstructor":409,"org.easymock.tests2.UsageConstraintsTest.testNotNull":55,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":103,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":244,"org.easymock.tests2.UsageTest.defaultResetToNice":154,"org.easymock.samples.ExampleTest.voteAgainstRemovals":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":216,"org.easymock.tests.UsageVarargTest.differentLength":428,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":366,"org.easymock.tests2.CallbackTest.callback":31,"org.easymock.tests2.UsageConstraintsTest.equals":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":360,"org.easymock.tests.UsageTest.openCallCountByLastCall":259,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":81,"org.easymock.tests.UsageCallCountTest.tooFewCalls":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":254,"org.easymock.tests.UsageThrowableTest.throwCheckedException":241,"org.easymock.tests.MockingTest.testStrictClassMocking":403,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":2,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":73,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":370,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":424,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":307,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":137,"org.easymock.tests.ObjectMethodsTest.testHashCode":449,"org.easymock.tests2.NameTest.nameForNiceMock":101,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":98,"org.easymock.tests2.DependencyTest.testInterfaceMocking":127,"org.easymock.samples.ExampleTest.addDocument":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":401,"org.easymock.tests2.DelegateToTest.testStubDelegate":143,"org.easymock.tests2.AnswerTest.stubAnswer":136,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":84,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":339,"org.easymock.tests.UsageVarargTest.varargLongAccepted":233,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndReturnTest.floatType":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":128,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":324,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":121,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":25,"org.easymock.tests.UsageThrowableTest.noUpperLimit":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":354,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":110,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":14,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":321,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":454,"org.easymock.tests2.UsageConstraintsTest.testSame":112,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":202,"org.easymock.samples.SupportTest.addDocument":291,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":33,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":388,"org.easymock.tests.GenericTest.testPackageScope":198,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":353,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":405,"org.easymock.tests2.NameTest.nameForMock":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":213,"org.easymock.tests2.UsageStrictMockTest.differentMethods":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":342,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":191,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":447,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":273,"org.easymock.tests2.MockedExceptionTest.testRealException":106,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":483,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":80,"org.easymock.tests2.NameTest.nameForStrictMock":100,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":285,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":168,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":379,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":456,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":54,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":335,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests2.UsageConstraintsTest.lessThan":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":392,"org.easymock.tests2.CaptureTest.testCaptureRightOne":19,"org.easymock.tests2.UsageConstraintsTest.testOr":51,"org.easymock.tests.UsageRangeTest.combination":44,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":165,"org.easymock.tests.UsageTest.wrongArguments":258,"org.easymock.tests2.MockBuilderTest.testWithConstructor":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":389,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":214,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":457,"org.easymock.tests.UsageVarargTest.varargShortAccepted":232,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":460,"org.easymock.tests2.UsageConstraintsTest.cmpTo":114,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":473,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":417,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":336,"org.easymock.tests.UsageTest.unexpectedCallWithArray":257,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":276,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":269,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":215,"org.easymock.tests2.CaptureTest.testCapture":18,"org.easymock.tests2.UsageConstraintsTest.constraints":48,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":277,"org.easymock.samples.ExampleTest.addAndChangeDocument":93,"org.easymock.tests.UsageStrictMockTest.testVerify":279,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":287,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":247,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":76,"org.easymock.tests.LimitationsTest.abstractClass":408,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":77,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":29,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":228}}]
