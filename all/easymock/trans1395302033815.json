[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,0,1,4,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,5,74,75,76,77,78,79,6,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,8,143,144,145,9,10,146,147,11,148,12,13,14,15,149,16,17,18,19,150,20,21,22,23,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,24,192,193,25,26,194,195,196,27,197,198,199,200,201,202],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[203,164,166,180,181,200],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[204,205,206,207,208,209,210],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[211],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[212,213,214,215,216,217,29,30,31,218,219,32,33,34,35,220,36,37,38,39,40,221,222,223,224,225,41,226,227,228,229,230,231,42,232,43,44,45,46,233,234,47,235,48,49,236,50,237,51,52,53,54,204,238,55,56,211,57,0,1,2,239,4,58,59,60,61,62,63,64,240,241,242,243,65,66,67,68,69,70,71,244,245,72,73,246,247,248,5,74,75,76,77,78,79,6,249,80,81,250,82,251,83,84,85,252,86,253,87,88,89,90,254,91,92,93,94,95,96,255,97,98,99,100,101,102,103,104,105,106,107,108,256,109,110,111,112,257,258,259,260,261,113,262,114,115,263,116,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,117,281,118,210,119,282,283,120,284,285,286,287,288,289,290,121,291,292,293,294,295,296,297,298,122,299,300,301,302,303,304,305,123,306,307,308,309,310,311,312,313,314,124,315,316,317,318,319,125,320,321,322,323,324,126,127,128,129,325,130,326,327,328,328,329,329,330,131,331,132,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,133,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,203,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,134,382,135,136,137,138,139,140,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,7,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,141,142,419,8,143,420,144,145,421,422,9,10,146,147,11,148,12,13,14,15,149,16,17,18,19,150,20,21,22,23,423,424,151,425,426,427,428,429,152,153,430,154,431,432,433,155,434,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,435,436,437,438,439,440,441,442,443,183,184,185,186,187,444,445,446,447,448,449,450,451,452,453,454,455,188,456,189,190,191,24,192,457,458,193,25,26,194,459,195,196,27,197,198,199,460,461,462,463,464,465,466,467,468,469,470,471,472,200,201,473,474,475,476,477,202,478,479,480,481,482,483,28,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[38,133,138,485,486,24,192],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[297,298,122,299,366,367,368,402,435,480,481,482,483,28,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[370,371,372,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[65,67,73,89,90,92,94,95,255,106,110],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[33,52,54,58,59,60,61,62,63,64,84,113,114,115,116,277,117,118,119,120,303,123,124,125,126,128,129,130,328,328,329,329,131,132,203,362,364,151,152,153,154,162,163,164,165,166,170,171,177,178,179,180,181,183,184,185,187,200,201],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[212,213,214,215,216,217,29,30,31,218,219,32,33,34,35,220,36,37,38,39,40,221,222,223,224,225,41,226,227,228,229,230,231,42,232,43,44,45,46,233,234,47,235,48,49,236,50,237,51,52,53,54,204,238,55,56,211,57,0,1,2,239,4,58,59,60,61,487,62,63,64,488,240,489,490,491,241,242,243,65,66,67,68,69,70,71,244,245,72,73,246,247,248,5,74,75,76,77,78,79,6,249,80,81,250,82,251,83,84,85,252,86,253,87,88,89,90,254,91,92,93,94,95,96,255,97,98,99,100,101,102,103,104,105,106,107,108,256,109,110,111,112,257,258,259,260,261,113,262,114,115,263,116,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,117,281,118,210,119,492,282,283,120,284,285,286,287,288,289,290,121,291,292,293,294,295,296,297,298,122,299,300,301,302,303,304,305,123,306,307,308,309,310,311,312,313,314,124,315,316,317,318,319,125,320,321,322,323,324,126,127,128,129,325,130,326,327,328,329,330,131,331,132,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,133,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,203,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,134,382,135,136,137,138,139,140,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,7,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,141,142,419,8,143,420,144,145,421,422,9,10,146,147,11,148,12,13,14,15,149,16,17,18,19,150,20,21,22,23,423,424,151,425,493,426,427,428,429,152,153,430,154,431,432,433,155,434,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,435,436,437,438,439,440,441,442,443,183,184,185,186,187,444,445,446,447,448,449,450,451,452,453,454,455,188,456,189,190,191,24,192,457,458,193,25,26,194,459,195,196,27,197,198,199,460,461,462,463,464,465,466,467,494,495,468,469,470,471,472,200,201,473,474,475,476,477,202,478,479,480,481,482,483,28,484],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[457],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[65,67,73,89,90,92,94,95,255,106,110],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[38,39,50,237,51,55,56,57,239,66,67,69,70,244,245,247,248,75,78,79,6,250,86,87,88,89,91,92,93,94,99,100,101,102,104,105,111,112,327,133,138,139,389,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,434,162,163,166,168,169,170,171,173,174,175,176,178,179,180,181,188,456,189,190,191,25,26,194,196,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.LastControl:61","failures":[65,66,67,244,245,73,248,89,90,92,94,95,110,142,419,8,455],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[269],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[496,497,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[29,30,31,218,219,32,33,34,36,38,39,41,42,232,43,44,45,46,233,234,47,235,48,49,50,237,51,52,53,54,55,56,57,0,1,239,4,58,59,60,61,62,63,64,65,66,68,69,244,245,72,73,246,247,248,5,74,75,77,79,6,249,250,82,251,83,84,85,252,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,262,114,115,263,116,266,270,271,272,277,117,118,119,120,121,297,298,122,299,303,123,124,125,126,127,128,129,130,327,328,328,329,329,131,132,133,359,360,361,203,362,363,364,365,366,367,368,370,372,136,138,139,384,385,386,389,411,417,141,142,419,8,143,420,144,145,421,422,9,10,146,147,11,148,12,13,14,15,149,16,17,18,19,150,20,21,22,23,151,152,153,154,155,434,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,435,437,183,184,185,186,187,188,456,189,190,191,24,192,457,458,193,25,26,194,196,27,199,465,200,201,473,475,476,202,479,480,481,482,483,28,484],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[212,213,214,215,29,30,31,218,219,32,33,34,35,36,37,38,39,40,41,42,232,43,44,45,46,233,234,47,235,48,49,50,237,51,52,53,54,55,56,57,0,1,239,4,58,59,60,61,62,63,64,65,66,67,68,69,70,71,244,245,72,73,246,247,248,5,74,75,76,77,78,79,6,249,80,81,250,82,251,83,84,85,252,86,87,88,89,90,91,92,93,94,95,96,255,97,98,99,100,101,102,103,104,105,106,107,108,256,109,110,111,112,258,113,262,114,115,263,116,264,266,269,270,271,272,275,277,117,281,118,119,283,120,285,121,297,298,122,299,303,123,124,125,126,127,128,129,130,327,328,328,329,329,131,132,133,359,360,361,203,362,363,364,365,366,367,368,370,372,134,135,136,137,138,139,140,384,385,386,389,411,417,141,142,419,8,143,420,144,145,421,422,9,10,146,147,11,148,12,13,14,15,149,16,17,18,19,150,20,21,22,23,151,429,152,153,154,155,434,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,435,437,439,440,441,442,443,183,184,185,186,187,455,188,456,189,190,191,24,192,457,458,193,25,26,194,459,195,196,27,197,198,199,460,461,462,463,464,465,200,201,473,474,475,476,477,202,478,479,480,481,482,483,28,484],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[499,96,101,112],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[4,5,6,8,9,10,146,147,11,148,12,13,14,15,149,16,17,18,19,150,20,21,22,23,155,156,157,158,159,160,161,24,25,26,27,476,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[340,344],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[212,213,214,215,216,217,29,30,31,218,219,32,33,34,35,220,36,37,38,39,40,221,222,223,224,225,41,226,227,228,229,230,231,42,232,43,44,45,46,233,234,47,235,48,49,236,50,237,51,52,53,54,204,238,55,56,211,57,0,1,2,239,4,58,59,60,61,487,62,63,64,488,240,489,490,491,241,242,243,65,66,67,68,69,70,71,244,245,72,73,246,247,248,5,74,75,76,77,78,79,6,249,80,81,250,82,251,83,84,85,252,86,253,87,88,89,90,254,91,92,93,94,95,96,255,97,98,99,100,101,102,103,104,105,106,107,108,256,109,110,111,112,257,258,259,260,261,113,262,114,115,263,116,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,117,281,118,210,119,492,282,283,120,284,285,286,287,288,289,290,121,291,292,293,294,295,296,297,298,122,299,300,301,302,303,304,305,123,306,307,308,309,310,311,312,313,314,124,315,316,317,318,319,125,320,321,322,323,324,126,127,128,129,325,130,326,327,328,329,330,131,331,132,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,133,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,203,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,134,382,135,136,137,138,139,140,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,7,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,141,142,419,8,143,420,144,145,421,422,9,10,146,147,11,148,12,13,14,15,149,16,17,18,19,150,20,21,22,23,423,424,151,425,493,426,427,428,429,152,153,430,154,431,432,433,155,434,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,435,436,437,438,439,440,441,442,443,183,184,185,186,187,444,445,446,447,448,449,450,451,452,453,454,455,188,456,189,190,191,24,192,457,458,193,25,26,194,459,195,196,27,197,198,199,460,461,462,463,464,465,466,467,494,495,468,469,470,471,472,200,201,473,474,475,476,477,202,478,479,480,481,482,483,28,484],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[4,5,6,359,360,361,7,8,9,10,146,147,11,148,12,13,14,15,149,16,17,18,19,150,20,21,22,23,155,156,157,158,159,160,161,24,25,26,27,476,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[270,274,277,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[270,274,277,120,123],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":90,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.UsageTest.argumentsOrdered":81,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":405,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":78,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":331,"org.easymock.tests2.DelegateToTest.testReturnException":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":481,"org.easymock.tests.MockingTest.testPartialClassMocking":152,"org.easymock.tests.MockClassControlTest.testToString":376,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":257,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":309,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":123,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":9,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":141,"org.easymock.tests2.UsageTest.wrongArguments":76,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":231,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":462,"org.easymock.samples.ExampleTest.answerVsDelegate":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":470,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":432,"org.easymock.tests2.UsageConstraintsTest.testNull":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":235,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":381,"org.easymock.tests2.CaptureTest.testPrimitive":68,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":23,"org.easymock.tests.UsageTest.moreThanOneArgument":194,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":363,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":420,"org.easymock.tests.UsageTest.argumentsOrdered":198,"org.easymock.tests.UsageVarargTest.varargIntAccepted":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":209,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":275,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":295,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":187,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":41,"org.easymock.tests.ReplayStateInvalidUsageTest.times":355,"org.easymock.tests2.DependencyTest.testClassMocking":216,"org.easymock.tests2.AnswerTest.answer":31,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":412,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":215,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":495,"org.easymock.tests2.CaptureTest.testAnd":65,"org.easymock.tests2.UsageTest.strictResetToDefault":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":269,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":362,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":45,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":422,"org.easymock.tests2.DelegateToTest.testDelegate":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":150,"org.easymock.tests.LimitationsTest.mockFinalMethod":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":443,"org.easymock.tests2.DependencyTest.testClassMockingSupport":217,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":464,"org.easymock.tests2.CaptureTest.testCapture1_2446744":69,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":18,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":213,"org.easymock.tests.UsageThrowableTest.throwError":155,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":349,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":469,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":493,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":321,"org.easymock.samples.PartialClassMockTest.testGetArea":132,"org.easymock.tests.MockingTest.testInterfaceMocking":430,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":184,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":385,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":10,"org.easymock.tests2.UsageTest.niceToStrict":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":310,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":337,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":117,"org.easymock.tests2.MockBuilderTest.testCreateMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":317,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":15,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":46,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":494,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":460,"org.easymock.tests.UsageOverloadedMethodTest.overloading":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":319,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":476,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":101,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":173,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":100,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":72,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":447,"org.easymock.tests2.EasyMockSupportClassTest.testAll":303,"org.easymock.tests.MockClassControlTest.testEquals":380,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":441,"org.easymock.tests2.CaptureTest.testCaptureAll":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":214,"org.easymock.tests.MockNameTest.defaultName":426,"org.easymock.tests2.UsageConstraintsTest.testMatches":102,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":364,"org.easymock.samples.ExampleTest.voteForRemovals":130,"org.easymock.tests.UsageVarargTest.allKinds":455,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":442,"org.easymock.samples.BasicClassMockTest.testPrintContent":324,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":160,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":484,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":292,"org.easymock.tests2.UsageConstraintsTest.greaterThan":104,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":304,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":456,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":272,"org.easymock.samples.ExampleTest.voteForRemoval":128,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":346,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":237,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":273,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":264,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":479,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":43,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":480,"org.easymock.tests2.CaptureTest.testCaptureFirst":248,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":44,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":169,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":52,"org.easymock.tests2.UsageTest.moreThanOneArgument":75,"org.easymock.tests2.CaptureTest.testCapture2_2446744":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":413,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":120,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":454,"org.easymock.tests.GenericTest.testBridgedEquals":373,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":394,"org.easymock.tests.UsageExpectAndReturnTest.longType":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":439,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":22,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":457,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":256,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":367,"org.easymock.tests.UsageCallCountTest.tooManyCalls":395,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":159,"org.easymock.tests.MockingTest.testNiceClassMocking":433,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":59,"org.easymock.tests.MockingTest.testClassMocking":428,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":388,"org.easymock.tests2.UsageConstraintsTest.testContains":99,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":122,"org.easymock.tests2.UsageConstraintsTest.testFind":91,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":25,"org.easymock.tests.MockTypeTest.fromEasyMockClass":468,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":134,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":57,"org.easymock.tests.UsageExpectAndReturnTest.object":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":266,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":47,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":449,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":206,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":436,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":204,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":444,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":178,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":475,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":287,"org.easymock.tests.MockClassControlTest.testHashCode":379,"org.easymock.tests2.EasyMockSupportTest.testVerify":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":312,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":145,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":473,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":212,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":253,"org.easymock.tests.UsageVarargTest.varargCharAccepted":448,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":338,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":496,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":49,"org.easymock.tests.DefaultClassInstantiatorTest.object":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":359,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":286,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":270,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":378,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":125,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":377,"org.easymock.tests2.UsageTest.resumeIfFailure":250,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":467,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":483,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":171,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":109,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":411,"org.easymock.samples.SupportTest.voteForRemovals":131,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":289,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":17,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":417,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":218,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":438,"org.easymock.tests.UsageExpectAndThrowTest.object":149,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":107,"org.easymock.tests2.DelegateToTest.testWrongClass":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":200,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":201,"org.easymock.tests.UsageStrictMockTest.range":138,"org.easymock.samples.ConstructorCalledMockTest.testTax":328,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":242,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":16,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":118,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":300,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":386,"org.easymock.tests2.CaptureTest.testCaptureNone":245,"org.easymock.tests.UsageUnorderedTest.message":133,"org.easymock.tests.UsageVerifyTest.twoReturns":192,"org.easymock.tests.UsageVarargTest.varargByteAccepted":453,"org.easymock.tests2.ThreadingTest.testThreadSafe":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":315,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":392,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":323,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":67,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":8,"org.easymock.tests2.UsageConstraintsTest.any":97,"org.easymock.tests2.StubTest.stub":239,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":354,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndThrowTest.longType":147,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":343,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":353,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":37,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":151,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":181,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":372,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":223,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":40,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":500,"org.easymock.tests2.NameTest.nameForMocksControl":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":225,"org.easymock.tests2.MockedExceptionTest.testMockedException":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":305,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":27,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":11,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":211,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":119,"org.easymock.tests.MockingTest.testNicePartialClassMocking":153,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":116,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":221,"org.easymock.tests2.CaptureTest.testCaptureLast":244,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":465,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":64,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":108,"org.easymock.tests.MockingTest.testTwoMocks":429,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":488,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":14,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":111,"org.easymock.samples.ExampleTest.removeNonExistingDocument":326,"org.easymock.tests.UsageStrictMockTest.differentMethods":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":227,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":288,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":341,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":51,"org.easymock.tests2.MockBuilderTest.testCreateMockString":285,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":374,"org.easymock.tests.UsageExpectAndThrowTest.floatType":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":306,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":302,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":32,"org.easymock.tests.UsageVerifyTest.twoThrows":24,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":238,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":124,"org.easymock.samples.ExampleTest.voteAgainstRemoval":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":384,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":271,"org.easymock.tests.LimitationsTest.privateConstructor":424,"org.easymock.tests2.UsageConstraintsTest.testNotNull":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":161,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":297,"org.easymock.tests2.UsageTest.defaultResetToNice":249,"org.easymock.samples.ExampleTest.voteAgainstRemovals":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":177,"org.easymock.tests.UsageVarargTest.differentLength":450,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":222,"org.easymock.tests2.CallbackTest.callback":55,"org.easymock.tests2.UsageConstraintsTest.equals":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":267,"org.easymock.tests.UsageTest.openCallCountByLastCall":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":419,"org.easymock.tests.UsageCallCountTest.tooFewCalls":390,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":463,"org.easymock.tests.UsageThrowableTest.throwCheckedException":158,"org.easymock.tests.MockingTest.testStrictClassMocking":427,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":435,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":226,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":62,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":34,"org.easymock.tests2.CompareToTest.testGreateOrEqual":499,"org.easymock.tests.ObjectMethodsTest.testHashCode":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":208,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":53,"org.easymock.tests2.NameTest.nameForNiceMock":260,"org.easymock.tests2.DependencyTest.testInterfaceMocking":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":207,"org.easymock.samples.ExampleTest.addDocument":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":316,"org.easymock.tests2.DelegateToTest.testStubDelegate":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":320,"org.easymock.tests2.AnswerTest.stubAnswer":33,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":136,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":492,"org.easymock.tests.UsageVarargTest.varargLongAccepted":452,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":180,"org.easymock.tests.UsageExpectAndReturnTest.floatType":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":329,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":477,"org.easymock.tests.UsageThrowableTest.noUpperLimit":434,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":294,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":240,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":70,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":340,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":163,"org.easymock.tests2.UsageConstraintsTest.testSame":93,"org.easymock.samples.SupportTest.addDocument":330,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":487,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":307,"org.easymock.tests.GenericTest.testPackageScope":370,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":293,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":431,"org.easymock.tests2.NameTest.nameForMock":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":174,"org.easymock.tests2.UsageStrictMockTest.differentMethods":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":19,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":190,"org.easymock.tests2.MockedExceptionTest.testRealException":299,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":408,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":142,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":358,"org.easymock.tests2.NameTest.nameForStrictMock":259,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":280,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":497,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":263,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":241,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":485,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":106,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":342,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":277,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.UsageConstraintsTest.lessThan":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":232,"org.easymock.tests2.CaptureTest.testCaptureRightOne":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":311,"org.easymock.tests2.UsageConstraintsTest.testOr":94,"org.easymock.tests.UsageRangeTest.combination":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":262,"org.easymock.tests.UsageTest.wrongArguments":195,"org.easymock.tests2.MockBuilderTest.testWithConstructor":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":308,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":375,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":175,"org.easymock.tests.UsageVarargTest.varargShortAccepted":451,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":344,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":393,"org.easymock.tests2.UsageConstraintsTest.cmpTo":98,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":7,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":6,"org.easymock.tests2.CaptureTest.testCaptureFromStub":246,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":348,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":278,"org.easymock.tests.UsageTest.unexpectedCallWithArray":459,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":135,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":391,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":176,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":137,"org.easymock.tests2.UsageConstraintsTest.constraints":89,"org.easymock.samples.ExampleTest.addAndChangeDocument":327,"org.easymock.tests.UsageStrictMockTest.testVerify":383,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":322,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":382,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":440,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":185,"org.easymock.tests.LimitationsTest.abstractClass":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":186,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":486,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":233}}]
