[{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.EasyMock:2124","failures":[4,5,6,7,8,9],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:920","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1191","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,0,49,50,51,52,1,53,54,55,56,57,58,59,60,61,62,63,64,2,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,4,6,110,7,111,112,113,114,115,116,117,118,119,120,121,122,9,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[98,110,204,120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[11,15,16,19,25,39,0,52,1,53,58,2,66,205,90,91,92,99,206,102,103,107,207,108,109,208,209,210,211,147,212,213,214,215,216,217,218,219,162,163,164,166,168,220,221,222,171,195,196],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[25,26,28,30,31,223,42,46,74,224,81],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[225,226,227],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[228],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[23,24,27,28,29,30,35,37,38,40,41,46,47,48,229,86,89,230,231,136,137,138,139,140,151,153,154,155,157,158,161,197,232,233,234,235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[236],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[237,238,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[50,240,113,116,211,241,242,243,244,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[246,247,248],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[249,250,251],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[54,55,56,252],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[253,73,254],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[74,75,224,76,77,255,256,78,79,80,81,229,82,83,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[258,259,260,261,9,262,263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[32,37,48,264],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[49,265],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[89,99,104,105,109,4,161,166,169,170,171,194,196],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,0,49,50,51,1,54,55,57,58,59,60,61,62,63,2,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,94,95,96,97,98,99,100,101,102,104,105,106,108,109,4,6,110,111,112,113,114,115,116,117,119,121,122,123,124,126,128,130,131,132,133,134,135,136,137,138,139,140,266,141,142,143,145,147,148,149,150,151,153,154,155,157,158,159,160,267,268,161,163,164,166,167,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,198,199,200,202],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[69,70,269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[270],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[249,250,251],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[28,271,71,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[273],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[32,37,48,264],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[106],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":26,"org.easymock.tests2.UsageTest.argumentsOrdered":207,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":166,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":254,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":103,"org.easymock.tests2.StubTest.stubWithReturnValue":86,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":182,"org.easymock.tests2.SerializationTest.testAllMockedMethod":56,"org.easymock.tests2.DelegateToTest.testReturnException":258,"org.easymock.tests.MockingTest.testPartialClassMocking":198,"org.easymock.samples.SupportTest.voteForRemovals":121,"org.easymock.tests.MockClassControlTest.testToString":242,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":3,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":252,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":227,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":95,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":85,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":43,"org.easymock.tests2.DelegateToTest.testWrongClass":259,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":158,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":32,"org.easymock.tests2.UsageTest.wrongArguments":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":153,"org.easymock.samples.ConstructorCalledMockTest.testTax":230,"org.easymock.tests.UsageStrictMockTest.range":163,"org.easymock.samples.ExampleTest.answerVsDelegate":9,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":17,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":111,"org.easymock.tests2.UsageConstraintsTest.testNull":28,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":50,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":19,"org.easymock.tests2.CaptureTest.testPrimitive":76,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":155,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":221,"org.easymock.tests.UsageTest.moreThanOneArgument":167,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":268,"org.easymock.tests2.CaptureTest.testCaptureNone":79,"org.easymock.tests.UsageUnorderedTest.message":217,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":210,"org.easymock.tests.UsageVerifyTest.twoReturns":196,"org.easymock.tests2.ThreadingTest.testThreadSafe":68,"org.easymock.tests.UsageTest.argumentsOrdered":222,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":226,"org.easymock.tests2.CaptureTest.testCapture_2617107":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":136,"org.easymock.tests2.UsageConstraintsTest.any":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":140,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":246,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":90,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":98,"org.easymock.tests.LimitationsTest.mockNativeMethod":159,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":192,"org.easymock.tests2.AnswerTest.answer":4,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":223,"org.easymock.tests2.CaptureTest.testAnd":74,"org.easymock.tests2.UsageTest.strictResetToDefault":100,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":14,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":149,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":170,"org.easymock.tests2.DelegateToTest.testDelegate":261,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":200,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":57,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":51,"org.easymock.tests.MockingTest.testNicePartialClassMocking":199,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":62,"org.easymock.tests2.CaptureTest.testCaptureLast":78,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":31,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":117,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":44,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":193,"org.easymock.tests2.CaptureTest.testCapture1_2446744":77,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":173,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":249,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":225,"org.easymock.tests.UsageThrowableTest.throwError":128,"org.easymock.samples.ExampleTest.removeNonExistingDocument":127,"org.easymock.tests.UsageStrictMockTest.differentMethods":164,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":70,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":211,"org.easymock.tests2.MockBuilderTest.testCreateMockString":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":39,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":5,"org.easymock.tests.UsageVerifyTest.twoThrows":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":96,"org.easymock.samples.PartialClassMockTest.testGetArea":119,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":137,"org.easymock.samples.ExampleTest.voteAgainstRemoval":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":160,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":65,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":241,"org.easymock.tests2.UsageTest.niceToStrict":102,"org.easymock.tests2.ThreadingTest.testChangeDefault":251,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":135,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":49,"org.easymock.tests2.MockBuilderTest.testCreateMock":52,"org.easymock.tests2.UsageTest.defaultResetToNice":106,"org.easymock.samples.ExampleTest.voteAgainstRemovals":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":188,"org.easymock.tests.UsageVarargTest.differentLength":209,"org.easymock.tests2.CallbackTest.callback":208,"org.easymock.tests.UsageTest.openCallCountByLastCall":169,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":15,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":270,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":23,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":239,"org.easymock.tests.UsageOverloadedMethodTest.overloading":142,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":37,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":114,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":184,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":247,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":36,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":80,"org.easymock.tests.UsageThrowableTest.throwCheckedException":132,"org.easymock.tests2.EasyMockSupportClassTest.testAll":94,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":146,"org.easymock.tests2.CaptureTest.testCaptureAll":75,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":116,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":152,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":113,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":269,"org.easymock.tests2.UsageConstraintsTest.testMatches":38,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.tests2.CompareToTest.testGreateOrEqual":264,"org.easymock.samples.ExampleTest.voteForRemovals":126,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":72,"org.easymock.tests.UsageVarargTest.allKinds":272,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":194,"org.easymock.tests2.DependencyTest.testInterfaceMocking":84,"org.easymock.samples.ExampleTest.addDocument":125,"org.easymock.tests2.DelegateToTest.testStubDelegate":73,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":134,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":205,"org.easymock.tests2.AnswerTest.stubAnswer":6,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":260,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":161,"org.easymock.tests2.UsageConstraintsTest.greaterThan":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":148,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":66,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":165,"org.easymock.samples.ExampleTest.voteForRemoval":123,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":69,"org.easymock.tests.UsageExpectAndReturnTest.floatType":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":191,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":88,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":231,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":41,"org.easymock.tests.UsageThrowableTest.noUpperLimit":129,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":24,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":99,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":240,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":255,"org.easymock.tests2.SerializationTest.test":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":273,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":12,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":130,"org.easymock.tests2.UsageConstraintsTest.testSame":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":174,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":253,"org.easymock.tests2.CaptureTest.testCaptureFirst":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":13,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":180,"org.easymock.tests.GenericTest.testPackageScope":145,"org.easymock.tests2.CaptureTest.testCapture2_2446744":82,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":71,"org.easymock.tests2.UsageTest.moreThanOneArgument":101,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":215,"org.easymock.tests.UsageExpectAndReturnTest.longType":176,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":10,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":185,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":271,"org.easymock.tests2.UsageStrictMockTest.differentMethods":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":177,"org.easymock.tests.UsageCallCountTest.tooManyCalls":216,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":181,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":154,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":112,"org.easymock.tests2.UsageConstraintsTest.testContains":35,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":87,"org.easymock.tests2.UsageConstraintsTest.testFind":27,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":143,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":61,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":218,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":8,"org.easymock.tests.UsageExpectAndReturnTest.object":183,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":42,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":63,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":0,"org.easymock.tests2.UsageStrictMockTest.range":91,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":18,"org.easymock.tests.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":11,"org.easymock.tests2.CaptureTest.testCaptureRightOne":81,"org.easymock.tests2.UsageConstraintsTest.testOr":30,"org.easymock.tests.UsageRangeTest.combination":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":58,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":189,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":263,"org.easymock.tests.UsageTest.wrongArguments":220,"org.easymock.tests2.EasyMockSupportTest.testVerify":22,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":186,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":201,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":214,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":67,"org.easymock.tests2.UsageConstraintsTest.cmpTo":34,"org.easymock.tests2.CompareToTest.testLessThan":236,"org.easymock.tests2.UsageTest.openCallCountByLastCall":104,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":105,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":21,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":237,"org.easymock.tests2.CaptureTest.testCaptureFromStub":229,"org.easymock.tests.UsageTest.unexpectedCallWithArray":168,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":156,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":213,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":187,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":244,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":2,"org.easymock.tests2.UsageConstraintsTest.constraints":25,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":162,"org.easymock.tests.CapturesMatcherTest.test":257,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":172,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":120,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":97,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":256,"org.easymock.tests2.UsageTest.resumeIfFailure":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":179,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":16}}]
