[{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[0],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[17,18],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[19,20,21,22,23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[5,6,14,26,27,28,29,30,31,32,33],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[34,35,36,37,38,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[40,41,42,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:314","failures":[44,45,46,47],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[50,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[50,74,75,76,77,78,79,80,81,82,83,84,84,85,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,51,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,44,45,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,37,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,46,47,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,55,56,240,5,241,6,7,8,9,10,11,242,12,14,15,243,16,244,245,246,247,248,249,58,59,60,250,61,251,252,253,254,73,255,256,257,258,41,42,43,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,63,66,68,69,71,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,26,27,317,28,318,29,30,319,31,320,321,322,323,18,324,325,326,0,32,327,328,329,330,33,331,332,333,334,335],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[336,239,321],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[337,284,286],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[239,338,339,340,55,56,240,341,57,342,343,344,249,345,346,58,347,348,349,350,351,352,353,354,355,59,356,357,358,359,360,60,361,362,61,251,252,41,43,273,274,275,276,278,279,62,63,64,65,66,67,68,69,363,70,71,72,364,365,366,335,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[50,86,87,48,113,114,51,49,145,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,52,53,382,383,384,191,192,193,385,386,230,233,234,236,237,238,54,239,339,340,55,56,240,341,57,5,342,343,249,346,58,347,348,349,351,352,353,354,59,356,357,358,359,360,60,61,251,252,43,273,274,276,278,62,63,64,65,66,67,68,69,70,71,72,364,366],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[234,340],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"position":"org.easymock.internal.LastControl:70","failures":[50,74,75,76,77,78,79,387,80,81,82,83,84,84,85,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,388,112,389,113,114,51,115,140,141,155,156,157,158,159,175,37,185,211,212,213,214,215,227,228,229,239,5,241,6,7,8,9,10,11,242,12,14,15,243,16,248,305,310,311,315,316,26,27,317,28,318,29,30,319,31,320,321,322,323,18,324,325,326,0,32,327,328,329,330,33,331,332,390,333,334],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[74,75,76,77,78,79,387,80,81,82,83,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,388,112,389,391,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,392,143,144,393,394,395,396,397,398,399,400,401,402,403,146,44,45,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,404,405,406,407,163,164,36,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,408,183,184,37,185,186,187,188,189,190,409,410,411,412,413,414,415,416,417,418,419,420,421,337,422,423,424,425,426,194,427,428,429,430,431,195,432,196,433,197,198,199,200,434,201,202,203,204,205,206,207,208,209,210,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,211,212,213,214,215,216,46,47,217,218,219,453,220,221,222,223,224,225,226,227,228,229,231,232,454,235,5,241,6,7,8,9,10,11,242,12,14,15,243,16,244,245,246,247,248,250,61,251,252,253,254,73,255,256,257,258,42,259,260,261,262,263,264,265,266,267,268,269,270,271,455,456,457,458,459,272,460,461,462,463,464,465,277,466,467,280,281,282,283,284,285,286,287,288,289,468,469,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,470,471,472,473,310,311,312,313,474,475,476,477,478,314,479,480,481,482,483,484,315,316,26,27,485,317,28,318,29,30,319,31,320,321,322,323,18,324,325,326,0,32,327,328,329,330,33,331,332,390,333,486,334],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[487,315,26],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[40,41,42,43],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[48],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[50,74,75,76,77,78,79,387,81,82,83,86,87,88,91,92,94,99,104,113,114,118,119,121,126,131,145,367,395,396,397,398,399,400,401,402,403,374,375,376,377,378,379,380,381,147,148,149,150,151,152,153,154,158,161,162,36,165,168,169,170,177,179,180,182,408,184,37,186,189,190,191,192,193,433,199,200,434,201,202,203,204,436,437,438,441,442,443,444,445,446,447,448,449,450,451,452,217,218,219,220,221,223,224,225,226,227,230,232,233,234,235,236,237,238,54,239,340,56,5,241,6,7,9,10,11,242,12,14,16,247,248,249,58,59,60,61,251,252,254,256,41,42,43,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,285,287,62,66,67,68,69,70,72,290,291,293,294,295,298,299,300,302,304,306,309,470,471,472,473,310,311,314,27,30,319,320,321,323,325,32,327,328,329,330,333,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[486],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[488,326],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[50,74,75,76,77,78,79,387,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,388,112,389,48,113,114,51,49,391,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,392,143,144,393,394,145,367,368,369,370,371,372,373,395,396,397,398,399,400,401,402,403,146,44,45,374,375,376,377,378,379,380,381,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,52,489,490,404,405,53,406,407,163,164,36,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,408,183,184,37,185,186,187,188,189,190,382,383,384,191,192,409,193,410,411,385,412,413,414,415,416,417,418,419,420,421,337,422,423,424,425,426,194,427,428,429,430,431,195,432,196,433,197,198,199,200,434,201,202,203,204,205,206,207,208,209,210,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,211,212,213,214,215,216,46,47,217,218,219,453,220,221,222,223,224,225,226,227,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,228,229,386,513,230,514,231,232,454,515,516,517,518,519,233,234,235,236,237,238,54,520,239,338,339,340,55,56,240,341,57,5,241,6,7,8,9,10,11,242,12,14,15,243,16,244,521,245,246,247,248,342,343,344,249,345,346,58,347,348,349,350,351,352,353,354,355,59,356,357,358,359,360,60,361,362,250,61,251,252,253,254,73,255,256,257,258,41,42,43,259,260,261,262,263,264,265,266,267,268,269,270,271,455,456,457,458,459,272,460,461,462,463,464,465,273,274,275,276,522,277,278,279,466,467,280,281,282,283,284,285,286,287,288,289,62,63,64,65,66,67,68,69,523,363,70,71,72,364,365,524,366,468,469,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,470,471,472,473,525,526,310,311,312,313,474,475,476,477,478,314,479,480,481,482,483,484,315,316,26,27,485,317,28,318,29,30,319,31,320,321,322,323,18,324,325,326,0,32,327,328,329,330,33,331,332,390,333,486,334,335,25],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[527,161,162,187,307],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[34,35,36,37,38,39],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[84,85,338,41,528,529,24,363,530,531,532,533,534,335,25],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[50,51,52,53,54,55,56,57,58,59,60,41,62,63,64,66,68,69,71,72],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[50,74,76,77,79,82,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,147,149,150,151,152,153,154,155,156,159,160,162,163,164,166,167,170,182,185,187,188,191,192,193,203,204,205,211,212,213,214,215,228,229,230,233,234,235,236,237,238,239,55,56,240,5,241,7,8,11,242,12,14,243,16,244,245,246,247,248,249,58,59,60,252,254,257,41,42,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,286,63,66,68,69,71,290,291,292,294,296,297,298,301,302,305,307,308,310,311,313,314,315,316,26,27,317,28,318,29,30,319,320,321,322,323,18,324,325,326,0,32,327,328,330,33,331,332,335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":27,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests2.UsageTest.argumentsOrdered":300,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":337,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":295,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":88,"org.easymock.tests2.DelegateToTest.testReturnException":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":172,"org.easymock.tests.MockingTest.testPartialClassMocking":191,"org.easymock.tests.MockClassControlTest.testToString":376,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":467,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":89,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":311,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":512,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":19,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":155,"org.easymock.tests2.UsageTest.wrongArguments":293,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":465,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":397,"org.easymock.samples.ExampleTest.answerVsDelegate":75,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":53,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":411,"org.easymock.tests2.UsageConstraintsTest.testNull":28,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":236,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":268,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":381,"org.easymock.tests2.CaptureTest.testPrimitive":7,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":159,"org.easymock.tests.UsageTest.moreThanOneArgument":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":108,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":208,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":392,"org.easymock.tests.UsageTest.argumentsOrdered":169,"org.easymock.tests.UsageVarargTest.varargIntAccepted":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":211,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":23,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":524,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":483,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":215,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":496,"org.easymock.tests.ReplayStateInvalidUsageTest.times":449,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":272,"org.easymock.tests2.DependencyTest.testClassMocking":525,"org.easymock.tests2.AnswerTest.answer":254,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":473,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":490,"org.easymock.tests2.CaptureTest.testAnd":5,"org.easymock.tests2.UsageTest.strictResetToDefault":291,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":529,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":263,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":394,"org.easymock.tests2.DelegateToTest.testDelegate":289,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":495,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":104,"org.easymock.tests.LimitationsTest.mockFinalMethod":514,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":403,"org.easymock.tests2.DependencyTest.testClassMockingSupport":526,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":231,"org.easymock.tests2.CaptureTest.testCapture1_2446744":8,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":520,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":471,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":443,"org.easymock.tests.UsageThrowableTest.throwError":147,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":405,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":484,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":210,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":532,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":362,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":499,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":444,"org.easymock.tests.MockingTest.testInterfaceMocking":409,"org.easymock.tests2.CompareToTest.testLessOrEqual":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":110,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":440,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":90,"org.easymock.tests2.UsageTest.niceToStrict":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests2.ThreadingTest.testChangeDefault":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":1,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":66,"org.easymock.tests2.MockBuilderTest.testCreateMock":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":462,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":98,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":38,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":264,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":489,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":395,"org.easymock.tests.UsageOverloadedMethodTest.overloading":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":360,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":127,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":203,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":323,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":453,"org.easymock.tests2.EasyMockSupportClassTest.testAll":249,"org.easymock.tests.MockClassControlTest.testEquals":380,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":114,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":106,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":472,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":401,"org.easymock.tests2.CaptureTest.testCaptureAll":241,"org.easymock.tests.MockNameTest.defaultName":391,"org.easymock.tests2.UsageConstraintsTest.testMatches":324,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":441,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":209,"org.easymock.samples.ExampleTest.voteForRemovals":79,"org.easymock.tests.UsageVarargTest.allKinds":227,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":402,"org.easymock.samples.BasicClassMockTest.testPrintContent":87,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":153,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":176,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":288,"org.easymock.tests2.UsageConstraintsTest.greaterThan":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":137,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":240,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":500,"org.easymock.samples.ExampleTest.voteForRemoval":76,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":341,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":54,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":492,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":145,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":290,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":261,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":171,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":262,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":302,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":408,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":123,"org.easymock.tests2.CaptureTest.testCapture2_2446744":243,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":247,"org.easymock.tests2.UsageTest.moreThanOneArgument":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":71,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":226,"org.easymock.tests.GenericTest.testBridgedEquals":49,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":201,"org.easymock.tests.UsageExpectAndReturnTest.longType":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":399,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":259,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":107,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":142,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":105,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":206,"org.easymock.tests.UsageCallCountTest.tooManyCalls":202,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":464,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":152,"org.easymock.tests.MockingTest.testNiceClassMocking":385,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":274,"org.easymock.tests.MockingTest.testClassMocking":383,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":433,"org.easymock.tests2.UsageConstraintsTest.testContains":322,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":252,"org.easymock.tests2.UsageConstraintsTest.testFind":317,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":205,"org.easymock.tests.MockTypeTest.fromEasyMockClass":404,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":334,"org.easymock.tests.UsageExpectAndReturnTest.object":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":20,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":221,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":438,"org.easymock.tests.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":388,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":132,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":217,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":179,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":475,"org.easymock.tests.MockClassControlTest.testHashCode":379,"org.easymock.tests2.EasyMockSupportTest.testVerify":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":144,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":177,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":470,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":390,"org.easymock.tests.UsageVarargTest.varargCharAccepted":220,"org.easymock.tests2.CaptureTest.testCaptureMultiple":4,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":432,"org.easymock.tests2.UsageTest.openCallCountByLastCall":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":2,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":270,"org.easymock.tests.DefaultClassInstantiatorTest.object":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":216,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":436,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":474,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":498,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":55,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":378,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":95,"org.easymock.tests.ReplayStateInvalidCallsTest.times":504,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":133,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":146,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":60,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":377,"org.easymock.tests2.UsageTest.resumeIfFailure":301,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":174,"org.easymock.tests2.StubTest.stubWithReturnValue":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":125,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":330,"org.easymock.tests2.SerializationTest.testAllMockedMethod":43,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":194,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":534,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":39,"org.easymock.samples.SupportTest.voteForRemovals":82,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":101,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":40,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":195,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":73,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":389,"org.easymock.tests.UsageExpectAndThrowTest.object":99,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":327,"org.easymock.tests2.DelegateToTest.testWrongClass":287,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":502,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":228,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":229,"org.easymock.tests.UsageStrictMockTest.range":187,"org.easymock.samples.ConstructorCalledMockTest.testTax":84,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":468,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":68,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":451,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":396,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":34,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":494,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":111,"org.easymock.tests2.CaptureTest.testCaptureNone":242,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":516,"org.easymock.tests.UsageUnorderedTest.message":115,"org.easymock.tests.UsageVerifyTest.twoReturns":162,"org.easymock.tests.UsageVarargTest.varargByteAccepted":225,"org.easymock.tests2.ThreadingTest.testThreadSafe":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":356,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":200,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":439,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":86,"org.easymock.tests2.CaptureTest.testCapture_2617107":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":158,"org.easymock.tests2.UsageConstraintsTest.any":320,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":448,"org.easymock.tests2.StubTest.stub":312,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":173,"org.easymock.tests.UsageExpectAndThrowTest.longType":92,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":447,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":306,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":314,"org.easymock.tests.LimitationsTest.mockNativeMethod":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":135,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":457,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":510,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":309,"org.easymock.tests2.NameTest.nameForMocksControl":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":459,"org.easymock.tests2.MockedExceptionTest.testMockedException":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":346,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":486,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":93,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":193,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":233,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":69,"org.easymock.tests.MockingTest.testNicePartialClassMocking":192,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":238,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":455,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests2.CompareToTest.testCompareEqual":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":232,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":509,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":279,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":328,"org.easymock.tests.MockingTest.testTwoMocks":384,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":506,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":97,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":331,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":519,"org.easymock.samples.ExampleTest.removeNonExistingDocument":387,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":461,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":445,"org.easymock.tests.UsageStrictMockTest.differentMethods":188,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":476,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":518,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":369,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":246,"org.easymock.tests2.MockBuilderTest.testCreateMockString":72,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":374,"org.easymock.tests.UsageExpectAndThrowTest.floatType":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":256,"org.easymock.tests.UsageVerifyTest.twoThrows":161,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":59,"org.easymock.samples.ExampleTest.voteAgainstRemoval":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":109,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":56,"org.easymock.tests.LimitationsTest.privateConstructor":513,"org.easymock.tests2.UsageConstraintsTest.testNotNull":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":154,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":61,"org.easymock.tests2.UsageTest.defaultResetToNice":298,"org.easymock.samples.ExampleTest.voteAgainstRemovals":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":456,"org.easymock.tests.UsageVarargTest.differentLength":222,"org.easymock.tests2.CallbackTest.callback":250,"org.easymock.tests2.UsageConstraintsTest.equals":485,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":338,"org.easymock.tests.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":315,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":157,"org.easymock.tests.UsageCallCountTest.tooFewCalls":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":398,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":517,"org.easymock.tests.UsageThrowableTest.throwCheckedException":151,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":35,"org.easymock.tests.MockingTest.testStrictClassMocking":382,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":141,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":460,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":275,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":450,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":277,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":258,"org.easymock.tests.ObjectMethodsTest.testHashCode":437,"org.easymock.tests2.CompareToTest.testGreateOrEqual":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":22,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":508,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":248,"org.easymock.tests2.NameTest.nameForNiceMock":282,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":503,"org.easymock.tests2.DependencyTest.testInterfaceMocking":310,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":21,"org.easymock.samples.ExampleTest.addDocument":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.AnswerTest.stubAnswer":257,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":185,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":523,"org.easymock.tests.UsageVarargTest.varargLongAccepted":224,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":134,"org.easymock.tests.UsageExpectAndReturnTest.floatType":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":335,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":482,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests.UsageThrowableTest.noUpperLimit":148,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":0,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":316,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":364,"org.easymock.tests2.SerializationTest.test":42,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":9,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":117,"org.easymock.tests2.UsageConstraintsTest.testSame":318,"org.easymock.samples.SupportTest.addDocument":81,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":522,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":493,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":113,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":481,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":410,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":491,"org.easymock.tests2.NameTest.nameForMock":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":531,"org.easymock.tests2.UsageStrictMockTest.differentMethods":308,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":339,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":120,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":103,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":139,"org.easymock.tests2.MockedExceptionTest.testRealException":253,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":533,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":424,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":305,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":452,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":156,"org.easymock.tests2.NameTest.nameForStrictMock":281,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":3,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":333,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":237,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":366,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":32,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":370,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":63,"org.easymock.tests2.UsageStrictMockTest.range":307,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":497,"org.easymock.tests2.UsageConstraintsTest.lessThan":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":260,"org.easymock.tests2.CaptureTest.testCaptureRightOne":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":515,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests.UsageRangeTest.combination":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":234,"org.easymock.tests.UsageTest.wrongArguments":165,"org.easymock.tests2.MockBuilderTest.testWithConstructor":528,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":375,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":129,"org.easymock.tests.UsageVarargTest.varargShortAccepted":223,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":434,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":511,"org.easymock.tests2.UsageConstraintsTest.cmpTo":321,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":255,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":297,"org.easymock.tests2.CaptureTest.testCaptureFromStub":15,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":442,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":64,"org.easymock.tests.UsageTest.unexpectedCallWithArray":36,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":507,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":199,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":530,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":130,"org.easymock.tests2.CaptureTest.testCapture":13,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.samples.ExampleTest.addAndChangeDocument":80,"org.easymock.tests.UsageStrictMockTest.testVerify":190,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":83,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests2.CompareToTest.testGreateThan":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":400,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":213,"org.easymock.tests.LimitationsTest.abstractClass":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":122,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":214,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":527,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":265}}]
