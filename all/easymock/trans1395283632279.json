[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,170,171,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[330,331],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,332,333,30,32,33,34,35,37,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,86,87,88,89,90,91,92,93,94,95,96,97,98,103,105,106,108,109,110,111,112,113,114,115,116,122,123,124,125,126,127,128,129,130,131,132,334,145,146,147,148,150,156,157,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,335,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,316,317,319,323,325,326,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[336,319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[337,338,339,23,24,26,27,106,108,111,112,150,156,157,158,213,214,215,216,219,221,222,292,293,299,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[23,24,26,27,106,108,111,112,148,150,156,157,158,213,214,215,216,219,221,222,292,293,299,300],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[172,173,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[207],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[185,187,188,189,190,191,192,194,363,195,196,198],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[238,242,335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[24,44,45,48,97,151,152,153,154,155,160,161,162,163,164,165,166,170,170,171,171,196,219,235,236,239,240,241,242,247,249,250,252,253,254,259,260,261],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,364,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,365,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,170,171,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:202","sourceCode":"final java.io.ObjectInputStream java.io.ObjectInputStream = new java.io.ObjectInputStream(new java.io.ByteArrayInputStream(byte[]))","type":"CtLocalVariableImpl"},"failures":[366,367,368],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[121,369,370,371,372,373],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[0,374,375,69,70,376,79,377,114,115,116,159,167,168,169,170,170,171,171,199,200,202,203,204,205,206,207,208,209,210,224,378,379,231,232,233,234,287,289,305,306,307,308,310,311,312,380,313,381,314,315,316,317,318,319,382,320,323],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[383,287,288,289],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[186,188,192,193,194,198],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[254,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[23,26,384,107,108,111,112,149,150,157,158,221,293,299,300],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[385,386,0,387,388,389,390,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,374,391,392,393,394,375,395,396,21,22,23,24,25,26,27,28,29,362,332,333,397,398,30,31,32,33,34,35,36,37,38,39,40,41,42,43,399,364,400,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,401,402,403,330,69,70,376,331,71,72,73,74,404,75,76,77,405,406,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,407,99,100,101,102,103,104,408,409,410,105,106,107,108,109,110,111,112,113,411,412,377,114,115,413,116,414,415,416,117,118,119,120,417,121,369,370,371,366,372,418,373,122,123,124,419,125,126,127,128,129,130,131,132,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,334,436,437,438,439,440,441,442,133,134,135,136,137,138,139,140,141,142,143,144,443,145,365,146,147,444,148,149,150,151,152,153,154,155,156,157,158,159,160,161,445,162,163,164,165,166,446,447,448,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,449,206,450,451,207,208,209,210,452,336,211,212,453,213,214,215,216,217,218,219,220,221,222,223,224,454,455,225,226,227,228,229,340,341,342,343,344,230,345,346,347,348,349,350,456,457,458,231,459,460,232,461,462,463,464,465,466,467,468,469,233,470,471,472,473,474,234,475,476,235,236,237,238,477,239,240,241,242,243,244,335,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,478,262,263,264,479,265,480,481,266,267,268,269,270,271,272,351,352,353,354,355,273,356,357,358,359,360,361,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,329,304,482,483,484,485,486,487,488,305,306,307,308,489,309,310,311,490,312,491,313,381,492,493,314,315,316,494,317,495,496,318,319,497,320,321,322,323,324,325,498,499,326,327,328],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[398],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[0,389,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,374,393,394,375,395,396,21,23,24,25,26,27,28,362,332,333,397,398,32,39,40,41,42,43,399,364,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,401,402,403,69,376,71,72,73,74,75,76,405,406,78,80,81,82,83,86,87,88,89,90,91,92,93,94,95,96,97,98,407,99,100,101,102,103,104,408,409,410,105,106,107,108,109,110,111,112,113,377,114,115,116,117,118,119,120,132,334,441,443,145,365,146,147,444,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,446,447,448,167,170,170,171,171,175,176,177,178,179,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,336,211,212,217,219,220,221,222,223,224,225,226,227,228,230,345,231,232,233,234,235,236,237,238,239,240,241,242,243,244,335,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,478,262,263,264,479,265,266,267,268,269,270,271,272,273,356,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,381,314,315,316,317,318,319,320,321,322,323,324,325,498,499,326,327,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[369,372],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[500],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[385,386,0,387,388,389,390,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,374,391,392,393,394,375,395,396,21,22,23,24,25,26,27,28,29,362,332,333,397,398,30,31,32,33,34,35,36,37,38,39,40,41,42,43,399,364,400,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,401,402,403,330,69,70,376,331,71,72,73,74,404,75,76,77,405,406,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,407,99,100,101,102,103,104,408,409,410,105,106,107,108,109,110,111,112,113,411,412,377,114,115,413,116,414,415,416,117,118,119,120,417,121,369,370,371,366,372,418,373,122,123,124,419,125,126,127,128,129,130,131,132,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,334,436,437,438,439,440,441,442,133,134,135,136,137,138,139,140,141,142,143,144,443,145,365,146,147,444,148,149,150,151,152,153,154,155,156,157,158,159,160,161,445,162,163,164,165,166,446,447,448,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,449,206,450,451,207,208,209,210,452,336,211,212,453,213,214,215,216,217,218,219,220,221,222,223,224,454,455,225,226,227,228,229,340,341,342,343,344,230,345,346,347,348,349,350,456,457,458,231,459,460,232,461,462,463,464,465,466,467,468,469,233,470,471,472,473,474,234,475,476,235,236,237,238,477,239,240,241,242,243,244,335,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,478,262,263,264,479,265,480,481,266,267,268,269,270,271,272,351,352,353,354,355,273,356,357,358,359,360,361,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,329,304,482,483,484,485,486,487,488,305,306,307,308,489,309,310,311,490,312,491,313,381,492,493,314,315,316,494,317,495,496,318,319,497,320,321,322,323,324,325,498,499,326,327,328],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[170,171,224,454,456,457,458,231,459,460,232,461,462,463,464,465,466,467,468,469,233,470,471,472,473,474,234,475,476,287,307,311,490,491,492,494,496,501,497,502,503],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":238,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":105,"org.easymock.tests2.UsageTest.argumentsOrdered":300,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":430,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":295,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":173,"org.easymock.tests2.DelegateToTest.testReturnException":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":100,"org.easymock.tests.MockingTest.testPartialClassMocking":114,"org.easymock.tests.MockClassControlTest.testToString":80,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":453,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":49,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":232,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":337,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":267,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":44,"org.easymock.tests2.UsageTest.wrongArguments":293,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":119,"org.easymock.samples.ExampleTest.answerVsDelegate":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":375,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":415,"org.easymock.tests2.UsageConstraintsTest.testNull":240,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":202,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":85,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":283,"org.easymock.tests2.CaptureTest.testPrimitive":188,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":48,"org.easymock.tests.UsageTest.moreThanOneArgument":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":68,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":153,"org.easymock.tests.UsageTest.argumentsOrdered":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":362,"org.easymock.tests.UsageVarargTest.varargIntAccepted":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":162,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":312,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":360,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":166,"org.easymock.tests.ReplayStateInvalidUsageTest.times":141,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests2.DependencyTest.testClassMocking":480,"org.easymock.tests2.AnswerTest.answer":325,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":436,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":228,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":392,"org.easymock.tests2.CaptureTest.testAnd":185,"org.easymock.tests2.UsageTest.strictResetToDefault":291,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":492,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":278,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":398,"org.easymock.tests2.DelegateToTest.testDelegate":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":64,"org.easymock.tests.LimitationsTest.mockFinalMethod":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":43,"org.easymock.tests2.DependencyTest.testClassMockingSupport":481,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":399,"org.easymock.tests2.CaptureTest.testCapture1_2446744":189,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":226,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":135,"org.easymock.tests.UsageThrowableTest.throwError":89,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":394,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":445,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":155,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":476,"org.easymock.samples.PartialClassMockTest.testGetArea":167,"org.easymock.tests.MockingTest.testInterfaceMocking":413,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":465,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":406,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":50,"org.easymock.tests2.UsageTest.niceToStrict":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":314,"org.easymock.tests2.MockBuilderTest.testCreateMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":58,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":279,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":391,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":410,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":117,"org.easymock.tests.UsageOverloadedMethodTest.overloading":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":12,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":86,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":248,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":367,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":194,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":419,"org.easymock.tests.MockClassControlTest.testEquals":84,"org.easymock.tests2.EasyMockSupportClassTest.testAll":231,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":66,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":378,"org.easymock.tests2.CaptureTest.testCaptureAll":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":227,"org.easymock.tests.MockNameTest.defaultName":443,"org.easymock.tests2.UsageConstraintsTest.testMatches":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":154,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":133,"org.easymock.samples.ExampleTest.voteForRemovals":181,"org.easymock.tests.UsageVarargTest.allKinds":132,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":42,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":95,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":217,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":357,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":418,"org.easymock.tests2.UsageConstraintsTest.greaterThan":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":72,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":210,"org.easymock.samples.ExampleTest.voteForRemoval":178,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":452,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":269,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":205,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":159,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":290,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":276,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":99,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":478,"org.easymock.tests2.CaptureTest.testCaptureFirst":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":277,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":302,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":8,"org.easymock.tests2.CaptureTest.testCapture2_2446744":197,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":271,"org.easymock.tests2.UsageTest.moreThanOneArgument":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":437,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":319,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":131,"org.easymock.tests.GenericTest.testBridgedEquals":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":37,"org.easymock.tests.UsageExpectAndReturnTest.longType":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":39,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":67,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":382,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":407,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":257,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":65,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":151,"org.easymock.tests.UsageCallCountTest.tooManyCalls":38,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":94,"org.easymock.tests.MockingTest.testNiceClassMocking":416,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":306,"org.easymock.tests.MockingTest.testClassMocking":412,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":31,"org.easymock.tests2.UsageConstraintsTest.testContains":247,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":380,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":323,"org.easymock.tests2.UsageConstraintsTest.testFind":239,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":88,"org.easymock.tests.MockTypeTest.fromEasyMockClass":393,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":21,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":304,"org.easymock.tests.UsageExpectAndReturnTest.object":11,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":348,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":500,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":282,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":126,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":77,"org.easymock.tests.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":388,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":454,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":17,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":146,"org.easymock.tests.MockClassControlTest.testHashCode":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":352,"org.easymock.tests2.EasyMockSupportTest.testVerify":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":467,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":409,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":225,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":229,"org.easymock.tests.UsageVarargTest.varargCharAccepted":125,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":417,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":442,"org.easymock.tests2.UsageTest.openCallCountByLastCall":296,"org.easymock.tests.DefaultClassInstantiatorTest.object":121,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":285,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":408,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":75,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":468,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":56,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":351,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":55,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":18,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":446,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":234,"org.easymock.tests2.UsageTest.resumeIfFailure":301,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":374,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":102,"org.easymock.tests2.StubTest.stubWithReturnValue":212,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":494,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":258,"org.easymock.tests2.SerializationTest.testAllMockedMethod":289,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":334,"org.easymock.samples.SupportTest.voteForRemovals":175,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":330,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":61,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":383,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":441,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":498,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":390,"org.easymock.tests.UsageExpectAndThrowTest.object":59,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":255,"org.easymock.tests2.DelegateToTest.testWrongClass":264,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":160,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":161,"org.easymock.samples.ConstructorCalledMockTest.testTax":170,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":487,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":456,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":143,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":118,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":403,"org.easymock.tests2.CaptureTest.testCaptureNone":193,"org.easymock.tests.UsageUnorderedTest.message":150,"org.easymock.tests.UsageVerifyTest.twoReturns":158,"org.easymock.tests.UsageVarargTest.varargByteAccepted":130,"org.easymock.tests2.ThreadingTest.testThreadSafe":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":470,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":35,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":405,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":168,"org.easymock.tests2.CaptureTest.testCapture_2617107":187,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":47,"org.easymock.tests2.UsageConstraintsTest.any":245,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":140,"org.easymock.tests2.StubTest.stub":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":101,"org.easymock.tests.UsageExpectAndThrowTest.longType":52,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":366,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":139,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":220,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":273,"org.easymock.tests2.SerializationTest.testClass":287,"org.easymock.tests.LimitationsTest.mockNativeMethod":0,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":20,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":342,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":223,"org.easymock.tests2.NameTest.nameForMocksControl":216,"org.easymock.tests2.MockedExceptionTest.testMockedException":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":460,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":110,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":53,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":329,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":317,"org.easymock.tests.MockingTest.testNicePartialClassMocking":115,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":204,"org.easymock.tests2.CaptureTest.testCaptureLast":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":364,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":243,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":311,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":256,"org.easymock.tests.MockingTest.testTwoMocks":377,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":1,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":57,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":260,"org.easymock.samples.ExampleTest.removeNonExistingDocument":182,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":137,"org.easymock.tests.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":346,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":353,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":370,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":270,"org.easymock.tests2.MockBuilderTest.testCreateMockString":320,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":461,"org.easymock.tests.UsageExpectAndThrowTest.floatType":51,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":455,"org.easymock.tests.UsageVerifyTest.twoThrows":157,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":233,"org.easymock.samples.ExampleTest.voteAgainstRemoval":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":401,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":209,"org.easymock.tests.LimitationsTest.privateConstructor":386,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":503,"org.easymock.tests2.UsageConstraintsTest.testNotNull":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":321,"org.easymock.tests2.UsageTest.defaultResetToNice":298,"org.easymock.samples.ExampleTest.voteAgainstRemovals":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":16,"org.easymock.tests.UsageVarargTest.differentLength":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":341,"org.easymock.tests2.CallbackTest.callback":184,"org.easymock.tests2.UsageConstraintsTest.equals":477,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":450,"org.easymock.tests.UsageTest.openCallCountByLastCall":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":46,"org.easymock.tests.UsageCallCountTest.tooFewCalls":33,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":120,"org.easymock.tests.UsageThrowableTest.throwCheckedException":93,"org.easymock.tests.MockingTest.testStrictClassMocking":411,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":98,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":310,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":345,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":309,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":328,"org.easymock.tests.ObjectMethodsTest.testHashCode":76,"org.easymock.tests2.NameTest.nameForNiceMock":215,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":272,"org.easymock.tests2.DependencyTest.testInterfaceMocking":266,"org.easymock.samples.ExampleTest.addDocument":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.DelegateToTest.testStubDelegate":263,"org.easymock.tests2.AnswerTest.stubAnswer":327,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":495,"org.easymock.tests.UsageVarargTest.varargLongAccepted":129,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.floatType":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":224,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":171,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":444,"org.easymock.tests.UsageThrowableTest.noUpperLimit":90,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":253,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":359,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":236,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":482,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":190,"org.easymock.tests2.SerializationTest.test":288,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":368,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":2,"org.easymock.tests2.UsageConstraintsTest.testSame":241,"org.easymock.samples.SupportTest.addDocument":174,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":489,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":462,"org.easymock.tests.GenericTest.testPackageScope":69,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":358,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":414,"org.easymock.tests2.NameTest.nameForMock":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":13,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":497,"org.easymock.tests2.UsageStrictMockTest.differentMethods":222,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":451,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":5,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":63,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":404,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":74,"org.easymock.tests2.MockedExceptionTest.testRealException":324,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":433,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":219,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":45,"org.easymock.tests2.NameTest.nameForStrictMock":214,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":493,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":303,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":203,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":486,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":254,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":338,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":313,"org.easymock.tests2.UsageStrictMockTest.range":221,"org.easymock.tests2.UsageConstraintsTest.lessThan":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":466,"org.easymock.tests2.CaptureTest.testCaptureRightOne":195,"org.easymock.tests2.UsageConstraintsTest.testOr":242,"org.easymock.tests.UsageRangeTest.combination":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":200,"org.easymock.tests.UsageTest.wrongArguments":108,"org.easymock.tests2.MockBuilderTest.testWithConstructor":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":463,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":14,"org.easymock.tests.UsageVarargTest.varargShortAccepted":128,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":36,"org.easymock.tests2.UsageConstraintsTest.cmpTo":246,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":423,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":297,"org.easymock.tests2.CaptureTest.testCaptureFromStub":196,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":134,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":381,"org.easymock.tests.UsageTest.unexpectedCallWithArray":107,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":34,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":15,"org.easymock.tests2.CaptureTest.testCapture":363,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":25,"org.easymock.tests2.UsageConstraintsTest.constraints":237,"org.easymock.samples.ExampleTest.addAndChangeDocument":183,"org.easymock.tests.UsageStrictMockTest.testVerify":29,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":172,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":40,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":164,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":379,"org.easymock.tests.LimitationsTest.abstractClass":385,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":165,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":280,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":339}}]
