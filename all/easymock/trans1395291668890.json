[{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[15,16,17,18,19,20,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,1,2,3,4,5,6,7,8,289,9,10,11,12,13,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,15,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,14,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,21,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[245,281,395,397,399],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[65,72,77,80,81,82,83,84,126,127,128,131,132,133,134,135,136,137,138,164,181,182,183,184,186,230,231,232,233,234,235,236,237,238,239,240,241,249,286,296,301,323,324,325,326,333,414,421,428,433,444,468,475,480,483,484,485],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[394,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cl":"cl","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[274,275,321,15,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,434,461,466,467,469,472,21,479,495,482,496,497],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[365,384,390,494],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[386,387],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[360],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:118","sourceCode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"initArgs","i":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[187,191],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:116","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[15,461,466,467,469,472,21,495,482,496,497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"field"}},{"position":"org.easymock.internal.LastControl:124","failures":[24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,57,58,59,60,61,62,63,64,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,118,121,123,124,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,162,163,164,165,166,167,168,169,170,174,175,177,181,182,183,184,194,195,196,198,199,200,201,202,203,204,205,243,245,246,249,250,251,252,253,254,255,256,257,258,259,0,0,260,261,263,264,265,266,267,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,1,2,3,4,5,6,7,8,289,9,10,11,12,13,290,291,292,293,294,295,296,298,301,302,303,304,307,308,314,315,316,317,318,319,320,321,323,324,325,326,333,343,346,356,362,365,366,367,368,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,399,402,403,404,405,406,407,408,414,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,14,441,442,443,444,445,446,447,448,449,451,459,460,461,462,464,465,466,468,470,474,475,476,477,480,481,483,484,485,486,487,488,491,492,493],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[498],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[499],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[399],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[116,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[219,288],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[500],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[57,59,61,62,63,77,78,79,121,501,502,162,164,165,168,169,170,200,250,257,258,503,262,288,291,302,304,314,317,318,319,367,383,422,426,427,430,437,440,14,441,445,446,447,448,470,480,481,483],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,1,2,3,4,5,6,7,8,289,9,10,11,12,13,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,15,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,14,441,442,443,444,445,446,447,448,449,450,451,452,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,21,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[90,151,153,154,155,156,157,158,213,268,269,270,308,484,485,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:131","failures":[297],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[120],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[15,16,17,18,19,20,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:74","sourceCode":"if ((java.util.List<org.easymock.internal.UnorderedBehavior>.isEmpty()) || (!(org.easymock.internal.MocksBehavior.lastBehaviorList().allowsExpectedInvocation(org.easymock.internal.ExpectedInvocation, boolean)))) {\n    java.util.List<org.easymock.internal.UnorderedBehavior>.add(new org.easymock.internal.UnorderedBehavior(boolean));\n} ","type":"CtIfImpl"},"failures":[24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,57,58,59,60,61,62,63,64,65,67,68,71,73,74,75,76,78,79,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,117,118,121,122,123,124,139,140,141,142,143,144,145,146,147,148,149,150,151,157,162,163,165,166,167,168,169,170,174,175,177,194,195,196,198,199,200,201,202,203,204,205,222,243,245,246,248,250,256,257,258,259,260,261,263,264,265,266,267,271,272,273,276,277,278,279,280,281,282,283,284,285,287,288,1,2,3,4,5,6,7,8,289,9,10,12,13,290,291,292,293,294,295,298,302,303,304,307,308,310,311,312,313,314,315,316,317,318,319,320,321,333,343,346,356,362,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,399,402,403,404,405,406,407,408,414,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,14,441,442,443,444,445,446,447,448,449,451,459,460,461,462,464,465,466,470,474,476,477,481,486,488,491,492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[396],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[504,434,435,436],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[117,119,120],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksBehavior:200","failures":[406],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":368,"org.easymock.tests2.UsageTest.argumentsOrdered":446,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":216,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":441,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":277,"org.easymock.tests2.DelegateToTest.testReturnException":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":154,"org.easymock.tests.MockingTest.testPartialClassMocking":174,"org.easymock.tests.MockClassControlTest.testToString":133,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":309,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":93,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":346,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":403,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":16,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":375,"org.easymock.tests2.UsageTest.wrongArguments":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":88,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":183,"org.easymock.samples.ExampleTest.answerVsDelegate":281,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":54,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":179,"org.easymock.tests2.UsageConstraintsTest.testNull":371,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":293,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":430,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":138,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":92,"org.easymock.tests.UsageTest.moreThanOneArgument":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":112,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":253,"org.easymock.tests.UsageTest.argumentsOrdered":169,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":66,"org.easymock.tests.UsageVarargTest.varargIntAccepted":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":263,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":468,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":20,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":454,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":419,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":267,"org.easymock.tests.ReplayStateInvalidUsageTest.times":238,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":333,"org.easymock.tests2.DependencyTest.testClassMocking":400,"org.easymock.tests2.AnswerTest.answer":488,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":223,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":326,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":51,"org.easymock.tests2.UsageTest.strictResetToDefault":438,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":123,"org.easymock.tests2.DelegateToTest.testDelegate":399,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":108,"org.easymock.tests.LimitationsTest.mockFinalMethod":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":84,"org.easymock.tests2.DependencyTest.testClassMockingSupport":401,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":85,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":106,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":324,"org.easymock.tests.UsageThrowableTest.throwError":142,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":232,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":53,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":420,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":255,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":364,"org.easymock.samples.PartialClassMockTest.testGetArea":271,"org.easymock.tests.MockingTest.testInterfaceMocking":176,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":233,"org.easymock.tests2.CompareToTest.testLessOrEqual":494,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":114,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":130,"org.easymock.tests2.UsageTest.niceToStrict":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":206,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":474,"org.easymock.tests2.MockBuilderTest.testCreateMock":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":102,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":426,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":50,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":181,"org.easymock.tests.UsageOverloadedMethodTest.overloading":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":361,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":246,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":381,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":40,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":500,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":380,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":197,"org.easymock.tests.MockClassControlTest.testEquals":137,"org.easymock.tests2.EasyMockSupportClassTest.testAll":343,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":118,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":110,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":325,"org.easymock.tests.MockNameTest.defaultName":242,"org.easymock.tests2.UsageConstraintsTest.testMatches":382,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":254,"org.easymock.samples.ExampleTest.voteForRemovals":285,"org.easymock.tests.UsageVarargTest.allKinds":205,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":83,"org.easymock.samples.BasicClassMockTest.testPrintContent":273,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":148,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":416,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":158,"org.easymock.tests2.UsageConstraintsTest.greaterThan":384,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":304,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":193,"org.easymock.samples.ExampleTest.voteForRemoval":282,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":405,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":305,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":296,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":437,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":259,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":423,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":153,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":394,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":424,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":448,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":36,"org.easymock.tests2.UsageTest.moreThanOneArgument":439,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":407,"org.easymock.tests2.CaptureTest.testCapture2_2446744":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":224,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":204,"org.easymock.tests.GenericTest.testBridgedEquals":120,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":78,"org.easymock.tests.UsageExpectAndReturnTest.longType":32,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":421,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":111,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":389,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":269,"org.easymock.tests.UsageCallCountTest.tooManyCalls":79,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":147,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":460,"org.easymock.tests.MockingTest.testNiceClassMocking":180,"org.easymock.tests.MockingTest.testClassMocking":172,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":72,"org.easymock.tests2.UsageConstraintsTest.testContains":379,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":486,"org.easymock.tests2.UsageConstraintsTest.testFind":370,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":141,"org.easymock.tests.MockTypeTest.fromEasyMockClass":52,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":451,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":57,"org.easymock.tests.UsageExpectAndReturnTest.object":39,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":429,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":17,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":199,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":128,"org.easymock.tests.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":26,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":67,"org.easymock.tests2.ConstraintsToStringTest.findToString":498,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":45,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":194,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests.MockClassControlTest.testHashCode":136,"org.easymock.tests2.EasyMockSupportTest.testVerify":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":68,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":160,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":243,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":501,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":323,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":327,"org.easymock.tests.UsageVarargTest.varargCharAccepted":198,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":185,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":229,"org.easymock.tests2.UsageTest.openCallCountByLastCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":432,"org.easymock.tests.DefaultClassInstantiatorTest.object":186,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":159,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":126,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":135,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":99,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":46,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":268,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":362,"org.easymock.tests2.UsageTest.resumeIfFailure":447,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":156,"org.easymock.tests2.StubTest.stubWithReturnValue":308,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":21,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":38,"org.easymock.tests2.SerializationTest.testAllMockedMethod":436,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":222,"org.easymock.samples.SupportTest.voteForRemovals":279,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":105,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":504,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":228,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":489,"org.easymock.tests.UsageExpectAndThrowTest.object":103,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":28,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":387,"org.easymock.tests2.DelegateToTest.testWrongClass":397,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":260,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":261,"org.easymock.tests.UsageStrictMockTest.range":62,"org.easymock.samples.ConstructorCalledMockTest.testTax":274,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":457,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":428,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":476,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":168,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":115,"org.easymock.tests2.CaptureTest.testCaptureNone":289,"org.easymock.tests.UsageUnorderedTest.message":250,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":503,"org.easymock.tests.UsageVerifyTest.twoReturns":258,"org.easymock.tests.UsageVarargTest.varargByteAccepted":203,"org.easymock.tests2.ThreadingTest.testThreadSafe":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":357,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":76,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":129,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":272,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":226,"org.easymock.tests2.UsageConstraintsTest.any":377,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":237,"org.easymock.tests2.StubTest.stub":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":155,"org.easymock.tests.UsageExpectAndThrowTest.longType":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":227,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":190,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":236,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":317,"org.easymock.tests2.SerializationTest.testClass":434,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":414,"org.easymock.tests.LimitationsTest.mockNativeMethod":24,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":330,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":320,"org.easymock.tests2.NameTest.nameForMocksControl":313,"org.easymock.tests2.MockedExceptionTest.testMockedException":485,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":345,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":450,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":97,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":290,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":477,"org.easymock.tests.MockingTest.testNicePartialClassMocking":175,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":295,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":86,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":466,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":374,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":388,"org.easymock.tests.MockingTest.testTwoMocks":173,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":467,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":101,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":445,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":392,"org.easymock.samples.ExampleTest.removeNonExistingDocument":286,"org.easymock.tests.UsageStrictMockTest.differentMethods":63,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":188,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":406,"org.easymock.tests2.MockBuilderTest.testCreateMockString":483,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":131,"org.easymock.tests.UsageExpectAndThrowTest.floatType":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":491,"org.easymock.tests.UsageVerifyTest.twoThrows":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":322,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":356,"org.easymock.samples.ExampleTest.voteAgainstRemoval":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":217,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":303,"org.easymock.tests.LimitationsTest.privateConstructor":23,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":497,"org.easymock.tests2.UsageConstraintsTest.testNotNull":391,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":484,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":149,"org.easymock.tests2.UsageTest.defaultResetToNice":444,"org.easymock.samples.ExampleTest.voteAgainstRemovals":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":218,"org.easymock.tests.UsageVarargTest.differentLength":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":329,"org.easymock.tests2.CallbackTest.callback":288,"org.easymock.tests2.UsageConstraintsTest.equals":369,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":299,"org.easymock.tests.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":365,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":90,"org.easymock.tests.UsageCallCountTest.tooFewCalls":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":462,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":184,"org.easymock.tests.UsageThrowableTest.throwCheckedException":146,"org.easymock.tests.MockingTest.testStrictClassMocking":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":465,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":151,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":461,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":464,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":493,"org.easymock.tests.ObjectMethodsTest.testHashCode":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":19,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":408,"org.easymock.tests2.NameTest.nameForNiceMock":312,"org.easymock.tests2.DependencyTest.testInterfaceMocking":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":18,"org.easymock.samples.ExampleTest.addDocument":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":358,"org.easymock.tests2.DelegateToTest.testStubDelegate":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.AnswerTest.stubAnswer":492,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":478,"org.easymock.tests.UsageVarargTest.varargLongAccepted":202,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":215,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":47,"org.easymock.tests.UsageExpectAndReturnTest.floatType":31,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":321,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":275,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":418,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":385,"org.easymock.tests.UsageThrowableTest.noUpperLimit":143,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":247,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":366,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":452,"org.easymock.tests2.SerializationTest.test":435,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":30,"org.easymock.tests2.UsageConstraintsTest.testSame":372,"org.easymock.samples.SupportTest.addDocument":278,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":463,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":117,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":210,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":417,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":178,"org.easymock.tests2.NameTest.nameForMock":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":482,"org.easymock.tests2.UsageStrictMockTest.differentMethods":319,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":300,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":33,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":107,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":125,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":124,"org.easymock.tests2.MockedExceptionTest.testRealException":487,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":219,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":316,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":89,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":241,"org.easymock.tests2.NameTest.nameForStrictMock":311,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":473,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":449,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":456,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":386,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":189,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":470,"org.easymock.tests2.UsageStrictMockTest.range":318,"org.easymock.tests2.UsageConstraintsTest.lessThan":393,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":413,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":214,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.UsageConstraintsTest.testOr":373,"org.easymock.tests.UsageRangeTest.combination":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":291,"org.easymock.tests.UsageTest.wrongArguments":165,"org.easymock.tests2.MockBuilderTest.testWithConstructor":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":207,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":191,"org.easymock.tests.UsageVarargTest.varargShortAccepted":201,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":77,"org.easymock.tests2.UsageConstraintsTest.cmpTo":378,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":209,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":443,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":231,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":471,"org.easymock.tests.UsageTest.unexpectedCallWithArray":164,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":75,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":495,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":43,"org.easymock.tests2.CaptureTest.testCapture":499,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":61,"org.easymock.tests2.UsageConstraintsTest.constraints":367,"org.easymock.samples.ExampleTest.addAndChangeDocument":287,"org.easymock.tests.UsageStrictMockTest.testVerify":65,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":276,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":81,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":35,"org.easymock.tests.LimitationsTest.abstractClass":22,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":427,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":195}}]
