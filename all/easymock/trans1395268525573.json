[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[11,12,13,14,15,16,17,18,19,20,21,22,3,3,4,4,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,9,196,197,198,199,200,201,10,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,5,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[3,3,4,4,5,337,473,390,471,472],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[11,12,13,14,15,16,17,18,19,20,21,22,3,4,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,474,92,93,94,95,0,96,475,97,476,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,477,478,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,9,196,197,198,199,200,201,10,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,479,274,5,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,480,369,370,371,481,482,372,373,374,375,376,377,378,379,380,381,382,6,383,384,483,385,386,387,388,484,389,473,390,391,392,8,393,394,485,486,487,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,488,489,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,490],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[58,491,132,133,142,143,146,147,164,167,401,407,408,415],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[3,3,4,4,5,337,390,471,472],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[492,493,142,164,494,495],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[497],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[93,96],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[447],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[11,3,3,4,4,23,24,53,54,55,91,111,134,137,173,174,175,177,262,267,268,270,271,272,273,274,276,277,278,279,304,307,317,323,329,337,339,498,365,366,367,368,370,371,382,499,383,384,386,387,388,389,391,392,500,393,471],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[282,284,285,286,287,288,289,291,501,292],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[58,79,502,503,504,131,132,133,140,141,143,146,147,148,162,164,165,166,167,168,169,203,205,206,210,211,252,277,279,326,341,345,346,349,372,373,374,375,383,392,398,400,401,402,403,407,408,410,411,413,414,415,416,417,440,456],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[13,157,377,379,381],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:382","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n    if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[459,460],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[402],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[11,12,14,15,17,21,59,60,61,62,63,64,67,68,70,71,72,74,75,76,77,78,79,80,81,82,126,165,167,168,174,175,177,215,216,217,218,238,239,240,241,242,258,259,262,267,268,269,270,271,272,274,277,278,279,299,304,307,317,323,365,366,367,368,369,370,371,378,383,386,388,389,392,413,415,416,422,423,471],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[89],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[505,337,338,339],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[84,107,108,109,110,128,149,150,151,152,153,154,188,236,237,327,328,329,330,425],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[3,3,4,4,83,126,127,130,165,215,216,217,218,219,238,239,240,241,242,258,259,293,413,425,438,439,443,444,445,446,452,454,455,457,458,464,465,466],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methods":"methods","list":"candidateMethods"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[453],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:197","sourceCode":"java.lang.Thread = java.lang.Thread.java.lang.Thread.currentThread()","type":"CtAssignmentImpl"},"failures":[506,297,298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[92,93,96],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[337,507,508,509,510,497,484,390,471,472],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,53,54,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,119,120,126,127,128,129,130,131,132,133,140,141,143,146,147,148,153,160,162,163,164,165,166,167,168,169,174,175,177,203,205,206,207,208,210,211,213,214,238,239,240,241,242,246,247,248,250,251,252,253,254,255,256,257,258,259,262,267,268,269,270,271,272,274,277,278,279,282,283,284,285,287,288,289,290,291,292,295,296,297,300,304,307,317,323,326,329,331,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,358,365,366,367,368,369,370,371,372,373,374,375,377,378,381,383,386,388,389,392,398,399,400,401,402,403,407,408,409,410,411,412,413,414,415,416,417,422,423,424,425,431,438,439,440,441,443,444,445,446,447,448,450,451,452,453,454,455,456,457,458,459,460,461,463,464,465,466,468,470,471],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"min"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[381],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[58,79,511,476,512,491,132,133,140,142,143,146,147,148,162,164,166,167,168,209,210,211,252,268,277,279,326,341,345,346,349,383,391,392,393,398,401,402,403,407,408,409,410,411,414,415,416,440,456],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":441,"org.easymock.tests2.UsageTest.argumentsOrdered":408,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":350,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":191,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":403,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":25,"org.easymock.tests2.DelegateToTest.testReturnException":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":150,"org.easymock.tests.MockingTest.testPartialClassMocking":174,"org.easymock.tests.MockClassControlTest.testToString":112,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":482,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":199,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":26,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":307,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":502,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":507,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":448,"org.easymock.tests2.UsageTest.wrongArguments":401,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":100,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":137,"org.easymock.tests2.UsageConstraintsTest.testNull":444,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":179,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":270,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":349,"org.easymock.tests2.CaptureTest.testPrimitive":285,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests.UsageTest.moreThanOneArgument":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":45,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":217,"org.easymock.tests.UsageTest.argumentsOrdered":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":86,"org.easymock.tests.UsageVarargTest.varargIntAccepted":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":238,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":382,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":436,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":242,"org.easymock.tests.ReplayStateInvalidUsageTest.times":234,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":358,"org.easymock.tests2.DependencyTest.testClassMocking":488,"org.easymock.tests2.AnswerTest.answer":331,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":421,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":478,"org.easymock.tests2.CaptureTest.testAnd":282,"org.easymock.tests2.UsageTest.strictResetToDefault":399,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":216,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":81,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":344,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":90,"org.easymock.tests2.DelegateToTest.testDelegate":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":41,"org.easymock.tests.LimitationsTest.mockFinalMethod":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":106,"org.easymock.tests2.DependencyTest.testClassMockingSupport":489,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":264,"org.easymock.tests2.CaptureTest.testCapture1_2446744":286,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":419,"org.easymock.tests.UsageThrowableTest.throwError":118,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":228,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":136,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":476,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":325,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.MockingTest.testInterfaceMocking":176,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":239,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":47,"org.easymock.tests2.UsageTest.niceToStrict":402,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":27,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":312,"org.easymock.tests2.ThreadingTest.testChangeDefault":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":181,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":386,"org.easymock.tests2.MockBuilderTest.testCreateMock":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":320,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":361,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":35,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":345,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":477,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":245,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":98,"org.easymock.tests.UsageOverloadedMethodTest.overloading":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":322,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":454,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":70,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":453,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":291,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":249,"org.easymock.tests.MockClassControlTest.testEquals":116,"org.easymock.tests2.EasyMockSupportClassTest.testAll":304,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":43,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":420,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":104,"org.easymock.tests2.CaptureTest.testCaptureAll":283,"org.easymock.tests.MockNameTest.defaultName":57,"org.easymock.tests2.UsageConstraintsTest.testMatches":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":218,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":226,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":257,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":105,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":124,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":154,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":380,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":497,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":475,"org.easymock.tests2.UsageConstraintsTest.greaterThan":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":80,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":279,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":97,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":280,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":138,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":487,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":273,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":398,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":91,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":342,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":149,"org.easymock.tests2.CaptureTest.testCaptureFirst":295,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":343,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":410,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":66,"org.easymock.tests2.UsageTest.moreThanOneArgument":400,"org.easymock.tests2.CaptureTest.testCapture2_2446744":294,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":299,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":198,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":256,"org.easymock.tests.GenericTest.testBridgedEquals":56,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":210,"org.easymock.tests.UsageExpectAndReturnTest.longType":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":102,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":340,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":44,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":462,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":85,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":42,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":215,"org.easymock.tests.UsageCallCountTest.tooManyCalls":211,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":123,"org.easymock.tests.MockingTest.testNiceClassMocking":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":366,"org.easymock.tests.MockingTest.testClassMocking":172,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests2.UsageConstraintsTest.testContains":452,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":204,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":329,"org.easymock.tests2.UsageConstraintsTest.testFind":443,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":214,"org.easymock.tests.MockTypeTest.fromEasyMockClass":135,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":470,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":162,"org.easymock.tests.UsageExpectAndReturnTest.object":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":508,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":251,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":223,"org.easymock.tests.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":186,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":49,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":472,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":75,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":246,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":157,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":427,"org.easymock.tests.MockClassControlTest.testHashCode":115,"org.easymock.tests2.EasyMockSupportTest.testVerify":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":314,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":88,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":244,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":512,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":418,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":467,"org.easymock.tests.UsageVarargTest.varargCharAccepted":250,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":474,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":202,"org.easymock.tests2.UsageTest.openCallCountByLastCall":404,"org.easymock.tests.DefaultClassInstantiatorTest.object":92,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":243,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":221,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":491,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":356,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":426,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":114,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":277,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":76,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":107,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":323,"org.easymock.tests2.UsageTest.resumeIfFailure":409,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":134,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":152,"org.easymock.tests2.StubTest.stubWithReturnValue":425,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":484,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":463,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":68,"org.easymock.tests2.SerializationTest.testAllMockedMethod":339,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":196,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":495,"org.easymock.samples.SupportTest.voteForRemovals":21,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":38,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":505,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":10,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":332,"org.easymock.tests.UsageExpectAndThrowTest.object":36,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":51,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":460,"org.easymock.tests2.DelegateToTest.testWrongClass":379,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":259,"org.easymock.tests.UsageStrictMockTest.range":167,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":396,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":492,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":48,"org.easymock.tests2.CaptureTest.testCaptureNone":290,"org.easymock.tests.UsageUnorderedTest.message":58,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":511,"org.easymock.tests.UsageVerifyTest.twoReturns":133,"org.easymock.tests.UsageVarargTest.varargByteAccepted":255,"org.easymock.tests2.ThreadingTest.testThreadSafe":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":318,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":208,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":224,"org.easymock.tests2.CaptureTest.testCapture_2617107":284,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":200,"org.easymock.tests2.UsageConstraintsTest.any":450,"org.easymock.tests2.StubTest.stub":424,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":151,"org.easymock.tests.UsageExpectAndThrowTest.longType":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":201,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":232,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":414,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":431,"org.easymock.tests2.SerializationTest.testClass":337,"org.easymock.tests.LimitationsTest.mockNativeMethod":262,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":55,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":355,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":417,"org.easymock.tests2.NameTest.nameForMocksControl":375,"org.easymock.tests2.MockedExceptionTest.testMockedException":328,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":306,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":469,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":30,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":267,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":389,"org.easymock.tests.MockingTest.testNicePartialClassMocking":175,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":272,"org.easymock.tests2.CaptureTest.testCaptureLast":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":447,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":371,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":461,"org.easymock.tests.MockingTest.testTwoMocks":173,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":481,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":34,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":407,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":465,"org.easymock.samples.ExampleTest.removeNonExistingDocument":18,"org.easymock.tests.UsageStrictMockTest.differentMethods":168,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":428,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":94,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":298,"org.easymock.tests2.MockBuilderTest.testCreateMockString":393,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":110,"org.easymock.tests.UsageExpectAndThrowTest.floatType":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":308,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":303,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":490,"org.easymock.tests.UsageVerifyTest.twoThrows":132,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":317,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":192,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":278,"org.easymock.tests.LimitationsTest.privateConstructor":261,"org.easymock.tests2.UsageConstraintsTest.testNotNull":464,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":125,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":327,"org.easymock.tests2.UsageTest.defaultResetToNice":406,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":193,"org.easymock.tests.UsageVarargTest.differentLength":252,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":354,"org.easymock.tests2.CallbackTest.callback":326,"org.easymock.tests2.UsageConstraintsTest.equals":442,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":5,"org.easymock.tests.UsageTest.openCallCountByLastCall":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":128,"org.easymock.tests.UsageCallCountTest.tooFewCalls":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":101,"org.easymock.tests.UsageThrowableTest.throwCheckedException":122,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":493,"org.easymock.tests.MockingTest.testStrictClassMocking":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":84,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":370,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":359,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":369,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":336,"org.easymock.tests.ObjectMethodsTest.testHashCode":222,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":300,"org.easymock.tests2.NameTest.nameForNiceMock":374,"org.easymock.tests2.DependencyTest.testInterfaceMocking":422,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":509,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":324,"org.easymock.tests2.DelegateToTest.testStubDelegate":378,"org.easymock.tests2.AnswerTest.stubAnswer":335,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":165,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":473,"org.easymock.tests.UsageVarargTest.varargLongAccepted":254,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":190,"org.easymock.tests.UsageExpectAndReturnTest.floatType":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":471,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":458,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":435,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests.UsageThrowableTest.noUpperLimit":119,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":439,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":394,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":287,"org.easymock.tests2.SerializationTest.test":338,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":93,"org.easymock.tests2.UsageConstraintsTest.testSame":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":60,"org.easymock.samples.SupportTest.addDocument":20,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":480,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":309,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":185,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":178,"org.easymock.tests2.NameTest.nameForMock":372,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":71,"org.easymock.tests2.UsageStrictMockTest.differentMethods":416,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":40,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":220,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":82,"org.easymock.tests2.MockedExceptionTest.testRealException":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":139,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":195,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":496,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":237,"org.easymock.tests2.NameTest.nameForStrictMock":373,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":468,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":271,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":395,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":503,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":459,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":383,"org.easymock.tests2.UsageStrictMockTest.range":415,"org.easymock.tests2.UsageConstraintsTest.lessThan":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":430,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":341,"org.easymock.tests2.CaptureTest.testCaptureRightOne":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":313,"org.easymock.tests2.UsageConstraintsTest.testOr":446,"org.easymock.tests.UsageRangeTest.combination":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":268,"org.easymock.tests.UsageTest.wrongArguments":143,"org.easymock.tests2.MockBuilderTest.testWithConstructor":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":310,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":72,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":96,"org.easymock.tests.UsageVarargTest.varargShortAccepted":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":209,"org.easymock.tests2.UsageConstraintsTest.cmpTo":451,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":184,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":405,"org.easymock.tests2.CaptureTest.testCaptureFromStub":293,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":227,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":384,"org.easymock.tests.UsageTest.unexpectedCallWithArray":142,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":164,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":207,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":73,"org.easymock.tests2.CaptureTest.testCapture":501,"org.easymock.tests2.UsageConstraintsTest.constraints":440,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests.UsageStrictMockTest.testVerify":170,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":22,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":103,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":288,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":65,"org.easymock.tests.LimitationsTest.abstractClass":260,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":241,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":504,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":346}}]
