[{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[296,297,298,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:95","sourceCode":"int = java.lang.Integer.int","type":"CtAssignmentImpl"},"failures":[48,60,300,61,62,69,76,100,130,131,167,193,194,196,198,199,204,207,210,217,270,271,273],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[301],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[302,303,304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Invocation:99","failures":[60,305,141,145,146,148,149,155,171,202,257,259],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[9,12,13,14,18,19,21,26,31,36,37,38,39,40,42,43,44,45,46,47,49,50,51,53,54,57,58,59,60,63,64,65,306,67,68,70,71,72,73,74,77,78,81,82,84,89,94,99,100,101,102,103,104,105,106,112,113,120,126,127,128,129,130,131,132,140,141,142,143,144,145,146,147,148,149,152,153,154,155,156,157,159,160,161,165,166,168,171,173,174,178,179,180,181,182,183,184,185,187,190,195,197,200,201,202,203,205,208,211,212,213,214,215,216,219,220,229,236,237,238,239,240,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,295],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[244,245,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"toStringMethod"}},{"position":"org.easymock.internal.LastControl:95","failures":[194,195,197,199,200,307,211,216,282,284,292],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:94","sourceCode":"throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[195,196,199,200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[303,304],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[308,194],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[309,310,47,311,312,313,57,58,59,314,315,112,113,316,301,317,318,120,319,320,321,322,323,302,324,325,326,327,328,329,330,331,332,333,141,150,150,151,151,152,153,169,170,334,335,171,172,173,174,336,175,176,177,337,338,180,181,183,184,185,186,187,339,340,188,189,190,191,341,342,227,228,229,244,246,247,343,344,345,346,347,348,349,350,261,351,352,262,353,354,355,356,357,358,359,360,361,263,362,363,364,365,366,264,367,368,275,276,277,278,280,281],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[370],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[6,7,8,9,12,13,14,309,371,372,310,373,374,41,375,48,49,52,53,54,376,60,296,297,306,66,298,299,70,76,77,78,377,378,379,125,127,128,129,130,131,132,328,329,330,156,158,159,160,161,165,166,167,168,169,170,334,173,174,175,176,177,181,188,191,342,194,208,238,239,380,249,251,253,254,256,257,381,382,383,384,265,385,266,268,269,270,271,272,276,277,280,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"toStringMethod"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[386],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:471","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[256,362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[387,244,245,246],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[7,8,9,12,13,371,374,376,298,299,70,76,77,78,377,378,127,128,130,131,158,159,165,166,239,388,265,268,270,271],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[200,201,282,283,284,285,292,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[387,244,245,246],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[389,390,318],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[309,174],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,55,71,72,75,392,393,394,395,396,397,128,133,134,398,135,136,137,138,139,150,150,151,151,192,193,196,197,198,199,204,206,207,209,210,211,216,217,218,268,274,293],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[110,321,324,136,182,227,228,229,230,236,399,240,241,242,400,243,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[401,402,127,403,404],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[387,244,245,246],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[194,195,197,199,200,307,211,216,282,284,292],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[195,196,199,200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[387,244,245,246],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,375,405,48,49,50,51,52,53,54,55,56,57,58,59,60,300,61,62,63,64,65,306,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,392,406,407,408,409,410,411,412,413,414,415,416,320,121,122,123,124,377,417,418,125,126,127,128,129,130,131,132,419,133,134,326,327,328,329,330,331,332,333,135,136,137,138,139,140,141,142,143,144,145,146,147,148,420,149,150,150,151,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,381,382,383,384,261,262,263,264,265,266,267,268,269,270,271,272,273,274,421,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":195,"org.easymock.tests2.UsageTest.argumentsOrdered":166,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":380,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":161,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":142,"org.easymock.tests2.DelegateToTest.testReturnException":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":115,"org.easymock.tests.MockingTest.testPartialClassMocking":57,"org.easymock.tests.MockClassControlTest.testToString":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":16,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":262,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":179,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":201,"org.easymock.tests2.UsageTest.wrongArguments":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":123,"org.easymock.samples.ExampleTest.answerVsDelegate":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":310,"org.easymock.tests2.UsageConstraintsTest.testNull":197,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":257,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":333,"org.easymock.tests2.CaptureTest.testPrimitive":285,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":35,"org.easymock.tests.UsageTest.moreThanOneArgument":7,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":3,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageVarargTest.varargIntAccepted":38,"org.easymock.tests.InvocationTest.testEquals":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":135,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":169,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":346,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":139,"org.easymock.tests.ReplayStateInvalidUsageTest.times":413,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests2.DependencyTest.testClassMocking":337,"org.easymock.tests2.AnswerTest.answer":219,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":226,"org.easymock.tests2.CaptureTest.testAnd":282,"org.easymock.tests2.UsageTest.strictResetToDefault":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":2,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":252,"org.easymock.tests2.DelegateToTest.testDelegate":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":31,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":389,"org.easymock.tests.LimitationsTest.mockFinalMethod":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":111,"org.easymock.tests2.DependencyTest.testClassMockingSupport":338,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":298,"org.easymock.tests2.CaptureTest.testCapture1_2446744":286,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":224,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":407,"org.easymock.tests.UsageThrowableTest.throwError":99,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":368,"org.easymock.samples.PartialClassMockTest.testGetArea":141,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":136,"org.easymock.tests2.UsageTest.niceToStrict":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":357,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":171,"org.easymock.tests2.MockBuilderTest.testCreateMock":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":364,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":403,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":25,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":121,"org.easymock.tests.UsageOverloadedMethodTest.overloading":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":366,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":65,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":206,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":90,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":205,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":303,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":291,"org.easymock.tests2.EasyMockSupportClassTest.testAll":261,"org.easymock.tests.MockClassControlTest.testEquals":332,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":109,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":225,"org.easymock.tests2.CaptureTest.testCaptureAll":283,"org.easymock.tests.MockNameTest.defaultName":376,"org.easymock.tests2.UsageConstraintsTest.testMatches":207,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":4,"org.easymock.samples.ExampleTest.voteForRemovals":148,"org.easymock.tests.UsageVarargTest.allKinds":46,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":76,"org.easymock.samples.BasicClassMockTest.testPrintContent":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":110,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":105,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":266,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":119,"org.easymock.tests2.UsageConstraintsTest.greaterThan":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":191,"org.easymock.samples.ExampleTest.voteForRemoval":145,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":325,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":234,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":341,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":186,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":156,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":47,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":250,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":114,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":399,"org.easymock.tests2.CaptureTest.testCaptureFirst":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":251,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":86,"org.easymock.tests2.UsageTest.moreThanOneArgument":158,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":236,"org.easymock.tests2.CaptureTest.testCapture2_2446744":294,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":176,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":45,"org.easymock.tests.GenericTest.testBridgedEquals":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":53,"org.easymock.tests.UsageExpectAndReturnTest.longType":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":107,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":34,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":398,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":214,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":1,"org.easymock.tests.UsageCallCountTest.tooManyCalls":54,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":276,"org.easymock.tests.MockingTest.testNiceClassMocking":314,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":390,"org.easymock.tests.MockingTest.testClassMocking":312,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":405,"org.easymock.tests2.UsageConstraintsTest.testContains":204,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":229,"org.easymock.tests2.UsageConstraintsTest.testFind":196,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":69,"org.easymock.tests.MockTypeTest.fromEasyMockClass":371,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":125,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":232,"org.easymock.tests.UsageExpectAndReturnTest.object":89,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":187,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":256,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":40,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":418,"org.easymock.tests.UsageTest.exactCallCountByLastCall":14,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":343,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":36,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":95,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":64,"org.easymock.tests.MockClassControlTest.testHashCode":331,"org.easymock.tests2.EasyMockSupportTest.testVerify":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":359,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":223,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":421,"org.easymock.tests.UsageVarargTest.varargCharAccepted":39,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests2.UsageTest.openCallCountByLastCall":162,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":259,"org.easymock.tests.DefaultClassInstantiatorTest.object":320,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":377,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":102,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":189,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":330,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":22,"org.easymock.tests.CapturesMatcherTest.test":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":264,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":329,"org.easymock.tests2.UsageTest.resumeIfFailure":167,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":309,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":117,"org.easymock.tests2.StubTest.stubWithReturnValue":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":88,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":215,"org.easymock.tests2.SerializationTest.testAllMockedMethod":246,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":404,"org.easymock.samples.SupportTest.voteForRemovals":155,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":28,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":387,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":370,"org.easymock.tests.UsageExpectAndThrowTest.object":26,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":212,"org.easymock.tests2.DelegateToTest.testWrongClass":242,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":133,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":134,"org.easymock.samples.ConstructorCalledMockTest.testTax":150,"org.easymock.tests.UsageStrictMockTest.range":130,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":388,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":275,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":173,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":415,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":122,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":401,"org.easymock.tests2.CaptureTest.testCaptureNone":290,"org.easymock.tests.UsageUnorderedTest.message":70,"org.easymock.tests.UsageVerifyTest.twoReturns":78,"org.easymock.tests.UsageVarargTest.varargByteAccepted":44,"org.easymock.tests2.ThreadingTest.testThreadSafe":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":362,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":51,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":152,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":378,"org.easymock.tests2.CaptureTest.testCapture_2617107":284,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":74,"org.easymock.tests2.UsageConstraintsTest.any":202,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":412,"org.easymock.tests2.StubTest.stub":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":116,"org.easymock.tests.UsageExpectAndThrowTest.longType":19,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":302,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":411,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":269,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":239,"org.easymock.tests2.SerializationTest.testClass":244,"org.easymock.tests.LimitationsTest.mockNativeMethod":120,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":98,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":316,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":272,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":391,"org.easymock.tests2.NameTest.nameForMocksControl":384,"org.easymock.tests2.MockedExceptionTest.testMockedException":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":352,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":20,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":174,"org.easymock.tests.MockingTest.testNicePartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":185,"org.easymock.tests2.CaptureTest.testCaptureLast":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":299,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":281,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":213,"org.easymock.tests.MockingTest.testTwoMocks":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":24,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":165,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":217,"org.easymock.samples.ExampleTest.removeNonExistingDocument":420,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":409,"org.easymock.tests.UsageStrictMockTest.differentMethods":131,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":322,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":235,"org.easymock.tests2.ConstraintsToStringTest.andToString":308,"org.easymock.tests2.MockBuilderTest.testCreateMockString":177,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":326,"org.easymock.tests.UsageExpectAndThrowTest.floatType":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":353,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":220,"org.easymock.tests.UsageVerifyTest.twoThrows":77,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":263,"org.easymock.samples.ExampleTest.voteAgainstRemoval":146,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":190,"org.easymock.tests.LimitationsTest.privateConstructor":318,"org.easymock.tests2.UsageConstraintsTest.testNotNull":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":227,"org.easymock.tests2.UsageTest.defaultResetToNice":164,"org.easymock.samples.ExampleTest.voteAgainstRemovals":143,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":94,"org.easymock.tests.UsageVarargTest.differentLength":41,"org.easymock.tests2.CallbackTest.callback":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":339,"org.easymock.tests.UsageTest.openCallCountByLastCall":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":73,"org.easymock.tests.UsageCallCountTest.tooFewCalls":49,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":278,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":124,"org.easymock.tests.UsageThrowableTest.throwCheckedException":103,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":402,"org.easymock.tests.MockingTest.testStrictClassMocking":311,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":56,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":277,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":414,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":279,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":222,"org.easymock.tests.ObjectMethodsTest.testHashCode":417,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":237,"org.easymock.tests2.NameTest.nameForNiceMock":383,"org.easymock.tests2.DependencyTest.testInterfaceMocking":178,"org.easymock.samples.ExampleTest.addDocument":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":363,"org.easymock.tests2.DelegateToTest.testStubDelegate":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.AnswerTest.stubAnswer":221,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":128,"org.easymock.tests.UsageVarargTest.varargLongAccepted":43,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":97,"org.easymock.tests.UsageExpectAndReturnTest.floatType":81,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":247,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":151,"org.easymock.tests.UsageThrowableTest.noUpperLimit":100,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":210,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":193,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":344,"org.easymock.tests2.SerializationTest.test":245,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":287,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":304,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":80,"org.easymock.tests2.UsageConstraintsTest.testSame":198,"org.easymock.samples.SupportTest.addDocument":154,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":354,"org.easymock.tests.GenericTest.testPackageScope":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.NameTest.nameForMock":381,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":91,"org.easymock.tests2.UsageStrictMockTest.differentMethods":271,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":340,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":30,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":62,"org.easymock.tests2.MockedExceptionTest.testRealException":230,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":268,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":72,"org.easymock.tests2.NameTest.nameForStrictMock":382,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":335,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":347,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":211,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":323,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":170,"org.easymock.tests2.UsageStrictMockTest.range":270,"org.easymock.tests2.UsageConstraintsTest.lessThan":218,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":249,"org.easymock.tests2.CaptureTest.testCaptureRightOne":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":358,"org.easymock.tests2.UsageConstraintsTest.testOr":199,"org.easymock.tests.UsageRangeTest.combination":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":181,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":355,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":327,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":92,"org.easymock.tests.UsageVarargTest.varargShortAccepted":42,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":324,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":52,"org.easymock.tests2.UsageConstraintsTest.cmpTo":203,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":163,"org.easymock.tests2.CaptureTest.testCaptureFromStub":293,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":406,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":334,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":93,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":129,"org.easymock.tests2.UsageConstraintsTest.constraints":194,"org.easymock.samples.ExampleTest.addAndChangeDocument":149,"org.easymock.tests.UsageStrictMockTest.testVerify":419,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":108,"org.easymock.tests2.CompareToTest.testGreateThan":369,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":85,"org.easymock.tests.LimitationsTest.abstractClass":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":138,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":254}}]
