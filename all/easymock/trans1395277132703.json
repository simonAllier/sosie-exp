[{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,36,1,2,3,4,5,6,37,7,9,10,38,11,39,40,41,42,43,44,45,46,47,48,49,50,12,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,18,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,36,1,2,3,4,5,6,37,7,9,10,38,11,39,40,41,42,43,44,45,46,47,48,49,50,12,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,18,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[0,1,9,54,55,60,61,63,73],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:77","failures":[494,495],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[19,21,22,23,24,26,28,30,36,1,2,3,4,5,6,37,7,9,38,11,47,49,55,57,58,59,61,62,64,65,67,68,70,71,72,73,74,75,76,77,78,97,140,141,144,145,146,147,149,150,152,155,158,166,167,168,176,177,178,179,180,181,182,187,188,189,190,192,193,196,197,198,205,228,232,239,265,266,267,268,269,270,271,272,273,283,295,296,297,299,300,302,303,304,305,306,350,354,355,356,357,358,374,394,395,396,397,398,399,400,401,402,403,404,412,413,415,416,422,424,427,428,429,430,460,461],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,36,1,2,3,4,5,6,37,7,9,10,38,11,39,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,153,162,165,174,176,178,179,242,244,245,273,283,306,307,311,312,382,383,384,385,386,387,394,395,396,398,399,459,460,461,462,463,484,485],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[34,34,35,35,10,49,52,53,57,58,59,60,66,68,69,71,72,73,78,79,80,178,321,322,323,324,325,326,330,331,340,345,382,383,384,385,386,394,399,447,459,460,463,484,485,486],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,36,1,2,3,4,5,6,37,7,9,10,38,11,39,40,41,42,43,44,45,46,47,48,49,50,12,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,18,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[496],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[50,497,13,14,15,16,17,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[284,288],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[499,500,501,502,352,398],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[19,21,22,23,24,26,28,30,34,34,35,35,0,36,1,2,3,4,5,6,37,7,9,10,38,11,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,90,91,93,94,95,97,98,99,100,101,102,108,118,121,131,137,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,162,165,166,167,168,171,172,173,174,175,176,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,195,196,197,198,205,206,207,208,215,222,223,224,225,228,232,234,235,239,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,283,293,306,307,308,309,310,311,312,321,322,323,324,325,342,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,389,392,394,395,396,398,399,400,401,402,403,406,408,411,412,413,415,416,421,428,429,430,431,433,434,436,438,439,440,441,442,443,444,445,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[326,330,331,340,345,447,486],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[34,35,39,50,12,503,90,95,96,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,504,494,505,506,507,508,509,495,227,230,18,237,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[165,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,36,1,2,3,4,5,6,37,7,9,10,38,11,39,40,41,42,43,44,45,46,47,48,49,50,12,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,18,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[140,147,267,350,355,429],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[242,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:117","failures":[22,97,100,102,205,242,244,431],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[39,40,41,510],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[0,1,9,54,55,60,61,63,73],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[511,512],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[20,21,22,23,24,25,26,27,28,29,30,33,0,36,1,2,3,4,5,6,37,7,9,10,38,11,40,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,87,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,171,172,173,174,175,176,177,178,179,180,181,182,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,277,278,280,281,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,369,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,404,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[497,16,17,513,514],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[499,500,501,502,352,398],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[34,34,35,35,10,52,53,57,58,59,60,66,68,69,71,72,78,79,80,178,321,322,323,324,325,326,330,331,340,345,382,383,384,385,386,394,399,459,460,463,484,485,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":55,"org.easymock.tests2.UsageTest.argumentsOrdered":150,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":350,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":336,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":145,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":20,"org.easymock.tests2.DelegateToTest.testReturnException":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":308,"org.easymock.tests.MockingTest.testPartialClassMocking":367,"org.easymock.tests.MockClassControlTest.testToString":315,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":200,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":464,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":121,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":13,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":459,"org.easymock.tests2.UsageTest.wrongArguments":143,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":380,"org.easymock.samples.ExampleTest.answerVsDelegate":22,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":279,"org.easymock.tests2.UsageConstraintsTest.testNull":58,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":372,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":196,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":320,"org.easymock.tests2.CaptureTest.testPrimitive":2,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":463,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":483,"org.easymock.tests.UsageTest.moreThanOneArgument":351,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":323,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":414,"org.easymock.tests.UsageTest.argumentsOrdered":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":382,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":17,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":226,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":220,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":386,"org.easymock.tests.ReplayStateInvalidUsageTest.times":455,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests2.DependencyTest.testClassMocking":183,"org.easymock.tests2.AnswerTest.answer":97,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":209,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":276,"org.easymock.tests2.UsageTest.strictResetToDefault":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":191,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":376,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":418,"org.easymock.tests2.DelegateToTest.testDelegate":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":479,"org.easymock.tests.LimitationsTest.mockFinalMethod":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":363,"org.easymock.tests2.DependencyTest.testClassMockingSupport":184,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":444,"org.easymock.tests2.CaptureTest.testCapture1_2446744":3,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":477,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":207,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":449,"org.easymock.tests.UsageThrowableTest.throwError":265,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":278,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":390,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":325,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":139,"org.easymock.samples.PartialClassMockTest.testGetArea":19,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":450,"org.easymock.tests.MockingTest.testInterfaceMocking":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":383,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":439,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":492,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":465,"org.easymock.tests2.UsageTest.niceToStrict":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":126,"org.easymock.tests2.ThreadingTest.testChangeDefault":512,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":232,"org.easymock.tests2.MockBuilderTest.testCreateMock":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":134,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":111,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":473,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":192,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":419,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":378,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":507,"org.easymock.tests.UsageOverloadedMethodTest.overloading":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":130,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":434,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":68,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":256,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":67,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":7,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":298,"org.easymock.tests2.EasyMockSupportClassTest.testAll":118,"org.easymock.tests.MockClassControlTest.testEquals":319,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":407,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":481,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":361,"org.easymock.tests.MockNameTest.defaultName":493,"org.easymock.tests2.UsageConstraintsTest.testMatches":69,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":324,"org.easymock.samples.ExampleTest.voteForRemovals":26,"org.easymock.tests.UsageVarargTest.allKinds":306,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":428,"org.easymock.samples.BasicClassMockTest.testPrintContent":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":362,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":271,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":176,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":498,"org.easymock.tests2.UsageConstraintsTest.greaterThan":71,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":375,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":168,"org.easymock.samples.ExampleTest.voteForRemoval":23,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":290,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":169,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":160,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":410,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":189,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":307,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":42,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":190,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":152,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":437,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":252,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":142,"org.easymock.tests2.CaptureTest.testCapture2_2446744":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":344,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":305,"org.easymock.tests.GenericTest.testBridgedEquals":409,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":508,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":505,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":426,"org.easymock.tests.UsageExpectAndReturnTest.longType":248,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":482,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":486,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":480,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":321,"org.easymock.tests.UsageCallCountTest.tooManyCalls":427,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":469,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":270,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":89,"org.easymock.tests.MockingTest.testNiceClassMocking":373,"org.easymock.tests.MockingTest.testClassMocking":365,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":420,"org.easymock.tests2.UsageConstraintsTest.testContains":66,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":224,"org.easymock.tests2.UsageConstraintsTest.testFind":57,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":413,"org.easymock.tests.MockTypeTest.fromEasyMockClass":277,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":396,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":244,"org.easymock.tests.UsageExpectAndReturnTest.object":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":14,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":300,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":490,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":509,"org.easymock.tests.UsageTest.exactCallCountByLastCall":358,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":415,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":391,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":261,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":433,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":211,"org.easymock.tests.MockClassControlTest.testHashCode":318,"org.easymock.tests2.EasyMockSupportTest.testVerify":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":128,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":416,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":442,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":206,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":153,"org.easymock.tests.UsageVarargTest.varargCharAccepted":299,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":282,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":349,"org.easymock.tests2.UsageTest.openCallCountByLastCall":146,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":198,"org.easymock.tests.DefaultClassInstantiatorTest.object":283,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":441,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":488,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":106,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":210,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":166,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":470,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":137,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":316,"org.easymock.tests2.UsageTest.resumeIfFailure":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":274,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":310,"org.easymock.tests2.StubTest.stubWithReturnValue":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":18,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":254,"org.easymock.tests2.SerializationTest.testAllMockedMethod":41,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":342,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":514,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":500,"org.easymock.samples.SupportTest.voteForRemovals":30,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":476,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":510,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":348,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":98,"org.easymock.tests.UsageExpectAndThrowTest.object":474,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":393,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":74,"org.easymock.tests2.DelegateToTest.testWrongClass":45,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":484,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":485,"org.easymock.tests.UsageStrictMockTest.range":401,"org.easymock.samples.ConstructorCalledMockTest.testTax":34,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":86,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":88,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":506,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":475,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":115,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":379,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":501,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":440,"org.easymock.tests2.CaptureTest.testCaptureNone":37,"org.easymock.tests.UsageUnorderedTest.message":273,"org.easymock.tests.UsageVerifyTest.twoReturns":430,"org.easymock.tests.UsageVarargTest.varargByteAccepted":304,"org.easymock.tests2.ThreadingTest.testThreadSafe":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":132,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":424,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":491,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":31,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":346,"org.easymock.tests2.UsageConstraintsTest.any":64,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":454,"org.easymock.tests2.StubTest.stub":48,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":389,"org.easymock.tests.UsageExpectAndThrowTest.longType":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":347,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":287,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":453,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":179,"org.easymock.tests2.SerializationTest.testClass":39,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests.LimitationsTest.mockNativeMethod":293,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":408,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":264,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":105,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":182,"org.easymock.tests2.NameTest.nameForMocksControl":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":107,"org.easymock.tests2.MockedExceptionTest.testMockedException":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":120,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":355,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":468,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":243,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":370,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":235,"org.easymock.tests.MockingTest.testNicePartialClassMocking":368,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":103,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":445,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":61,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":75,"org.easymock.tests.MockingTest.testTwoMocks":366,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":96,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":472,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":149,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":79,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":511,"org.easymock.samples.ExampleTest.removeNonExistingDocument":27,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":451,"org.easymock.tests.UsageStrictMockTest.differentMethods":402,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":110,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":212,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":285,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.MockBuilderTest.testCreateMockString":241,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":313,"org.easymock.tests.UsageExpectAndThrowTest.floatType":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":122,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":117,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":100,"org.easymock.tests.UsageVerifyTest.twoThrows":429,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":51,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":131,"org.easymock.samples.ExampleTest.voteAgainstRemoval":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":337,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":167,"org.easymock.tests.LimitationsTest.privateConstructor":292,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":494,"org.easymock.tests2.UsageConstraintsTest.testNotNull":78,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":272,"org.easymock.tests2.UsageTest.defaultResetToNice":148,"org.easymock.samples.ExampleTest.voteAgainstRemovals":21,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":104,"org.easymock.tests.UsageVarargTest.differentLength":301,"org.easymock.tests2.CallbackTest.callback":205,"org.easymock.tests2.UsageConstraintsTest.equals":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":163,"org.easymock.tests.UsageTest.openCallCountByLastCall":354,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":461,"org.easymock.tests.UsageCallCountTest.tooFewCalls":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":91,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":381,"org.easymock.tests.UsageThrowableTest.throwCheckedException":269,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":502,"org.easymock.tests.MockingTest.testStrictClassMocking":364,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":395,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":109,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":90,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":456,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":93,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":102,"org.easymock.tests.ObjectMethodsTest.testHashCode":489,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":16,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":175,"org.easymock.tests2.NameTest.nameForNiceMock":203,"org.easymock.tests2.DependencyTest.testInterfaceMocking":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":15,"org.easymock.samples.ExampleTest.addDocument":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":138,"org.easymock.tests2.DelegateToTest.testStubDelegate":44,"org.easymock.tests2.AnswerTest.stubAnswer":101,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":399,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":236,"org.easymock.tests.UsageVarargTest.varargLongAccepted":303,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":335,"org.easymock.tests.UsageExpectAndReturnTest.floatType":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":35,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":219,"org.easymock.tests.UsageThrowableTest.noUpperLimit":266,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":53,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":81,"org.easymock.tests2.SerializationTest.test":40,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":4,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":284,"org.easymock.tests2.UsageConstraintsTest.testSame":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":246,"org.easymock.samples.SupportTest.addDocument":29,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":92,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":123,"org.easymock.tests.GenericTest.testPackageScope":406,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":218,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":371,"org.easymock.tests2.NameTest.nameForMock":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":257,"org.easymock.tests2.UsageStrictMockTest.differentMethods":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":240,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":478,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":487,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":377,"org.easymock.tests2.MockedExceptionTest.testRealException":225,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":281,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":513,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":339,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":460,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":458,"org.easymock.tests2.NameTest.nameForStrictMock":202,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":231,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":503,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":242,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":158,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":85,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":73,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":286,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":228,"org.easymock.tests2.UsageStrictMockTest.range":180,"org.easymock.tests2.UsageConstraintsTest.lessThan":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":214,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":127,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":60,"org.easymock.tests.UsageRangeTest.combination":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":155,"org.easymock.tests.UsageTest.wrongArguments":353,"org.easymock.tests2.MockBuilderTest.testWithConstructor":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":124,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":327,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":288,"org.easymock.tests.UsageVarargTest.varargShortAccepted":302,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":425,"org.easymock.tests2.UsageConstraintsTest.cmpTo":65,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":329,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":147,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":448,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":229,"org.easymock.tests.UsageTest.unexpectedCallWithArray":352,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":259,"org.easymock.tests2.CaptureTest.testCapture":8,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":400,"org.easymock.tests2.UsageConstraintsTest.constraints":54,"org.easymock.samples.ExampleTest.addAndChangeDocument":28,"org.easymock.tests.UsageStrictMockTest.testVerify":404,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":33,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":397,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":360,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":251,"org.easymock.tests.LimitationsTest.abstractClass":291,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":193,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":296}}]
