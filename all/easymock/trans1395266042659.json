[{"position":"org.easymock.internal.RecordState:243","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[82,83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"value"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[84,85],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[86],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[87,88,89,90,91,92],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[93,84,94,85],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[95,96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[97,98],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[100],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[101,102,103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[104,105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[106,107,108],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[109,110,111,112,113,114,115,116,117,118,119,120],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[121,122,123,124,125,126],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[21,127,128,129,130,131,132,125,57,126,133,134,135,136,137,138],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Invocation:99","failures":[139,140,141,1,34,35,37,38,39,142,99,47],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[97,98],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[143,144,145,146,147,148],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[149,132],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,127,128,129,131,132,125,57,126,133,134,135,136,137,138],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[150,151,152,153,154],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[155,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[157,109,110,111,112,158,159,160,161,162,163,164,165,166,167,113,114,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,115,116,117,118,119,120,136,195],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,127,128,129,131,132,125,57,126,133,134,135,136,137,138],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[157,109,110,111,112,158,159,161,165,166,167,113,114,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,191,192,115,116,117,118,119,120,195],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:60","failures":[198,199,87,200,201,88,89,202,29,33,203],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[121,122,123,124,125,126],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[204,205,206,207],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[101,102,103,208],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[121,122,123,124,125,126],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[209,0,210,1,211,2,3,212,4,213,101,103,5,6,8,9,10,214,11,215,12,13,14,216,111,19,23,24,25,26,27,28,29,30,32,33,217,218,91,91,92,92,34,151,152,153,154,219,220,221,222,223,224,225,226,227,228,229,54,230,231,79,80,81],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[232,233,234,235,236,237,238,239,240,241,242,243,244,245,139,246,140,247,248,249,250,251,252,253,254,255,256,257,93,258,141,259,260,261,84,262,263,264,265,95,96,86,266,267,268,269,94,106,107,270,271,108,82,209,0,210,272,1,211,2,3,273,274,212,4,213,101,102,103,5,6,7,8,9,10,214,275,11,90,276,215,12,13,14,277,216,278,279,280,281,282,83,283,284,15,285,286,287,16,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,196,311,312,17,18,313,157,109,110,111,112,19,202,314,315,20,316,21,22,317,318,319,320,23,321,322,24,323,324,325,326,327,328,329,330,331,25,332,333,334,335,336,26,337,338,339,340,341,342,343,344,345,346,347,348,349,350,158,351,352,127,353,354,355,159,356,128,129,357,358,197,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,27,28,29,30,380,31,32,33,203,217,218,91,92,381,34,382,383,35,36,384,37,38,385,39,386,142,160,387,161,162,163,164,165,166,40,41,42,43,44,388,45,389,46,390,391,167,392,393,394,395,396,397,398,399,400,401,402,403,150,151,152,153,154,47,48,49,50,404,113,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,51,427,114,168,428,429,430,431,432,433,219,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,220,221,222,223,224,225,226,227,434,435,436,437,438,439,440,441,442,228,443,444,445,446,229,447,448,52,53,449,104,450,451,452,453,454,455,456,457,458,459,155,460,461,462,463,464,465,54,466,467,55,468,469,105,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,156,485,486,487,488,489,490,491,189,190,132,492,493,494,495,496,497,498,125,56,499,57,58,500,501,230,191,502,126,133,503,192,134,135,504,505,193,194,115,116,117,118,119,120,506,507,508,509,143,144,145,146,510,147,148,59,60,61,62,63,64,511,512,65,66,513,67,68,69,514,70,71,72,73,74,204,205,515,516,136,137,75,76,77,78,517,518,519,520,231,79,80,521,81,522,523,524,525,206,526,195,207,527,138],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[153],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[528],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[529],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[94,530],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[197],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[237,244,247,209,211,212,213,214,215,278,279,280,281,313,109,110,344,356,369,386,430,431,432,220,221,222,223,224,225,226,227,435,440,453,454,455,456,457,458,459,155,460,461,462,463,492,493,494,495,496,501,126,506,507,508,509,143,138],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":251,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":191,"org.easymock.tests2.UsageTest.argumentsOrdered":129,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":246,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":478,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":354,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":381,"org.easymock.tests2.DelegateToTest.testReturnException":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":116,"org.easymock.tests.MockingTest.testPartialClassMocking":79,"org.easymock.tests.MockClassControlTest.testToString":222,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":232,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":326,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":169,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":18,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":426,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":93,"org.easymock.tests2.UsageTest.wrongArguments":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":51,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":508,"org.easymock.samples.ExampleTest.answerVsDelegate":384,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":229,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":523,"org.easymock.tests2.UsageConstraintsTest.testNull":254,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":227,"org.easymock.tests2.CaptureTest.testPrimitive":294,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":428,"org.easymock.tests.UsageTest.moreThanOneArgument":502,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":188,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":7,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":77,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":449,"org.easymock.tests.UsageTest.argumentsOrdered":135,"org.easymock.tests.UsageVarargTest.varargIntAccepted":394,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":528,"org.easymock.tests.InvocationTest.testEquals":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":40,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":209,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":374,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":44,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":410,"org.easymock.tests.ReplayStateInvalidUsageTest.times":460,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":344,"org.easymock.tests2.DependencyTest.testClassMocking":311,"org.easymock.tests2.AnswerTest.answer":197,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":281,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":444,"org.easymock.tests2.CaptureTest.testAnd":291,"org.easymock.tests2.UsageTest.strictResetToDefault":351,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":76,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":241,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":452,"org.easymock.tests2.DelegateToTest.testDelegate":290,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":409,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":184,"org.easymock.tests.LimitationsTest.mockFinalMethod":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":496,"org.easymock.tests2.DependencyTest.testClassMockingSupport":312,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":204,"org.easymock.tests2.CaptureTest.testCapture1_2446744":295,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":275,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":182,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":279,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":455,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":446,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":517,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":338,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":413,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests.MockingTest.testInterfaceMocking":521,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":170,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":327,"org.easymock.tests2.UsageTest.niceToStrict":353,"org.easymock.tests2.ThreadingTest.testChangeDefault":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":1,"org.easymock.tests2.MockBuilderTest.testCreateMock":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":334,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":178,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":121,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":443,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":190,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":506,"org.easymock.tests.UsageOverloadedMethodTest.overloading":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":336,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":195,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":67,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":97,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":261,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":300,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":395,"org.easymock.tests2.EasyMockSupportClassTest.testAll":23,"org.easymock.tests.MockClassControlTest.testEquals":226,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":494,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":280,"org.easymock.tests2.CaptureTest.testCaptureAll":292,"org.easymock.tests.MockNameTest.defaultName":518,"org.easymock.tests2.UsageConstraintsTest.testMatches":262,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":453,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":78,"org.easymock.samples.ExampleTest.voteForRemovals":39,"org.easymock.tests.UsageVarargTest.allKinds":403,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":516,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":495,"org.easymock.samples.BasicClassMockTest.testPrintContent":218,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":165,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":120,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":289,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":371,"org.easymock.tests2.UsageConstraintsTest.greaterThan":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":321,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":48,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":14,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":414,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":148,"org.easymock.samples.ExampleTest.voteForRemoval":37,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":277,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":214,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":406,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":158,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":230,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":239,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":115,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":286,"org.easymock.tests2.CaptureTest.testCaptureFirst":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":240,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":358,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":512,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":15,"org.easymock.tests2.CaptureTest.testCapture2_2446744":303,"org.easymock.tests2.UsageTest.moreThanOneArgument":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":485,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":4,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":402,"org.easymock.tests.GenericTest.testBridgedEquals":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":441,"org.easymock.tests.UsageExpectAndReturnTest.longType":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":492,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":237,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":187,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":46,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":266,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":75,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":193,"org.easymock.tests.UsageCallCountTest.tooManyCalls":442,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":335,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":164,"org.easymock.tests.MockingTest.testNiceClassMocking":524,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests.MockingTest.testClassMocking":520,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":435,"org.easymock.tests2.UsageConstraintsTest.testContains":260,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":111,"org.easymock.tests2.UsageConstraintsTest.testFind":253,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":167,"org.easymock.tests.MockTypeTest.fromEasyMockClass":445,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":497,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":378,"org.easymock.tests.UsageExpectAndReturnTest.object":513,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":245,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":397,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":432,"org.easymock.tests.UsageTest.exactCallCountByLastCall":504,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":388,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":104,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":202,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":392,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":71,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":526,"org.easymock.tests.MockClassControlTest.testHashCode":225,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":365,"org.easymock.tests2.EasyMockSupportTest.testVerify":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":329,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":450,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":525,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":189,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":278,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":196,"org.easymock.tests.UsageVarargTest.varargCharAccepted":396,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":490,"org.easymock.tests2.UsageTest.openCallCountByLastCall":355,"org.easymock.tests.DefaultClassInstantiatorTest.object":143,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":140,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":491,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":430,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":131,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":330,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":364,"org.easymock.tests2.ConstraintsToStringTest.anyToString":149,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":412,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":12,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":224,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":175,"org.easymock.tests.CapturesMatcherTest.test":100,"org.easymock.tests.ReplayStateInvalidCallsTest.times":418,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":72,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":505,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":223,"org.easymock.tests2.UsageTest.resumeIfFailure":357,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":228,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":118,"org.easymock.tests2.StubTest.stubWithReturnValue":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":201,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":66,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":267,"org.easymock.tests2.SerializationTest.testAllMockedMethod":103,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":484,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":122,"org.easymock.samples.SupportTest.voteForRemovals":35,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":181,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":208,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":489,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":359,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":389,"org.easymock.tests.UsageExpectAndThrowTest.object":179,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":96,"org.easymock.tests2.DelegateToTest.testWrongClass":288,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":416,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":52,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":53,"org.easymock.tests.UsageStrictMockTest.range":57,"org.easymock.samples.ConstructorCalledMockTest.testTax":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":309,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":2,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":462,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":507,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":123,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":408,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":468,"org.easymock.tests2.CaptureTest.testCaptureNone":299,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":107,"org.easymock.tests.UsageUnorderedTest.message":132,"org.easymock.tests.UsageVerifyTest.twoReturns":137,"org.easymock.tests.UsageVarargTest.varargByteAccepted":401,"org.easymock.tests2.ThreadingTest.testThreadSafe":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":332,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":439,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":433,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":217,"org.easymock.tests2.CaptureTest.testCapture_2617107":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":487,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":168,"org.easymock.tests2.UsageConstraintsTest.any":141,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":155,"org.easymock.tests2.StubTest.stub":313,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageExpectAndThrowTest.longType":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":117,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":510,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":459,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.tests2.SerializationTest.testClass":101,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":369,"org.easymock.tests.LimitationsTest.mockNativeMethod":54,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":153,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":341,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":424,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":317,"org.easymock.tests2.NameTest.nameForMocksControl":236,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":270,"org.easymock.tests2.MockedExceptionTest.testMockedException":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":322,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":173,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":81,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":377,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":5,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":3,"org.easymock.tests.MockingTest.testNicePartialClassMocking":80,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":10,"org.easymock.tests2.CaptureTest.testCaptureLast":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":339,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":205,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":423,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":257,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":86,"org.easymock.tests.MockingTest.testTwoMocks":231,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":420,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":177,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":269,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":82,"org.easymock.samples.ExampleTest.removeNonExistingDocument":386,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":457,"org.easymock.tests.UsageStrictMockTest.differentMethods":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":346,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":366,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":145,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":108,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":284,"org.easymock.tests2.MockBuilderTest.testCreateMockString":213,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":220,"org.easymock.tests.UsageExpectAndThrowTest.floatType":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":323,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":320,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":361,"org.easymock.tests.UsageVerifyTest.twoThrows":136,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.samples.ExampleTest.voteAgainstRemoval":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":467,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":13,"org.easymock.tests.LimitationsTest.privateConstructor":465,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":199,"org.easymock.tests2.UsageConstraintsTest.testNotNull":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":166,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":109,"org.easymock.tests2.UsageTest.defaultResetToNice":356,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":70,"org.easymock.tests.UsageVarargTest.differentLength":398,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":340,"org.easymock.tests2.CallbackTest.callback":379,"org.easymock.tests2.UsageConstraintsTest.equals":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":90,"org.easymock.tests.UsageTest.openCallCountByLastCall":503,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":114,"org.easymock.tests.UsageCallCountTest.tooFewCalls":437,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":509,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":271,"org.easymock.tests.UsageThrowableTest.throwCheckedException":163,"org.easymock.tests.MockingTest.testStrictClassMocking":519,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":124,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":113,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":345,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":461,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":31,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":363,"org.easymock.tests.ObjectMethodsTest.testHashCode":431,"org.easymock.tests2.CompareToTest.testGreateOrEqual":85,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":422,"org.easymock.tests2.NameTest.nameForNiceMock":235,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":285,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":417,"org.easymock.tests2.DependencyTest.testInterfaceMocking":17,"org.easymock.samples.ExampleTest.addDocument":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":333,"org.easymock.tests2.DelegateToTest.testStubDelegate":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.AnswerTest.stubAnswer":362,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":56,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":273,"org.easymock.tests.UsageVarargTest.varargLongAccepted":400,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndReturnTest.floatType":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":92,"org.easymock.tests.UsageThrowableTest.noUpperLimit":387,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":305,"org.easymock.tests2.SerializationTest.test":102,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":296,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":98,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":60,"org.easymock.tests2.UsageConstraintsTest.testSame":255,"org.easymock.samples.SupportTest.addDocument":383,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":380,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":407,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":324,"org.easymock.tests.GenericTest.testPackageScope":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":372,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":522,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":405,"org.easymock.tests2.NameTest.nameForMock":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":68,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":183,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":50,"org.easymock.tests2.MockedExceptionTest.testRealException":112,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":481,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":427,"org.easymock.tests2.NameTest.nameForStrictMock":234,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":272,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":376,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":308,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":146,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":0,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":411,"org.easymock.tests2.UsageConstraintsTest.lessThan":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":238,"org.easymock.tests2.CaptureTest.testCaptureRightOne":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":328,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":106,"org.easymock.tests2.UsageConstraintsTest.testOr":256,"org.easymock.tests.UsageRangeTest.combination":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":6,"org.easymock.tests.UsageTest.wrongArguments":133,"org.easymock.tests2.MockBuilderTest.testWithConstructor":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":325,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":69,"org.easymock.tests.UsageVarargTest.varargShortAccepted":399,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":147,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":440,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":425,"org.easymock.tests2.UsageConstraintsTest.cmpTo":259,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":360,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":415,"org.easymock.tests2.CompareToTest.testLessThan":530,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests2.CaptureTest.testCaptureFromStub":302,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":454,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":210,"org.easymock.tests.UsageTest.unexpectedCallWithArray":126,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":421,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":125,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":438,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":88,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":514,"org.easymock.tests2.CaptureTest.testCapture":529,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":499,"org.easymock.tests2.UsageConstraintsTest.constraints":250,"org.easymock.samples.ExampleTest.addAndChangeDocument":142,"org.easymock.tests.UsageStrictMockTest.testVerify":501,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":382,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":498,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":493,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":511,"org.easymock.tests.LimitationsTest.abstractClass":464,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":527,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":43,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":243}}]
