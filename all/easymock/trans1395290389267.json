[{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"shouldBeUsedInOneThread","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[90],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[91,92,93,94,95,96,90,97,98,99,100],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:190","failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,83,140,85,141,38,40,43,46,47,48,142,143,91,92,144,93,145,94,95,146,75,147,148,149,150,151,152,153,154,90,155,156,157,97,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,72,187,73,74,188,189,190,191,98,192,193,194,195,196,197,100,198,199,200,201,89,202],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,77,16,218,219,220,221,222,223,224,225,226,227,228,229,23,24,25,26,27,28,29,30,230,231,42,45,232,233,234,235,169,236,237,238,239,173,174,181,240,186,70,71,241],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[242,243,244,245,246],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[46,47,247,248,162],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[145],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[212,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[249,103,104,105,250,106,107,108,109,110,111,251,252,253,254,255,256,257,258,259,260,261,262,263,264,113,265,114,115,116,117,118,266,267,268,269,270,271,272,273,274,275,120,7,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,121,122,123,301,302,124,125,126,127,128,303,304,305,306,307,81,129,130,308,309,131,310,311,136,312,137,139,82,83,313,140,314,85,141,315,316,317,318,319,320,321,322,323,324,325,326,35,36,38,40,47,92,93,94,95,97,160,161,162,327,328,163,164,165,166,329,167,168,170,171,172,245,330,173,174,175,176,177,178,179,180,182,183,184,185,186,246,187,73,74,188,331,189,190,191,332,333,334,335,98,192,195,196,100,200,336,201,337,89,202,338],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[339,340,341],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[343,344,345,346,347,249,103,105,250,106,107,108,109,110,111,257,258,259,112,78,79,80,118,266,267,268,269,270,271,272,273,274,275,3,6,7,278,279,281,286,291,298,299,121,124,303,12,13,14,81,129,130,308,309,132,348,349,31,82,83,313,84,140,314,85,141,315,32,316,317,318,319,320,321,322,323,324,325,326,35,36,37,38,350,39,40,41,43,47,52,351,352,353,61,62,63,64,354,65,66,92,93,95,146,75,147,149,152,90,155,156,355,157,97,160,161,67,162,327,328,163,164,86,166,329,87,88,171,172,245,173,174,175,176,177,178,179,180,182,183,184,185,240,186,356,72,246,357,188,190,191,332,334,335,98,192,99,193,358,359,195,196,197,100,200,336,201,337,89,202,338],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:269","sourceCode":"final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[360],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[361,362,363,364,365],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[366],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[367,368,5,369,32,42,46,47,50,351,352,353,232,370,371,372,162,233,327,328,234,373,235,70],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[374],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AssertionErrorWrapper:23","sourceCode":"-2087349195182278608L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":92,"org.easymock.tests2.UsageTest.argumentsOrdered":88,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":254,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":329,"org.easymock.tests2.StubTest.stubWithReturnValue":189,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":323,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":302,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":157,"org.easymock.tests2.SerializationTest.testAllMockedMethod":67,"org.easymock.tests2.DelegateToTest.testReturnException":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":252,"org.easymock.tests.MockingTest.testPartialClassMocking":12,"org.easymock.samples.SupportTest.voteForRemovals":326,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":5,"org.easymock.tests.MockClassControlTest.testToString":25,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":366,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":288,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":50,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":276,"org.easymock.tests.UsageExpectAndThrowTest.object":286,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":155,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":191,"org.easymock.tests2.DelegateToTest.testWrongClass":334,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":260,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":261,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":146,"org.easymock.tests2.UsageTest.wrongArguments":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":129,"org.easymock.tests.UsageStrictMockTest.range":85,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":210,"org.easymock.samples.ExampleTest.answerVsDelegate":317,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":61,"org.easymock.tests2.UsageConstraintsTest.testNull":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":287,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":39,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":327,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":30,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":183,"org.easymock.tests2.CaptureTest.testPrimitive":193,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":131,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":295,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":228,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":51,"org.easymock.tests.UsageTest.moreThanOneArgument":115,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":136,"org.easymock.tests2.CaptureTest.testCaptureNone":196,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":102,"org.easymock.tests.UsageUnorderedTest.message":81,"org.easymock.tests.UsageVerifyTest.twoReturns":83,"org.easymock.tests.UsageVarargTest.varargByteAccepted":273,"org.easymock.tests2.ThreadingTest.testThreadSafe":187,"org.easymock.tests.UsageTest.argumentsOrdered":80,"org.easymock.tests.UsageVarargTest.varargIntAccepted":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":58,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":345,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":0,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":262,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":309,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":233,"org.easymock.tests2.UsageConstraintsTest.any":75,"org.easymock.tests2.StubTest.stub":331,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":265,"org.easymock.tests.UsageExpectAndThrowTest.longType":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":253,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":20,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":224,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":337,"org.easymock.tests2.SerializationTest.testClass":160,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests.ReplayStateInvalidUsageTest.times":226,"org.easymock.tests.LimitationsTest.mockNativeMethod":3,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":307,"org.easymock.tests2.AnswerTest.answer":172,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":239,"org.easymock.tests2.CaptureTest.testAnd":98,"org.easymock.tests2.UsageTest.strictResetToDefault":164,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":45,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":178,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.DelegateToTest.testDelegate":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":280,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":14,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":328,"org.easymock.tests.MockingTest.testNicePartialClassMocking":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":291,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":41,"org.easymock.tests.LimitationsTest.mockFinalMethod":4,"org.easymock.tests2.CaptureTest.testCaptureLast":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":255,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":349,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":95,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":217,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":156,"org.easymock.tests.MockingTest.testTwoMocks":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":348,"org.easymock.tests2.CaptureTest.testCapture1_2446744":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":237,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":87,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":158,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":220,"org.easymock.tests.UsageThrowableTest.throwError":105,"org.easymock.samples.ExampleTest.removeNonExistingDocument":231,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":222,"org.easymock.tests.UsageStrictMockTest.differentMethods":141,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":18,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":74,"org.easymock.tests2.MockBuilderTest.testCreateMockString":235,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":23,"org.easymock.tests.UsageExpectAndThrowTest.floatType":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":137,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":152,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":245,"org.easymock.tests.UsageVerifyTest.twoThrows":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":352,"org.easymock.samples.PartialClassMockTest.testGetArea":32,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":263,"org.easymock.samples.ExampleTest.voteAgainstRemoval":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":101,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":56,"org.easymock.tests2.UsageTest.niceToStrict":166,"org.easymock.tests.LimitationsTest.privateConstructor":2,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":374,"org.easymock.tests2.UsageConstraintsTest.testNotNull":97,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":70,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":339,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":162,"org.easymock.tests2.MockBuilderTest.testCreateMock":234,"org.easymock.tests2.UsageTest.defaultResetToNice":169,"org.easymock.samples.ExampleTest.voteAgainstRemovals":316,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":303,"org.easymock.tests2.CallbackTest.callback":246,"org.easymock.tests.UsageTest.openCallCountByLastCall":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":285,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":179,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":208,"org.easymock.tests.UsageCallCountTest.tooFewCalls":343,"org.easymock.tests.UsageOverloadedMethodTest.overloading":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":60,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":259,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":150,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":125,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":149,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":211,"org.easymock.tests.UsageThrowableTest.throwCheckedException":108,"org.easymock.tests2.EasyMockSupportClassTest.testAll":52,"org.easymock.tests.MockClassControlTest.testEquals":29,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":7,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":293,"org.easymock.tests.MockingTest.testStrictClassMocking":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":215,"org.easymock.tests2.CaptureTest.testCaptureAll":192,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":63,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":227,"org.easymock.tests2.UsageConstraintsTest.testMatches":151,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":312,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":218,"org.easymock.tests.ObjectMethodsTest.testHashCode":206,"org.easymock.samples.ExampleTest.voteForRemovals":321,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":188,"org.easymock.tests.UsageVarargTest.allKinds":275,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":139,"org.easymock.tests2.DependencyTest.testInterfaceMocking":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":216,"org.easymock.samples.BasicClassMockTest.testPrintContent":36,"org.easymock.samples.ExampleTest.addDocument":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":59,"org.easymock.tests2.DelegateToTest.testStubDelegate":333,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":110,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":241,"org.easymock.tests2.AnswerTest.stubAnswer":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":256,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":360,"org.easymock.tests2.UsageConstraintsTest.greaterThan":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":133,"org.easymock.tests.UsageVarargTest.varargLongAccepted":272,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":48,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":315,"org.easymock.samples.ExampleTest.voteForRemoval":318,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":22,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":73,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":49,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":306,"org.easymock.tests.UsageExpectAndReturnTest.floatType":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests.UsageThrowableTest.noUpperLimit":250,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":154,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":31,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":143,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":68,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":358,"org.easymock.tests2.SerializationTest.test":161,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":176,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":106,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":297,"org.easymock.tests2.UsageConstraintsTest.testSame":145,"org.easymock.samples.SupportTest.addDocument":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":251,"org.easymock.tests2.CaptureTest.testCaptureFirst":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":177,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":223,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":212,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":55,"org.easymock.tests.GenericTest.testPackageScope":6,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":357,"org.easymock.tests2.CaptureTest.testCapture2_2446744":199,"org.easymock.tests2.UsageTest.moreThanOneArgument":165,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":274,"org.easymock.tests.GenericTest.testBridgedEquals":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":346,"org.easymock.tests.UsageExpectAndReturnTest.longType":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":213,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":126,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":355,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":292,"org.easymock.tests2.UsageStrictMockTest.differentMethods":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":44,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":300,"org.easymock.tests.UsageCallCountTest.tooManyCalls":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":290,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":242,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":201,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":229,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":130,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":62,"org.easymock.tests.MockingTest.testNiceClassMocking":15,"org.easymock.tests.MockingTest.testClassMocking":10,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":248,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":203,"org.easymock.tests2.UsageConstraintsTest.testContains":148,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":144,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":104,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":341,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":243,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":40,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":244,"org.easymock.tests.UsageExpectAndReturnTest.object":124,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":69,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":19,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":43,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":370,"org.easymock.tests2.UsageStrictMockTest.range":89,"org.easymock.tests2.UsageConstraintsTest.lessThan":159,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":182,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":270,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":207,"org.easymock.tests.UsageTest.exactCallCountByLastCall":118,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":247,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":175,"org.easymock.tests2.CaptureTest.testCaptureRightOne":100,"org.easymock.tests2.UsageConstraintsTest.testOr":94,"org.easymock.tests.UsageRangeTest.combination":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":304,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":258,"org.easymock.tests.UsageTest.wrongArguments":78,"org.easymock.tests.MockClassControlTest.testHashCode":28,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":24,"org.easymock.tests2.EasyMockSupportTest.testVerify":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":127,"org.easymock.tests.UsageVarargTest.varargShortAccepted":271,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":257,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":236,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":204,"org.easymock.tests2.UsageConstraintsTest.cmpTo":147,"org.easymock.tests.UsageVarargTest.varargCharAccepted":269,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":336,"org.easymock.tests2.UsageTest.openCallCountByLastCall":167,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":340,"org.easymock.tests.DefaultClassInstantiatorTest.object":16,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":185,"org.easymock.tests2.CaptureTest.testCaptureFromStub":198,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":219,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":371,"org.easymock.tests.UsageTest.unexpectedCallWithArray":77,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":205,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":57,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":107,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":344,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":128,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":314,"org.easymock.tests2.UsageConstraintsTest.constraints":91,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":27,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":46,"org.easymock.samples.ExampleTest.addAndChangeDocument":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":282,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":305,"org.easymock.tests.UsageStrictMockTest.testVerify":230,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":353,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":313,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":214,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":359,"org.easymock.tests2.UsageTest.resumeIfFailure":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":264,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":367,"org.easymock.tests.LimitationsTest.abstractClass":1,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":122,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":113,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":180}}]
