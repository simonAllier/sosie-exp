[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[0,1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,38,39,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Or:38","sourceCode":"for (final org.easymock.IArgumentMatcher org.easymock.IArgumentMatcher : java.util.List<org.easymock.IArgumentMatcher>) {\n    if (org.easymock.IArgumentMatcher.matches(java.lang.Object)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[65,66,67],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[25,68,33],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[2,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:83","failures":[103,66,21,104,105,106,107,108,109,110,111,25,112,113,33,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,37,131,132,133,50,134,135,136,53,54,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[63,151],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[21,105,106,124,152,153,154,155,156,157,50,135,136,158,159,160,161,162,163,164,137,138,139,141,143,165,166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[167,168,169,170,171,172,173],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append(((org.easymock.internal.ErrorMessage.getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[21,105,106,108,109,110,111,124,125,128,129,175,176,177,133,50,135,136,137,138,139,141,143,144,147,148],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","matches":"matches","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[178],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[103,179,66,67,180,21,106,181,2,182,183,184,185,186,187,78,81,91,97,188,189,107,108,109,110,111,22,23,190,191,24,25,26,27,192,193,112,194,28,195,29,30,113,31,32,68,196,197,198,33,34,35,4,8,9,10,11,199,114,115,200,117,118,119,120,201,202,121,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,122,222,223,224,225,226,227,124,0,228,229,230,231,232,233,234,235,236,237,238,239,37,240,241,242,243,244,245,246,247,248,249,17,250,38,39,251,252,253,254,255,256,257,258,259,260,261,262,40,41,42,43,44,263,264,265,266,131,267,268,132,269,50,136,270,271,272,273,274,275,276,277,278,279,280,281,160,52,53,54,137,138,139,55,56,57,58,59,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,140,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,143,338,60,61,339,150,62,340,341,342,343,344,345,346,347,348,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[351],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":191,"org.easymock.tests2.UsageTest.argumentsOrdered":129,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":266,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":228,"org.easymock.tests2.StubTest.stubWithReturnValue":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":307,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":250,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":198,"org.easymock.tests2.SerializationTest.testAllMockedMethod":183,"org.easymock.tests2.DelegateToTest.testReturnException":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":264,"org.easymock.tests.MockingTest.testPartialClassMocking":340,"org.easymock.samples.SupportTest.voteForRemovals":252,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":318,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":81,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":65,"org.easymock.tests.UsageExpectAndThrowTest.object":328,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":175,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":249,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":167,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":60,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":61,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":193,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":52,"org.easymock.tests2.UsageTest.wrongArguments":125,"org.easymock.samples.ConstructorCalledMockTest.testTax":38,"org.easymock.tests.UsageStrictMockTest.range":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":274,"org.easymock.samples.ExampleTest.answerVsDelegate":255,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":232,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":19,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":70,"org.easymock.tests2.UsageConstraintsTest.testNull":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":242,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":213,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":10,"org.easymock.tests2.CaptureTest.testPrimitive":200,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":75,"org.easymock.tests.UsageTest.moreThanOneArgument":143,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":273,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":57,"org.easymock.tests2.CaptureTest.testCaptureNone":120,"org.easymock.tests.UsageUnorderedTest.message":141,"org.easymock.tests.UsageVerifyTest.twoReturns":139,"org.easymock.tests.UsageVarargTest.varargByteAccepted":296,"org.easymock.tests2.ThreadingTest.testThreadSafe":185,"org.easymock.tests.UsageTest.argumentsOrdered":148,"org.easymock.tests.UsageVarargTest.varargIntAccepted":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":92,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":348,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":351,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":261,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":157,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":40,"org.easymock.tests2.CaptureTest.testCapture_2617107":115,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":171,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":338,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":9,"org.easymock.tests2.UsageConstraintsTest.any":112,"org.easymock.tests2.StubTest.stub":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":44,"org.easymock.tests.UsageExpectAndThrowTest.longType":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":265,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":104,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":281,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":317,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":20,"org.easymock.tests2.AnswerTest.answer":103,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":226,"org.easymock.tests2.CaptureTest.testAnd":199,"org.easymock.tests2.UsageTest.strictResetToDefault":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":246,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":181,"org.easymock.tests2.NameTest.nameForMocksControl":111,"org.easymock.tests2.MockedExceptionTest.testMockedException":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":56,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":80,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.DelegateToTest.testDelegate":222,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":342,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":322,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":240,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":11,"org.easymock.tests.MockingTest.testNicePartialClassMocking":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":333,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":244,"org.easymock.tests2.CaptureTest.testCaptureLast":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":131,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":166,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":238,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":286,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":165,"org.easymock.tests2.CaptureTest.testCapture1_2446744":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":224,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":34,"org.easymock.tests.UsageStrictMockTest.differentMethods":136,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":151,"org.easymock.tests2.ConstraintsToStringTest.andToString":156,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":174,"org.easymock.tests2.MockBuilderTest.testCreateMockString":15,"org.easymock.tests.UsageExpectAndThrowTest.floatType":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":59,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":77,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":179,"org.easymock.tests.UsageVerifyTest.twoThrows":138,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":91,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":41,"org.easymock.samples.ExampleTest.voteAgainstRemoval":257,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":86,"org.easymock.tests2.UsageTest.niceToStrict":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":33,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":217,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":45,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":8,"org.easymock.tests2.UsageTest.defaultResetToNice":229,"org.easymock.tests2.MockBuilderTest.testCreateMock":12,"org.easymock.samples.ExampleTest.voteAgainstRemovals":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":94,"org.easymock.tests2.CallbackTest.callback":107,"org.easymock.tests2.UsageConstraintsTest.equals":350,"org.easymock.tests.UsageTest.openCallCountByLastCall":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":327,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":153,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":209,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":272,"org.easymock.tests.UsageCallCountTest.tooFewCalls":346,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":71,"org.easymock.tests.UsageOverloadedMethodTest.overloading":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":96,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":29,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":309,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":235,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":195,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":275,"org.easymock.tests2.EasyMockSupportClassTest.testAll":78,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":335,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":225,"org.easymock.tests2.CaptureTest.testCaptureAll":114,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":237,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":234,"org.easymock.tests2.UsageConstraintsTest.testMatches":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":236,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":67,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":58,"org.easymock.samples.ExampleTest.voteForRemovals":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":170,"org.easymock.tests2.NameTest.nameForNiceMock":110,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":187,"org.easymock.tests.UsageVarargTest.allKinds":140,"org.easymock.tests2.DependencyTest.testInterfaceMocking":248,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":285,"org.easymock.samples.BasicClassMockTest.testPrintContent":262,"org.easymock.samples.ExampleTest.addDocument":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.DelegateToTest.testStubDelegate":122,"org.easymock.tests2.AnswerTest.stubAnswer":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":267,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":50,"org.easymock.tests2.UsageConstraintsTest.greaterThan":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":278,"org.easymock.tests.UsageVarargTest.varargLongAccepted":295,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":270,"org.easymock.samples.ExampleTest.voteForRemoval":256,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":316,"org.easymock.tests.UsageExpectAndReturnTest.floatType":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":16,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":39,"org.easymock.tests2.ConstraintsToStringTest.orToString":152,"org.easymock.tests.UsageThrowableTest.noUpperLimit":339,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":32,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":276,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":23,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":117,"org.easymock.tests2.SerializationTest.test":182,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":206,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":299,"org.easymock.tests2.UsageConstraintsTest.testSame":26,"org.easymock.samples.SupportTest.addDocument":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":263,"org.easymock.tests2.CaptureTest.testCaptureFirst":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":207,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":130,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":178,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":83,"org.easymock.tests.GenericTest.testPackageScope":287,"org.easymock.tests2.UsageTest.moreThanOneArgument":124,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":46,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":297,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":72,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":69,"org.easymock.tests2.NameTest.nameForMock":108,"org.easymock.tests.UsageExpectAndReturnTest.longType":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":282,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":204,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":310,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":14,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":334,"org.easymock.tests2.UsageStrictMockTest.differentMethods":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":55,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":280,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":345,"org.easymock.tests2.MockedExceptionTest.testRealException":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":48,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":323,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":233,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":344,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":5,"org.easymock.tests2.UsageConstraintsTest.testContains":28,"org.easymock.tests2.NameTest.nameForStrictMock":109,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":219,"org.easymock.tests2.UsageConstraintsTest.testFind":24,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":132,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":102,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":243,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":189,"org.easymock.tests.UsageExpectAndReturnTest.object":308,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":68,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":245,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":6,"org.easymock.tests2.UsageStrictMockTest.range":105,"org.easymock.tests2.UsageConstraintsTest.lessThan":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":212,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":293,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":168,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":73,"org.easymock.tests.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":47,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":205,"org.easymock.tests2.CaptureTest.testCaptureRightOne":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":87,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":63,"org.easymock.tests2.UsageConstraintsTest.testOr":27,"org.easymock.tests.UsageRangeTest.combination":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":314,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":289,"org.easymock.tests.UsageTest.wrongArguments":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":84,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":303,"org.easymock.tests2.EasyMockSupportTest.testVerify":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":88,"org.easymock.tests.UsageVarargTest.varargShortAccepted":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":223,"org.easymock.tests2.UsageConstraintsTest.cmpTo":194,"org.easymock.tests.UsageVarargTest.varargCharAccepted":292,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":180,"org.easymock.tests2.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":215,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":101,"org.easymock.tests2.CaptureTest.testCaptureFromStub":36,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":7,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":164,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":89,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":133,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":312,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":134,"org.easymock.tests2.UsageConstraintsTest.constraints":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":324,"org.easymock.samples.ExampleTest.addAndChangeDocument":260,"org.easymock.tests2.ConstraintsToStringTest.notToString":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":315,"org.easymock.tests.UsageStrictMockTest.testVerify":271,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":253,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":97,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":283,"org.easymock.tests2.UsageTest.resumeIfFailure":230,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":118,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":304,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":43,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":210,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":177}}]
