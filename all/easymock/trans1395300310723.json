[{"position":"org.easymock.ConstructorArgs:77","failures":[0,1],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[68,69],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:62","sourceCode":"throw new java.lang.RuntimeException(java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[48],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[70,71,72],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[73],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[2,74,75,76,77,78,79,80,81,12,82,83,84,37,85,86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,8,79,10,113,114,115],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,133,134,135,136,137,138,68,139,140,141,69,142,2,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,3,4,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,107,204,205,108,109,110,111,112,5,6,7,8,9,78,79,80,206,207,208,209,210,211,212,213,214,81,215,216,217,218,219,220,221,222,223,224,225,10,226,227,228,229,113,230,231,232,233,234,11,12,235,82,83,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,114,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,13,14,15,16,17,306,307,308,309,310,311,312,313,314,315,316,317,318,319,18,19,20,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,21,335,336,337,338,339,340,341,342,22,23,24,25,26,27,28,29,30,31,32,33,34,35,343,344,345,36,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,70,71,72,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,84,454,455,456,457,458,459,460,461,462,463,464,465,37,466,85,86,467,468,469,470,471,472,473,474,475,476,115,477,478,479,480,481,482,483,484,485,486,487,488,38,39,40,41,489,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,490,66,491,67,492,493,494],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[68,69],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[22,23,24,25,32,33,40,41,42,43,44,45,46,47,48,49,58,59,63,64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[495,496,497,498,499,437,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[378,379],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:229","sourceCode":"return java.lang.Class<?>.isPrimitive() ? org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.get(java.lang.Class<?>) : null","type":"CtReturnImpl"},"failures":[116,117,119,120,122,126,128,128,129,129,87,88,89,90,91,95,96,102,103,104,105,106,134,135,137,139,141,143,144,145,146,147,151,152,158,159,160,161,162,3,4,167,176,180,184,185,186,187,188,189,190,191,192,193,194,195,107,205,108,109,110,111,112,9,78,79,80,214,217,218,221,222,223,10,226,227,228,229,113,230,231,240,241,242,244,281,282,114,283,284,286,13,14,15,16,17,306,307,308,19,20,322,324,325,327,329,330,332,333,337,22,23,25,26,29,30,31,32,33,34,35,343,344,345,36,346,350,353,363,369,372,373,374,375,376,382,383,384,385,386,387,388,389,390,391,392,393,394,401,408,409,410,411,413,414,415,422,423,424,425,426,427,428,430,434,435,436,438,442,452,453,455,457,458,459,462,463,468,469,470,471,115,482,38,39,41,42,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,64,65,492],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[424],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[501],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[502],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[503,70,71,72],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,133,134,135,136,137,138,68,139,140,141,69,142,2,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,3,4,167,168,169,170,171,172,173,175,176,177,178,179,180,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,107,204,205,108,109,110,111,112,5,6,7,8,9,78,79,80,206,207,208,209,210,211,212,213,214,81,215,216,217,218,219,220,221,222,223,224,225,10,226,227,228,229,113,230,231,232,233,234,11,12,235,82,83,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,114,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,13,14,15,16,17,306,307,308,309,310,311,312,313,314,315,316,317,318,319,18,19,20,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,21,335,336,337,338,339,340,341,342,22,23,24,25,26,27,28,29,30,31,32,33,34,35,343,344,345,36,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,70,71,72,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,430,431,433,434,435,436,438,439,440,441,442,444,445,449,450,451,452,453,84,454,455,456,457,458,459,460,461,462,463,464,465,37,466,85,86,467,468,469,470,471,472,473,474,475,476,115,477,478,479,480,481,482,483,484,485,486,487,488,38,39,40,41,489,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,490,66,491,67,492,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[490,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[504],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[2,505,79,80,215,216,219,220,11,82,454,460,461,85],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[70,71,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[116,128,128,129,129,130,131,139,140,141,173,197,206,211,240,241,242,244,322,327,328,330,331,332,333,21,337,338,339,340,350,353,363,369,375,70,72,506,507,508,408,409,410,411,414,415,428,509,430,431,434,435,436,438,441,442,510,444,492],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[495,496,497,498,499,437,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"this.org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[511,22,23,24,25,26,27,28,29,31,32,33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[78,217,218,82,83,114,457,458,85,86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[70,512,495,496,497,498,499,513,437,493],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[514,515,215,11,516,517],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[128,128,129,129,335,70,439,440,492,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[514,515,215,11,516,517],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[194,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[70,495,496,497,518,498,499,513,437,440,519,492,493],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[183,198,199,200,211,293,410,414,436,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[2,6,9,79,80,214,221,233,235,82,83,381,382,424,442,452,456,463,464,466,85,86,115],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,4,107,205,108,109,110,111,112,7,8,79,214,218,222,223,224,225,10,226,113,114,373,374,375,376,452,458,115],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:85","sourceCode":"return java.util.List<T>.get(0)","type":"CtReturnImpl"},"failures":[22,24,25,26,27,28,29,31,520,32,33,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[22,24,32,40,41,45,46,48,58],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":41,"org.easymock.tests2.UsageTest.argumentsOrdered":461,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":214,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":393,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":258,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":456,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":132,"org.easymock.tests2.DelegateToTest.testReturnException":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":223,"org.easymock.tests.MockingTest.testPartialClassMocking":241,"org.easymock.tests.MockClassControlTest.testToString":198,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":417,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":87,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":353,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":74,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":47,"org.easymock.tests2.UsageTest.wrongArguments":454,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":5,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":407,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":186,"org.easymock.samples.ExampleTest.answerVsDelegate":118,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":211,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":246,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":330,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":392,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":203,"org.easymock.tests2.CaptureTest.testPrimitive":25,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":106,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":285,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":168,"org.easymock.tests.UsageTest.argumentsOrdered":220,"org.easymock.tests.UsageVarargTest.varargIntAccepted":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":13,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":499,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":428,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":487,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":17,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":401,"org.easymock.tests.ReplayStateInvalidUsageTest.times":302,"org.easymock.tests2.DependencyTest.testClassMocking":472,"org.easymock.tests2.AnswerTest.answer":377,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":471,"org.easymock.tests2.CaptureTest.testAnd":22,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":208,"org.easymock.tests2.UsageTest.strictResetToDefault":453,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":165,"org.easymock.tests2.DelegateToTest.testDelegate":427,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":102,"org.easymock.tests.LimitationsTest.mockFinalMethod":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":192,"org.easymock.tests2.DependencyTest.testClassMockingSupport":473,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":324,"org.easymock.tests2.CaptureTest.testCapture1_2446744":26,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":469,"org.easymock.tests.UsageThrowableTest.throwError":107,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":296,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":210,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":488,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":371,"org.easymock.samples.PartialClassMockTest.testGetArea":116,"org.easymock.tests.MockingTest.testInterfaceMocking":243,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":134,"org.easymock.tests2.UsageTest.niceToStrict":455,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":88,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":358,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":248,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":434,"org.easymock.tests2.MockBuilderTest.testCreateMock":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":366,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":404,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":516,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":96,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":388,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":207,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":308,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":184,"org.easymock.tests.UsageOverloadedMethodTest.overloading":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":368,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":113,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":154,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":281,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":52,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":31,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":312,"org.easymock.tests.MockClassControlTest.testEquals":202,"org.easymock.tests2.EasyMockSupportClassTest.testAll":350,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":140,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":104,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":506,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":502,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":470,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":190,"org.easymock.tests2.CaptureTest.testCaptureAll":23,"org.easymock.tests.MockNameTest.defaultName":142,"org.easymock.tests2.UsageConstraintsTest.testMatches":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":286,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":294,"org.easymock.samples.ExampleTest.voteForRemovals":122,"org.easymock.tests.UsageVarargTest.allKinds":18,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":191,"org.easymock.samples.BasicClassMockTest.testPrintContent":131,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":111,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":464,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":484,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":226,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":513,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":181,"org.easymock.tests2.UsageConstraintsTest.greaterThan":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":164,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":340,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":182,"org.easymock.samples.ExampleTest.voteForRemoval":119,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":341,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":344,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":212,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":333,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":452,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":173,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":385,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":222,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":422,"org.easymock.tests2.CaptureTest.testCaptureFirst":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":386,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":463,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":150,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":36,"org.easymock.tests2.CaptureTest.testCapture2_2446744":34,"org.easymock.tests2.UsageTest.moreThanOneArgument":84,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":266,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":319,"org.easymock.tests.GenericTest.testBridgedEquals":69,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":279,"org.easymock.tests.UsageExpectAndReturnTest.longType":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":188,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":383,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":510,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":105,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":167,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":61,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":103,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":283,"org.easymock.tests.UsageCallCountTest.tooManyCalls":280,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":367,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":110,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":409,"org.easymock.tests.MockingTest.testNiceClassMocking":247,"org.easymock.tests.MockingTest.testClassMocking":239,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":509,"org.easymock.tests2.UsageConstraintsTest.testContains":51,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":273,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":375,"org.easymock.tests2.UsageConstraintsTest.testFind":42,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":114,"org.easymock.tests.MockTypeTest.fromEasyMockClass":209,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":67,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":233,"org.easymock.tests.UsageExpectAndReturnTest.object":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":405,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":496,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":314,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":291,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":504,"org.easymock.tests.UsageTest.exactCallCountByLastCall":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":253,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":169,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":159,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":309,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":478,"org.easymock.tests.MockClassControlTest.testHashCode":201,"org.easymock.tests2.EasyMockSupportTest.testVerify":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":360,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":170,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":227,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":468,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":490,"org.easymock.tests.UsageVarargTest.varargCharAccepted":313,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":174,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":271,"org.easymock.tests2.UsageTest.openCallCountByLastCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":394,"org.easymock.tests.DefaultClassInstantiatorTest.object":175,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":306,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":289,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":361,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":477,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":200,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":338,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":93,"org.easymock.tests.CapturesMatcherTest.test":511,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":160,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":193,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":369,"org.easymock.tests2.UsageTest.resumeIfFailure":462,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":206,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":225,"org.easymock.tests2.StubTest.stubWithReturnValue":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":437,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":152,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":62,"org.easymock.tests2.SerializationTest.testAllMockedMethod":72,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":264,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":517,"org.easymock.samples.SupportTest.voteForRemovals":126,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":99,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":503,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":270,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":378,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":138,"org.easymock.tests.UsageExpectAndThrowTest.object":97,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":59,"org.easymock.tests2.DelegateToTest.testWrongClass":425,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":19,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":20,"org.easymock.samples.ConstructorCalledMockTest.testTax":128,"org.easymock.tests.UsageStrictMockTest.range":82,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":450,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":390,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":436,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":185,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":514,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":135,"org.easymock.tests2.CaptureTest.testCaptureNone":30,"org.easymock.tests.UsageUnorderedTest.message":2,"org.easymock.tests.UsageVerifyTest.twoReturns":80,"org.easymock.tests.UsageVarargTest.varargByteAccepted":318,"org.easymock.tests2.ThreadingTest.testThreadSafe":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":364,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":277,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":130,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":292,"org.easymock.tests2.CaptureTest.testCapture_2617107":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":268,"org.easymock.tests2.UsageConstraintsTest.any":49,"org.easymock.tests2.StubTest.stub":476,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":195,"org.easymock.tests.UsageExpectAndThrowTest.longType":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":269,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":179,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":300,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":466,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":482,"org.easymock.tests2.SerializationTest.testClass":70,"org.easymock.tests.LimitationsTest.mockNativeMethod":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":162,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":141,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":508,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":398,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":467,"org.easymock.tests2.NameTest.nameForMocksControl":421,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":400,"org.easymock.tests2.MockedExceptionTest.testMockedException":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":352,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":218,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":491,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":91,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":244,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":327,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":438,"org.easymock.tests.MockingTest.testNicePartialClassMocking":242,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":512,"org.easymock.tests2.CompareToTest.testCompareEqual":501,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":396,"org.easymock.tests2.CaptureTest.testCaptureLast":29,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":325,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":415,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":60,"org.easymock.tests.MockingTest.testTwoMocks":240,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":416,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":95,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":460,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":64,"org.easymock.samples.ExampleTest.removeNonExistingDocument":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":403,"org.easymock.tests.UsageStrictMockTest.differentMethods":83,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":298,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":479,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":177,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":345,"org.easymock.tests2.MockBuilderTest.testCreateMockString":444,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":196,"org.easymock.tests.UsageExpectAndThrowTest.floatType":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":354,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":494,"org.easymock.tests.UsageVerifyTest.twoThrows":79,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":363,"org.easymock.samples.ExampleTest.voteAgainstRemoval":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":259,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":339,"org.easymock.tests.LimitationsTest.privateConstructor":321,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":112,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":373,"org.easymock.tests2.UsageTest.defaultResetToNice":459,"org.easymock.samples.ExampleTest.voteAgainstRemovals":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":260,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":397,"org.easymock.tests.UsageVarargTest.differentLength":315,"org.easymock.tests2.CallbackTest.callback":372,"org.easymock.tests2.UsageConstraintsTest.equals":489,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":335,"org.easymock.tests.UsageTest.openCallCountByLastCall":217,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":7,"org.easymock.tests.UsageCallCountTest.tooFewCalls":275,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":411,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":187,"org.easymock.tests.UsageThrowableTest.throwCheckedException":109,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":515,"org.easymock.tests.MockingTest.testStrictClassMocking":238,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":414,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":410,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":402,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":303,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":413,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":382,"org.easymock.tests2.CompareToTest.testGreateOrEqual":500,"org.easymock.tests.ObjectMethodsTest.testHashCode":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":498,"org.easymock.tests2.NameTest.nameForNiceMock":420,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":346,"org.easymock.tests2.DependencyTest.testInterfaceMocking":474,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":497,"org.easymock.samples.ExampleTest.addDocument":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":365,"org.easymock.tests2.DelegateToTest.testStubDelegate":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.AnswerTest.stubAnswer":381,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":439,"org.easymock.tests.UsageVarargTest.varargLongAccepted":317,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":161,"org.easymock.tests.UsageExpectAndReturnTest.floatType":145,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":492,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":486,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":57,"org.easymock.tests.UsageThrowableTest.noUpperLimit":204,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":39,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":445,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":27,"org.easymock.tests2.SerializationTest.test":71,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":144,"org.easymock.tests2.UsageConstraintsTest.testSame":44,"org.easymock.samples.SupportTest.addDocument":125,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":412,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":355,"org.easymock.tests.GenericTest.testPackageScope":139,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":252,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":485,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":245,"org.easymock.tests2.NameTest.nameForMock":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":443,"org.easymock.tests2.UsageStrictMockTest.differentMethods":86,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":336,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":101,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":166,"org.easymock.tests2.MockedExceptionTest.testRealException":376,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":213,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":262,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":519,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":305,"org.easymock.tests2.NameTest.nameForStrictMock":419,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":433,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":449,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":178,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":58,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":75,"org.easymock.tests.ErrorMessageTest.testGetters":76,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":430,"org.easymock.tests2.UsageStrictMockTest.range":85,"org.easymock.tests2.UsageConstraintsTest.lessThan":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":481,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":518,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":256,"org.easymock.tests2.CaptureTest.testCaptureRightOne":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":359,"org.easymock.tests2.UsageConstraintsTest.testOr":45,"org.easymock.tests.UsageRangeTest.combination":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":328,"org.easymock.tests.UsageTest.wrongArguments":216,"org.easymock.tests2.MockBuilderTest.testWithConstructor":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":356,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":249,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":180,"org.easymock.tests.UsageVarargTest.varargShortAccepted":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":278,"org.easymock.tests2.UsageConstraintsTest.cmpTo":50,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":251,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":458,"org.easymock.tests2.CaptureTest.testCaptureFromStub":33,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":295,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":431,"org.easymock.tests.UsageTest.unexpectedCallWithArray":215,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":157,"org.easymock.tests2.CaptureTest.testCapture":520,"org.easymock.tests2.UsageConstraintsTest.constraints":40,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":235,"org.easymock.samples.ExampleTest.addAndChangeDocument":124,"org.easymock.tests.UsageStrictMockTest.testVerify":237,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":127,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":189,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":28,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":507,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":149,"org.easymock.tests.LimitationsTest.abstractClass":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":16,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":389,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":77,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":310}}]
