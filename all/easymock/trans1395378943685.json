[{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[24,25],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[26,27,28,29,30],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[31,32,33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[34,35,36,37,38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[41,42,43,11,44,45],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,41,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,1,97,98,99,100,101,42,2,102,3,103,43,4,5,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,6,7,128,8,9,129,130,131,132,133,134,135,39,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,10,11,12,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,13,14,15,16,240,241,44,242,17,18,243,244,245,45,246,19,20,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,21,277,22,23,278,279,280,26,24,25,281,282,283,27,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,28,327,29,328,329,330,331,332,333,334,30,335,336,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[60,61,82,94,1,6,7,131,132,171,172,173,174,175,176,177,178,179,180,226,236,237,256,21,279,280,26,24,25,281,282,283,27,284,338,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,28,327,29,328,329,330,331,332,333,334,30,335,336,337],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[339,340],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[341,313,314,315],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[24,27,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[102,6,342,343,344,345],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[346,70,198,323,325,340,326],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[347],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[69,198,236,237,261,304,305,307],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[348,349,350,351,352],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[244,253,291],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[24,27,294],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,41,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,1,97,98,99,100,101,42,2,102,3,103,43,4,5,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,6,7,128,8,9,129,130,131,132,133,134,135,39,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,10,11,12,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,208,209,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,13,14,15,16,240,241,44,242,17,18,243,244,245,45,246,19,20,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,21,277,22,23,278,279,280,26,24,25,281,282,283,27,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,28,327,29,328,329,330,331,332,333,334,30,335,336,337],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[1,353],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[354],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":24,"org.easymock.tests2.UsageTest.argumentsOrdered":20,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":81,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":244,"org.easymock.tests2.StubTest.stubWithReturnValue":239,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":298,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":156,"org.easymock.tests2.SerializationTest.testAllMockedMethod":315,"org.easymock.tests2.DelegateToTest.testReturnException":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":79,"org.easymock.tests.MockingTest.testPartialClassMocking":74,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":345,"org.easymock.samples.SupportTest.voteForRemovals":207,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":354,"org.easymock.tests.MockClassControlTest.testToString":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":38,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":117,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":341,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":105,"org.easymock.tests.UsageExpectAndThrowTest.object":115,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":295,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":241,"org.easymock.tests2.DelegateToTest.testWrongClass":325,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":284,"org.easymock.tests2.UsageTest.wrongArguments":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":176,"org.easymock.samples.ConstructorCalledMockTest.testTax":208,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":57,"org.easymock.samples.ExampleTest.answerVsDelegate":198,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":316,"org.easymock.tests2.UsageConstraintsTest.testNull":281,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":116,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":271,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":218,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":188,"org.easymock.tests2.CaptureTest.testPrimitive":328,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":180,"org.easymock.tests.UsageTest.moreThanOneArgument":2,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":4,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":145,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":56,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":191,"org.easymock.tests2.CaptureTest.testCaptureNone":333,"org.easymock.tests.UsageUnorderedTest.message":1,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":92,"org.easymock.tests2.ThreadingTest.testThreadSafe":223,"org.easymock.tests.UsageTest.argumentsOrdered":5,"org.easymock.tests.UsageVarargTest.varargIntAccepted":86,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":51,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":212,"org.easymock.tests2.CaptureTest.testCapture_2617107":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":171,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":179,"org.easymock.tests2.UsageConstraintsTest.any":285,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":346,"org.easymock.tests2.StubTest.stub":238,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":80,"org.easymock.tests.UsageExpectAndThrowTest.longType":108,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":31,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":141,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":277,"org.easymock.tests2.SerializationTest.testClass":313,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":312,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":303,"org.easymock.tests.LimitationsTest.mockNativeMethod":77,"org.easymock.tests.ReplayStateInvalidUsageTest.times":143,"org.easymock.tests2.AnswerTest.answer":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":166,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":231,"org.easymock.tests2.CaptureTest.testAnd":28,"org.easymock.tests2.UsageTest.strictResetToDefault":242,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":257,"org.easymock.tests2.NameTest.nameForMocksControl":16,"org.easymock.tests2.MockedExceptionTest.testMockedException":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":169,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests2.DelegateToTest.testDelegate":326,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":76,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":109,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":219,"org.easymock.tests.MockingTest.testNicePartialClassMocking":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":120,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":254,"org.easymock.tests2.CompareToTest.testCompareEqual":350,"org.easymock.tests2.CaptureTest.testCaptureLast":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":82,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":322,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":27,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":101,"org.easymock.tests2.CaptureTest.testCapture1_2446744":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":118,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":113,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":300,"org.easymock.tests.UsageThrowableTest.throwError":62,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":137,"org.easymock.samples.ExampleTest.removeNonExistingDocument":203,"org.easymock.tests.UsageStrictMockTest.differentMethods":9,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":139,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":225,"org.easymock.tests2.MockBuilderTest.testCreateMockString":222,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":193,"org.easymock.tests.UsageExpectAndThrowTest.floatType":107,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":291,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":305,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":234,"org.easymock.samples.PartialClassMockTest.testGetArea":211,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":138,"org.easymock.tests2.CompareToTest.testLessOrEqual":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":172,"org.easymock.samples.ExampleTest.voteAgainstRemoval":200,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":259,"org.easymock.tests2.UsageTest.niceToStrict":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":106,"org.easymock.tests2.UsageConstraintsTest.testNotNull":299,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":308,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":34,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":216,"org.easymock.tests2.UsageTest.defaultResetToNice":246,"org.easymock.tests2.MockBuilderTest.testCreateMock":220,"org.easymock.samples.ExampleTest.voteAgainstRemovals":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":162,"org.easymock.tests.UsageVarargTest.differentLength":89,"org.easymock.tests2.CallbackTest.callback":261,"org.easymock.tests.UsageTest.openCallCountByLastCall":103,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":114,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":267,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":279,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":178,"org.easymock.tests.UsageCallCountTest.tooFewCalls":49,"org.easymock.tests.UsageOverloadedMethodTest.overloading":195,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":289,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":319,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":158,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":288,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":32,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":58,"org.easymock.tests.UsageThrowableTest.throwCheckedException":65,"org.easymock.tests2.EasyMockSupportClassTest.testAll":232,"org.easymock.tests.MockClassControlTest.testEquals":187,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":96,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":122,"org.easymock.tests2.CaptureTest.testCaptureAll":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":99,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":321,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":61,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":318,"org.easymock.tests2.UsageConstraintsTest.testMatches":290,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":320,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":192,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":39,"org.easymock.tests2.CompareToTest.testGreateOrEqual":351,"org.easymock.tests.ObjectMethodsTest.testHashCode":134,"org.easymock.samples.ExampleTest.voteForRemovals":202,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":227,"org.easymock.tests2.NameTest.nameForNiceMock":15,"org.easymock.tests.UsageVarargTest.allKinds":94,"org.easymock.tests2.DependencyTest.testInterfaceMocking":240,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":10,"org.easymock.samples.BasicClassMockTest.testPrintContent":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":100,"org.easymock.samples.ExampleTest.addDocument":201,"org.easymock.tests2.DelegateToTest.testStubDelegate":324,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":67,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":275,"org.easymock.tests2.AnswerTest.stubAnswer":306,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":83,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":7,"org.easymock.tests2.UsageConstraintsTest.greaterThan":292,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":260,"org.easymock.tests.UsageVarargTest.varargLongAccepted":91,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":129,"org.easymock.samples.ExampleTest.voteForRemoval":199,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":224,"org.easymock.tests.UsageExpectAndReturnTest.floatType":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":165,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":255,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":209,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":293,"org.easymock.tests.UsageThrowableTest.noUpperLimit":63,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":280,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":59,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":330,"org.easymock.tests2.SerializationTest.test":314,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":264,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":41,"org.easymock.tests2.UsageConstraintsTest.testSame":282,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":148,"org.easymock.samples.SupportTest.addDocument":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":78,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":339,"org.easymock.tests2.CaptureTest.testCaptureFirst":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":265,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":248,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":73,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":140,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":154,"org.easymock.tests.GenericTest.testPackageScope":95,"org.easymock.tests2.CaptureTest.testCapture2_2446744":336,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":226,"org.easymock.tests2.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":35,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":93,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":53,"org.easymock.tests2.NameTest.nameForMock":13,"org.easymock.tests.UsageExpectAndReturnTest.longType":150,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":262,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":97,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":159,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":297,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":40,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":121,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":151,"org.easymock.tests.UsageCallCountTest.tooManyCalls":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":170,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":48,"org.easymock.tests2.MockedExceptionTest.testRealException":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":0,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":317,"org.easymock.tests2.UsageConstraintsTest.testContains":287,"org.easymock.tests2.NameTest.nameForStrictMock":14,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":47,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":310,"org.easymock.tests2.UsageConstraintsTest.testFind":25,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":196,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":236,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":253,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":237,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":126,"org.easymock.tests.UsageExpectAndReturnTest.object":157,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":353,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":294,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":256,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":215,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.UsageConstraintsTest.lessThan":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":270,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":88,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":135,"org.easymock.tests.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":36,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":263,"org.easymock.tests2.CaptureTest.testCaptureRightOne":30,"org.easymock.tests2.UsageConstraintsTest.testOr":283,"org.easymock.tests.UsageRangeTest.combination":167,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":250,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":163,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":70,"org.easymock.tests.UsageTest.wrongArguments":3,"org.easymock.tests.MockClassControlTest.testHashCode":186,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":182,"org.easymock.tests2.EasyMockSupportTest.testVerify":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":160,"org.easymock.tests.UsageVarargTest.varargShortAccepted":90,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":228,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":52,"org.easymock.tests2.UsageConstraintsTest.cmpTo":286,"org.easymock.tests.UsageVarargTest.varargCharAccepted":87,"org.easymock.tests2.CompareToTest.testLessThan":348,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":276,"org.easymock.tests2.UsageTest.openCallCountByLastCall":245,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":45,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":273,"org.easymock.tests.DefaultClassInstantiatorTest.object":125,"org.easymock.tests2.CaptureTest.testCaptureFromStub":335,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":136,"org.easymock.tests.UsageTest.unexpectedCallWithArray":102,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":133,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":64,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":161,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":258,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":128,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":185,"org.easymock.samples.ExampleTest.addAndChangeDocument":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":111,"org.easymock.tests2.ConstraintsToStringTest.notToString":347,"org.easymock.tests.UsageStrictMockTest.testVerify":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":164,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":235,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":127,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":184,"org.easymock.tests2.CompareToTest.testGreateThan":349,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":98,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":331,"org.easymock.tests2.UsageTest.resumeIfFailure":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":173,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":153,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":268,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":85}}]
