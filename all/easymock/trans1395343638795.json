[{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:230","sourceCode":"for (final org.easymock.internal.Injection org.easymock.internal.Injection : java.util.List<org.easymock.internal.Injection>) {\n    if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n        if (org.easymock.internal.Injection != null) {\n            throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n        } \n        org.easymock.internal.Injection = org.easymock.internal.Injection;\n    } \n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[20,21,22,23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,0,54,55,56,1,57,58,59,60,61,62,63,64,65,66,67,25,68,69,26,27,70,71,72,73,74,75,20,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,22,95,96,97,98,99,100,23,101,102,24,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,28,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,29,30,31,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,33,210,211,34,35,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,37,255,256,257,38,39,258,40,259,260,41,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,42,309,310,311,312,313,314,315],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[317,318,150,319,320],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[321,163,164,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[323,324],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[325],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[52,52,53,53,54,55,56,65,326,70,72,74,75,20,76,78,79,94,22,96,97,98,99,100,327,328,23,101,102,24,329,330,106,107,108,165,166,331,332,167,168,169,170,333,171,172,173,334,335,336,337,338,186,339,340,187,341,342,343,344,345,346,347,348,349,188,350,351,352,353,354,189,355,356,357,358,359,360,361,362,363,364,365,366,367,368,225,226,369,370,371,267,372,373,301,302,303,374,375,376,377,378,379,304],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[25,81,87,88,93,141,144,194,195,196,197,198,33,216,266,268,269,275,276,277,278,279,294,295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[161],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[380,381,382,383,384,385],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[137],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[43,44,45,46,47,48,49,50,386,51,52,53,0,54,55,56,1,57,387,58,59,60,61,2,3,4,388,5,62,6,7,8,9,10,389,390,391,63,64,65,326,66,67,25,68,69,26,27,70,71,72,392,73,74,75,20,76,393,77,78,79,21,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,22,95,96,97,98,99,394,100,327,328,23,101,102,24,329,330,103,104,105,106,107,108,109,11,12,13,395,14,110,15,16,17,18,19,396,397,111,112,113,114,398,115,116,117,399,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,400,138,139,140,141,142,143,401,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,402,403,404,405,406,161,321,407,162,163,164,165,166,331,332,167,168,169,170,408,333,171,172,173,334,409,410,335,411,412,174,175,28,176,177,178,179,180,181,182,183,184,185,336,337,338,186,339,340,187,341,342,343,344,345,346,347,348,349,188,350,351,352,353,354,189,355,356,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,190,191,192,193,29,30,31,194,195,196,197,198,439,440,441,442,443,32,199,200,201,202,203,204,205,206,207,208,209,33,210,211,34,35,444,323,445,446,358,359,360,361,362,363,365,447,448,449,450,451,452,212,213,214,215,216,217,366,453,454,455,456,367,457,458,459,460,218,219,220,221,222,223,224,368,225,226,369,370,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,461,462,463,325,464,465,466,467,468,469,470,471,247,472,248,249,473,36,250,251,252,253,254,37,255,256,257,38,39,258,40,259,260,41,261,262,263,264,265,266,371,474,267,372,475,476,477,478,479,268,269,480,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,481,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,482,483,373,301,302,484,303,485,486,487,374,375,376,377,378,488,489,379,304,324,490,491,492,493,494,495,496,497,322,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,305,515,306,307,308,42,309,310,311,312,313,314,315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[93],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[516],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[475,478,479,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[69,176,182,183,30,31,517,209,211,266,309,310,313,314],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[3,4,5,7,8,389,12,13,14,16,17,396],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"matched"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":137,"org.easymock.tests2.UsageTest.argumentsOrdered":183,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":308,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":501,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":178,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":213,"org.easymock.tests.MockingTest.testPartialClassMocking":301,"org.easymock.tests.MockClassControlTest.testToString":376,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":402,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":510,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":251,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":64,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":434,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":380,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests2.UsageTest.wrongArguments":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":275,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":389,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":192,"org.easymock.samples.ExampleTest.answerVsDelegate":46,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":367,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":486,"org.easymock.tests2.UsageConstraintsTest.testNull":139,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":128,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":379,"org.easymock.tests2.CaptureTest.testPrimitive":83,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":279,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":265,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":298,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":475,"org.easymock.tests.UsageTest.argumentsOrdered":314,"org.easymock.tests.UsageVarargTest.varargIntAccepted":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":384,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":165,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":410,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":19,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":494,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":198,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":418,"org.easymock.tests.ReplayStateInvalidUsageTest.times":468,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests2.DependencyTest.testClassMocking":390,"org.easymock.tests2.AnswerTest.answer":161,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":508,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":114,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":454,"org.easymock.tests2.CaptureTest.testAnd":80,"org.easymock.tests2.UsageTest.strictResetToDefault":175,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":306,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":479,"org.easymock.tests2.DelegateToTest.testDelegate":118,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":261,"org.easymock.tests.LimitationsTest.mockFinalMethod":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":274,"org.easymock.tests2.DependencyTest.testClassMockingSupport":391,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":442,"org.easymock.tests2.CaptureTest.testCapture1_2446744":84,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":394,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":112,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":463,"org.easymock.tests.UsageThrowableTest.throwError":199,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":456,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":421,"org.easymock.samples.PartialClassMockTest.testGetArea":54,"org.easymock.tests.MockingTest.testInterfaceMocking":484,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":195,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":437,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":452,"org.easymock.tests2.UsageTest.niceToStrict":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":345,"org.easymock.tests2.ThreadingTest.testChangeDefault":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":492,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":167,"org.easymock.tests2.MockBuilderTest.testCreateMock":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":352,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":39,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":317,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":124,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":453,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":491,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":190,"org.easymock.tests.UsageOverloadedMethodTest.overloading":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":354,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":148,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":238,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":280,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":147,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":89,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":481,"org.easymock.tests.MockClassControlTest.testEquals":489,"org.easymock.tests2.EasyMockSupportClassTest.testAll":186,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":226,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":263,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":113,"org.easymock.tests2.CaptureTest.testCaptureAll":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":272,"org.easymock.tests.MockNameTest.defaultName":480,"org.easymock.tests2.UsageConstraintsTest.testMatches":149,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":461,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":299,"org.easymock.samples.ExampleTest.voteForRemovals":50,"org.easymock.tests.UsageVarargTest.allKinds":293,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":29,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":273,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":205,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":385,"org.easymock.tests2.UsageConstraintsTest.greaterThan":151,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":339,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":515,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":24,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":422,"org.easymock.samples.ExampleTest.voteForRemoval":47,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":365,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":58,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":329,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":99,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":414,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":174,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":304,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":121,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":212,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":398,"org.easymock.tests2.CaptureTest.testCaptureFirst":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":122,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":234,"org.easymock.tests2.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":60,"org.easymock.tests2.CaptureTest.testCapture2_2446744":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":509,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":172,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":292,"org.easymock.tests.GenericTest.testBridgedEquals":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":223,"org.easymock.tests.UsageExpectAndReturnTest.longType":230,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":264,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":435,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":156,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":296,"org.easymock.tests.UsageCallCountTest.tooManyCalls":224,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":204,"org.easymock.tests.MockingTest.testNiceClassMocking":487,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":75,"org.easymock.tests.MockingTest.testClassMocking":483,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":460,"org.easymock.tests2.UsageConstraintsTest.testContains":146,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":108,"org.easymock.tests2.UsageConstraintsTest.testFind":138,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":282,"org.easymock.tests.MockTypeTest.fromEasyMockClass":455,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":105,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":207,"org.easymock.tests.UsageExpectAndReturnTest.object":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":127,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":381,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":450,"org.easymock.tests.UsageTest.exactCallCountByLastCall":315,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":497,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":476,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":439,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":326,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":243,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":283,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":248,"org.easymock.tests.MockClassControlTest.testHashCode":488,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":12,"org.easymock.tests2.EasyMockSupportTest.testVerify":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":347,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":477,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":490,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":111,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":397,"org.easymock.tests.UsageVarargTest.varargCharAccepted":286,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":357,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":514,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":130,"org.easymock.tests.DefaultClassInstantiatorTest.object":358,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":324,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":448,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":517,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":348,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":11,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":420,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":101,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":378,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":256,"org.easymock.tests.CapturesMatcherTest.test":516,"org.easymock.tests.ReplayStateInvalidCallsTest.times":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":323,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":189,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":377,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":366,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":409,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":215,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":236,"org.easymock.tests2.SerializationTest.testAllMockedMethod":72,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":507,"org.easymock.samples.SupportTest.voteForRemovals":44,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":318,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":259,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":513,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":321,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":441,"org.easymock.tests.UsageExpectAndThrowTest.object":258,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":154,"org.easymock.tests2.DelegateToTest.testWrongClass":117,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":424,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":294,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":295,"org.easymock.samples.ConstructorCalledMockTest.testTax":52,"org.easymock.tests.UsageStrictMockTest.range":211,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":411,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":169,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":470,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":191,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":416,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":438,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.UsageUnorderedTest.message":266,"org.easymock.tests.UsageVerifyTest.twoReturns":31,"org.easymock.tests.UsageVarargTest.varargByteAccepted":291,"org.easymock.tests2.ThreadingTest.testThreadSafe":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":350,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":221,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":451,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":511,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":278,"org.easymock.tests2.UsageConstraintsTest.any":144,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":467,"org.easymock.tests2.StubTest.stub":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":512,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":214,"org.easymock.tests.UsageExpectAndThrowTest.longType":254,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":362,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":466,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":68,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests2.SerializationTest.testClass":70,"org.easymock.tests.LimitationsTest.mockNativeMethod":267,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":246,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":4,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":432,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":27,"org.easymock.tests2.NameTest.nameForMocksControl":406,"org.easymock.tests2.MockedExceptionTest.testMockedException":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":340,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":312,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":37,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":303,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":170,"org.easymock.tests.MockingTest.testNicePartialClassMocking":302,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":443,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":431,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":155,"org.easymock.tests.MockingTest.testTwoMocks":373,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":428,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":21,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":38,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":159,"org.easymock.samples.ExampleTest.removeNonExistingDocument":386,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":464,"org.easymock.tests.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":13,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":392,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":360,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":59,"org.easymock.tests2.MockBuilderTest.testCreateMockString":173,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":374,"org.easymock.tests.UsageExpectAndThrowTest.floatType":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":341,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":162,"org.easymock.tests.UsageVerifyTest.twoThrows":30,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":188,"org.easymock.samples.ExampleTest.voteAgainstRemoval":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":502,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":436,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":102,"org.easymock.tests.LimitationsTest.privateConstructor":474,"org.easymock.tests2.UsageConstraintsTest.testNotNull":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":206,"org.easymock.tests2.UsageTest.defaultResetToNice":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":242,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":3,"org.easymock.tests.UsageVarargTest.differentLength":288,"org.easymock.tests2.CallbackTest.callback":73,"org.easymock.tests2.UsageConstraintsTest.equals":400,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":327,"org.easymock.tests.UsageTest.openCallCountByLastCall":311,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":277,"org.easymock.tests.UsageCallCountTest.tooFewCalls":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":193,"org.easymock.tests.UsageThrowableTest.throwCheckedException":203,"org.easymock.tests.MockingTest.testStrictClassMocking":482,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":319,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":78,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":20,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":469,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":77,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":164,"org.easymock.tests.ObjectMethodsTest.testHashCode":449,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":383,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":430,"org.easymock.tests2.NameTest.nameForNiceMock":405,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":61,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":425,"org.easymock.tests2.DependencyTest.testInterfaceMocking":63,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":382,"org.easymock.samples.ExampleTest.addDocument":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":351,"org.easymock.tests2.DelegateToTest.testStubDelegate":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.AnswerTest.stubAnswer":163,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":33,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":408,"org.easymock.tests.UsageVarargTest.varargLongAccepted":290,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":500,"org.easymock.tests.UsageExpectAndReturnTest.floatType":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":65,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":53,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":473,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":18,"org.easymock.tests.UsageThrowableTest.noUpperLimit":200,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":135,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":334,"org.easymock.tests2.SerializationTest.test":71,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":85,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":359,"org.easymock.tests2.UsageConstraintsTest.testSame":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":228,"org.easymock.samples.SupportTest.addDocument":43,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":393,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":415,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":342,"org.easymock.tests.GenericTest.testPackageScope":225,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":496,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":17,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":485,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":413,"org.easymock.tests2.NameTest.nameForMock":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":239,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":328,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":231,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":41,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":447,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":307,"org.easymock.tests2.MockedExceptionTest.testRealException":109,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":505,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":504,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":471,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":276,"org.easymock.tests2.NameTest.nameForStrictMock":404,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":332,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":335,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":153,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":361,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":166,"org.easymock.tests2.UsageStrictMockTest.range":69,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":419,"org.easymock.tests2.UsageConstraintsTest.lessThan":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":316,"org.easymock.tests2.CaptureTest.testCaptureRightOne":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":346,"org.easymock.tests2.UsageConstraintsTest.testOr":141,"org.easymock.tests.UsageRangeTest.combination":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":22,"org.easymock.tests.UsageTest.wrongArguments":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":343,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":375,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":493,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":240,"org.easymock.tests.UsageVarargTest.varargShortAccepted":289,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":363,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":222,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":433,"org.easymock.tests2.UsageConstraintsTest.cmpTo":145,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":407,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":495,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests2.CaptureTest.testCaptureFromStub":91,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":462,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":331,"org.easymock.tests.UsageTest.unexpectedCallWithArray":309,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":429,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":209,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":220,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":241,"org.easymock.tests2.UsageConstraintsTest.constraints":136,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":210,"org.easymock.samples.ExampleTest.addAndChangeDocument":51,"org.easymock.tests.UsageStrictMockTest.testVerify":444,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":271,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":196,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":233,"org.easymock.tests.LimitationsTest.abstractClass":371,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":125,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":284}}]
