[{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[1,2,3],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[4,5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[9,10,11,12,13,14,15,4,5,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,0,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,127,128,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,6,7,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,8,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[9,13,15,4,5,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,36,37,38,39,40,41,42,43,0,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,91,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,130,132,133,134,136,137,138,139,140,147,148,149,150,151,152,6,7,155,156,157,158,165,169,174,175,178,8,180,186,256,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,229,230,231,232,233,240,241,242,244,245,246,247,248,249,250,252,253,254],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[16,257,258,259,260,261,262,24,263,264,25,265,266,267,268,269,270,271,272,273,26,274,275,276,277,278,27,279,280,281,282,56,283,284,57,285,58,59,286,287,60,288,289,85,86,87,290,291,104,292,105,106,107,108,110,111,114,115,117,118,119,293,120,294,295,296,121,122,123,297,298,126,127,127,128,128,299,300,153,1,2,301,302,303,3,304,305,306,165,307,308,309,310,186,311,187,312,313,314,315,316,252,253,254,317,318,319,320,321,322,323,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[15,4,5,326,327,328,329,97,330,331,332,333,334,152,6,7,8,179,180,230,335,336,337],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[4,5,338,6,7,192,196,197,199,202,213,217,218,220,223,234,237,238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[327,123,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[339,340,334,341,342,343],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[4,5,330,331,332,334,6,7,344,345,179,180,208,346,347,343,335,336,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:193","sourceCode":"final java.lang.Number java.lang.Number = ((java.lang.Number)(java.lang.Object))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[10,13,14,348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[9,12,13,14,349,350,15,351,4,5,352,16,17,257,18,19,20,21,22,23,24,25,26,27,28,29,30,326,327,328,329,31,32,33,34,35,36,37,38,39,40,41,42,43,0,44,45,46,47,48,49,50,51,353,52,53,54,55,281,56,57,285,58,59,287,60,289,61,62,354,63,64,355,356,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,357,85,86,87,88,90,91,92,94,358,359,360,361,95,96,97,330,98,362,99,100,101,331,332,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,293,120,296,121,122,123,124,125,126,363,127,128,364,129,365,130,131,132,133,366,134,367,135,299,300,136,137,138,139,140,141,142,143,144,145,146,147,148,149,368,369,334,152,370,6,7,371,372,373,374,375,376,153,155,156,157,158,1,377,378,379,380,381,382,383,384,385,386,387,388,165,166,167,168,169,389,174,175,176,177,178,8,179,180,181,182,183,184,185,390,391,392,393,394,186,311,256,395,396,397,398,399,400,401,402,403,404,405,406,407,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,343,335,231,232,336,337,233,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,408,409,255,410,411,412,413,414,415,318,319,320,321,322,323,324,325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[57,58,59,288,126],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,330,331,332,334,6,389,345,179,180,208,343,335,336,337],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[9,12,13,14,349,350,15,351,4,5,352,16,17,257,18,19,20,21,22,23,24,25,26,27,28,29,30,326,327,328,329,31,32,33,34,35,36,37,38,39,40,41,42,43,0,44,45,46,47,48,49,50,51,52,53,54,55,281,57,285,58,59,60,289,61,62,354,63,64,355,356,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,357,85,86,87,88,90,91,92,94,358,359,360,361,95,96,97,330,98,362,99,100,101,331,332,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,296,122,124,125,126,363,127,127,128,128,364,129,365,130,131,132,133,366,134,135,299,300,136,137,138,139,140,141,142,143,144,145,146,148,149,368,369,334,152,370,6,7,371,372,373,374,375,376,153,155,156,157,158,378,380,381,383,386,388,165,169,174,175,176,177,178,8,179,180,181,182,183,184,185,390,391,392,393,394,186,311,256,395,396,397,398,400,401,402,403,404,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,343,335,231,232,336,337,233,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,408,409,255,410,411,412,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[416],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[417],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[418,31,33,47,52],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[64,70,419,189,195,201,205,207,208,210,216,222,226,228,229,236],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":34,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.UsageTest.argumentsOrdered":332,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":83,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":362,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":363,"org.easymock.tests2.DelegateToTest.testReturnException":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":142,"org.easymock.tests.MockingTest.testPartialClassMocking":252,"org.easymock.tests.MockClassControlTest.testToString":320,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":268,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":209,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":333,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":125,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":174,"org.easymock.tests2.UsageTest.wrongArguments":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":375,"org.easymock.samples.ExampleTest.answerVsDelegate":131,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":309,"org.easymock.tests2.UsageConstraintsTest.testNull":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":82,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":325,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":228,"org.easymock.tests.UsageTest.moreThanOneArgument":230,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":183,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":234,"org.easymock.tests.UsageTest.argumentsOrdered":337,"org.easymock.tests.UsageVarargTest.varargIntAccepted":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":136,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":281,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":140,"org.easymock.tests.ReplayStateInvalidUsageTest.times":385,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":18,"org.easymock.tests2.AnswerTest.answer":9,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":417,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":361,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":96,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":77,"org.easymock.tests2.DelegateToTest.testDelegate":94,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":224,"org.easymock.tests.LimitationsTest.mockFinalMethod":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":394,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":222,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":359,"org.easymock.tests.UsageThrowableTest.throwError":242,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":379,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":280,"org.easymock.samples.PartialClassMockTest.testGetArea":126,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":380,"org.easymock.tests2.CompareToTest.testLessOrEqual":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":137,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":172,"org.easymock.tests2.UsageTest.niceToStrict":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":269,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":313,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":57,"org.easymock.tests2.MockBuilderTest.testCreateMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":218,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":339,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":78,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":408,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":373,"org.easymock.tests.UsageOverloadedMethodTest.overloading":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":278,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":168,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":44,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":199,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":67,"org.easymock.tests2.EasyMockSupportClassTest.testAll":24,"org.easymock.tests.MockClassControlTest.testEquals":324,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":392,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":360,"org.easymock.tests2.UsageConstraintsTest.testMatches":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":184,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":377,"org.easymock.samples.ExampleTest.voteForRemovals":134,"org.easymock.tests.UsageVarargTest.allKinds":404,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":393,"org.easymock.samples.BasicClassMockTest.testPrintContent":300,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":248,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":146,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":93,"org.easymock.tests2.UsageConstraintsTest.greaterThan":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":263,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":156,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":123,"org.easymock.samples.ExampleTest.voteForRemoval":132,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":304,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":20,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":293,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":153,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":95,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":75,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":141,"org.easymock.tests2.CaptureTest.testCaptureFirst":71,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":76,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":195,"org.easymock.tests2.UsageTest.moreThanOneArgument":97,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":22,"org.easymock.tests2.CaptureTest.testCapture2_2446744":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":60,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":403,"org.easymock.tests.GenericTest.testBridgedEquals":312,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":414,"org.easymock.tests.UsageExpectAndReturnTest.longType":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":390,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":73,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":227,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":288,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":154,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":181,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":163,"org.easymock.tests.UsageCallCountTest.tooManyCalls":415,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":277,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":247,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":106,"org.easymock.tests.MockingTest.testNiceClassMocking":317,"org.easymock.tests.MockingTest.testClassMocking":315,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":409,"org.easymock.tests2.UsageConstraintsTest.testContains":43,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":282,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":87,"org.easymock.tests2.UsageConstraintsTest.testFind":35,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":149,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":29,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":368,"org.easymock.tests.UsageExpectAndReturnTest.object":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":81,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":398,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":407,"org.easymock.tests.UsageTest.exactCallCountByLastCall":233,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":250,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":292,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":204,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":256,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":167,"org.easymock.tests.MockClassControlTest.testHashCode":323,"org.easymock.tests2.EasyMockSupportTest.testVerify":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":271,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":236,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":166,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":160,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":358,"org.easymock.tests.UsageVarargTest.varargCharAccepted":397,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":350,"org.easymock.tests2.UsageTest.openCallCountByLastCall":99,"org.easymock.tests.DefaultClassInstantiatorTest.object":1,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":159,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":405,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":245,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":121,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":27,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":321,"org.easymock.tests2.UsageTest.resumeIfFailure":102,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":144,"org.easymock.tests2.StubTest.stubWithReturnValue":113,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":197,"org.easymock.tests2.SerializationTest.testAllMockedMethod":257,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":150,"org.easymock.samples.SupportTest.voteForRemovals":129,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":340,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":221,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":151,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":10,"org.easymock.tests.UsageExpectAndThrowTest.object":219,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":50,"org.easymock.tests2.DelegateToTest.testWrongClass":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":241,"org.easymock.samples.ConstructorCalledMockTest.testTax":127,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":80,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":105,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":260,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":374,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":341,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":173,"org.easymock.tests2.CaptureTest.testCaptureNone":66,"org.easymock.tests.UsageUnorderedTest.message":208,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":346,"org.easymock.tests.UsageVerifyTest.twoReturns":180,"org.easymock.tests.UsageVarargTest.varargByteAccepted":402,"org.easymock.tests2.ThreadingTest.testThreadSafe":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":274,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":412,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":299,"org.easymock.tests2.CaptureTest.testCapture_2617107":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":177,"org.easymock.tests2.UsageConstraintsTest.any":41,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":384,"org.easymock.tests2.StubTest.stub":112,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":143,"org.easymock.tests.UsageExpectAndThrowTest.longType":212,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":303,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":383,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":351,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":72,"org.easymock.tests.LimitationsTest.mockNativeMethod":165,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":207,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":352,"org.easymock.tests2.NameTest.nameForMocksControl":329,"org.easymock.tests2.MockedExceptionTest.testMockedException":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":264,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":213,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":114,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":59,"org.easymock.tests.MockingTest.testNicePartialClassMocking":253,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":119,"org.easymock.tests2.CaptureTest.testCaptureLast":65,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":239,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":111,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":39,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":51,"org.easymock.tests.MockingTest.testTwoMocks":316,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":217,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":331,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":54,"org.easymock.samples.ExampleTest.removeNonExistingDocument":367,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":381,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":301,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":21,"org.easymock.tests2.MockBuilderTest.testCreateMockString":289,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":318,"org.easymock.tests.UsageExpectAndThrowTest.floatType":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":265,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":262,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":12,"org.easymock.tests.UsageVerifyTest.twoThrows":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":26,"org.easymock.samples.ExampleTest.voteAgainstRemoval":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":171,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":122,"org.easymock.tests.LimitationsTest.privateConstructor":306,"org.easymock.tests2.UsageConstraintsTest.testNotNull":53,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":249,"org.easymock.tests2.UsageTest.defaultResetToNice":101,"org.easymock.samples.ExampleTest.voteAgainstRemovals":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":203,"org.easymock.tests.UsageVarargTest.differentLength":399,"org.easymock.tests2.CallbackTest.callback":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":294,"org.easymock.tests.UsageTest.openCallCountByLastCall":231,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":176,"org.easymock.tests.UsageCallCountTest.tooFewCalls":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":376,"org.easymock.tests.UsageThrowableTest.throwCheckedException":246,"org.easymock.tests.MockingTest.testStrictClassMocking":314,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":342,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":110,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":251,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":107,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":109,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":14,"org.easymock.tests.ObjectMethodsTest.testHashCode":406,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":416,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":23,"org.easymock.tests2.NameTest.nameForNiceMock":328,"org.easymock.tests2.DependencyTest.testInterfaceMocking":124,"org.easymock.samples.ExampleTest.addDocument":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":275,"org.easymock.tests2.DelegateToTest.testStubDelegate":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":279,"org.easymock.tests2.AnswerTest.stubAnswer":13,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":152,"org.easymock.tests.UsageVarargTest.varargLongAccepted":401,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":371,"org.easymock.tests.UsageExpectAndReturnTest.floatType":190,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":104,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":128,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":48,"org.easymock.tests.UsageThrowableTest.noUpperLimit":243,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":32,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":290,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":355,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":189,"org.easymock.tests2.UsageConstraintsTest.testSame":37,"org.easymock.samples.SupportTest.addDocument":364,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":266,"org.easymock.tests.GenericTest.testPackageScope":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":237,"org.easymock.tests2.NameTest.nameForMock":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":200,"org.easymock.tests2.UsageStrictMockTest.differentMethods":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":295,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":158,"org.easymock.tests2.MockedExceptionTest.testRealException":88,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":388,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":175,"org.easymock.tests2.NameTest.nameForStrictMock":327,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":284,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":28,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":118,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":291,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":49,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":302,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":56,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":55,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":258,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":338,"org.easymock.tests2.CaptureTest.testCaptureRightOne":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":270,"org.easymock.tests2.UsageConstraintsTest.testOr":38,"org.easymock.tests.UsageRangeTest.combination":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":115,"org.easymock.tests.UsageTest.wrongArguments":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":267,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":201,"org.easymock.tests.UsageVarargTest.varargShortAccepted":400,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":3,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":413,"org.easymock.tests2.UsageConstraintsTest.cmpTo":42,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":11,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":100,"org.easymock.tests2.CaptureTest.testCaptureFromStub":69,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":378,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":283,"org.easymock.tests.UsageTest.unexpectedCallWithArray":343,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":334,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":202,"org.easymock.tests2.UsageConstraintsTest.constraints":33,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":370,"org.easymock.samples.ExampleTest.addAndChangeDocument":135,"org.easymock.tests.UsageStrictMockTest.testVerify":372,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":365,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":369,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":391,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":138,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":194,"org.easymock.tests.LimitationsTest.abstractClass":305,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":79}}]
