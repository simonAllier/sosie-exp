[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,39,40,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[68],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[21,22,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,65,86,87,88,89,2,90,91,92,93,94,95,96,1,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[136],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[137,138,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[140,141,6,142,143,144,10,145,12,13,146,24,26,27,147,148,29,30,39,39,40,40,41,149,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[150],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[151],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:290","sourceCode":"return ","type":"CtReturnImpl"},"failures":[152,153,154,155,156,4,6,8,9,11,157,158,159,160,161,162,163,164,165,166,167,168,169,13,170,14,15,16,171,17,18,19,21,23,24,25,27,172,173,174,175,176,177,178,69,70,179,180,181,182,183,184,185,186,187,188,189,68,190,191,192,193,72,73,74,75,76,77,78,79,80,81,82,83,84,85,65,86,87,88,89,2,90,91,92,93,94,95,96,1,97,98,28,29,30,31,194,195,196,197,198,99,199,100,101,102,103,104,105,106,107,108,109,110,112,113,114,200,32,33,34,35,201,36,37,38,202,203,204,205,206,207,208,41,209,210,211,212,213,214,215,216,217,218,42,43,219,220,221,222,223,224,225,115,116,226,227,228,229,118,119,120,121,122,52,53,54,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,58,59,60,258,259,123,124,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,125,293,294,295,296,126,127,128,129,130,61,297,298,131,299,300,301,302,303,304,133,134,305,306,307,308,309,310,311,312,313,314,135],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[315,316],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[317],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[318,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:41","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[21,22,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,65,86,87,88,89,2,90,91,92,93,94,95,96,1,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[320,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":285,"org.easymock.tests2.UsageTest.argumentsOrdered":191,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":167,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.tests2.StubTest.stubWithReturnValue":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":142,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":274,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":208,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests2.DelegateToTest.testReturnException":173,"org.easymock.tests.MockingTest.testPartialClassMocking":58,"org.easymock.samples.SupportTest.voteForRemovals":211,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":149,"org.easymock.tests.MockClassControlTest.testToString":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":230,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":29,"org.easymock.tests.UsageExpectAndThrowTest.object":240,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":195,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DelegateToTest.testWrongClass":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":133,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":134,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.tests2.UsageTest.wrongArguments":185,"org.easymock.tests.UsageStrictMockTest.range":261,"org.easymock.samples.ConstructorCalledMockTest.testTax":39,"org.easymock.samples.ExampleTest.answerVsDelegate":213,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":64,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":32,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":241,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":17,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":166,"org.easymock.tests2.CaptureTest.testPrimitive":103,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":290,"org.easymock.tests.UsageTest.moreThanOneArgument":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":249,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":171,"org.easymock.tests2.CaptureTest.testCaptureNone":108,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":151,"org.easymock.tests.UsageUnorderedTest.message":125,"org.easymock.tests.UsageVerifyTest.twoReturns":304,"org.easymock.tests.UsageVarargTest.varargByteAccepted":313,"org.easymock.tests2.ThreadingTest.testThreadSafe":196,"org.easymock.tests.UsageTest.argumentsOrdered":291,"org.easymock.tests.UsageVarargTest.varargIntAccepted":307,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":223,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":42,"org.easymock.tests2.CaptureTest.testCapture_2617107":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":118,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":3,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":129,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":7,"org.easymock.tests2.StubTest.stub":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":122,"org.easymock.tests.UsageExpectAndThrowTest.longType":233,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":138,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":67,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":70,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests.LimitationsTest.mockNativeMethod":61,"org.easymock.tests2.DependencyTest.testClassMocking":318,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":284,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":55,"org.easymock.tests2.AnswerTest.answer":152,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":82,"org.easymock.tests2.CaptureTest.testAnd":100,"org.easymock.tests2.UsageTest.strictResetToDefault":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":141,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":181,"org.easymock.tests2.NameTest.nameForMocksControl":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":295,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":161,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":289,"org.easymock.tests2.DelegateToTest.testDelegate":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":234,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":60,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":15,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":9,"org.easymock.tests.MockingTest.testNicePartialClassMocking":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":245,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":19,"org.easymock.tests2.CaptureTest.testCaptureLast":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":131,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests2.DependencyTest.testClassMockingSupport":319,"org.easymock.tests.MockingTest.testTwoMocks":57,"org.easymock.tests2.CaptureTest.testCapture1_2446744":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":238,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":190,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.tests.UsageThrowableTest.throwError":250,"org.easymock.tests.UsageStrictMockTest.differentMethods":262,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":316,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":198,"org.easymock.tests2.MockBuilderTest.testCreateMockString":12,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":44,"org.easymock.tests.UsageExpectAndThrowTest.floatType":232,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":88,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":153,"org.easymock.tests.UsageVerifyTest.twoThrows":303,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.samples.PartialClassMockTest.testGetArea":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":119,"org.easymock.samples.ExampleTest.voteAgainstRemoval":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":317,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":231,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":62,"org.easymock.tests2.UsageTest.niceToStrict":186,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":257,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":136,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":6,"org.easymock.tests2.UsageTest.defaultResetToNice":68,"org.easymock.tests2.MockBuilderTest.testCreateMock":10,"org.easymock.samples.ExampleTest.voteAgainstRemovals":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":280,"org.easymock.tests.UsageVarargTest.differentLength":310,"org.easymock.tests2.CallbackTest.callback":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":146,"org.easymock.tests.UsageTest.openCallCountByLastCall":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":239,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":128,"org.easymock.tests.UsageCallCountTest.tooFewCalls":221,"org.easymock.tests.UsageOverloadedMethodTest.overloading":300,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":228,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":35,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":65,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":109,"org.easymock.tests.UsageThrowableTest.throwCheckedException":254,"org.easymock.tests.MockClassControlTest.testEquals":50,"org.easymock.tests2.EasyMockSupportClassTest.testAll":28,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":247,"org.easymock.tests2.CaptureTest.testCaptureAll":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":116,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":34,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":155,"org.easymock.samples.ExampleTest.voteForRemovals":217,"org.easymock.tests2.NameTest.nameForNiceMock":206,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":199,"org.easymock.tests.UsageVarargTest.allKinds":135,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":302,"org.easymock.tests2.DependencyTest.testInterfaceMocking":194,"org.easymock.samples.BasicClassMockTest.testPrintContent":43,"org.easymock.samples.ExampleTest.addDocument":216,"org.easymock.tests2.DelegateToTest.testStubDelegate":174,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":256,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":177,"org.easymock.tests2.AnswerTest.stubAnswer":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":132,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":124,"org.easymock.tests2.UsageConstraintsTest.greaterThan":89,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":294,"org.easymock.tests.UsageVarargTest.varargLongAccepted":312,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.samples.ExampleTest.voteForRemoval":214,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":283,"org.easymock.tests.UsageExpectAndReturnTest.floatType":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":20,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":27,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":40,"org.easymock.tests.UsageThrowableTest.noUpperLimit":251,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":2,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":52,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":182,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":105,"org.easymock.tests2.SerializationTest.test":170,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":159,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":266,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.samples.SupportTest.addDocument":210,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":160,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":272,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":99,"org.easymock.tests2.CaptureTest.testCapture2_2446744":112,"org.easymock.tests2.UsageTest.moreThanOneArgument":184,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":11,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":314,"org.easymock.tests.GenericTest.testBridgedEquals":56,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":224,"org.easymock.tests2.NameTest.nameForMock":204,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":150,"org.easymock.tests.UsageExpectAndReturnTest.longType":268,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":248,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":93,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":246,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":145,"org.easymock.tests2.UsageStrictMockTest.differentMethods":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":117,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":269,"org.easymock.tests.UsageCallCountTest.tooManyCalls":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":244,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":139,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":296,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":235,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":255,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":33,"org.easymock.tests2.NameTest.nameForStrictMock":205,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":301,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":18,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":98,"org.easymock.tests.UsageExpectAndReturnTest.object":275,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":4,"org.easymock.tests2.UsageStrictMockTest.range":179,"org.easymock.tests2.UsageConstraintsTest.lessThan":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":165,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":309,"org.easymock.tests.UsageTest.exactCallCountByLastCall":292,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":158,"org.easymock.tests2.CaptureTest.testCaptureRightOne":110,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":315,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":297,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":147,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":305,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":16,"org.easymock.tests.UsageTest.wrongArguments":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":227,"org.easymock.tests2.MockBuilderTest.testWithConstructor":140,"org.easymock.tests.MockClassControlTest.testHashCode":49,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":270,"org.easymock.tests2.EasyMockSupportTest.testVerify":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":278,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":137,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":298,"org.easymock.tests.UsageVarargTest.varargShortAccepted":311,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":114,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":71,"org.easymock.tests.UsageVarargTest.varargCharAccepted":308,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":66,"org.easymock.tests2.CompareToTest.testLessThan":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":178,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":168,"org.easymock.tests2.CaptureTest.testCaptureFromStub":111,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":5,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":253,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":123,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":279,"org.easymock.tests2.CaptureTest.testCapture":320,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":260,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":48,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":23,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":236,"org.easymock.samples.ExampleTest.addAndChangeDocument":218,"org.easymock.tests.CapturesMatcherTest.test":321,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":282,"org.easymock.tests.UsageStrictMockTest.testVerify":264,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":209,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":31,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":47,"org.easymock.tests2.UsageTest.resumeIfFailure":192,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":271,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":63,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":121,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":163}}]
