[{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,257,258,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[1,2,3,4,5,6,7,8,45,56,59,62,80,81,82,83,84,174,175,176,177,189,190,191,192,193,194,195,196,197,198,199,200,202,205,246,257,257,258,258,259,260,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,308,309,310,311,313,314,315,468,316,317,318,319,320,321,322,323,324,325,469,326,327,328,352,353,354,470,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,447,448,465,467],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[471,356,375,381],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[342,456],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[362,367,377,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[257,258,275,472,473,474,475,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[91,239,250,334,336,337,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[427],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[0,9,10,23,24,25,26,27,28,29,30,34,36,37,52,53,62,65,72,73,74,75,76,77,78,79,81,83,85,86,87,88,105,111,118,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,171,172,173,176,178,179,180,181,182,183,184,185,186,187,188,199,200,202,206,207,208,209,210,211,212,215,216,219,220,221,222,224,226,227,228,229,230,231,232,233,234,235,236,237,239,240,242,246,248,249,250,251,252,254,256,257,257,258,258,261,262,263,264,265,266,267,268,269,270,271,272,274,278,279,280,283,286,288,289,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,316,319,321,322,325,327,333,334,335,336,337,338,344,352,353,354,355,356,357,358,359,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,381,382,383,384,385,386,387,388,390,391,394,395,396,397,398,399,400,404,407,417,423,426,428,429,430,431,432,433,434,435,436,438,440,441,442,445,446,451,452,458,465,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"lastControl"}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[34,36,37,73,76,85,86,87,88,98,100,109,110,112,145,146,149,151,152,153,154,156,157,158,159,161,162,163,164,173,183,211,212,215,216,219,220,222,242,261,265,286,288,289,325,335,356,357,358,361,362,363,364,368,370,372,373,374,375,376,382,383,384,386,388,391,394,395,399,400,429,430,431,434,436,440,441,445,446],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[323,465],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[9,23,24,25,26,27,34,36,37,72,73,76,81,85,86,87,88,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,171,172,173,176,181,183,184,185,186,187,188,199,200,202,211,212,215,216,219,220,222,235,236,242,246,248,249,251,252,254,261,265,267,268,269,270,271,272,274,278,279,280,286,288,289,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,316,319,321,322,325,327,335,344,354,356,357,358,359,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,381,382,383,384,386,387,388,390,391,394,395,396,397,399,400,404,407,417,423,429,430,431,432,433,434,435,436,438,440,441,442,445,446,451,452,458,465,466],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:99","failures":[477,85,246,248,251,252,254,256,304,306,319,368],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,33,36,478,213,214,217,218,221,222,288,437,443,444],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[380,382,426,428],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[479],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[9,23,24,25,26,27,29,34,36,37,72,73,76,81,85,86,87,88,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,171,172,173,176,181,183,184,185,186,187,188,199,200,202,211,212,215,216,219,220,222,232,233,234,235,236,242,246,248,249,251,252,254,261,265,267,268,269,270,271,272,274,278,279,280,286,288,289,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,316,319,321,322,325,327,335,344,354,356,357,358,359,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,381,382,383,384,386,387,388,390,391,394,395,396,397,399,400,404,407,417,423,429,430,431,432,433,434,435,436,438,440,441,442,445,446,451,452,458,465,466],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,9,10,11,22,23,24,25,26,27,33,34,72,73,74,75,76,230,231,235,236,274,277,286,287,351,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,426,428,429,432,434],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[480,465,466,467],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[36,37,288,289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[362,367,377,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[58,60,114,244,245,268,277,280,282,298,301,303,308,482,329,330,331,332,339,340,341,342,343,344,345,346,347,348,349,350,408,412,418,453,454,455,456,457,458,459,460,461,462,463,464],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[0,9,10,23,24,25,26,27,31,33,34,35,36,37,38,72,73,74,75,76,85,117,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,172,173,176,181,183,184,185,186,187,188,199,200,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,226,227,228,229,231,235,236,242,250,251,254,261,264,265,266,267,269,270,272,283,284,286,287,288,289,290,309,310,313,314,319,325,326,327,334,335,336,338,356,357,358,359,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,381,382,383,384,386,387,388,389,390,391,392,393,394,396,397,398,399,400,426,428,429,431,432,433,434,435,436,437,438,439,440,441,443,444,446,451,465,466],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[257,258,310,314,481,483,484,485,323,473,474,327,328,486,487,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,465],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[199,200,202,313,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[10,74,75,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,173,183,187,188,211,216,226,227,228,229,230,231,240,352,353,354,355,386,434,441],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[0,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,36,37,38,488,488,47,48,49,50,62,65,66,67,68,69,70,71,72,73,74,75,76,81,82,85,87,88,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,176,181,182,183,184,185,186,187,188,199,200,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,226,227,228,229,230,231,235,236,237,239,240,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,264,265,266,267,268,269,270,271,272,273,274,277,278,279,280,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,319,320,321,322,324,325,326,327,334,335,336,338,344,352,353,354,355,356,357,358,359,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,404,407,417,423,426,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,451,452,458,465,466,467],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[1,3,4,5,6,7,8,45,56,59,62,80,81,82,83,84,174,175,176,177,189,190,191,192,193,194,195,196,197,198,199,200,202,205,246,257,257,258,258,259,260,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,352,353,354,489,490,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,447,448,465,467],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[181,184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[488,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[271,374,439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[10,74,96,123,178,179,180,226,227,228,229,230,231,352,353,354,355,386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[374],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[80,84],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[492,387,389,390,391,392,393,394,396,491,397,398,400],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[493,494,495],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[496,497,498,499,500,494],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":359,"org.easymock.tests2.UsageTest.argumentsOrdered":444,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":211,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":99,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":439,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":244,"org.easymock.tests2.DelegateToTest.testReturnException":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":227,"org.easymock.tests.MockingTest.testPartialClassMocking":199,"org.easymock.tests.MockClassControlTest.testToString":3,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":482,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":407,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":125,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":452,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":366,"org.easymock.tests2.UsageTest.wrongArguments":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":72,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":49,"org.easymock.samples.ExampleTest.answerVsDelegate":250,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":59,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":204,"org.easymock.tests2.UsageConstraintsTest.testNull":362,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":270,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":304,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":489,"org.easymock.tests2.CaptureTest.testPrimitive":390,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":76,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":144,"org.easymock.tests.UsageTest.moreThanOneArgument":212,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":208,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":51,"org.easymock.tests.UsageTest.argumentsOrdered":218,"org.easymock.tests.UsageVarargTest.varargIntAccepted":13,"org.easymock.tests.InvocationTest.testEquals":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":104,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":23,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":349,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":27,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":458,"org.easymock.tests.ReplayStateInvalidUsageTest.times":121,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":476,"org.easymock.tests2.AnswerTest.answer":261,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":106,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":294,"org.easymock.tests2.CaptureTest.testAnd":387,"org.easymock.tests2.UsageTest.strictResetToDefault":435,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":87,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":299,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":55,"org.easymock.tests2.DelegateToTest.testDelegate":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":140,"org.easymock.tests.LimitationsTest.mockFinalMethod":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":170,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":223,"org.easymock.tests2.CaptureTest.testCapture1_2446744":391,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":493,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":138,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":292,"org.easymock.tests.UsageThrowableTest.throwError":181,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":115,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":58,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":210,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":475,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":425,"org.easymock.samples.PartialClassMockTest.testGetArea":246,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":116,"org.easymock.tests.MockingTest.testInterfaceMocking":201,"org.easymock.tests2.CompareToTest.testLessOrEqual":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":233,"org.easymock.tests2.UsageTest.niceToStrict":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":126,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":45,"org.easymock.tests2.ThreadingTest.testChangeDefault":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":89,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":319,"org.easymock.tests2.MockBuilderTest.testCreateMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":420,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":134,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":47,"org.easymock.tests.UsageOverloadedMethodTest.overloading":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":240,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":372,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":156,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":371,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":396,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":14,"org.easymock.tests2.EasyMockSupportClassTest.testAll":404,"org.easymock.tests.MockClassControlTest.testEquals":7,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":142,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":479,"org.easymock.tests2.CaptureTest.testCaptureAll":388,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":168,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":293,"org.easymock.tests.MockNameTest.defaultName":46,"org.easymock.tests2.UsageConstraintsTest.testMatches":373,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":209,"org.easymock.samples.ExampleTest.voteForRemovals":254,"org.easymock.tests.UsageVarargTest.allKinds":22,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":169,"org.easymock.samples.BasicClassMockTest.testPrintContent":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":187,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":231,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":337,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":346,"org.easymock.tests2.UsageConstraintsTest.greaterThan":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":405,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":86,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":280,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":195,"org.easymock.samples.ExampleTest.voteForRemoval":251,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":430,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":281,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":273,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":434,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":62,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":297,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":226,"org.easymock.tests2.CaptureTest.testCaptureFirst":400,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":95,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":298,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":446,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":152,"org.easymock.tests2.UsageTest.moreThanOneArgument":436,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":432,"org.easymock.tests2.CaptureTest.testCapture2_2446744":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":325,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":21,"org.easymock.tests.GenericTest.testBridgedEquals":84,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":70,"org.easymock.tests.UsageExpectAndReturnTest.longType":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":166,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":295,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":143,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":165,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":380,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":141,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":206,"org.easymock.tests.UsageCallCountTest.tooManyCalls":71,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":186,"org.easymock.tests.MockingTest.testNiceClassMocking":205,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":309,"org.easymock.tests.MockingTest.testClassMocking":197,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":468,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":64,"org.easymock.tests2.UsageConstraintsTest.testContains":370,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":354,"org.easymock.tests2.UsageConstraintsTest.testFind":361,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":173,"org.easymock.tests.MockTypeTest.fromEasyMockClass":57,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":428,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests.UsageExpectAndReturnTest.object":155,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":303,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":16,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":43,"org.easymock.tests.UsageTest.exactCallCountByLastCall":219,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":94,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":28,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":52,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":161,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":11,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":239,"org.easymock.tests.MockClassControlTest.testHashCode":6,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":340,"org.easymock.tests2.EasyMockSupportTest.testVerify":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":414,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":53,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":78,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":291,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":351,"org.easymock.tests.UsageVarargTest.varargCharAccepted":15,"org.easymock.tests2.CaptureTest.testCaptureMultiple":492,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":112,"org.easymock.tests2.UsageTest.openCallCountByLastCall":440,"org.easymock.tests.DefaultClassInstantiatorTest.object":189,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":77,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":41,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":415,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":132,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":490,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":339,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":5,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":131,"org.easymock.tests.CapturesMatcherTest.test":488,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":162,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":423,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":4,"org.easymock.tests2.UsageTest.resumeIfFailure":445,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":229,"org.easymock.tests2.StubTest.stubWithReturnValue":386,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":485,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":381,"org.easymock.tests2.SerializationTest.testAllMockedMethod":467,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":105,"org.easymock.samples.SupportTest.voteForRemovals":248,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":137,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":480,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":111,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":262,"org.easymock.tests.UsageExpectAndThrowTest.object":135,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":30,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":378,"org.easymock.tests2.DelegateToTest.testWrongClass":336,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":235,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":236,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.samples.ConstructorCalledMockTest.testTax":257,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":449,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":136,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":401,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":123,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":48,"org.easymock.tests2.CaptureTest.testCaptureNone":395,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":234,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":497,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.UsageVerifyTest.twoReturns":222,"org.easymock.tests.UsageVarargTest.varargByteAccepted":20,"org.easymock.tests2.ThreadingTest.testThreadSafe":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":418,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":68,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":44,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":259,"org.easymock.tests2.CaptureTest.testCapture_2617107":389,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":75,"org.easymock.tests2.UsageConstraintsTest.any":368,"org.easymock.tests2.StubTest.stub":385,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":120,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":180,"org.easymock.tests.UsageExpectAndThrowTest.longType":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":228,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":193,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":119,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":287,"org.easymock.tests2.SerializationTest.testClass":465,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":344,"org.easymock.tests.LimitationsTest.mockNativeMethod":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":164,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":455,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":290,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":498,"org.easymock.tests2.NameTest.nameForMocksControl":332,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests2.MockedExceptionTest.testMockedException":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":406,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":216,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":427,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":129,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":202,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":267,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":322,"org.easymock.tests.MockingTest.testNicePartialClassMocking":200,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":272,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":453,"org.easymock.tests2.CaptureTest.testCaptureLast":394,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":224,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":314,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":365,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":379,"org.easymock.tests.MockingTest.testTwoMocks":198,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":481,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":133,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":443,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":383,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":494,"org.easymock.samples.ExampleTest.removeNonExistingDocument":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":460,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":117,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":341,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":500,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":191,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":431,"org.easymock.tests2.MockBuilderTest.testCreateMockString":326,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":408,"org.easymock.tests.UsageExpectAndThrowTest.floatType":127,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":264,"org.easymock.tests.UsageVerifyTest.twoThrows":221,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":417,"org.easymock.samples.ExampleTest.voteAgainstRemoval":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":232,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":279,"org.easymock.tests.LimitationsTest.privateConstructor":175,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":487,"org.easymock.tests2.UsageConstraintsTest.testNotNull":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":352,"org.easymock.tests2.UsageTest.defaultResetToNice":442,"org.easymock.samples.ExampleTest.voteAgainstRemovals":249,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":454,"org.easymock.tests.UsageVarargTest.differentLength":17,"org.easymock.tests2.CallbackTest.callback":283,"org.easymock.tests2.UsageConstraintsTest.equals":360,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":275,"org.easymock.tests.UsageTest.openCallCountByLastCall":215,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":74,"org.easymock.tests.UsageCallCountTest.tooFewCalls":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":50,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":499,"org.easymock.tests.UsageThrowableTest.throwCheckedException":185,"org.easymock.tests.MockingTest.testStrictClassMocking":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":10,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":313,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":459,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":310,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":312,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":266,"org.easymock.tests.ObjectMethodsTest.testHashCode":42,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":433,"org.easymock.tests2.NameTest.nameForNiceMock":331,"org.easymock.tests2.DependencyTest.testInterfaceMocking":451,"org.easymock.samples.ExampleTest.addDocument":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":424,"org.easymock.tests2.DelegateToTest.testStubDelegate":335,"org.easymock.tests2.AnswerTest.stubAnswer":265,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":472,"org.easymock.tests.UsageVarargTest.varargLongAccepted":19,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":163,"org.easymock.tests.UsageExpectAndReturnTest.floatType":147,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":327,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":258,"org.easymock.tests.UsageThrowableTest.noUpperLimit":182,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":348,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":357,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":447,"org.easymock.tests2.SerializationTest.test":466,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":392,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":146,"org.easymock.tests2.UsageConstraintsTest.testSame":363,"org.easymock.samples.SupportTest.addDocument":247,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":409,"org.easymock.tests.GenericTest.testPackageScope":81,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":93,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":347,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":203,"org.easymock.tests2.NameTest.nameForMock":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":474,"org.easymock.tests2.UsageStrictMockTest.differentMethods":289,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":139,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":88,"org.easymock.tests2.MockedExceptionTest.testRealException":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":61,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":102,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":286,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":73,"org.easymock.tests2.NameTest.nameForStrictMock":330,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":318,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":426,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":271,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":448,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":192,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":377,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":316,"org.easymock.tests2.UsageStrictMockTest.range":288,"org.easymock.tests2.UsageConstraintsTest.lessThan":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":97,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":413,"org.easymock.tests2.CaptureTest.testCaptureRightOne":397,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":496,"org.easymock.tests2.UsageConstraintsTest.testOr":364,"org.easymock.tests.UsageRangeTest.combination":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":268,"org.easymock.tests.UsageTest.wrongArguments":214,"org.easymock.tests2.MockBuilderTest.testWithConstructor":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":410,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":90,"org.easymock.tests.UsageVarargTest.varargShortAccepted":18,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":194,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":69,"org.easymock.tests2.UsageConstraintsTest.cmpTo":369,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":92,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":441,"org.easymock.tests2.CaptureTest.testCaptureFromStub":398,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":114,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":317,"org.easymock.tests.UsageTest.unexpectedCallWithArray":213,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":67,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":473,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":159,"org.easymock.tests2.CaptureTest.testCapture":491,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.tests2.UsageConstraintsTest.constraints":358,"org.easymock.samples.ExampleTest.addAndChangeDocument":256,"org.easymock.tests.UsageStrictMockTest.testVerify":39,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":245,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":167,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":393,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":25,"org.easymock.tests.LimitationsTest.abstractClass":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":26,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":301}}]
