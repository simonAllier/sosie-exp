[{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:134","failures":[24,25],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[26,27,28,29],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[30,31,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[43,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,6,7,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,13,103,104,105,22,106,26,107,23,108,109,110,111,112,113,1,114,115,116,117,28,118,2,119,29,120,3,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[62,63,64,197,198,199,200,128,201,202,203,138,204,139,205,152,153,154,206,207,193,208,209,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[56,58,62,211,72,73,212,74,75,213,214,76,77,78,79,215,80,81,88,216,217,218,0,219,103,104,105,22,106,26,107,23,108,109,27,110,111,112,113,1,114,115,116,117,28,118,2,220,119,29,120,3,140,141,142,143,144,205,152,18,19,207,177,20,221,178,179,21,222,180,223,184,185,224],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[225,226,227],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[76,78],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[228,47,48,229,49,50,230,51,231,232,52,233,234,235,53,54,55,56,57,58,59,60,61,236,62,211,63,64,237,6,7,8,238,65,66,67,68,69,70,71,72,73,212,74,75,213,214,76,77,78,79,80,81,82,83,84,85,86,87,88,89,217,218,11,90,239,91,240,241,92,93,94,95,96,97,98,99,100,101,102,242,243,13,103,104,105,22,106,26,107,23,108,109,110,111,112,113,1,114,115,116,117,28,118,2,220,119,29,120,3,121,244,122,123,124,125,126,127,128,201,129,245,130,131,202,203,132,133,134,135,136,137,138,204,139,140,141,142,143,144,145,246,146,147,148,149,150,151,247,205,152,248,153,154,249,18,250,251,252,253,254,255,155,256,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,257,258,259,206,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,207,176,177,178,179,21,222,180,181,182,183,280,281,282,283,284,285,286,287,288,223,184,185,186,187,188,289,189,290,190,191,192,193,208,194,195,209,210,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[291,292,293,294,205,295],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[122,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[54,55,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[298],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[299,300,61,33,6,301,302,303,41,304,305,306,307,42,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[243,222],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[299,299,300,300,62,215,13,103,104,106,26,107,23,112,1,114,116,117,29,120,3,310,140,141,142,143,144,152,177,178,179,180,184,185,224,311,312,313,314,315,316,317,318,319],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":22,"org.easymock.tests2.UsageTest.argumentsOrdered":203,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":17,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":245,"org.easymock.tests2.StubTest.stubWithReturnValue":13,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":41,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":232,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":165,"org.easymock.tests2.SerializationTest.testAllMockedMethod":8,"org.easymock.tests2.DelegateToTest.testReturnException":239,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":15,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":308,"org.easymock.tests.MockingTest.testPartialClassMocking":186,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":292,"org.easymock.samples.SupportTest.voteForRemovals":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":272,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":260,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":135,"org.easymock.tests.UsageExpectAndThrowTest.object":270,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":60,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":118,"org.easymock.tests2.DelegateToTest.testWrongClass":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":34,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":109,"org.easymock.tests2.UsageTest.wrongArguments":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":178,"org.easymock.samples.ConstructorCalledMockTest.testTax":299,"org.easymock.tests.UsageStrictMockTest.range":153,"org.easymock.samples.ExampleTest.answerVsDelegate":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":65,"org.easymock.tests2.UsageConstraintsTest.testNull":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":271,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":85,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":124,"org.easymock.tests2.CaptureTest.testPrimitive":74,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":279,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":209,"org.easymock.tests.UsageTest.moreThanOneArgument":193,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":293,"org.easymock.tests2.CaptureTest.testCaptureNone":77,"org.easymock.tests.UsageUnorderedTest.message":207,"org.easymock.tests.UsageVerifyTest.twoReturns":139,"org.easymock.tests.UsageVarargTest.varargByteAccepted":287,"org.easymock.tests2.ThreadingTest.testThreadSafe":53,"org.easymock.tests.UsageTest.argumentsOrdered":210,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":43,"org.easymock.tests.UsageVarargTest.varargIntAccepted":282,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":253,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":233,"org.easymock.tests2.CaptureTest.testCapture_2617107":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":222,"org.easymock.tests2.UsageConstraintsTest.any":110,"org.easymock.tests2.StubTest.stub":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":144,"org.easymock.tests.UsageExpectAndThrowTest.longType":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":16,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":226,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":30,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":176,"org.easymock.tests2.AnswerTest.answer":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":27,"org.easymock.tests2.CaptureTest.testAnd":72,"org.easymock.tests2.UsageTest.strictResetToDefault":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":303,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":216,"org.easymock.tests2.NameTest.nameForMocksControl":200,"org.easymock.tests2.MockedExceptionTest.testMockedException":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":190,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":195,"org.easymock.tests2.DelegateToTest.testDelegate":241,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":264,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":188,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":125,"org.easymock.tests.MockingTest.testNicePartialClassMocking":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":275,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":87,"org.easymock.tests2.CaptureTest.testCaptureLast":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":108,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":2,"org.easymock.tests2.CaptureTest.testCapture1_2446744":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":268,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":202,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":120,"org.easymock.tests.UsageThrowableTest.throwError":145,"org.easymock.tests.UsageStrictMockTest.differentMethods":154,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":314,"org.easymock.tests.UsageExpectAndThrowTest.floatType":262,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":115,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":244,"org.easymock.tests.UsageVerifyTest.twoThrows":204,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":136,"org.easymock.samples.PartialClassMockTest.testGetArea":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":141,"org.easymock.samples.ExampleTest.voteAgainstRemoval":50,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":261,"org.easymock.tests2.UsageTest.niceToStrict":129,"org.easymock.tests2.UsageConstraintsTest.testNotNull":29,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":123,"org.easymock.samples.ExampleTest.voteAgainstRemovals":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":171,"org.easymock.tests2.CallbackTest.callback":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":301,"org.easymock.tests.UsageTest.openCallCountByLastCall":194,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":269,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":21,"org.easymock.tests.UsageCallCountTest.tooFewCalls":251,"org.easymock.tests.UsageOverloadedMethodTest.overloading":182,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":259,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":1,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":167,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":181,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":31,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":113,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":78,"org.easymock.tests.UsageThrowableTest.throwCheckedException":148,"org.easymock.tests2.EasyMockSupportClassTest.testAll":134,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":256,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":294,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":277,"org.easymock.tests2.CaptureTest.testCaptureAll":73,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":20,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":297,"org.easymock.tests2.UsageConstraintsTest.testMatches":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":69,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":313,"org.easymock.samples.ExampleTest.voteForRemovals":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":38,"org.easymock.tests2.NameTest.nameForNiceMock":199,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":57,"org.easymock.tests.UsageVarargTest.allKinds":223,"org.easymock.tests2.DependencyTest.testInterfaceMocking":59,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":36,"org.easymock.samples.BasicClassMockTest.testPrintContent":234,"org.easymock.samples.ExampleTest.addDocument":230,"org.easymock.tests2.DelegateToTest.testStubDelegate":91,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":150,"org.easymock.tests2.AnswerTest.stubAnswer":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":40,"org.easymock.tests2.UsageConstraintsTest.greaterThan":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":290,"org.easymock.tests.UsageVarargTest.varargLongAccepted":286,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":249,"org.easymock.samples.ExampleTest.voteForRemoval":49,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":54,"org.easymock.tests.UsageExpectAndReturnTest.floatType":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":300,"org.easymock.tests.UsageThrowableTest.noUpperLimit":246,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":117,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":289,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":104,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":126,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":213,"org.easymock.tests2.SerializationTest.test":7,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":304,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":94,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":146,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":157,"org.easymock.samples.SupportTest.addDocument":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":14,"org.easymock.tests2.CaptureTest.testCaptureFirst":81,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":95,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":163,"org.easymock.tests.GenericTest.testPackageScope":155,"org.easymock.tests2.CaptureTest.testCapture2_2446744":80,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":56,"org.easymock.tests2.UsageTest.moreThanOneArgument":128,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":44,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":288,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":254,"org.easymock.tests2.NameTest.nameForMock":197,"org.easymock.tests.UsageExpectAndReturnTest.longType":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":221,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":168,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":310,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":220,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":306,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":276,"org.easymock.tests2.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":160,"org.easymock.tests.UsageCallCountTest.tooManyCalls":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":274,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":191,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":250,"org.easymock.tests2.MockedExceptionTest.testRealException":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":265,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests2.NameTest.nameForStrictMock":198,"org.easymock.tests2.UsageConstraintsTest.testContains":112,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":11,"org.easymock.tests2.UsageConstraintsTest.testFind":106,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":217,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":86,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":218,"org.easymock.tests.UsageExpectAndReturnTest.object":166,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":28,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":88,"org.easymock.tests2.UsageStrictMockTest.range":63,"org.easymock.tests2.UsageConstraintsTest.lessThan":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":99,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":35,"org.easymock.tests.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":93,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":46,"org.easymock.tests2.CaptureTest.testCaptureRightOne":79,"org.easymock.tests2.UsageConstraintsTest.testOr":23,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":33,"org.easymock.tests.UsageRangeTest.combination":189,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":172,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":258,"org.easymock.tests.UsageTest.wrongArguments":208,"org.easymock.tests2.MockBuilderTest.testWithConstructor":302,"org.easymock.tests2.EasyMockSupportTest.testVerify":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":169,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":225,"org.easymock.tests.UsageVarargTest.varargShortAccepted":285,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":219,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":0,"org.easymock.tests2.UsageConstraintsTest.cmpTo":111,"org.easymock.tests.UsageVarargTest.varargCharAccepted":283,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests2.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":102,"org.easymock.tests2.CaptureTest.testCaptureFromStub":215,"org.easymock.tests.UsageTest.unexpectedCallWithArray":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":267,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":147,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":252,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":170,"org.easymock.tests2.CaptureTest.testCapture":24,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":248,"org.easymock.tests2.UsageConstraintsTest.constraints":105,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":266,"org.easymock.samples.ExampleTest.addAndChangeDocument":231,"org.easymock.tests.CapturesMatcherTest.test":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":173,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":235,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":137,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":214,"org.easymock.tests2.UsageTest.resumeIfFailure":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":162,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":143,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":98}}]
