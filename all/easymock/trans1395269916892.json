[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[20,21,22,23,24,25,1,26,6,7,27,10,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[65,20,66,67,68,21,22,69,70,23,71,72,73,74,24,75,76,77,78,79,80,81,82,83,84,85,86,87,25,88,89,90,91,92,93,94,95,96,1,3,4,5,6,8,97,98,27,99,100,101,102,103,10,11,28,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,31,32,136,13,14,15,137,33,138,139,35,140,141,142,39,40,143,144,145,146,147,148,149,150,151,41,152,153,154,155,156,157,158,159,159,160,160,16,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,17,45,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,51,234,55,56,235,57,236,237,238,62,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,63,64,270,271,272,273,274,275,276,277,278,279,280,281],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[282,283,284,285,286,287,288],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[65,20,66,67,68,21,22,69,70,23,71,72,73,74,24,75,76,77,78,79,80,81,82,83,84,85,86,87,25,88,89,90,91,92,93,94,95,96,1,3,4,5,6,8,97,98,27,99,100,101,102,103,10,11,28,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,31,32,136,13,14,15,137,33,138,139,35,140,141,142,39,40,143,144,145,146,147,148,149,150,151,41,152,153,154,155,156,157,158,159,159,160,160,16,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,289,181,290,182,183,184,185,186,17,45,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,291,225,226,227,228,229,230,231,232,233,51,234,55,56,235,57,236,237,238,62,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,63,64,270,271,272,273,274,275,276,277,278,279,280,281],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"lastControl"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[292,293,294,295,53,58],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[8,97,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[298],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[24,75,77,79,80,299,90,94,115,300,122],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[24,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[282,301,8,283,284,285,302,303,134,288],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[8,97,297,305],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[8,97,297],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:327","failures":[232,233,240,241],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[292,293,294,295,53,58],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[73,74,76,77,78,79,84,86,87,88,89,94,95,96,123,129,135,159,159,160,160,176,177,178,179,180,182,190,192,193,196,218,219,306,307,308,309,310,311,234,270,271,272,273,274],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[77,299,90,94],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[73,88,93,312],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[296,313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[292,293,294,295,53,58],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[316],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[317,318,319,320,65,20,66,67,68,21,22,69,70,23,71,72,321,73,74,24,75,76,77,78,79,80,81,82,83,84,85,86,87,25,88,89,90,91,92,93,94,95,96,0,3,322,4,5,8,97,297,98,99,100,101,102,103,323,11,324,325,326,327,104,105,108,110,111,114,115,116,300,117,328,329,119,120,121,122,125,126,127,128,129,130,131,132,133,134,330,135,32,331,136,13,14,15,137,138,139,35,36,142,39,143,146,147,148,149,150,151,41,152,153,154,155,156,157,158,332,333,159,160,334,16,335,336,161,162,163,164,165,337,166,167,169,170,176,177,178,179,180,184,185,338,339,340,341,342,343,344,345,346,347,186,348,45,187,188,189,190,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,349,350,351,217,352,353,354,218,219,225,355,356,357,358,359,360,234,56,361,362,235,236,242,243,244,245,246,247,363,364,365,366,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,63,64,270,271,272,273,274,275,276,277,281],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[282,283,284,285,286,287,288],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[24,75,77,79,80,299,90,94,115,300,122],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[0,1,2,3,322,4,5,26,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[20,21,22,23,24,25,1,26,6,7,27,10,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[8,97,297,305],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[367,0,368,1,2,369,3,322,4,5,301,26,6,370,371,7,8,297,98,27,100,101,102,9,103,372,373,323,10,11,28,374,12,375,376,377,378,379,380,381,382,130,131,132,134,288,383,384,385,136,386,387,13,388,389,390,391,392,393,394,395,396,14,397,398,399,400,401,15,402,403,152,153,154,155,157,158,332,333,159,159,160,160,16,296,186,348,17,313,404,405,349,406,407,408,409,410,411,18,19,412,413,225,414,235,415,416,417,418,419,420,421,422,423,304,275,276,277,424],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests2.UsageTest.argumentsOrdered":38,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":57,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":71,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":36,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":334,"org.easymock.tests2.DelegateToTest.testReturnException":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":243,"org.easymock.tests.MockingTest.testPartialClassMocking":275,"org.easymock.tests.MockClassControlTest.testToString":406,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":197,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":283,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":81,"org.easymock.tests2.UsageTest.wrongArguments":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":365,"org.easymock.samples.ExampleTest.answerVsDelegate":163,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":19,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":100,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":411,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":23,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":377,"org.easymock.tests2.CaptureTest.testPrimitive":117,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":196,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":216,"org.easymock.tests.UsageTest.moreThanOneArgument":236,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":272,"org.easymock.tests.UsageTest.argumentsOrdered":61,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":220,"org.easymock.tests.UsageVarargTest.varargIntAccepted":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":176,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":287,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":180,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":137,"org.easymock.tests2.AnswerTest.answer":143,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":327,"org.easymock.tests2.CaptureTest.testAnd":115,"org.easymock.tests2.UsageTest.strictResetToDefault":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":68,"org.easymock.tests2.DelegateToTest.testDelegate":114,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":212,"org.easymock.tests.LimitationsTest.mockFinalMethod":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":359,"org.easymock.tests2.CaptureTest.testCapture1_2446744":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":210,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":325,"org.easymock.tests.UsageThrowableTest.throwError":168,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":403,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests2.CompareToTest.testLessOrEqual":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":227,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":392,"org.easymock.tests2.UsageTest.niceToStrict":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":3,"org.easymock.tests2.MockBuilderTest.testCreateMock":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":399,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":206,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":292,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":21,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":233,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":363,"org.easymock.tests.UsageOverloadedMethodTest.overloading":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":280,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":259,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":85,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":121,"org.easymock.tests.MockClassControlTest.testEquals":410,"org.easymock.tests2.EasyMockSupportClassTest.testAll":136,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":214,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":378,"org.easymock.tests2.CaptureTest.testCaptureAll":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":273,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":306,"org.easymock.samples.ExampleTest.voteForRemovals":166,"org.easymock.tests.UsageVarargTest.allKinds":347,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":269,"org.easymock.samples.BasicClassMockTest.testPrintContent":333,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":358,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":174,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":29,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":247,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":28,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":421,"org.easymock.samples.ExampleTest.voteForRemoval":164,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":105,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":374,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":9,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":235,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":66,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":242,"org.easymock.tests2.CaptureTest.testCaptureFirst":125,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":67,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":255,"org.easymock.tests2.UsageTest.moreThanOneArgument":139,"org.easymock.tests2.CaptureTest.testCapture2_2446744":124,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":107,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":6,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":346,"org.easymock.tests.GenericTest.testBridgedEquals":313,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":49,"org.easymock.tests.UsageExpectAndReturnTest.longType":251,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":355,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":215,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":371,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":182,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":270,"org.easymock.tests.UsageCallCountTest.tooManyCalls":50,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":173,"org.easymock.tests.MockingTest.testNiceClassMocking":424,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":153,"org.easymock.tests.MockingTest.testClassMocking":423,"org.easymock.tests2.UsageConstraintsTest.testContains":84,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":351,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":368,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":132,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":151,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":52,"org.easymock.tests.UsageExpectAndReturnTest.object":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":70,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":284,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":342,"org.easymock.tests.UsageTest.exactCallCountByLastCall":62,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":221,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":264,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":279,"org.easymock.tests.MockClassControlTest.testHashCode":409,"org.easymock.tests2.EasyMockSupportTest.testVerify":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":394,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":222,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":232,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":278,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":324,"org.easymock.tests.UsageVarargTest.varargCharAccepted":341,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":330,"org.easymock.tests2.UsageTest.openCallCountByLastCall":140,"org.easymock.tests.DefaultClassInstantiatorTest.object":415,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":231,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":395,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":171,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":382,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":408,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":10,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":203,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":239,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":15,"org.easymock.tests2.UsageTest.resumeIfFailure":39,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":245,"org.easymock.tests2.StubTest.stubWithReturnValue":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":257,"org.easymock.tests2.SerializationTest.testAllMockedMethod":297,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":229,"org.easymock.samples.SupportTest.voteForRemovals":161,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":293,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":209,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":305,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":230,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":144,"org.easymock.tests.UsageExpectAndThrowTest.object":207,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":290,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DelegateToTest.testWrongClass":112,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":219,"org.easymock.samples.ConstructorCalledMockTest.testTax":159,"org.easymock.tests.UsageStrictMockTest.range":55,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":69,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":208,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":4,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":364,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":294,"org.easymock.tests2.CaptureTest.testCaptureNone":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":228,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":43,"org.easymock.tests.UsageVerifyTest.twoReturns":64,"org.easymock.tests.UsageVarargTest.varargByteAccepted":345,"org.easymock.tests2.ThreadingTest.testThreadSafe":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":397,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":354,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":332,"org.easymock.tests2.CaptureTest.testCapture_2617107":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":195,"org.easymock.tests2.UsageConstraintsTest.any":82,"org.easymock.tests2.StubTest.stub":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":241,"org.easymock.tests.UsageExpectAndThrowTest.longType":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":244,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":419,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":30,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests.LimitationsTest.mockNativeMethod":225,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":267,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":381,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":331,"org.easymock.tests2.NameTest.nameForMocksControl":320,"org.easymock.tests2.MockedExceptionTest.testMockedException":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":387,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":238,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":201,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":277,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":5,"org.easymock.tests.MockingTest.testNicePartialClassMocking":276,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":102,"org.easymock.tests2.CompareToTest.testNotComparable":316,"org.easymock.tests2.CaptureTest.testCaptureLast":119,"org.easymock.tests2.CompareToTest.testCompareEqual":315,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":268,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":158,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests.MockingTest.testTwoMocks":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":205,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":95,"org.easymock.tests.UsageStrictMockTest.differentMethods":56,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":417,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":106,"org.easymock.tests2.MockBuilderTest.testCreateMockString":7,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":388,"org.easymock.tests.UsageExpectAndThrowTest.floatType":199,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":146,"org.easymock.tests.UsageVerifyTest.twoThrows":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":14,"org.easymock.samples.ExampleTest.voteAgainstRemoval":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":226,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":11,"org.easymock.tests.LimitationsTest.privateConstructor":413,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":314,"org.easymock.tests2.UsageConstraintsTest.testNotNull":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":175,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":130,"org.easymock.tests2.UsageTest.defaultResetToNice":142,"org.easymock.samples.ExampleTest.voteAgainstRemovals":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":263,"org.easymock.tests.UsageVarargTest.differentLength":42,"org.easymock.tests2.CallbackTest.callback":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":372,"org.easymock.tests.UsageTest.openCallCountByLastCall":237,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":194,"org.easymock.tests.UsageCallCountTest.tooFewCalls":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":155,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":366,"org.easymock.tests.UsageThrowableTest.throwCheckedException":172,"org.easymock.tests.MockingTest.testStrictClassMocking":422,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":295,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":157,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":154,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":156,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":286,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":108,"org.easymock.tests2.NameTest.nameForNiceMock":319,"org.easymock.tests2.DependencyTest.testInterfaceMocking":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":285,"org.easymock.samples.ExampleTest.addDocument":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.DelegateToTest.testStubDelegate":111,"org.easymock.tests2.AnswerTest.stubAnswer":147,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":234,"org.easymock.tests.UsageVarargTest.varargLongAccepted":344,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":361,"org.easymock.tests.UsageExpectAndReturnTest.floatType":250,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":266,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":134,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":160,"org.easymock.tests.UsageThrowableTest.noUpperLimit":169,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":375,"org.easymock.tests2.SerializationTest.test":97,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":328,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":416,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":249,"org.easymock.samples.SupportTest.addDocument":336,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":389,"org.easymock.tests.GenericTest.testPackageScope":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests2.NameTest.nameForMock":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":260,"org.easymock.tests2.UsageStrictMockTest.differentMethods":32,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":189,"org.easymock.tests2.MockedExceptionTest.testRealException":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":310,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":193,"org.easymock.tests2.NameTest.nameForStrictMock":318,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":369,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":376,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":418,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":1,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests2.UsageConstraintsTest.lessThan":96,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":379,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":367,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":20,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":393,"org.easymock.tests2.CaptureTest.testCaptureRightOne":122,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":390,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":253,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":261,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":420,"org.easymock.tests.UsageVarargTest.varargShortAccepted":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":48,"org.easymock.tests2.UsageConstraintsTest.cmpTo":83,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":145,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests2.CaptureTest.testCaptureFromStub":123,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":2,"org.easymock.tests.UsageTest.unexpectedCallWithArray":58,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":353,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":262,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.samples.ExampleTest.addAndChangeDocument":167,"org.easymock.tests.UsageStrictMockTest.testVerify":362,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":335,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":360,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":356,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":178,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":380,"org.easymock.tests.LimitationsTest.abstractClass":412,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":254,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":179,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":22,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":339}}]
