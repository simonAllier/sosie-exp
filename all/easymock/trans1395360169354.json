[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[55],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[56],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[57,8,17,58,18,59,60,61,62,53,63,54,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:106","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n    final org.easymock.TestSubject org.easymock.TestSubject = java.lang.reflect.Field.getAnnotation(org.easymock.TestSubject.org.easymock.TestSubject);\n    if (org.easymock.TestSubject != null) {\n        org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n        continue;\n    } \n    final org.easymock.Mock org.easymock.Mock = java.lang.reflect.Field.getAnnotation(org.easymock.Mock.org.easymock.Mock);\n    if (org.easymock.Mock == null) {\n        continue;\n    } \n    final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType();\n    java.lang.String java.lang.String = org.easymock.Mock.java.lang.String();\n    java.lang.String = (java.lang.String.length()) == 0 ? null : java.lang.String;\n    final org.easymock.MockType org.easymock.MockType = org.easymock.Mock.org.easymock.MockType();\n    java.lang.Object java.lang.Object;\n    if (java.lang.Object instanceof org.easymock.EasyMockSupport) {\n        java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    } else {\n        java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    }\n    java.lang.reflect.Field.setAccessible(true);\n    try {\n        java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    org.easymock.internal.InjectionPlan.addInjection(new org.easymock.internal.Injection(java.lang.Object , org.easymock.Mock));\n}","type":"CtForEachImpl"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[91,92,93],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[94,0,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[115],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[116,117,118,4,119,120,121,122,123,124,125,65,94,126,127,66,128,129,130,72,131,132,133,134,57,135,136,0,1,2,5,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,97,6,7,12,13,14,15,84,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,16,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,8,9,213,10,99,102,103,104,105,214,215,216,217,218,219,220,109,110,111,221,222,223,224,60,225,61,226,227,228,229,230,231,232,19,233,62,234,235,236,22,23,24,25,26,27,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,266,267,268,269,270,271,272,273,274,275,276,52,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[68,69,71,74,75,78,80,81,83,86,87,90],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[124,125,133,304,0,305,306,307,308,309,310,311,312,313,314],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[315,183,185,200,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[316],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[116,117,118,4,119,120,121,122,123,124,125,65,94,126,127,66,128,129,317,130,72,131,132,133,318,134,57,319,320,135,136,0,1,2,5,137,138,139,140,141,142,143,144,145,146,147,321,148,149,150,151,152,153,322,323,154,155,324,156,157,158,159,95,160,161,96,97,325,6,7,12,13,14,15,84,162,163,164,165,166,167,326,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,16,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,327,205,206,207,208,8,9,213,10,99,100,102,103,104,105,106,107,108,17,214,215,328,216,217,58,18,218,329,330,219,59,220,109,110,111,221,222,223,224,60,225,61,226,227,228,229,230,331,232,19,332,333,334,20,21,335,233,336,62,337,338,234,235,22,23,24,25,26,27,239,240,241,242,339,340,341,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,11,342,28,343,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,344,266,267,49,268,269,270,271,272,273,274,50,51,275,345,276,52,277,278,279,280,281,346,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,301,302,53,303,347,348,63,54,349,350,64],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[304,351,352,353,354,355,356,357,308,313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[320,358,359,225,61,338,344],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer","i":"matches"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[56],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[133,304],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":186,"org.easymock.tests2.UsageTest.argumentsOrdered":330,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":53,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":25,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":217,"org.easymock.tests2.StubTest.stubWithReturnValue":16,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":254,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":205,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":65,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":23,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":314,"org.easymock.tests.MockingTest.testPartialClassMocking":294,"org.easymock.samples.SupportTest.voteForRemovals":117,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":98,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":29,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":109,"org.easymock.tests.UsageExpectAndThrowTest.object":39,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":203,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":351,"org.easymock.tests2.DelegateToTest.testWrongClass":326,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":287,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":288,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":192,"org.easymock.tests2.UsageTest.wrongArguments":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":273,"org.easymock.tests.UsageStrictMockTest.range":338,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":78,"org.easymock.samples.ConstructorCalledMockTest.testTax":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":223,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":176,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":137,"org.easymock.tests2.UsageConstraintsTest.testNull":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":157,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":104,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":178,"org.easymock.tests2.CaptureTest.testPrimitive":147,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":275,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":349,"org.easymock.tests.UsageTest.moreThanOneArgument":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":222,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":291,"org.easymock.tests2.CaptureTest.testCaptureNone":151,"org.easymock.tests.UsageUnorderedTest.message":344,"org.easymock.tests.UsageVerifyTest.twoReturns":61,"org.easymock.tests.UsageVarargTest.varargByteAccepted":284,"org.easymock.tests2.ThreadingTest.testThreadSafe":128,"org.easymock.tests.UsageTest.argumentsOrdered":350,"org.easymock.tests.UsageVarargTest.varargIntAccepted":279,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":242,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":226,"org.easymock.tests2.CaptureTest.testCapture_2617107":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":356,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":51,"org.easymock.tests2.UsageConstraintsTest.any":193,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":103,"org.easymock.tests2.StubTest.stub":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":24,"org.easymock.tests.UsageExpectAndThrowTest.longType":32,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":91,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":319,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":84,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":266,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":264,"org.easymock.tests2.AnswerTest.answer":8,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":114,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":165,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":69,"org.easymock.tests2.CaptureTest.testAnd":144,"org.easymock.tests2.UsageTest.strictResetToDefault":214,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":307,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":161,"org.easymock.tests2.NameTest.nameForMocksControl":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":71,"org.easymock.tests2.MockedExceptionTest.testMockedException":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":290,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":173,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":115,"org.easymock.tests2.DelegateToTest.testDelegate":168,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":33,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":155,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":105,"org.easymock.tests.MockingTest.testNicePartialClassMocking":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":44,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":159,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":67,"org.easymock.tests2.CaptureTest.testCaptureLast":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":143,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":272,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":204,"org.easymock.tests2.CaptureTest.testCapture1_2446744":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":163,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":329,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":207,"org.easymock.tests.UsageThrowableTest.throwError":331,"org.easymock.tests.UsageStrictMockTest.differentMethods":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":74,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":81,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":55,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":90,"org.easymock.tests2.MockBuilderTest.testCreateMockString":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":293,"org.easymock.tests.UsageExpectAndThrowTest.floatType":31,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":199,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":9,"org.easymock.tests.UsageVerifyTest.twoThrows":225,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":110,"org.easymock.samples.PartialClassMockTest.testGetArea":94,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":316,"org.easymock.tests2.CompareToTest.testLessOrEqual":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":227,"org.easymock.samples.ExampleTest.voteAgainstRemoval":120,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":97,"org.easymock.tests2.UsageTest.niceToStrict":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":30,"org.easymock.tests2.UsageConstraintsTest.testNotNull":206,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":21,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":12,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":102,"org.easymock.tests2.UsageTest.defaultResetToNice":218,"org.easymock.tests2.MockBuilderTest.testCreateMock":106,"org.easymock.samples.ExampleTest.voteAgainstRemovals":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":260,"org.easymock.tests.UsageVarargTest.differentLength":346,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":68,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":305,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":75,"org.easymock.tests.UsageTest.openCallCountByLastCall":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":38,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":174,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":183,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":50,"org.easymock.tests.UsageCallCountTest.tooFewCalls":240,"org.easymock.tests.UsageOverloadedMethodTest.overloading":276,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":197,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":28,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":140,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":196,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":92,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":152,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":224,"org.easymock.tests.UsageThrowableTest.throwCheckedException":333,"org.easymock.tests2.EasyMockSupportClassTest.testAll":220,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":270,"org.easymock.tests2.CaptureTest.testCaptureAll":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":164,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":73,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":139,"org.easymock.tests2.UsageConstraintsTest.testMatches":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":141,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":292,"org.easymock.samples.ExampleTest.voteForRemovals":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":355,"org.easymock.tests2.NameTest.nameForNiceMock":211,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":130,"org.easymock.tests.UsageVarargTest.allKinds":286,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":60,"org.easymock.tests2.DependencyTest.testInterfaceMocking":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":353,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":271,"org.easymock.samples.BasicClassMockTest.testPrintContent":127,"org.easymock.samples.ExampleTest.addDocument":121,"org.easymock.tests2.DelegateToTest.testStubDelegate":167,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":20,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":318,"org.easymock.tests2.AnswerTest.stubAnswer":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":27,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":357,"org.easymock.tests2.UsageConstraintsTest.greaterThan":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":325,"org.easymock.tests.UsageVarargTest.varargLongAccepted":283,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.samples.ExampleTest.voteForRemoval":119,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":263,"org.easymock.tests.UsageExpectAndReturnTest.floatType":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":133,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":125,"org.easymock.tests.UsageThrowableTest.noUpperLimit":232,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":88,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":298,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":17,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":148,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":309,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":171,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":246,"org.easymock.tests2.UsageConstraintsTest.testSame":189,"org.easymock.samples.SupportTest.addDocument":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":22,"org.easymock.tests2.CaptureTest.testCaptureFirst":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":172,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":59,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":252,"org.easymock.tests.GenericTest.testPackageScope":243,"org.easymock.tests2.CaptureTest.testCapture2_2446744":323,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":317,"org.easymock.tests2.UsageTest.moreThanOneArgument":215,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":107,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":87,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":285,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":340,"org.easymock.tests2.NameTest.nameForMock":209,"org.easymock.tests.UsageExpectAndReturnTest.longType":248,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":169,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":47,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":327,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":45,"org.easymock.tests2.UsageStrictMockTest.differentMethods":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":289,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":249,"org.easymock.tests.UsageCallCountTest.tooManyCalls":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":43,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":239,"org.easymock.tests2.MockedExceptionTest.testRealException":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":77,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":313,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":57,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":274,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":138,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":238,"org.easymock.tests2.NameTest.nameForStrictMock":210,"org.easymock.tests2.UsageConstraintsTest.testContains":195,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":14,"org.easymock.tests2.UsageConstraintsTest.testFind":187,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":52,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":158,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":335,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":7,"org.easymock.tests.UsageExpectAndReturnTest.object":255,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":358,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":160,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":100,"org.easymock.tests2.UsageStrictMockTest.range":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":76,"org.easymock.tests2.UsageConstraintsTest.lessThan":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":352,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":83,"org.easymock.tests.UsageTest.exactCallCountByLastCall":64,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":354,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":170,"org.easymock.tests2.CaptureTest.testCaptureRightOne":153,"org.easymock.tests2.UsageConstraintsTest.testOr":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":304,"org.easymock.tests.UsageRangeTest.combination":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":324,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":261,"org.easymock.tests.UsageTest.wrongArguments":348,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":342,"org.easymock.tests2.MockBuilderTest.testWithConstructor":306,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":80,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":250,"org.easymock.tests2.EasyMockSupportTest.testVerify":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":258,"org.easymock.tests.UsageVarargTest.varargShortAccepted":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":11,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":162,"org.easymock.tests2.UsageConstraintsTest.cmpTo":194,"org.easymock.tests.UsageVarargTest.varargCharAccepted":280,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":134,"org.easymock.tests2.UsageTest.openCallCountByLastCall":58,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":18,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":180,"org.easymock.tests2.CaptureTest.testCaptureFromStub":322,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":101,"org.easymock.tests.UsageTest.unexpectedCallWithArray":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":36,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":241,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":70,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":259,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":337,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":96,"org.easymock.tests2.UsageConstraintsTest.constraints":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":35,"org.easymock.samples.ExampleTest.addAndChangeDocument":123,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":262,"org.easymock.tests.UsageStrictMockTest.testVerify":236,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":66,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":269,"org.easymock.tests2.UsageTest.resumeIfFailure":219,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":228,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":251,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":112,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":229,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":359,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":175}}]
