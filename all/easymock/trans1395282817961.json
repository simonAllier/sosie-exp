[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,25,26,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:114","sourceCode":"continue","type":"CtContinueImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[43,44,45,46,47],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[48,49,50,51,52],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[53,54,55,56,57,58],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[61,7,62,63,64,65,66,67,68,69,70,71,72,73,8,9,10,11,12,74,75,53,13,76,77,78,79,80,80,81,82,83,84,85,86,87,88,89,90,91,92,14,15,93,94,16,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,0,151,152,153,154,155,156,157,158,18,19,20,21,22,1,159,56,160,161,2,162,163,164,165,3,166,167,168,169,170,171,172,23,24,173,48,59,174,175,176,43,177,178,179,49,180,181,182,183,184,25,26,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,27,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,44,236,45,46,237,238,239,240,50,241,51,52,242,243,244,245,60,28,29,246,247,30,31,32,33,248,249,6,250,34,251,35,36,252,37,38,253,254,255,256,257,39,40,41,258,259,260,261,262,263,264,265,266,267,268,269,270,42,271,272,273,274,275,276,277,278,279,280,281,282,283,4,284,285,286,287,288,289,5,290,291,292,293,294,295,296,297,298,299,300],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[175,176,301,302,303,304,305,306,307,308,309,310],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[62,93,94,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,147,149,0,151,152,153,154,155,1,2,3,167,168,169,170,171,172,59,243,244,245,60,259,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[252,256,261,262,264,265,266,267,268,272],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[312],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[13,78,79,313,86,87,159,165,3,166,314,27,208,209,315,316,317,318,285],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[319,320,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,321,322,323,324,325,326,17,18,19,20,21,22,23,24,25,25,26,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,259,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[229,233,327,328,329,330,331,332,333,334,335],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[175,176,301,302,303,336,337,338,339,304,340,341,305,306,307,308,342,343,344,345,309,346,347,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[61,348,7,62,63,64,65,66,67,69,70,71,72,73,8,9,10,11,12,74,75,53,13,76,77,78,79,349,81,82,83,84,85,313,350,86,87,88,89,14,15,93,94,16,95,96,97,351,98,99,352,353,354,355,356,357,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,0,151,152,153,154,155,156,157,158,18,19,20,21,22,1,159,56,160,161,2,162,163,164,165,3,166,167,168,169,170,171,172,23,24,358,175,176,43,177,178,179,49,180,181,182,183,184,25,25,26,26,185,186,187,188,189,190,191,192,193,194,195,196,198,199,201,203,204,205,27,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,44,236,45,46,238,239,240,315,316,317,318,50,241,51,52,242,243,244,245,60,28,29,246,247,30,31,32,33,248,249,6,250,34,251,35,36,252,37,38,253,254,255,257,39,40,41,258,259,260,261,262,263,264,265,266,267,268,269,270,42,271,272,273,274,275,276,277,278,279,280,281,282,283,4,284,285,286,287,288,289,5,290,291,292,293,294,295,296,297,298,299,300],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[94,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,147,149,0,151,152,153,154,155,1,2,3,171,59,259,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[61,7,62,8,9,10,11,12,13,14,15,93,94,16,171,23,24,27,33,6,261,267,268,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[359],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[263],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[330,360,240,333,361,362,363,364,365,298],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[312,95,96,366,367],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[312],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[369,338,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[330,333,361,362,363,370,371],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[372],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:52","failures":[61,63,73,8,53,13,77,78,373,374,87,89,92,147,0,1,159,160,161,2,162,163,164,165,3,166,49,187,27,207,208,315,316,317,318,52,31,32,6,250,39,40,4,285,286,289,5,291,292,294],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[375,376],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[162,377,291],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":247,"org.easymock.tests2.UsageTest.argumentsOrdered":292,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":1,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":224,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":319,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":288,"org.easymock.tests2.StubTest.stubWithReturnValue":259,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":330,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":257,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":129,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":175,"org.easymock.tests2.SerializationTest.testAllMockedMethod":300,"org.easymock.tests2.DelegateToTest.testReturnException":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":168,"org.easymock.tests.MockingTest.testPartialClassMocking":156,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":58,"org.easymock.samples.SupportTest.voteForRemovals":178,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":312,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":112,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":100,"org.easymock.tests.UsageExpectAndThrowTest.object":110,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":296,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":361,"org.easymock.tests2.DelegateToTest.testWrongClass":51,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":23,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":24,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":249,"org.easymock.tests2.UsageTest.wrongArguments":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":14,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":310,"org.easymock.tests.UsageStrictMockTest.range":77,"org.easymock.samples.ConstructorCalledMockTest.testTax":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":83,"org.easymock.samples.ExampleTest.answerVsDelegate":49,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":227,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":223,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":45,"org.easymock.tests2.CaptureTest.testPrimitive":263,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":119,"org.easymock.tests.UsageTest.moreThanOneArgument":159,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":162,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":82,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":20,"org.easymock.tests2.CaptureTest.testCaptureNone":268,"org.easymock.tests.UsageUnorderedTest.message":61,"org.easymock.tests.UsageVerifyTest.twoReturns":166,"org.easymock.tests.UsageVarargTest.varargByteAccepted":71,"org.easymock.tests2.ThreadingTest.testThreadSafe":279,"org.easymock.tests.UsageTest.argumentsOrdered":163,"org.easymock.tests.UsageVarargTest.varargIntAccepted":65,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":89,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":185,"org.easymock.tests2.CaptureTest.testCapture_2617107":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":234,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":341,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":94,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":236,"org.easymock.tests2.UsageConstraintsTest.any":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":372,"org.easymock.tests2.StubTest.stub":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":12,"org.easymock.tests.UsageExpectAndThrowTest.longType":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":169,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":355,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":206,"org.easymock.tests2.SerializationTest.testClass":298,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":242,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":297,"org.easymock.tests.LimitationsTest.mockNativeMethod":148,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":368,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":366,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":139,"org.easymock.tests2.AnswerTest.answer":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":308,"org.easymock.tests2.CaptureTest.testAnd":260,"org.easymock.tests2.UsageTest.strictResetToDefault":284,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":329,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":199,"org.easymock.tests2.NameTest.nameForMocksControl":318,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":343,"org.easymock.tests2.MockedExceptionTest.testMockedException":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":98,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":2,"org.easymock.tests2.DelegateToTest.testDelegate":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":104,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":158,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":46,"org.easymock.tests.MockingTest.testNicePartialClassMocking":157,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":115,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":196,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":306,"org.easymock.tests2.CaptureTest.testCaptureLast":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":171,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":248,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":233,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":255,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":144,"org.easymock.tests2.CaptureTest.testCapture1_2446744":264,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":113,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":108,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":291,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":40,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":375,"org.easymock.tests.UsageThrowableTest.throwError":149,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":345,"org.easymock.tests.UsageStrictMockTest.differentMethods":78,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":303,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":281,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":305,"org.easymock.tests2.MockBuilderTest.testCreateMockString":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":22,"org.easymock.tests.UsageExpectAndThrowTest.floatType":102,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":252,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":188,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":275,"org.easymock.samples.PartialClassMockTest.testGetArea":43,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":9,"org.easymock.samples.ExampleTest.voteAgainstRemoval":181,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":201,"org.easymock.tests2.UsageTest.niceToStrict":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":101,"org.easymock.tests2.ThreadingTest.testChangeDefault":376,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":335,"org.easymock.tests2.UsageConstraintsTest.testNotNull":39,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.UsageTest.defaultResetToNice":290,"org.easymock.tests2.MockBuilderTest.testCreateMock":237,"org.easymock.samples.ExampleTest.voteAgainstRemovals":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":135,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":307,"org.easymock.tests.UsageVarargTest.differentLength":68,"org.easymock.tests2.CallbackTest.callback":203,"org.easymock.tests2.UsageConstraintsTest.equals":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":309,"org.easymock.tests.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":109,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":219,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":313,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":93,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":81,"org.easymock.tests.UsageCallCountTest.tooFewCalls":87,"org.easymock.tests.UsageOverloadedMethodTest.overloading":146,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":59,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":131,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":145,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":251,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":84,"org.easymock.tests.UsageThrowableTest.throwCheckedException":152,"org.easymock.tests2.EasyMockSupportClassTest.testAll":273,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":96,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":55,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":117,"org.easymock.tests2.CaptureTest.testCaptureAll":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":142,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":232,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":229,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":356,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":231,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":190,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":21,"org.easymock.samples.ExampleTest.voteForRemovals":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":370,"org.easymock.tests2.NameTest.nameForNiceMock":317,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":283,"org.easymock.tests.UsageVarargTest.allKinds":73,"org.easymock.tests2.DependencyTest.testInterfaceMocking":295,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":363,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":143,"org.easymock.samples.BasicClassMockTest.testPrintContent":186,"org.easymock.samples.ExampleTest.addDocument":182,"org.easymock.tests2.DelegateToTest.testStubDelegate":241,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":154,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":204,"org.easymock.tests2.AnswerTest.stubAnswer":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":172,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":365,"org.easymock.tests2.UsageConstraintsTest.greaterThan":37,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":351,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":202,"org.easymock.tests.UsageVarargTest.varargLongAccepted":70,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":79,"org.easymock.samples.ExampleTest.voteForRemoval":180,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":280,"org.easymock.tests.UsageExpectAndReturnTest.floatType":122,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":197,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":340,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":38,"org.easymock.tests.UsageThrowableTest.noUpperLimit":150,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":85,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":29,"org.easymock.tests2.SerializationTest.test":299,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":265,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":216,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":0,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":121,"org.easymock.samples.SupportTest.addDocument":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":167,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":320,"org.easymock.tests2.CaptureTest.testCaptureFirst":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":217,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":294,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":127,"org.easymock.tests.GenericTest.testPackageScope":95,"org.easymock.tests2.UsageTest.moreThanOneArgument":285,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":282,"org.easymock.tests2.CaptureTest.testCapture2_2446744":271,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":304,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":72,"org.easymock.tests.GenericTest.testBridgedEquals":367,"org.easymock.tests2.NameTest.nameForMock":315,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":91,"org.easymock.tests.UsageExpectAndReturnTest.longType":123,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":140,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":132,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":256,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":332,"org.easymock.tests2.UsageStrictMockTest.differentMethods":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":124,"org.easymock.tests.UsageCallCountTest.tooManyCalls":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":99,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":86,"org.easymock.tests2.MockedExceptionTest.testRealException":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":347,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":105,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":357,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":153,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":228,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":350,"org.easymock.tests2.NameTest.nameForStrictMock":316,"org.easymock.tests2.UsageConstraintsTest.testContains":34,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":245,"org.easymock.tests2.UsageConstraintsTest.testFind":30,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":147,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":195,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":278,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":74,"org.easymock.tests.UsageExpectAndReturnTest.object":130,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":253,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":198,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":346,"org.easymock.tests2.UsageStrictMockTest.range":207,"org.easymock.tests2.UsageConstraintsTest.lessThan":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":362,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":337,"org.easymock.tests.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":364,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":215,"org.easymock.tests2.CaptureTest.testCaptureRightOne":270,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":373,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":333,"org.easymock.tests.UsageRangeTest.combination":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":192,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":63,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":136,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":48,"org.easymock.tests.UsageTest.wrongArguments":160,"org.easymock.tests2.MockBuilderTest.testWithConstructor":328,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":302,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":348,"org.easymock.tests2.EasyMockSupportTest.testVerify":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":133,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":374,"org.easymock.tests.UsageVarargTest.varargShortAccepted":69,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":173,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":210,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":90,"org.easymock.tests2.UsageConstraintsTest.cmpTo":250,"org.easymock.tests.UsageVarargTest.varargCharAccepted":66,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests2.UsageTest.openCallCountByLastCall":289,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":225,"org.easymock.tests2.CaptureTest.testCaptureFromStub":42,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":352,"org.easymock.tests.UsageTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":107,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":151,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":342,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":301,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":134,"org.easymock.tests2.CaptureTest.testCapture":311,"org.easymock.tests2.UsageConstraintsTest.constraints":246,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":200,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":106,"org.easymock.samples.ExampleTest.addAndChangeDocument":184,"org.easymock.tests.CapturesMatcherTest.test":80,"org.easymock.tests.UsageStrictMockTest.testVerify":349,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":137,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":276,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":141,"org.easymock.tests2.UsageTest.resumeIfFailure":293,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":126,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":220,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":64}}]
