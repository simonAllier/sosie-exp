[{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:159","failures":[12,13,14,15,16,17],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[19,20,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[22],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[23,24,25,26,27],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[28,29,30,31,32,33,34,35,36,25,26,37,38,39,40,41,42,43,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[46,47,48,49],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1608","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,28,110,24,29,30,111,112,113,114,115,116,31,117,32,33,118,119,120,121,122,123,124,125,126,127,128,129,34,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,35,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,46,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,36,25,26,294,295,296,297,298,299,300,301,302,303,304,305,306,307,12,13,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,10,336,337,338,339,340,341,342,14,343,344,345,346,347,348,349,350,351,352,37,38,39,40,353,354,41,355,27,42,43,0,1,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,22,405,45,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,18,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,7,465,466,467,468,44,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,9,512,513,514,515,516,517,518,519,47,11,520,48,49],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,183,184,186,187,188,189,190,191,193,195,196,197,198,199,200,204,208,284,25,351,467,473,515,516,517,518],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[338,414,471],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[52,215,216,218,298,305,335,336,337,339,0,376,379,389,395,427,438,494,495,496,497,499,500,501,504,507,509,510,513],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[1,2,3,4,521,522,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[50,51,52,53,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,28,110,24,29,30,111,112,113,114,115,116,31,117,32,33,118,119,120,121,122,123,124,125,126,127,128,129,34,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,35,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,46,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,36,25,26,294,295,296,297,298,299,300,301,302,303,304,305,306,307,12,12,13,13,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,10,336,337,338,339,340,341,342,14,343,344,345,346,347,348,349,350,351,352,37,38,39,40,353,354,41,355,27,42,43,0,1,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,22,405,45,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,437,18,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,7,465,466,467,468,44,469,470,471,472,473,474,475,476,477,478,479,480,481,482,485,486,487,494,495,496,497,499,500,501,503,504,505,506,507,508,509,510,9,512,513,514,515,516,517,518,519,47,11,520,48,49],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[523,524,525],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[415,526],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:111","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.createTypeVariableMap(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[483,484,527],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[528,7,465,466],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[529],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[50,51,52,53,99,104,158,159,160,161,162,172,173,174,175,176,177,178,179,180,212,213,214,215,216,218,221,226,227,228,229,230,231,232,294,305,306,307,12,12,13,13,335,10,337,338,339,340,342,14,343,344,345,346,347,348,349,0,1,530,531,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,7,466,482,485,494,495,496,497,500,501,503,532,504,505,506,507,508,509,510,9,512,513,533,514,515,516,517],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[488,489,491,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":401,"org.easymock.tests2.UsageTest.argumentsOrdered":476,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":204,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":462,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":254,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":471,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":309,"org.easymock.tests2.DelegateToTest.testReturnException":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":196,"org.easymock.tests.MockingTest.testPartialClassMocking":215,"org.easymock.tests.MockClassControlTest.testToString":175,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":352,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":135,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":379,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":434,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":406,"org.easymock.tests2.UsageTest.wrongArguments":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":130,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":224,"org.easymock.samples.ExampleTest.answerVsDelegate":313,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":104,"org.easymock.tests2.UsageConstraintsTest.testNull":404,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":337,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":461,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":180,"org.easymock.tests2.CaptureTest.testPrimitive":324,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":134,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":154,"org.easymock.tests.UsageTest.moreThanOneArgument":35,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":291,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":112,"org.easymock.tests.UsageTest.argumentsOrdered":210,"org.easymock.tests.UsageVarargTest.varargIntAccepted":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":522,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":503,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":450,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":301,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":59,"org.easymock.tests.ReplayStateInvalidUsageTest.times":276,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":366,"org.easymock.tests2.DependencyTest.testClassMocking":431,"org.easymock.tests2.AnswerTest.answer":519,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":359,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":101,"org.easymock.tests2.CaptureTest.testAnd":321,"org.easymock.tests2.UsageTest.strictResetToDefault":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":165,"org.easymock.tests2.DelegateToTest.testDelegate":430,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":116,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":150,"org.easymock.tests.LimitationsTest.mockFinalMethod":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":127,"org.easymock.tests2.DependencyTest.testClassMockingSupport":432,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":128,"org.easymock.tests2.CaptureTest.testCapture1_2446744":325,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":148,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":357,"org.easymock.tests.UsageThrowableTest.throwError":184,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":270,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":103,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":451,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":62,"org.easymock.samples.PartialClassMockTest.testGetArea":305,"org.easymock.tests.MockingTest.testInterfaceMocking":217,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":298,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":156,"org.easymock.tests2.UsageTest.niceToStrict":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":384,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":136,"org.easymock.tests2.ThreadingTest.testChangeDefault":436,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":507,"org.easymock.tests2.MockBuilderTest.testCreateMock":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":392,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":144,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":457,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":203,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":222,"org.easymock.tests.UsageOverloadedMethodTest.overloading":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":388,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":412,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":284,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":90,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":411,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":330,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":236,"org.easymock.tests.MockClassControlTest.testEquals":179,"org.easymock.tests2.EasyMockSupportClassTest.testAll":376,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":125,"org.easymock.tests2.CaptureTest.testCaptureAll":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":358,"org.easymock.tests.MockNameTest.defaultName":280,"org.easymock.tests2.UsageConstraintsTest.testMatches":413,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":292,"org.easymock.samples.ExampleTest.voteForRemovals":317,"org.easymock.tests.UsageVarargTest.allKinds":244,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":126,"org.easymock.samples.BasicClassMockTest.testPrintContent":307,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":190,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":353,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":447,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":200,"org.easymock.tests2.UsageConstraintsTest.greaterThan":415,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":164,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":347,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":63,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":232,"org.easymock.samples.ExampleTest.voteForRemoval":314,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":437,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":348,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":527,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":340,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":55,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":467,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":294,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":454,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":195,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":425,"org.easymock.tests2.CaptureTest.testCaptureFirst":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":455,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":478,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":86,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":438,"org.easymock.tests2.UsageTest.moreThanOneArgument":44,"org.easymock.tests2.CaptureTest.testCapture2_2446744":333,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":262,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":243,"org.easymock.tests.GenericTest.testBridgedEquals":162,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":121,"org.easymock.tests.UsageExpectAndReturnTest.longType":82,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":123,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":533,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":153,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":420,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":194,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":303,"org.easymock.tests.UsageCallCountTest.tooManyCalls":122,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":140,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":495,"org.easymock.tests.MockingTest.testNiceClassMocking":221,"org.easymock.tests.MockingTest.testClassMocking":213,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":532,"org.easymock.tests2.UsageConstraintsTest.testContains":410,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":117,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":517,"org.easymock.tests2.UsageConstraintsTest.testFind":403,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":183,"org.easymock.tests.MockTypeTest.fromEasyMockClass":102,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":481,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":107,"org.easymock.tests.UsageExpectAndReturnTest.object":89,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":460,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":238,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":170,"org.easymock.tests.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":113,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":76,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":95,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":233,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":283,"org.easymock.tests.ResultTest.createThrowResultToString":525,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":441,"org.easymock.tests.MockClassControlTest.testHashCode":178,"org.easymock.tests2.EasyMockSupportTest.testVerify":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":386,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":114,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":202,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":356,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":360,"org.easymock.tests.UsageVarargTest.varargCharAccepted":237,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":267,"org.easymock.tests2.UsageTest.openCallCountByLastCall":472,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":463,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":19,"org.easymock.tests.DefaultClassInstantiatorTest.object":226,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":201,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":387,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":142,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":440,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":177,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":61,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":96,"org.easymock.tests.ReplayStateInvalidCallsTest.times":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":302,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":395,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":176,"org.easymock.tests2.UsageTest.resumeIfFailure":477,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":99,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":198,"org.easymock.tests2.StubTest.stubWithReturnValue":351,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":421,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":88,"org.easymock.tests2.SerializationTest.testAllMockedMethod":466,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":260,"org.easymock.samples.SupportTest.voteForRemovals":311,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":147,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":528,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":266,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":47,"org.easymock.tests.UsageExpectAndThrowTest.object":145,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":78,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":418,"org.easymock.tests2.DelegateToTest.testWrongClass":428,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":65,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":295,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":296,"org.easymock.tests.UsageStrictMockTest.range":24,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":486,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":459,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":509,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":209,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":223,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":57,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":157,"org.easymock.tests2.CaptureTest.testCaptureNone":329,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":489,"org.easymock.tests.UsageUnorderedTest.message":288,"org.easymock.tests.UsageVerifyTest.twoReturns":26,"org.easymock.tests.UsageVarargTest.varargByteAccepted":242,"org.easymock.tests2.ThreadingTest.testThreadSafe":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":390,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":119,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":171,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":306,"org.easymock.tests2.CaptureTest.testCapture_2617107":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":264,"org.easymock.tests2.UsageConstraintsTest.any":408,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":275,"org.easymock.tests2.StubTest.stub":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":304,"org.easymock.tests.UsageExpectAndThrowTest.longType":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":265,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":230,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":274,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":355,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":445,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests.LimitationsTest.mockNativeMethod":52,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":98,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":363,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":73,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":43,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":490,"org.easymock.tests2.NameTest.nameForMocksControl":40,"org.easymock.tests2.MockedExceptionTest.testMockedException":516,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":378,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":480,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":139,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":218,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":335,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":510,"org.easymock.tests.MockingTest.testNicePartialClassMocking":216,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":339,"org.easymock.tests2.CaptureTest.testCaptureLast":328,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":361,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":129,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":501,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":45,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":72,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":419,"org.easymock.tests.MockingTest.testTwoMocks":214,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":69,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":502,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":143,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":475,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":423,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":493,"org.easymock.samples.ExampleTest.removeNonExistingDocument":318,"org.easymock.tests.UsageStrictMockTest.differentMethods":29,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":442,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":492,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":228,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":18,"org.easymock.tests2.MockBuilderTest.testCreateMockString":514,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":173,"org.easymock.tests.UsageExpectAndThrowTest.floatType":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":380,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":375,"org.easymock.tests.ResultTest.createReturnResultToString":524,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":520,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":389,"org.easymock.tests.ResultTest.createDelegateResultToString":523,"org.easymock.samples.ExampleTest.voteAgainstRemoval":315,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":255,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":346,"org.easymock.tests.LimitationsTest.privateConstructor":51,"org.easymock.tests2.UsageConstraintsTest.testNotNull":422,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":515,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":191,"org.easymock.tests2.UsageTest.defaultResetToNice":474,"org.easymock.samples.ExampleTest.voteAgainstRemovals":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":256,"org.easymock.tests.UsageVarargTest.differentLength":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":362,"org.easymock.tests2.CallbackTest.callback":320,"org.easymock.tests2.UsageConstraintsTest.equals":402,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":14,"org.easymock.tests.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":398,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":132,"org.easymock.tests.UsageCallCountTest.tooFewCalls":33,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":497,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":225,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":491,"org.easymock.tests.UsageThrowableTest.throwCheckedException":188,"org.easymock.tests.MockingTest.testStrictClassMocking":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":500,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":193,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":496,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":499,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":49,"org.easymock.tests.ObjectMethodsTest.testHashCode":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":521,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":439,"org.easymock.tests2.NameTest.nameForNiceMock":39,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":71,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":66,"org.easymock.tests2.DependencyTest.testInterfaceMocking":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.ExampleTest.addDocument":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":391,"org.easymock.tests2.DelegateToTest.testStubDelegate":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.AnswerTest.stubAnswer":48,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":28,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":511,"org.easymock.tests.UsageVarargTest.varargLongAccepted":241,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":97,"org.easymock.tests.UsageExpectAndReturnTest.floatType":81,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":0,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":449,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":416,"org.easymock.tests.UsageThrowableTest.noUpperLimit":185,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":399,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":482,"org.easymock.tests2.SerializationTest.test":465,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":326,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":227,"org.easymock.tests2.UsageConstraintsTest.testSame":22,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":80,"org.easymock.samples.SupportTest.addDocument":310,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":498,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":56,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":381,"org.easymock.tests.GenericTest.testPackageScope":159,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":249,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":448,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":219,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":54,"org.easymock.tests2.NameTest.nameForMock":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":91,"org.easymock.tests2.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":343,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":149,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":166,"org.easymock.tests2.MockedExceptionTest.testRealException":518,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":258,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":131,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":279,"org.easymock.tests2.NameTest.nameForStrictMock":38,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":506,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":479,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":485,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":417,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":229,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":504,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":60,"org.easymock.tests2.UsageConstraintsTest.lessThan":424,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":530,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":444,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":453,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":385,"org.easymock.tests2.CaptureTest.testCaptureRightOne":331,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":488,"org.easymock.tests2.UsageConstraintsTest.testOr":405,"org.easymock.tests.UsageRangeTest.combination":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":10,"org.easymock.tests.UsageTest.wrongArguments":206,"org.easymock.tests2.MockBuilderTest.testWithConstructor":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":382,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":246,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":231,"org.easymock.tests.UsageVarargTest.varargShortAccepted":240,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":120,"org.easymock.tests2.UsageConstraintsTest.cmpTo":409,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":74,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":11,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":248,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":473,"org.easymock.tests2.CaptureTest.testCaptureFromStub":332,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":269,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":505,"org.easymock.tests.UsageTest.unexpectedCallWithArray":205,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":70,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":118,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":16,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":93,"org.easymock.tests2.UsageConstraintsTest.constraints":400,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.samples.ExampleTest.addAndChangeDocument":319,"org.easymock.tests2.ConstraintsToStringTest.notToString":529,"org.easymock.tests.UsageStrictMockTest.testVerify":111,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":308,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":108,"org.easymock.tests2.CompareToTest.testGreateThan":526,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":124,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":327,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":531,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":299,"org.easymock.tests.LimitationsTest.abstractClass":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":85,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":458,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":23,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":234}}]
