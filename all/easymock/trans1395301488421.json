[{"position":"org.easymock.internal.MockBuilder:71","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[26,27,28,29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,0,22,23,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,1,2,3,71,72,73,74,75,76,77,78,79,80,81,82,83,84,25,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,4,104,105,5,6,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,8,9,11,12,13,14,15,16,17,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,26,148,27,29,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,30,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,21,291,292,293,294,31,295,296,297,298,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.RecordState:190","failures":[0,22,38,39,41,42,45,46,47,48,49,50,51,52,56,59,62,65,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,25,85,86,87,88,89,90,91,92,94,95,96,97,99,102,104,5,6,106,107,108,300,110,119,120,121,11,122,123,124,126,128,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,301,302,176,303,177,178,304,179,180,183,305,187,189,190,192,194,195,196,197,198,199,204,206,216,223,224,225,228,229,230,231,232,260,263,264,267,268,271,306,276,277,283,285],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[307,308,309,310,311,312,313,314,315,316,290,291],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[82,216],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[67,125,131,132,186,189,318,256,265,266,269,270,274,284,285],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[34,35,36,37,56,62,63,66,67,68,74,4,105,8,12,13,14,16,17,122,125,126,127,130,131,132,134,137,139,140,142,143,149,150,151,152,184,186,188,189,190,256,263,265,266,269,270,271,278,279,280,281,282,284,285],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[319],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:90","sourceCode":"final java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,23,57,58,59,320,321,322,70,323,324,1,325,326,327,328,329,330,331,332,333,2,334,335,336,337,338,3,339,340,71,341,342,343,98,99,101,102,103,4,104,344,345,105,5,6,106,346,7,111,112,113,114,116,117,347,8,348,9,10,349,11,12,13,14,350,15,16,351,352,17,353,354,355,356,357,358,173,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,200,201,18,317,375,376,377,207,208,209,378,19,20,379,380,262,381,382,288,289,21,292,292,293,293],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[72,88,91,383],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[54,55],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[0,23,59,70,1,2,3,71,98,99,101,102,103,4,104,105,5,6,106,7,111,112,113,114,116,117,8,9,10,11,12,13,14,15,16,17,173,366,367,368,369,370,371,200,201,18,377,207,208,209,19,20,262,382,288,289,21,292,292,293,293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[374,317],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:46","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[384,385,186,386,387,265],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[384,385,186,386,387,265],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[38,40,48,74,75,77,79,80,388,90,95],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[389],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[175,205,218,219,226,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[28,390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[57,58,59,60,119,122,129,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,181,182,391,392,192,194,195,196,197,198,199,210,211,212,213,214,215,393,394,217,263,268,273,277,284],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,0,22,23,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,1,2,3,71,72,73,74,75,76,77,78,79,80,81,82,83,84,25,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,4,104,105,5,6,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,8,9,11,12,13,14,15,16,17,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,26,148,27,29,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,30,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,21,291,292,293,294,31,295,296,297,298,299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[67,125,131,132,186,189,318,256,265,266,269,270,274,284,285],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[48,61,63,67,68,75,80,81,82,25,90,91,92,94,99,6,16,126,127,132,136,138,140,141,144,145,146,176,184,189,190,192,193,195,196,197,198,199,256,270,276,284],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[90,91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests2.UsageTest.argumentsOrdered":132,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":263,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":145,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":127,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":290,"org.easymock.tests2.DelegateToTest.testReturnException":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":211,"org.easymock.tests.MockingTest.testPartialClassMocking":207,"org.easymock.tests.MockClassControlTest.testToString":368,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":153,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":1,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":121,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":179,"org.easymock.tests2.UsageTest.wrongArguments":125,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":151,"org.easymock.samples.ExampleTest.answerVsDelegate":31,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":20,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":144,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":373,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":353,"org.easymock.tests2.CaptureTest.testPrimitive":41,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":172,"org.easymock.tests.UsageTest.moreThanOneArgument":264,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":204,"org.easymock.tests.UsageTest.argumentsOrdered":270,"org.easymock.tests.UsageVarargTest.varargIntAccepted":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":261,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":56,"org.easymock.tests2.AnswerTest.answer":52,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":37,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":203,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":139,"org.easymock.tests2.DelegateToTest.testDelegate":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":168,"org.easymock.tests.LimitationsTest.mockFinalMethod":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":282,"org.easymock.tests2.CaptureTest.testCapture1_2446744":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":35,"org.easymock.tests.UsageThrowableTest.throwError":192,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":340,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":154,"org.easymock.tests2.UsageTest.niceToStrict":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":329,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":382,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":11,"org.easymock.tests2.MockBuilderTest.testCreateMock":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":336,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":310,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":384,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":162,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":140,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":394,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":149,"org.easymock.tests.UsageOverloadedMethodTest.overloading":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":338,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":85,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":229,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":275,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":25,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":47,"org.easymock.tests2.EasyMockSupportClassTest.testAll":70,"org.easymock.tests.MockClassControlTest.testEquals":372,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":170,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":354,"org.easymock.tests2.CaptureTest.testCaptureAll":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":280,"org.easymock.tests2.UsageConstraintsTest.testMatches":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":205,"org.easymock.samples.ExampleTest.voteForRemovals":298,"org.easymock.tests.UsageVarargTest.allKinds":248,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":281,"org.easymock.samples.BasicClassMockTest.testPrintContent":289,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":198,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":63,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":215,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":323,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":303,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":106,"org.easymock.samples.ExampleTest.voteForRemoval":295,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":365,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":108,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":346,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":351,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":4,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":173,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":122,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":137,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":210,"org.easymock.tests2.CaptureTest.testCaptureFirst":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":138,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":225,"org.easymock.tests2.UsageTest.moreThanOneArgument":124,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests2.CaptureTest.testCapture2_2446744":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":16,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":247,"org.easymock.tests.GenericTest.testBridgedEquals":317,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":254,"org.easymock.tests.UsageExpectAndReturnTest.longType":221,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":171,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":352,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":93,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":202,"org.easymock.tests.UsageCallCountTest.tooManyCalls":255,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":337,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":197,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":112,"org.easymock.tests.MockingTest.testNiceClassMocking":378,"org.easymock.tests.MockingTest.testClassMocking":376,"org.easymock.tests2.UsageConstraintsTest.testContains":84,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":348,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":59,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":277,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":33,"org.easymock.tests.UsageExpectAndReturnTest.object":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":143,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":242,"org.easymock.tests.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":341,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":234,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":30,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":313,"org.easymock.tests.MockClassControlTest.testHashCode":371,"org.easymock.tests2.EasyMockSupportTest.testVerify":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":331,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":393,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":34,"org.easymock.tests.UsageVarargTest.varargCharAccepted":241,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":64,"org.easymock.tests2.UsageTest.openCallCountByLastCall":128,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":146,"org.easymock.tests.DefaultClassInstantiatorTest.object":359,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":332,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":195,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":312,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":5,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":370,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":3,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":369,"org.easymock.tests2.UsageTest.resumeIfFailure":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":213,"org.easymock.tests2.StubTest.stubWithReturnValue":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":227,"org.easymock.tests2.SerializationTest.testAllMockedMethod":23,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":385,"org.easymock.samples.SupportTest.voteForRemovals":287,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":165,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":24,"org.easymock.tests.UsageExpectAndThrowTest.object":163,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DelegateToTest.testWrongClass":27,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":175,"org.easymock.tests.UsageStrictMockTest.range":189,"org.easymock.samples.ConstructorCalledMockTest.testTax":292,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":164,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":13,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":150,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":386,"org.easymock.tests2.CaptureTest.testCaptureNone":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":302,"org.easymock.tests.UsageUnorderedTest.message":256,"org.easymock.tests.UsageVerifyTest.twoReturns":285,"org.easymock.tests.UsageVarargTest.varargByteAccepted":246,"org.easymock.tests2.ThreadingTest.testThreadSafe":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":334,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":252,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":288,"org.easymock.tests2.CaptureTest.testCapture_2617107":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":182,"org.easymock.tests2.UsageConstraintsTest.any":82,"org.easymock.tests2.StubTest.stub":118,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":392,"org.easymock.tests.UsageExpectAndThrowTest.longType":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":212,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":363,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":66,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests.LimitationsTest.mockNativeMethod":262,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":237,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":309,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":357,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":69,"org.easymock.tests2.MockedExceptionTest.testMockedException":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":324,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":157,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":209,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":14,"org.easymock.tests.MockingTest.testNicePartialClassMocking":208,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":103,"org.easymock.tests2.CaptureTest.testCaptureLast":45,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":307,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":117,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests.MockingTest.testTwoMocks":377,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":161,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":131,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.tests.UsageStrictMockTest.differentMethods":190,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":314,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":361,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":300,"org.easymock.tests2.MockBuilderTest.testCreateMockString":17,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":366,"org.easymock.tests.UsageExpectAndThrowTest.floatType":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":325,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":322,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":53,"org.easymock.tests.UsageVerifyTest.twoThrows":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":2,"org.easymock.samples.ExampleTest.voteAgainstRemoval":296,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":6,"org.easymock.tests.LimitationsTest.privateConstructor":380,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":199,"org.easymock.tests2.UsageTest.defaultResetToNice":130,"org.easymock.samples.ExampleTest.voteAgainstRemovals":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":233,"org.easymock.tests.UsageVarargTest.differentLength":243,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":308,"org.easymock.tests2.CallbackTest.callback":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":344,"org.easymock.tests.UsageTest.openCallCountByLastCall":267,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":181,"org.easymock.tests.UsageCallCountTest.tooFewCalls":250,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":152,"org.easymock.tests.UsageThrowableTest.throwCheckedException":196,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":387,"org.easymock.tests.MockingTest.testStrictClassMocking":375,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":116,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":217,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":115,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":55,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":110,"org.easymock.tests2.DependencyTest.testInterfaceMocking":120,"org.easymock.samples.ExampleTest.addDocument":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":335,"org.easymock.tests2.DelegateToTest.testStubDelegate":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":339,"org.easymock.tests2.AnswerTest.stubAnswer":54,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":187,"org.easymock.tests.UsageVarargTest.varargLongAccepted":245,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":191,"org.easymock.tests.UsageExpectAndReturnTest.floatType":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":71,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":293,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests.UsageThrowableTest.noUpperLimit":193,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":342,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":43,"org.easymock.tests2.SerializationTest.test":22,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":319,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":360,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":219,"org.easymock.samples.SupportTest.addDocument":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":326,"org.easymock.tests.GenericTest.testPackageScope":200,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":230,"org.easymock.tests2.UsageStrictMockTest.differentMethods":68,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":345,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":178,"org.easymock.tests2.MockedExceptionTest.testRealException":60,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":180,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":349,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":32,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":102,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":343,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":362,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":9,"org.easymock.tests2.UsageStrictMockTest.range":67,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":355,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":347,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":136,"org.easymock.tests2.CaptureTest.testCaptureRightOne":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":330,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":176,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":99,"org.easymock.tests.UsageTest.wrongArguments":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":327,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":367,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":231,"org.easymock.tests.UsageVarargTest.varargShortAccepted":244,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":253,"org.easymock.tests2.UsageConstraintsTest.cmpTo":83,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":129,"org.easymock.tests2.CaptureTest.testCaptureFromStub":49,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":10,"org.easymock.tests.UsageTest.unexpectedCallWithArray":265,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":251,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":232,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.samples.ExampleTest.addAndChangeDocument":299,"org.easymock.tests2.ConstraintsToStringTest.notToString":389,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":291,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":279,"org.easymock.tests2.CompareToTest.testGreateThan":383,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":259,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":224,"org.easymock.tests.LimitationsTest.abstractClass":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":260,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":141,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":239}}]
