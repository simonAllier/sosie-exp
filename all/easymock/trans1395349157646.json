[{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:27","sourceCode":"-3743894206806704049L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[6,7,8,9],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[10,11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[51,52,53],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[54,55,56,57],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[58,6,7,59,60,8,9,61,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,50],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[79,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[92,63],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[93,94,76,95,96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[97,59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[41,98,43,44,45,46,99,100,47,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[102,50,103,104],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[101,68,69,70,71,106,107,108,109,110,111,72,73,112,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[23,24,25,26,114,115,116,38,39,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[117],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[101,118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests2.UsageTest.argumentsOrdered":33,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":53,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":99,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":57,"org.easymock.tests2.SerializationTest.testAllMockedMethod":104,"org.easymock.tests2.NameTest.nameForNiceMock":36,"org.easymock.tests.UsageVarargTest.allKinds":97,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":45,"org.easymock.samples.SupportTest.voteForRemovals":1,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":102,"org.easymock.tests2.AnswerTest.stubAnswer":52,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":12,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":47,"org.easymock.tests2.UsageConstraintsTest.greaterThan":56,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":27,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":43,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":61,"org.easymock.tests2.UsageTest.wrongArguments":31,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":88,"org.easymock.tests.UsageStrictMockTest.range":25,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":91,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":75,"org.easymock.tests2.UsageConstraintsTest.testNull":59,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":107,"org.easymock.tests2.SerializationTest.test":103,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":84,"org.easymock.tests2.CaptureTest.testPrimitive":71,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":117,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests2.UsageConstraintsTest.testSame":60,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests2.CaptureTest.testCaptureNone":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":96,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.GenericTest.testPackageScope":94,"org.easymock.tests2.CaptureTest.testCapture2_2446744":112,"org.easymock.tests2.UsageTest.moreThanOneArgument":30,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":87,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests.GenericTest.testBridgedEquals":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":11,"org.easymock.tests2.NameTest.nameForMock":34,"org.easymock.tests2.CaptureTest.testCapture_2617107":70,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":100,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":78,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":10,"org.easymock.tests2.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.UsageConstraintsTest.any":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":83,"org.easymock.tests2.StubTest.stub":14,"org.easymock.tests2.SerializationTest.testClass":50,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":76,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":62,"org.easymock.tests2.CaptureTest.testAnd":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":98,"org.easymock.tests2.NameTest.nameForMocksControl":37,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":38,"org.easymock.tests2.NameTest.nameForStrictMock":35,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":85,"org.easymock.tests2.UsageConstraintsTest.testFind":7,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":116,"org.easymock.tests2.CaptureTest.testCaptureLast":109,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":28,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":64,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":80,"org.easymock.tests2.UsageStrictMockTest.range":39,"org.easymock.tests2.CaptureTest.testCapture1_2446744":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":44,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":92,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":46,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":13,"org.easymock.tests.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.CaptureTest.testCaptureRightOne":72,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":49,"org.easymock.tests.UsageTest.wrongArguments":16,"org.easymock.tests2.MockBuilderTest.testCreateMockString":90,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.samples.PartialClassMockTest.testGetArea":77,"org.easymock.tests2.CompareToTest.testLessOrEqual":54,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":95,"org.easymock.tests2.UsageConstraintsTest.testNotNull":66,"org.easymock.tests2.CaptureTest.testCaptureFromStub":73,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":82,"org.easymock.tests2.MockBuilderTest.testCreateMock":86,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":81,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests2.CaptureTest.testCapture":118,"org.easymock.tests2.UsageConstraintsTest.constraints":58,"org.easymock.tests.CapturesMatcherTest.test":101,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":93,"org.easymock.tests.UsageStrictMockTest.testVerify":114,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":111,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":74,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":29,"org.easymock.tests2.CaptureTest.testCaptureAll":69}}]
