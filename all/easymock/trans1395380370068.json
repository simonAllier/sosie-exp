[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:94","sourceCode":"throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[4,9,29,12,30,31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[19,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,33,99,100,1,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,35,36,126,127,37,38,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,39,40,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,41,256,257,258,259,260,261,262,263,264,42,265,266,43,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,2,294,295,296,297,298,299,3,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,18,19,327,32,20,328,21,22,329,23,330,331,332,333,334,335,336,337,338,24,339,340,341,342,25,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,26,375,27,376,377,378,379,380,381,382,28,383,384,385,386,387,388,389,4,5,6,390,391,392,393,394,395,396,397,398,399,400,7,401,402,8,403,404,405,406,9,407,408,409,410,411,11,412,413,414,415,44,416,417,418,419,420,45,46,421,422,423,12,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,13,453,454,455,456,14,15,0,457,458,459,460,461,462,463,464,465,466,467,47,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[147,495,496],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[48,49,50,51,52,52,53,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,76,77,78,82,84,85,86,87,88,89,90,92,93,94,95,96,97,98,33,111,112,113,114,115,116,117,118,119,121,124,125,35,36,126,127,37,38,128,129,130,131,132,133,134,135,136,137,138,139,140,141,153,154,155,157,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,39,40,187,188,189,191,192,193,194,195,196,197,198,207,208,209,210,211,212,213,214,215,216,217,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,41,256,257,258,259,260,261,262,263,264,42,265,266,43,267,268,269,270,271,272,294,3,301,302,303,304,305,306,307,308,309,310,311,312,313,321,322,323,324,325,326,18,19,32,20,328,21,22,329,23,330,331,332,333,334,335,336,337,338,24,339,340,341,342,25,343,344,351,358,359,360,361,362,368,26,375,27,376,377,378,379,380,381,382,28,383,384,385,388,389,4,5,6,390,391,392,393,394,395,396,397,398,399,400,401,404,405,406,407,410,411,412,413,414,415,44,416,417,418,419,420,45,46,421,422,423,425,426,427,428,429,430,431,433,434,435,436,437,438,439,440,442,445,446,447,448,451,452,13,453,455,456,14,0,457,458,460,461,462,463,464,465,466,467,47,468,469,473,476,486,492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[498,499,500,501,33,125,186,39,40,265,43,267,415,466,47,468],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[48,78,219,224,4,400,401,402,404,405,406,407,410,411,412,440,446,447,450,476,486,492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[48,49,50,51,52,52,53,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,33,99,100,1,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,35,36,126,127,37,38,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,39,40,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,41,256,257,258,259,260,261,262,263,264,42,265,266,43,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,2,294,295,296,297,298,299,3,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,318,319,320,321,322,323,324,325,326,18,19,327,32,20,328,21,22,329,23,330,331,332,333,334,335,336,337,338,24,339,340,341,342,25,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,26,375,27,376,377,378,379,380,381,382,28,383,384,385,386,387,388,389,4,5,6,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,44,416,417,418,419,420,45,46,421,422,423,12,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,13,453,455,456,14,0,457,458,459,460,461,462,463,464,465,466,467,47,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[90,92,93,125,186,39,40,265,267,268,415,460,461,462,463,466,468,469],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[336,417,438],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[401,411,446,450,476],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,33,99,100,1,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,35,36,126,127,37,38,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,39,40,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,41,256,257,258,259,260,261,262,263,264,42,265,266,43,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,2,294,295,296,297,298,299,3,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,318,319,320,321,322,323,324,325,326,18,19,327,32,20,328,21,22,329,23,330,331,332,333,334,335,336,337,338,24,339,340,341,342,25,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,26,375,27,376,377,378,379,380,381,382,28,383,384,385,386,387,388,389,4,5,6,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,44,416,417,418,419,420,45,46,421,422,423,12,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,13,453,455,456,14,0,457,458,459,460,461,462,463,464,465,466,467,47,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[48,49,50,51,52,52,53,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,76,77,78,82,84,85,86,87,88,89,90,92,93,94,95,97,98,33,99,111,112,113,114,115,116,117,118,119,121,124,125,36,126,127,37,38,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,153,154,155,157,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,39,40,187,188,189,191,192,193,194,195,196,197,198,199,207,208,209,210,211,212,213,214,215,216,217,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,41,256,257,258,263,264,42,265,266,43,267,268,269,270,271,272,294,3,301,302,303,304,305,306,307,308,309,310,311,312,313,321,322,323,324,325,326,18,19,32,20,328,21,22,329,23,330,331,332,333,334,335,336,337,338,24,339,340,341,342,25,343,344,351,358,359,360,361,362,368,26,375,27,376,377,378,379,380,381,382,28,383,384,385,388,389,4,5,6,390,391,392,393,394,395,396,401,404,406,407,411,413,414,415,44,416,417,418,419,420,45,46,421,422,423,425,426,427,428,429,430,431,433,434,435,436,437,438,439,440,442,445,446,447,448,451,452,13,453,455,456,14,0,457,458,460,461,462,463,464,465,466,467,47,468,469,473,476,486,492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[115,161,162,169,176,249],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":19,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":124,"org.easymock.tests2.UsageTest.argumentsOrdered":46,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":311,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":289,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":417,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":51,"org.easymock.tests2.DelegateToTest.testReturnException":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":85,"org.easymock.tests.MockingTest.testPartialClassMocking":154,"org.easymock.tests.MockClassControlTest.testToString":201,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":459,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":480,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":476,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":227,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":498,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":389,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":329,"org.easymock.tests2.UsageTest.wrongArguments":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":211,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":261,"org.easymock.samples.ExampleTest.answerVsDelegate":58,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":224,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":159,"org.easymock.tests2.UsageConstraintsTest.testNull":20,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":437,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":206,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":310,"org.easymock.tests2.CaptureTest.testPrimitive":376,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":215,"org.easymock.tests.UsageTest.moreThanOneArgument":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":246,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":436,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":114,"org.easymock.tests.UsageTest.argumentsOrdered":38,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":65,"org.easymock.tests.UsageVarargTest.varargIntAccepted":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":356,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":185,"org.easymock.tests.ReplayStateInvalidUsageTest.times":106,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":368,"org.easymock.tests2.DependencyTest.testClassMocking":386,"org.easymock.tests2.AnswerTest.answer":425,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":399,"org.easymock.tests2.CaptureTest.testAnd":26,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":221,"org.easymock.tests2.UsageTest.strictResetToDefault":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":445,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":8,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":305,"org.easymock.tests2.DelegateToTest.testDelegate":395,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":242,"org.easymock.tests.LimitationsTest.mockFinalMethod":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":74,"org.easymock.tests2.DependencyTest.testClassMockingSupport":387,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":216,"org.easymock.tests2.CaptureTest.testCapture1_2446744":377,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":397,"org.easymock.tests.UsageThrowableTest.throwError":134,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":1,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":223,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":110,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":116,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":497,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":494,"org.easymock.samples.PartialClassMockTest.testGetArea":48,"org.easymock.tests.MockingTest.testInterfaceMocking":156,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":481,"org.easymock.tests2.UsageTest.niceToStrict":416,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":228,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":279,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":404,"org.easymock.tests2.MockBuilderTest.testCreateMock":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":236,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":306,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":220,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":133,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":259,"org.easymock.tests.UsageOverloadedMethodTest.overloading":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":485,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":253,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":172,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":117,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":495,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":333,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":382,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":190,"org.easymock.tests2.EasyMockSupportClassTest.testAll":473,"org.easymock.tests.MockClassControlTest.testEquals":205,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":72,"org.easymock.tests2.CaptureTest.testCaptureAll":375,"org.easymock.tests.MockNameTest.defaultName":123,"org.easymock.tests2.UsageConstraintsTest.testMatches":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":115,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":99,"org.easymock.samples.ExampleTest.voteForRemovals":62,"org.easymock.tests.UsageVarargTest.allKinds":198,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":186,"org.easymock.samples.BasicClassMockTest.testPrintContent":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":73,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":140,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":464,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":353,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":149,"org.easymock.tests2.UsageConstraintsTest.greaterThan":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":208,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":448,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":150,"org.easymock.samples.ExampleTest.voteForRemoval":59,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":449,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":359,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":225,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":440,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":413,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":111,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":303,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":84,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":390,"org.easymock.tests2.CaptureTest.testCaptureFirst":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":304,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":422,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":168,"org.easymock.tests2.UsageTest.moreThanOneArgument":415,"org.easymock.tests2.CaptureTest.testCapture2_2446744":384,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":361,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":296,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":197,"org.easymock.tests.GenericTest.testBridgedEquals":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":97,"org.easymock.tests.UsageExpectAndReturnTest.longType":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":70,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":301,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":245,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":247,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":341,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":112,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":257,"org.easymock.tests.UsageCallCountTest.tooManyCalls":98,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":452,"org.easymock.tests.MockingTest.testNiceClassMocking":160,"org.easymock.tests.MockingTest.testClassMocking":152,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":91,"org.easymock.tests2.UsageConstraintsTest.testContains":332,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":323,"org.easymock.tests2.UsageConstraintsTest.testFind":32,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":119,"org.easymock.tests.MockTypeTest.fromEasyMockClass":222,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":433,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":263,"org.easymock.tests.UsageExpectAndReturnTest.object":171,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":309,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":192,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":276,"org.easymock.tests.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":284,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":120,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":177,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":252,"org.easymock.tests.MockClassControlTest.testHashCode":204,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":347,"org.easymock.tests2.EasyMockSupportTest.testVerify":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":483,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":132,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":396,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":345,"org.easymock.tests.UsageVarargTest.varargCharAccepted":191,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":142,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":300,"org.easymock.tests2.UsageTest.openCallCountByLastCall":418,"org.easymock.tests.DefaultClassInstantiatorTest.object":143,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":312,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":131,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":274,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":484,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":346,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":446,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":233,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":492,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":202,"org.easymock.tests2.UsageTest.resumeIfFailure":421,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":219,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":87,"org.easymock.tests2.StubTest.stubWithReturnValue":457,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":170,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":342,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":294,"org.easymock.samples.SupportTest.voteForRemovals":56,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":239,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":3,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":426,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":122,"org.easymock.tests.UsageExpectAndThrowTest.object":237,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":339,"org.easymock.tests2.DelegateToTest.testWrongClass":393,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":248,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":249,"org.easymock.tests.UsageStrictMockTest.range":43,"org.easymock.samples.ConstructorCalledMockTest.testTax":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":319,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":470,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":108,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":260,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":272,"org.easymock.tests2.CaptureTest.testCaptureNone":381,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.UsageVerifyTest.twoReturns":40,"org.easymock.tests.UsageVarargTest.varargByteAccepted":196,"org.easymock.tests2.ThreadingTest.testThreadSafe":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":487,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":95,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":49,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":277,"org.easymock.tests2.CaptureTest.testCapture_2617107":27,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":298,"org.easymock.tests2.UsageConstraintsTest.any":330,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":105,"org.easymock.tests2.StubTest.stub":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":86,"org.easymock.tests.UsageExpectAndThrowTest.longType":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":299,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":147,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":104,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":467,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":351,"org.easymock.tests.LimitationsTest.mockNativeMethod":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":180,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":365,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":469,"org.easymock.tests2.NameTest.nameForMocksControl":463,"org.easymock.tests2.MockedExceptionTest.testMockedException":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":475,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":432,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":231,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":434,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":407,"org.easymock.tests.MockingTest.testNicePartialClassMocking":155,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":439,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":30,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":363,"org.easymock.tests2.CaptureTest.testCaptureLast":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":217,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":14,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":22,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":340,"org.easymock.tests.MockingTest.testTwoMocks":153,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":235,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":343,"org.easymock.samples.ExampleTest.removeNonExistingDocument":63,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":102,"org.easymock.tests.UsageStrictMockTest.differentMethods":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":348,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":145,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":360,"org.easymock.tests2.MockBuilderTest.testCreateMockString":412,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":477,"org.easymock.tests.UsageExpectAndThrowTest.floatType":229,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":428,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":424,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":486,"org.easymock.samples.ExampleTest.voteAgainstRemoval":60,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":290,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":447,"org.easymock.tests.LimitationsTest.privateConstructor":81,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":17,"org.easymock.tests2.UsageConstraintsTest.testNotNull":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":141,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":321,"org.easymock.tests2.UsageTest.defaultResetToNice":420,"org.easymock.samples.ExampleTest.voteAgainstRemovals":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":291,"org.easymock.tests.UsageVarargTest.differentLength":193,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":364,"org.easymock.tests2.CallbackTest.callback":458,"org.easymock.tests2.UsageConstraintsTest.equals":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":443,"org.easymock.tests.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":213,"org.easymock.tests.UsageCallCountTest.tooFewCalls":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":453,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":262,"org.easymock.tests.UsageThrowableTest.throwCheckedException":138,"org.easymock.tests.MockingTest.testStrictClassMocking":151,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":456,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":130,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":107,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":455,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":430,"org.easymock.tests.ObjectMethodsTest.testHashCode":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":31,"org.easymock.tests2.NameTest.nameForNiceMock":462,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":362,"org.easymock.tests2.DependencyTest.testInterfaceMocking":388,"org.easymock.samples.ExampleTest.addDocument":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.DelegateToTest.testStubDelegate":392,"org.easymock.tests2.AnswerTest.stubAnswer":429,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":265,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":408,"org.easymock.tests.UsageVarargTest.varargLongAccepted":195,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":179,"org.easymock.tests.UsageExpectAndReturnTest.floatType":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":423,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":53,"org.easymock.tests.UsageThrowableTest.noUpperLimit":135,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":254,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":355,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":326,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":314,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":378,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":162,"org.easymock.tests2.UsageConstraintsTest.testSame":328,"org.easymock.samples.SupportTest.addDocument":55,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":454,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":478,"org.easymock.tests.GenericTest.testPackageScope":76,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":354,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":158,"org.easymock.tests2.NameTest.nameForMock":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":173,"org.easymock.tests2.UsageStrictMockTest.differentMethods":468,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":444,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":241,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":273,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":210,"org.easymock.tests2.MockedExceptionTest.testRealException":324,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":320,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":29,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":292,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":212,"org.easymock.tests2.NameTest.nameForStrictMock":461,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":431,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":438,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":318,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":499,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":146,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":24,"org.easymock.tests.ErrorMessageTest.testGetters":500,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":401,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":482,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.UsageConstraintsTest.testOr":21,"org.easymock.tests.UsageRangeTest.combination":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":435,"org.easymock.tests.UsageTest.wrongArguments":36,"org.easymock.tests2.MockBuilderTest.testWithConstructor":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":479,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":280,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":148,"org.easymock.tests.UsageVarargTest.varargShortAccepted":194,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":96,"org.easymock.tests2.UsageConstraintsTest.cmpTo":331,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":282,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":419,"org.easymock.tests2.CaptureTest.testCaptureFromStub":383,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":100,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":402,"org.easymock.tests.UsageTest.unexpectedCallWithArray":35,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":94,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":175,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":266,"org.easymock.samples.ExampleTest.addAndChangeDocument":64,"org.easymock.tests.UsageStrictMockTest.testVerify":269,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":54,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":71,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":167,"org.easymock.tests.LimitationsTest.abstractClass":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":501,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":307}}]
