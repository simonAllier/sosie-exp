[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"toStringMethod"}},{"position":"org.easymock.internal.LastControl:61","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[20,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.Range:52","failures":[22,23,24,25,26,27,28],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[29,30,31,32,33,34,3,4,5,35,36,37,38,39,40,41,42,8,10,11,13,43,17,44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,59,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,0,2,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[100,101,102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"failures":[3,35,36,41,42,44],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[103,104,105,106,107,108,109,110,111,112,22,23,113,114,29,30,31,32,33,115,116,117,34,3,4,5,35,118,119,120,121,36,122,45,123,124,125,126,46,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,24,158,159,47,160,161,162,163,164,165,37,166,25,26,167,168,169,170,171,172,173,48,49,50,174,175,51,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,38,202,203,204,52,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,6,39,40,237,238,239,41,42,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,53,54,55,263,56,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,100,101,102,313,314,57,58,59,60,61,315,316,317,318,319,320,321,322,323,324,325,7,8,9,326,327,328,329,10,11,330,12,331,332,13,333,334,62,335,336,337,63,64,338,65,66,67,68,339,69,340,341,70,71,72,73,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,74,75,76,77,361,362,78,79,363,364,365,366,367,368,369,43,370,27,28,371,0,1,2,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,14,15,393,394,16,395,17,18,396,397,44,398,399,400,401,402,403,404,405,406,407,408,409,410,19,411,412,413,414,415,416,417,418,419,420,421,422,423,424,80,425,82,83,426,427,84,85,86,428,87,429,430,88,89,431,91,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,92,447,448,93,449,450,451,452,453,454,455,456,457,94,458,459,460,461,462,95,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,96,487,488,489,490,491,492,20,21],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[103,106,374,381],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[272,273,274,275,277,279],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[7,9,12,14,15,17,18,397,406],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[428,487,493,494,495,496,497],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[165,498,499,302,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[34,5,158,161,163,165,37,25,26,169,194,195,197,198,199,200,201,41,303,306,307,7,8,9,326,327,328,329,10,330,12,331,332,13,337,368,43,27,28,373,374,375,376,377,378,380,381,382,383,391,392,14,15,394,395,17,18,396,44,399,400,401,402,403,404,405,406,407,408,410,411,412,89,470,474,475,476,480,481,20],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[502,503,504],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[7,9,12,14,15,16,17,18,397,406,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[146,170,172,189,482],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[19],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[505],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[22,23,29,30,31,32,33,34,3,4,5,35,36,24,158,159,47,160,161,162,164,165,37,166,25,26,167,169,171,172,48,49,194,195,196,197,198,199,200,201,38,52,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,233,234,235,236,6,39,40,41,247,248,249,250,252,253,254,256,257,259,54,55,56,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,314,57,58,61,315,316,317,318,319,320,321,323,324,325,7,8,9,326,327,328,329,10,11,330,12,332,13,62,336,337,63,64,338,65,66,67,69,72,356,357,358,359,360,74,75,76,77,362,78,79,369,43,370,27,28,371,0,1,2,372,373,374,375,376,377,378,380,381,382,383,384,386,387,388,390,391,392,14,15,394,16,395,17,18,396,44,398,399,400,401,402,403,404,405,406,407,408,409,410,19,411,412,418,84,86,87,437,92,93,94,95,467,468,470,471,472,473,474,475,476,477,478,480,481,482,483,484,486,96,489,492,20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[158,159,165,25,38,260,506,302,303,306,307,27,474,480,481],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:191","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>;\n    try {\n        java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n    }\n    T T;\n    try {\n        java.lang.reflect.Constructor<?>.setAccessible(true);\n        T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n    } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n    }\n    return T;\n} else {\n    net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory;\n    try {\n        net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n    }\n    net.sf.cglib.proxy.Factory.getCallback(0);\n    return ((T)(net.sf.cglib.proxy.Factory));\n}","type":"CtIfImpl"},"failures":[45,46,47,173,48,49,50,174,175,51,176,177,178,179,180,181,203,52,261,262,53,54,55,56,266,271,272,273,274,275,276,277,278,279,57,58,59,59,60,60,61,333,334,62,63,64,65,66,67,68,69,340,341,70,71,72,73,342,343,345,349,353,74,75,76,77,78,79,0,2,80,425,82,83,426,427,84,85,86,428,87,430,88,89,431,91,444,445,446,92,447,448,93,449,450,451,452,453,454,455,456,457,94,458,459,460,461,462,95,463,464,96,487,488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[507,508,509,510,24,158,159,37,25,26,38,301,43,27,28,473],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[158,198,199],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[110,269,313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:210","sourceCode":"return org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[428,511,487,493,494,495,512,496,497,513],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[29,30,31,32,33,34,3,4,5,35,36,165,37,38,6,39,40,41,42,7,8,9,326,327,328,329,10,11,330,12,331,332,13,69,359,43,391,392,14,15,394,16,395,17,18,396,397,44,398,399,400,401,402,403,404,405,406,407,408,409,410,19,411,412,469,484,486],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[515,0,1,2],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":15,"org.easymock.tests2.UsageTest.argumentsOrdered":481,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":300,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":382,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":139,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":476,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":315,"org.easymock.tests2.DelegateToTest.testReturnException":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":119,"org.easymock.tests.MockingTest.testPartialClassMocking":54,"org.easymock.tests.MockClassControlTest.testToString":176,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":344,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":452,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":206,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":507,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":468,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":396,"org.easymock.tests2.UsageTest.wrongArguments":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":34,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":443,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":311,"org.easymock.samples.ExampleTest.answerVsDelegate":317,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":46,"org.easymock.tests2.UsageConstraintsTest.testNull":16,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":265,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":65,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":181,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":381,"org.easymock.tests2.CaptureTest.testPrimitive":326,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":225,"org.easymock.tests.UsageTest.moreThanOneArgument":301,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":242,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":112,"org.easymock.tests.UsageTest.argumentsOrdered":307,"org.easymock.tests.UsageVarargTest.varargIntAccepted":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":497,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":351,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":33,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":437,"org.easymock.tests.ReplayStateInvalidUsageTest.times":190,"org.easymock.tests2.DependencyTest.testClassMocking":465,"org.easymock.tests2.AnswerTest.answer":489,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":367,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":124,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests2.UsageTest.strictResetToDefault":472,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":376,"org.easymock.tests2.DelegateToTest.testDelegate":390,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":221,"org.easymock.tests.LimitationsTest.mockFinalMethod":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":157,"org.easymock.tests2.DependencyTest.testClassMockingSupport":466,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":115,"org.easymock.tests2.CaptureTest.testCapture1_2446744":327,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":365,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":184,"org.easymock.tests.UsageThrowableTest.throwError":194,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":126,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":424,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":464,"org.easymock.samples.PartialClassMockTest.testGetArea":61,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":185,"org.easymock.tests.MockingTest.testInterfaceMocking":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":30,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":269,"org.easymock.tests2.UsageTest.niceToStrict":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":453,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":207,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":129,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":84,"org.easymock.tests2.MockBuilderTest.testCreateMock":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":460,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":440,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":215,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":377,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":123,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":102,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":245,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":309,"org.easymock.tests.UsageOverloadedMethodTest.overloading":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":457,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":401,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":257,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":291,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":400,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":330,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":229,"org.easymock.tests.MockClassControlTest.testEquals":180,"org.easymock.tests2.EasyMockSupportClassTest.testAll":92,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":223,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":155,"org.easymock.tests2.CaptureTest.testCaptureAll":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":366,"org.easymock.tests.MockNameTest.defaultName":202,"org.easymock.tests2.UsageConstraintsTest.testMatches":402,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":243,"org.easymock.samples.ExampleTest.voteForRemovals":321,"org.easymock.tests.UsageVarargTest.allKinds":6,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":58,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":200,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":420,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":513,"org.easymock.tests2.UsageConstraintsTest.greaterThan":404,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":447,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":170,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":73,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":279,"org.easymock.samples.ExampleTest.voteForRemoval":318,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":342,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":357,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":127,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":68,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":471,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":47,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":374,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":118,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":385,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":375,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":483,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":287,"org.easymock.tests2.UsageTest.moreThanOneArgument":473,"org.easymock.tests2.CaptureTest.testCapture2_2446744":332,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":147,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":89,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":236,"org.easymock.tests.GenericTest.testBridgedEquals":174,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":252,"org.easymock.tests.UsageExpectAndReturnTest.longType":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":153,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":372,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":224,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":409,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":222,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":240,"org.easymock.tests.UsageCallCountTest.tooManyCalls":253,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":75,"org.easymock.tests.MockingTest.testNiceClassMocking":266,"org.easymock.tests.MockingTest.testClassMocking":262,"org.easymock.tests2.UsageConstraintsTest.testContains":399,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":81,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":246,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":62,"org.easymock.tests2.UsageConstraintsTest.testFind":394,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":162,"org.easymock.tests.MockTypeTest.fromEasyMockClass":125,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":486,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests.UsageExpectAndReturnTest.object":290,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":380,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":494,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":231,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":106,"org.easymock.tests.UsageTest.exactCallCountByLastCall":308,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":134,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":109,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":487,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":226,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":414,"org.easymock.tests.MockClassControlTest.testHashCode":179,"org.easymock.tests2.EasyMockSupportTest.testVerify":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":455,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":23,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":101,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":364,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":469,"org.easymock.tests.UsageVarargTest.varargCharAccepted":230,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":271,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":152,"org.easymock.tests2.UsageTest.openCallCountByLastCall":477,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":503,"org.easymock.tests.DefaultClassInstantiatorTest.object":272,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":383,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":100,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":104,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":456,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":413,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":212,"org.easymock.tests.CapturesMatcherTest.test":505,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":237,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":95,"org.easymock.tests2.UsageTest.resumeIfFailure":482,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":121,"org.easymock.tests2.StubTest.stubWithReturnValue":337,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":428,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":410,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":289,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":145,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":501,"org.easymock.samples.SupportTest.voteForRemovals":325,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":218,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":515,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":151,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":490,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":111,"org.easymock.tests.UsageExpectAndThrowTest.object":216,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":407,"org.easymock.tests2.DelegateToTest.testWrongClass":388,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":39,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":40,"org.easymock.tests.UsageStrictMockTest.range":25,"org.easymock.samples.ConstructorCalledMockTest.testTax":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":354,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":379,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":217,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":444,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":192,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":310,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":498,"org.easymock.tests2.CaptureTest.testCaptureNone":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":270,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":159,"org.easymock.tests.UsageVarargTest.varargByteAccepted":235,"org.easymock.tests2.ThreadingTest.testThreadSafe":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":458,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":250,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":107,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":57,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":5,"org.easymock.tests2.UsageConstraintsTest.any":44,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":189,"org.easymock.tests2.StubTest.stub":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":120,"org.easymock.tests.UsageExpectAndThrowTest.longType":209,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":276,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":188,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":370,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":418,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":52,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":299,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":434,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":99,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":371,"org.easymock.tests2.NameTest.nameForMocksControl":348,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":436,"org.easymock.tests2.MockedExceptionTest.testMockedException":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":448,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":305,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":485,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":210,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":63,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":87,"org.easymock.tests.MockingTest.testNicePartialClassMocking":55,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":432,"org.easymock.tests2.CaptureTest.testCaptureLast":10,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":116,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":408,"org.easymock.tests.MockingTest.testTwoMocks":53,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":214,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":480,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":411,"org.easymock.samples.ExampleTest.removeNonExistingDocument":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":439,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":186,"org.easymock.tests.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":415,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":274,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":358,"org.easymock.tests2.MockBuilderTest.testCreateMockString":91,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":449,"org.easymock.tests.UsageExpectAndThrowTest.floatType":208,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":446,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":492,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":488,"org.easymock.tests.UsageVerifyTest.twoThrows":158,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":94,"org.easymock.samples.ExampleTest.voteAgainstRemoval":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":140,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":268,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":72,"org.easymock.tests.LimitationsTest.privateConstructor":204,"org.easymock.tests2.UsageConstraintsTest.testNotNull":19,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":201,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":333,"org.easymock.tests2.UsageTest.defaultResetToNice":479,"org.easymock.samples.ExampleTest.voteAgainstRemovals":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":295,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":433,"org.easymock.tests.UsageVarargTest.differentLength":232,"org.easymock.tests2.CallbackTest.callback":470,"org.easymock.tests2.UsageConstraintsTest.equals":393,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":340,"org.easymock.tests.UsageTest.openCallCountByLastCall":304,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":391,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":4,"org.easymock.tests.UsageCallCountTest.tooFewCalls":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":312,"org.easymock.tests.UsageThrowableTest.throwCheckedException":198,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":499,"org.easymock.tests.MockingTest.testStrictClassMocking":261,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":438,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":76,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":362,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":21,"org.easymock.tests2.CompareToTest.testGreateOrEqual":514,"org.easymock.tests.ObjectMethodsTest.testHashCode":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":496,"org.easymock.tests2.NameTest.nameForNiceMock":347,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":360,"org.easymock.tests2.DependencyTest.testInterfaceMocking":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":495,"org.easymock.samples.ExampleTest.addDocument":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":463,"org.easymock.tests2.DelegateToTest.testStubDelegate":387,"org.easymock.tests2.AnswerTest.stubAnswer":20,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":37,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":429,"org.easymock.tests.UsageVarargTest.varargLongAccepted":234,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":138,"org.easymock.tests.UsageExpectAndReturnTest.floatType":282,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":96,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":422,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":405,"org.easymock.tests.UsageThrowableTest.noUpperLimit":195,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":392,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":349,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":328,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":273,"org.easymock.tests2.UsageConstraintsTest.testSame":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":281,"org.easymock.samples.SupportTest.addDocument":324,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":361,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":450,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":133,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":421,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":264,"org.easymock.tests2.NameTest.nameForMock":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":431,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":341,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":284,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":220,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":172,"org.easymock.tests2.MockedExceptionTest.testRealException":335,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":143,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":355,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":142,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":3,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":193,"org.easymock.tests2.NameTest.nameForStrictMock":346,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":427,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":504,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":484,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":353,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":508,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":406,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":275,"org.easymock.tests.ErrorMessageTest.testGetters":509,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":82,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":412,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":417,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":454,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":64,"org.easymock.tests.UsageTest.wrongArguments":303,"org.easymock.tests2.MockBuilderTest.testWithConstructor":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":451,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":51,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":293,"org.easymock.tests.UsageVarargTest.varargShortAccepted":233,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":277,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":251,"org.easymock.tests2.UsageConstraintsTest.cmpTo":398,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":132,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":478,"org.easymock.tests2.CaptureTest.testCaptureFromStub":331,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":183,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":83,"org.easymock.tests.UsageTest.unexpectedCallWithArray":302,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":165,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":294,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.UsageConstraintsTest.constraints":14,"org.easymock.samples.ExampleTest.addAndChangeDocument":323,"org.easymock.tests.UsageStrictMockTest.testVerify":168,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":314,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":154,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":329,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":31,"org.easymock.tests.LimitationsTest.abstractClass":203,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":32,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":510,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":378}}]
