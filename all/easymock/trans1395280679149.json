[{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,0,56,1,2,4,5,6,57,7,9,11,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[164,165,166],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[167,168,169,169,170,170],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[171,172,173,174,175,176,177],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[13,14,15,16,17,18,19,178,20,21,22,23,179,180,181,25,182,183,184,185,26,27,28,29,186,30,187,188,31,189,190,32,33,34,36,191,192,193,194,37,38,39,195,40,41,43,44,45,46,47,48,49,196,50,197,198,199,200,51,52,201,0,56,2,3,6,57,7,9,202,11,58,59,203,60,61,204,64,65,67,68,69,70,71,205,72,206,74,207,208,209,210,211,212,79,81,82,83,84,85,86,87,91,94,95,96,97,99,101,213,103,104,105,106,107,214,215,216,217,218,108,109,219,120,220,122,221,222,223,224,123,124,225,226,227,137,228,142,143,229,230,231,232,233,234,235,149,150,236,151,237,238,239,240,152,241,242,243,244,153,245,246,247,248,249,250,157,158,159,163],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[251,194,252,253,37,254,38,39,255,256,195,257,40,42,43,44,46,47,48,258,49,168,259,260,196,50,197,261,262,263,264,265,266,267,268,269,60,61,177,270,271,272,67,273,274,68,275,276,277,278,279,280,281,282,283,69,284,285,286,287,288,70,289,290,81,82,83,84,86,87,88,89,169,169,170,170,91,291,120,121,220,292,293,294,295,296,297,298,299,300,301,302,303,304,137,305,145,306,307,308,309,310,311,312,313,314,315,157,158,159,316],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[29,317,49],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[318,319,320,321,140,322],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[138,323],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[324],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[325,326,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[204,64,65,206,138,228,142,143,328,323,329,330,230,249,156,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[331,332,333,334,14,16,18,19,20,21,181,31,251,194,252,38,39,256,195,257,44,260,197,262,335,204,63,64,65,66,71,336,205,206,73,74,75,76,77,210,211,79,337,80,82,83,86,87,338,122,339,340,341,295,296,297,342,343,132,344,135,136,301,345,346,302,347,348,138,349,140,228,141,142,143,144,229,230,322,146,147,148,233,154,155,249,156,250,350,351,352,163,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[18,74],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[251,354,194,252,355,253,37,254,38,171,39,356,255,256,195,357,257,40,258,168,196,50,262,268,61,177,358,68,69,70,169,170,91,291,220,301,302],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[183],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[331,332,333,334,204,65,66,206,342,343,132,228,143,144,230,249,156,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[331,332,333,334,183,184,28,29,191,192,55,204,65,205,206,73,207,208,76,77,211,359,360,213,219,110,119,120,132,134,136,138,140,228,143,229,230,146,231,232,147,148,233,249,156,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[331,332,333,334,14,16,18,19,20,21,181,31,251,194,252,38,39,256,195,257,44,260,197,262,335,204,63,64,65,66,71,336,205,206,73,74,75,76,77,210,211,79,337,80,82,83,86,87,338,122,339,340,341,295,296,297,342,343,132,344,135,136,301,345,346,302,347,348,138,349,140,228,141,142,143,144,229,230,322,146,147,148,233,154,155,249,156,250,350,351,352,163,353],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Invocation:99","failures":[21,23,28,37,91,94,96,97,99,100,361,122],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[324],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[318,319,320,321,140],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[257,262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[46,47,48,197,4,5,362,203,335,62,204,63,64,65,66,72,363,364,80,81,110,111,112,113,114,338,115,116,117,118,119,120,122,221,222,223,349,139,140,228,141,142,143,144,365,313,366],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[181,25,185,26,367,32,0,1,9],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[307,311],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matched"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[368],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[13,14,15,16,17,18,19,178,20,21,22,23,179,180,181,25,182,183,184,185,26,27,28,29,186,30,187,188,31,189,190,32,33,34,36,191,192,193,194,37,38,39,195,40,41,43,44,45,46,47,48,49,196,50,197,198,199,200,51,52,201,0,56,2,3,6,57,7,9,202,11,58,59,203,60,61,204,64,65,67,68,69,70,71,205,72,206,74,207,208,209,210,211,359,212,79,81,82,83,84,85,86,87,91,94,95,96,97,99,101,213,103,104,105,106,107,214,215,216,217,218,108,109,219,120,122,221,222,223,224,123,124,225,226,227,137,228,142,143,229,230,231,232,233,234,235,149,150,236,151,237,238,239,240,152,241,242,243,244,153,245,246,247,248,249,250,157,158,159,163],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[37,196,50,369,370,371],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[372],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[181,25,183,185,26,367,32,191,0,1,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":25,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":229,"org.easymock.tests2.UsageTest.argumentsOrdered":77,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":337,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":75,"org.easymock.tests2.StubTest.stubWithReturnValue":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":171,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":240,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":36,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests2.DelegateToTest.testReturnException":53,"org.easymock.tests.MockingTest.testPartialClassMocking":157,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":319,"org.easymock.samples.SupportTest.voteForRemovals":94,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":291,"org.easymock.tests.MockClassControlTest.testToString":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":278,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":68,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":368,"org.easymock.tests.UsageExpectAndThrowTest.object":130,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":328,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":59,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":33,"org.easymock.tests2.DelegateToTest.testWrongClass":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":172,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":227,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":27,"org.easymock.tests2.UsageTest.wrongArguments":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":123,"org.easymock.tests.UsageStrictMockTest.range":142,"org.easymock.samples.ConstructorCalledMockTest.testTax":169,"org.easymock.samples.ExampleTest.answerVsDelegate":360,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":178,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":81,"org.easymock.tests2.UsageConstraintsTest.testNull":183,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":46,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":300,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":21,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":38,"org.easymock.tests2.CaptureTest.testPrimitive":2,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":270,"org.easymock.tests.UsageTest.moreThanOneArgument":230,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":147,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":45,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":320,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests.UsageUnorderedTest.message":138,"org.easymock.tests.UsageVerifyTest.twoReturns":250,"org.easymock.tests.UsageVarargTest.varargByteAccepted":117,"org.easymock.tests2.ThreadingTest.testThreadSafe":198,"org.easymock.tests.UsageTest.argumentsOrdered":148,"org.easymock.tests.UsageVarargTest.varargIntAccepted":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":284,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":134,"org.easymock.tests.InvocationTest.testEquals":361,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":340,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":214,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":126,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":254,"org.easymock.tests2.UsageConstraintsTest.any":28,"org.easymock.tests2.StubTest.stub":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":218,"org.easymock.tests.UsageExpectAndThrowTest.longType":128,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":310,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":165,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":63,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":79,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":71,"org.easymock.tests.LimitationsTest.mockNativeMethod":137,"org.easymock.tests2.DependencyTest.testClassMocking":266,"org.easymock.tests2.AnswerTest.answer":359,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":248,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":220,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":367,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":370,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":72,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":355,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":260,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests2.NameTest.nameForMocksControl":334,"org.easymock.tests2.MockedExceptionTest.testMockedException":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":222,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":17,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":232,"org.easymock.tests2.DelegateToTest.testDelegate":55,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":159,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":39,"org.easymock.tests.MockingTest.testNicePartialClassMocking":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":131,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":48,"org.easymock.tests2.CompareToTest.testNotComparable":324,"org.easymock.tests.LimitationsTest.mockFinalMethod":305,"org.easymock.tests2.CompareToTest.testCompareEqual":317,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":155,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":87,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":34,"org.easymock.tests.MockingTest.testTwoMocks":315,"org.easymock.tests2.DependencyTest.testClassMockingSupport":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":154,"org.easymock.tests2.CaptureTest.testCapture1_2446744":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":234,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":76,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":192,"org.easymock.tests.UsageThrowableTest.throwError":101,"org.easymock.tests.UsageStrictMockTest.differentMethods":143,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":346,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":308,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":200,"org.easymock.tests2.MockBuilderTest.testCreateMockString":257,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":275,"org.easymock.tests.UsageExpectAndThrowTest.floatType":127,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":272,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":358,"org.easymock.tests.UsageVerifyTest.twoThrows":156,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":69,"org.easymock.samples.PartialClassMockTest.testGetArea":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":215,"org.easymock.samples.ExampleTest.voteAgainstRemoval":97,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":50,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":279,"org.easymock.tests2.UsageTest.niceToStrict":74,"org.easymock.tests.LimitationsTest.privateConstructor":304,"org.easymock.tests2.UsageConstraintsTest.testNotNull":191,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":107,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":325,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":37,"org.easymock.tests2.MockBuilderTest.testCreateMock":256,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":153,"org.easymock.tests.UsageVarargTest.differentLength":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":286,"org.easymock.tests2.CallbackTest.callback":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":168,"org.easymock.tests.UsageTest.openCallCountByLastCall":231,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":318,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":18,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":372,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":179,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":125,"org.easymock.tests.UsageCallCountTest.tooFewCalls":132,"org.easymock.tests.UsageOverloadedMethodTest.overloading":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":283,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":162,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":84,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":108,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":30,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":7,"org.easymock.tests.UsageThrowableTest.throwCheckedException":104,"org.easymock.tests.MockClassControlTest.testEquals":299,"org.easymock.tests2.EasyMockSupportClassTest.testAll":67,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":121,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":321,"org.easymock.tests.MockingTest.testStrictClassMocking":313,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":369,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":12,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":86,"org.easymock.tests.MockNameTest.defaultName":350,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":336,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":83,"org.easymock.tests2.UsageConstraintsTest.testMatches":188,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":85,"org.easymock.samples.ExampleTest.voteForRemovals":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":175,"org.easymock.tests2.NameTest.nameForNiceMock":333,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":52,"org.easymock.tests.UsageVarargTest.allKinds":119,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":249,"org.easymock.tests2.DependencyTest.testInterfaceMocking":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":174,"org.easymock.samples.BasicClassMockTest.testPrintContent":89,"org.easymock.samples.ExampleTest.addDocument":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":289,"org.easymock.tests2.DelegateToTest.testStubDelegate":201,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":106,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":335,"org.easymock.tests2.AnswerTest.stubAnswer":212,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":228,"org.easymock.tests2.UsageConstraintsTest.greaterThan":189,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":273,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":197,"org.easymock.tests.UsageVarargTest.varargLongAccepted":116,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":312,"org.easymock.samples.ExampleTest.voteForRemoval":96,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":261,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":199,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.floatType":149,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":347,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":170,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests.UsageThrowableTest.noUpperLimit":102,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":190,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":145,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":180,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":263,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":4,"org.easymock.tests2.SerializationTest.test":41,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":255,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":15,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":235,"org.easymock.tests2.UsageConstraintsTest.testSame":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":271,"org.easymock.samples.SupportTest.addDocument":93,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":16,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":276,"org.easymock.tests.GenericTest.testPackageScope":120,"org.easymock.tests2.UsageTest.moreThanOneArgument":206,"org.easymock.tests2.CaptureTest.testCapture2_2446744":202,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":51,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":195,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":366,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":118,"org.easymock.tests.GenericTest.testBridgedEquals":292,"org.easymock.tests2.NameTest.nameForMock":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":135,"org.easymock.tests.UsageExpectAndReturnTest.longType":150,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":13,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":242,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":357,"org.easymock.tests2.UsageStrictMockTest.differentMethods":65,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":259,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":236,"org.easymock.tests.UsageCallCountTest.tooManyCalls":136,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":223,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":287,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":239,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":124,"org.easymock.tests.MockingTest.testNiceClassMocking":316,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":82,"org.easymock.tests.MockingTest.testClassMocking":314,"org.easymock.tests2.NameTest.nameForStrictMock":332,"org.easymock.tests2.UsageConstraintsTest.testContains":186,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":60,"org.easymock.tests2.UsageConstraintsTest.testFind":182,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":219,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":253,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":327,"org.easymock.tests.MockTypeTest.fromEasyMockClass":345,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":47,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":364,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndReturnTest.object":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":265,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":323,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":309,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":32,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests.ErrorMessageTest.testGetters":329,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":194,"org.easymock.tests2.UsageStrictMockTest.range":64,"org.easymock.tests2.UsageConstraintsTest.lessThan":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":20,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":173,"org.easymock.tests.UsageTest.exactCallCountByLastCall":233,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":224,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":280,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":185,"org.easymock.tests.UsageRangeTest.combination":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":177,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":44,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":110,"org.easymock.tests.UsageTest.wrongArguments":146,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":161,"org.easymock.tests2.MockBuilderTest.testWithConstructor":354,"org.easymock.tests.MockClassControlTest.testHashCode":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":277,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":294,"org.easymock.tests2.EasyMockSupportTest.testVerify":24,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":281,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":164,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":311,"org.easymock.tests.UsageVarargTest.varargShortAccepted":115,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":160,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":344,"org.easymock.tests2.UsageConstraintsTest.cmpTo":29,"org.easymock.tests.UsageVarargTest.varargCharAccepted":113,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":62,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":326,"org.easymock.tests.DefaultClassInstantiatorTest.object":306,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":23,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":252,"org.easymock.tests.UsageTest.unexpectedCallWithArray":322,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":282,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":371,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":103,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":133,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":167,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":244,"org.easymock.tests2.CaptureTest.testCapture":8,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":297,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":196,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.UsageConstraintsTest.constraints":181,"org.easymock.samples.ExampleTest.addAndChangeDocument":100,"org.easymock.tests.UsageStrictMockTest.testVerify":365,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":246,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":92,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":70,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests2.UsageTest.resumeIfFailure":210,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":216,"org.easymock.tests.LimitationsTest.abstractClass":303,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":301,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":217,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":19,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":264}}]
