[{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:133","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[0],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[42,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[47,48,49],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[78,52,79,57,80,81,82,83,84,85,86,73,87,88],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[90],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[91,92,93,94,95,51,96,78,97,53,54,98,59,99,80,81,84,85,86,100,101,66,67,102,103,69,70,104,105,106,107,108,109,110,111,112,113,114,115,116,117,45,118,119,120,121,122,123,124],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[125],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[126,127,128,129,130,131,132,133,134,135,136,91,92,93,137,138,139,140,141,142,143,144,145,146,51,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,96,163,78,52,97,53,54,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,55,56,89,194,195,196,99,60,80,81,82,83,84,85,86,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,61,236,237,62,63,64,238,239,240,241,242,243,100,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,101,320,321,322,65,66,67,323,324,325,326,327,328,42,329,330,331,43,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,1,1,2,2,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,102,370,68,103,69,70,371,372,373,374,375,376,377,378,379,3,380,381,382,4,104,383,71,105,106,107,384,385,386,108,109,110,111,387,388,389,390,391,392,393,394,395,6,7,396,397,88,44,398,399,400,8,112,401,9,402,403,404,405,10,406,11,113,114,13,115,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,407,116,408,409,410,411,412,48,413,414,415,416,117,417,45,418,46,419,420,421,422,423,424,425,426,427,428,429,90,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,118,448,449,450,119,120,451,452,121,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,122,475,476,477,478,479,480,481,482,483,484,485,486,50,487,488,123,489,490,491,492,493,494,495,496,497,498,41,499,500,124],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[140,280,283,347,400,112,401,403,404,405,406,113,114,115,20,30,36,412,117,417,46,41],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[78,79,57,80,73,87],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[78,79,57,80,73,87],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[405],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[502],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[503],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[504,505,506,507,508,7,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[126,127,128,129,130,131,132,133,134,135,136,91,92,93,137,138,139,140,141,95,142,143,144,145,146,51,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,96,163,78,52,97,53,54,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,55,56,89,194,195,196,99,60,80,81,82,83,84,85,86,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,61,236,237,62,63,64,238,239,240,241,242,243,100,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,509,510,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,101,320,321,322,65,66,67,323,324,325,326,327,328,42,329,330,331,43,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,1,2,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,102,370,68,103,69,70,371,372,373,374,511,512,513,375,376,377,378,379,3,380,514,381,382,4,5,104,383,71,105,106,107,384,385,386,108,109,110,111,387,388,389,390,391,392,393,394,395,6,7,396,397,88,44,398,399,400,8,112,401,9,402,403,404,405,10,406,515,11,113,114,13,115,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,407,116,408,409,410,411,412,48,413,414,415,416,117,417,45,418,46,419,420,421,422,423,424,425,426,427,428,429,90,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,118,448,449,450,119,120,451,452,121,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,122,475,476,477,478,479,480,481,482,483,484,485,486,50,487,488,123,489,490,491,492,493,494,495,496,497,498,41,499,500,124],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[129,130,222,223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[516,41,499,500],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"primitiveType","paramType":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[517,518,519,403,117,417],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[198,205,209,214,215],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[478,483,491,496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[129,222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[126,127,128,129,130,131,132,133,134,135,136,91,92,93,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,137,138,139,140,141,142,143,144,145,146,51,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,96,163,78,52,97,53,54,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,55,56,89,194,195,196,99,60,80,81,82,83,84,85,86,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,61,236,237,62,63,64,238,239,240,241,242,243,100,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,509,510,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,101,320,321,322,65,66,67,323,324,325,326,328,42,329,330,331,43,333,334,335,336,337,338,339,340,341,342,343,344,345,346,1,2,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,102,370,68,103,69,70,371,372,373,374,511,512,375,376,377,378,379,3,380,514,381,382,4,5,104,383,71,105,106,107,384,385,386,108,109,110,111,387,388,389,390,391,47,392,393,394,395,6,7,397,88,44,398,399,400,112,401,402,403,404,405,406,515,11,113,114,115,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,407,116,408,409,410,411,412,48,413,414,415,416,117,417,45,418,46,419,420,421,422,423,424,425,426,427,542,543,544,545,49,428,429,90,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,118,448,449,450,119,120,451,452,121,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,122,475,476,477,478,479,480,481,482,483,484,485,486,50,487,488,123,489,490,491,492,493,494,495,496,497,498,41,499,500,124],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[433,435,443,122,475,478,480,481,483,491,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[137,141],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[546,473,489,495],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[547,548,549,550],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":475,"org.easymock.tests2.UsageTest.argumentsOrdered":109,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":99,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":453,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":207,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":107,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":348,"org.easymock.tests2.DelegateToTest.testReturnException":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":270,"org.easymock.tests.MockingTest.testPartialClassMocking":262,"org.easymock.tests.MockClassControlTest.testToString":291,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":397,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":24,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":300,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":369,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":541,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":504,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":482,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":142,"org.easymock.tests2.UsageTest.wrongArguments":105,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":468,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":325,"org.easymock.samples.ExampleTest.answerVsDelegate":340,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":283,"org.easymock.tests2.UsageConstraintsTest.testNull":478,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":267,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":121,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":296,"org.easymock.tests2.CaptureTest.testPrimitive":436,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":146,"org.easymock.tests.UsageTest.moreThanOneArgument":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":319,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":336,"org.easymock.tests.UsageTest.argumentsOrdered":85,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":275,"org.easymock.tests.UsageVarargTest.varargIntAccepted":240,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":508,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":512,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":364,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":229,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":525,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":462,"org.easymock.tests.ReplayStateInvalidUsageTest.times":155,"org.easymock.tests2.DependencyTest.testClassMocking":366,"org.easymock.tests2.AnswerTest.answer":419,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":472,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":510,"org.easymock.tests2.CaptureTest.testAnd":433,"org.easymock.tests2.UsageTest.strictResetToDefault":383,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":416,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":321,"org.easymock.tests2.DelegateToTest.testDelegate":432,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":279,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":524,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":315,"org.easymock.tests.LimitationsTest.mockFinalMethod":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":234,"org.easymock.tests2.DependencyTest.testClassMockingSupport":367,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":55,"org.easymock.tests2.CaptureTest.testCapture1_2446744":437,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":470,"org.easymock.tests.UsageThrowableTest.throwError":166,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":149,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":282,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":95,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":338,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":38,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":528,"org.easymock.samples.PartialClassMockTest.testGetArea":347,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":150,"org.easymock.tests.MockingTest.testInterfaceMocking":264,"org.easymock.tests2.CompareToTest.testLessOrEqual":546,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":250,"org.easymock.tests2.UsageTest.niceToStrict":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":25,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":301,"org.easymock.tests2.ThreadingTest.testChangeDefault":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":197,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":403,"org.easymock.tests2.MockBuilderTest.testCreateMock":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":465,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":73,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":309,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":509,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":130,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":323,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":548,"org.easymock.tests.UsageOverloadedMethodTest.overloading":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":29,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":487,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":185,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":297,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":50,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":442,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":241,"org.easymock.tests2.EasyMockSupportClassTest.testAll":17,"org.easymock.tests.MockClassControlTest.testEquals":295,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":317,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":517,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":471,"org.easymock.tests2.CaptureTest.testCaptureAll":434,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":232,"org.easymock.tests.MockNameTest.defaultName":288,"org.easymock.tests2.UsageConstraintsTest.testMatches":488,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":337,"org.easymock.samples.ExampleTest.voteForRemovals":344,"org.easymock.tests.UsageVarargTest.allKinds":248,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":233,"org.easymock.samples.BasicClassMockTest.testPrintContent":351,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":172,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":102,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":361,"org.easymock.tests2.UsageConstraintsTest.greaterThan":489,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":125,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":18,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":320,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":45,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":529,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":333,"org.easymock.samples.ExampleTest.voteForRemoval":341,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":418,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":392,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":502,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":284,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":513,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":412,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":521,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":104,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":224,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":448,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":269,"org.easymock.tests2.CaptureTest.testCaptureFirst":446,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":449,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":111,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":181,"org.easymock.tests2.CaptureTest.testCapture2_2446744":445,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":394,"org.easymock.tests2.UsageTest.moreThanOneArgument":71,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":215,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":247,"org.easymock.tests.GenericTest.testBridgedEquals":141,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":549,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":92,"org.easymock.tests.UsageExpectAndReturnTest.longType":177,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":447,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":318,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":494,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":316,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":334,"org.easymock.tests.UsageCallCountTest.tooManyCalls":93,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":305,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":171,"org.easymock.tests.MockingTest.testNiceClassMocking":268,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":379,"org.easymock.tests.MockingTest.testClassMocking":260,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":519,"org.easymock.tests2.UsageConstraintsTest.testContains":486,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":132,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":389,"org.easymock.tests2.UsageConstraintsTest.testFind":477,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":299,"org.easymock.tests.MockTypeTest.fromEasyMockClass":281,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":427,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":96,"org.easymock.tests.UsageExpectAndReturnTest.object":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":452,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":505,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":243,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":255,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":550,"org.easymock.tests.UsageTest.exactCallCountByLastCall":86,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":194,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":190,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":236,"org.easymock.tests.MockClassControlTest.testHashCode":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.EasyMockSupportTest.testVerify":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":27,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":129,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":469,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":98,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":456,"org.easymock.tests.UsageVarargTest.varargCharAccepted":242,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":327,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":220,"org.easymock.tests2.UsageTest.openCallCountByLastCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":454,"org.easymock.tests.DefaultClassInstantiatorTest.object":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":128,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":253,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":460,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":527,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":117,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":293,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":306,"org.easymock.tests.ReplayStateInvalidCallsTest.times":533,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":221,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":534,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":36,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":75,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":292,"org.easymock.tests2.UsageTest.resumeIfFailure":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":511,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":272,"org.easymock.tests2.StubTest.stubWithReturnValue":373,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":183,"org.easymock.tests2.SerializationTest.testAllMockedMethod":500,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":213,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":87,"org.easymock.samples.SupportTest.voteForRemovals":353,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":312,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":516,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":219,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":420,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":196,"org.easymock.tests.UsageExpectAndThrowTest.object":310,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":492,"org.easymock.tests2.DelegateToTest.testWrongClass":430,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":531,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":287,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":53,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":376,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":311,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":405,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":14,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":324,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":79,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":523,"org.easymock.tests2.CaptureTest.testCaptureNone":441,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":251,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":543,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":94,"org.easymock.tests.UsageVerifyTest.twoReturns":67,"org.easymock.tests.UsageVarargTest.varargByteAccepted":246,"org.easymock.tests2.ThreadingTest.testThreadSafe":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":31,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":136,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":256,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":350,"org.easymock.tests2.CaptureTest.testCapture_2617107":435,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":217,"org.easymock.tests2.UsageConstraintsTest.any":484,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":154,"org.easymock.tests2.StubTest.stub":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":271,"org.easymock.tests.UsageExpectAndThrowTest.longType":303,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":331,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":153,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":103,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":359,"org.easymock.tests.LimitationsTest.mockNativeMethod":161,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":193,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":518,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":459,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":539,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":371,"org.easymock.tests2.NameTest.nameForMocksControl":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":461,"org.easymock.tests2.MockedExceptionTest.testMockedException":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":19,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":426,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":304,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":407,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":406,"org.easymock.tests.MockingTest.testNicePartialClassMocking":263,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":457,"org.easymock.tests2.CaptureTest.testCaptureLast":440,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":56,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":538,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":481,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":493,"org.easymock.tests.MockingTest.testTwoMocks":261,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":535,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":308,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":108,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":497,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":49,"org.easymock.samples.ExampleTest.removeNonExistingDocument":345,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":464,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":151,"org.easymock.tests.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":545,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":329,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":393,"org.easymock.tests2.ConstraintsToStringTest.andToString":76,"org.easymock.tests2.MockBuilderTest.testCreateMockString":115,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":21,"org.easymock.tests.UsageExpectAndThrowTest.floatType":302,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":16,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":422,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":396,"org.easymock.tests.UsageVerifyTest.twoThrows":66,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.samples.ExampleTest.voteAgainstRemoval":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":208,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":417,"org.easymock.tests.LimitationsTest.privateConstructor":160,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":40,"org.easymock.tests2.UsageConstraintsTest.testNotNull":496,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":387,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":173,"org.easymock.tests2.UsageTest.defaultResetToNice":386,"org.easymock.samples.ExampleTest.voteAgainstRemovals":339,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":458,"org.easymock.tests.UsageVarargTest.differentLength":100,"org.easymock.tests2.CallbackTest.callback":124,"org.easymock.tests2.UsageConstraintsTest.equals":476,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":414,"org.easymock.tests.UsageTest.openCallCountByLastCall":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":473,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":144,"org.easymock.tests.UsageCallCountTest.tooFewCalls":134,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":326,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":544,"org.easymock.tests.UsageThrowableTest.throwCheckedException":170,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":57,"org.easymock.tests.MockingTest.testStrictClassMocking":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":382,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":463,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":3,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":156,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":381,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":424,"org.easymock.tests.ObjectMethodsTest.testHashCode":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":507,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":503,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":537,"org.easymock.tests2.NameTest.nameForNiceMock":398,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":395,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":532,"org.easymock.tests2.DependencyTest.testInterfaceMocking":368,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":506,"org.easymock.samples.ExampleTest.addDocument":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.DelegateToTest.testStubDelegate":90,"org.easymock.tests2.AnswerTest.stubAnswer":423,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":52,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":515,"org.easymock.tests.UsageVarargTest.varargLongAccepted":245,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":206,"org.easymock.tests.UsageExpectAndReturnTest.floatType":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":6,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.ConstraintsToStringTest.orToString":72,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":490,"org.easymock.tests.UsageThrowableTest.noUpperLimit":167,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":363,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":474,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":374,"org.easymock.tests2.SerializationTest.test":499,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":438,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":42,"org.easymock.tests2.UsageConstraintsTest.testSame":479,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":175,"org.easymock.samples.SupportTest.addDocument":352,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":514,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":522,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":22,"org.easymock.tests.GenericTest.testPackageScope":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":362,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":266,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":520,"org.easymock.tests2.NameTest.nameForMock":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":13,"org.easymock.tests2.UsageStrictMockTest.differentMethods":70,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":415,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":314,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":322,"org.easymock.tests2.MockedExceptionTest.testRealException":390,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":377,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":58,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":210,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":158,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":143,"org.easymock.tests2.NameTest.nameForStrictMock":44,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":402,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":547,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":425,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":410,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":375,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":491,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":330,"org.easymock.tests.ErrorMessageTest.testGetters":501,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":112,"org.easymock.tests2.UsageStrictMockTest.range":69,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":526,"org.easymock.tests2.UsageConstraintsTest.lessThan":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":205,"org.easymock.tests2.CaptureTest.testCaptureRightOne":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":26,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":542,"org.easymock.tests2.UsageConstraintsTest.testOr":480,"org.easymock.tests.UsageRangeTest.combination":101,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":116,"org.easymock.tests.UsageTest.wrongArguments":81,"org.easymock.tests2.MockBuilderTest.testWithConstructor":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":23,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":290,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":198,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":43,"org.easymock.tests.UsageVarargTest.varargShortAccepted":244,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":91,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":540,"org.easymock.tests2.UsageConstraintsTest.cmpTo":485,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":421,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":530,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":200,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":385,"org.easymock.tests2.CaptureTest.testCaptureFromStub":444,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":148,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":401,"org.easymock.tests.UsageTest.unexpectedCallWithArray":80,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":536,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":78,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":135,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":12,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":188,"org.easymock.tests2.UsageConstraintsTest.constraints":122,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":97,"org.easymock.samples.ExampleTest.addAndChangeDocument":346,"org.easymock.tests2.ConstraintsToStringTest.notToString":74,"org.easymock.tests.UsageStrictMockTest.testVerify":165,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":349,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":231,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":180,"org.easymock.tests.LimitationsTest.abstractClass":159,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":228,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":120,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":239}}]
