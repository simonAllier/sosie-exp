[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[90,49,49,50,50,91,92,93,94,95,96,97,98,99,100,101,102,103,104,51,52,105,106,107,108,109,110,111,112,113,114,115,0,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,1,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,55,2,146,56,147,148,149,150,57,151,58,3,4,60,5,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,6,167,168,169,170,171,172,173,174,175,176,7,177,8,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,9,201,202,10,11,12,203,204,205,13,14,15,16,206,207,208,209,17,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,61,237,238,239,62,240,18,241,242,243,19,20,244,245,21,246,247,248,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,249,250,251,252,253,254,22,255,256,23,24,25,257,89,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,30,347,348,349,31,350,32,33,351,352,34,35,36,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,37,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,38,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,39,40,472,473,474,475,476,477,41,42,43,478,479,44,480,45,481,46,47,48,482,483,484,485,486],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[1,131,169,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[488,489,490,491,32,45],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[492,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[89,258,259,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:399","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[20,75],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[49,49,50,50,51,52,58,174,89],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[90,49,49,50,50,91,92,93,94,95,96,97,98,99,100,101,102,103,104,51,107,108,109,110,111,113,114,115,0,116,118,119,120,121,122,123,124,125,126,127,128,129,130,1,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,2,148,149,150,151,3,4,5,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,6,167,168,169,170,171,173,176,7,177,8,180,181,182,183,184,185,186,187,188,194,9,201,202,10,11,12,203,204,205,13,14,15,16,208,209,17,210,216,223,224,225,226,227,228,233,234,235,236,61,237,238,239,62,240,18,241,242,243,19,20,244,245,21,246,247,248,67,70,80,86,249,250,251,252,253,254,22,255,256,23,24,25,257,89,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,305,306,307,309,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,336,337,338,339,340,341,342,343,344,346,30,347,348,349,31,350,32,33,351,352,34,35,36,353,354,355,356,357,358,359,360,361,362,363,365,37,373,374,375,376,377,379,380,381,382,383,384,385,386,388,389,390,392,393,394,411,417,419,420,421,423,424,38,425,426,427,428,429,430,431,432,433,434,435,436,437,440,442,443,444,445,446,447,448,449,450,451,452,453,454,455,457,460,461,462,465,466,467,468,469,470,471,39,40,472,473,474,475,476,477,41,42,43,478,479,44,480,45,481,46,47,48,482,483,484,485,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[90,49,50,91,92,93,94,95,96,98,99,100,101,102,103,104,51,111,113,114,115,0,116,118,119,120,121,122,123,125,126,127,128,129,130,1,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,2,148,149,150,151,3,4,5,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,6,167,168,169,170,171,173,176,7,177,8,180,181,182,183,184,185,186,187,188,194,9,201,202,10,11,12,203,204,205,13,14,15,16,208,209,17,216,224,225,226,228,233,234,235,236,61,237,238,239,62,240,18,241,242,243,19,20,244,245,21,246,247,248,67,70,80,86,249,252,253,254,22,255,256,23,24,25,257,89,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,306,307,309,325,326,327,328,329,336,338,339,342,30,348,349,31,350,32,33,351,352,34,35,36,353,359,360,361,362,363,37,376,377,379,380,381,382,383,384,385,386,388,389,392,393,394,419,420,421,423,424,38,425,426,427,428,429,496,496,440,442,443,444,445,446,447,448,449,450,451,452,453,454,455,465,466,467,468,469,470,471,39,40,474,475,476,477,41,42,43,478,479,44,480,45,481,46,47,48,482],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[52,57,497,498,499,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[369,501,502],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[502],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[346],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[90,49,49,50,50,100,101,51,145,2,148,149,150,151,3,4,5,166,6,168,169,170,171,173,176,7,177,8,187,235,236,61,237,239,62,67,70,80,86,89,259,305,306,307,309,353,388,389,390,431,440],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[90,49,49,50,50,100,101,51,52,145,503,2,146,147,148,149,150,151,58,3,4,504,5,166,6,168,169,170,171,173,174,175,176,7,177,8,178,179,185,186,187,229,230,235,236,61,237,239,62,505,506,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,259,303,304,305,306,307,309,312,330,333,353,365,366,367,368,369,370,372,387,388,389,390,391,430,431,432,433,434,435,436,437,438,439,440,441,464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[122],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[90,91,92,93,94,95,96,98,99,100,101,102,103,104,51,107,108,109,110,111,113,114,115,0,116,118,119,120,121,122,123,124,125,126,127,128,129,130,1,131,132,133,134,135,136,137,138,139,140,2,148,150,151,4,152,153,154,155,156,157,158,159,160,161,162,164,165,166,6,167,168,169,170,173,7,177,8,180,181,182,183,184,187,194,9,201,202,10,11,12,203,204,205,13,14,15,16,208,209,17,216,224,225,226,228,233,234,235,236,61,237,238,239,62,240,18,241,242,243,19,20,244,245,21,246,247,248,67,70,80,86,249,252,253,254,22,255,256,23,24,25,257,89,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,306,307,309,336,338,339,341,30,347,348,349,31,350,33,351,352,34,35,36,353,355,356,37,376,377,379,380,381,382,383,384,385,386,388,389,392,393,394,419,420,421,423,424,38,425,426,427,428,429,430,440,442,443,444,445,446,447,451,452,453,454,455,469,471,39,40,472,474,475,476,477,42,43,478,479,44,480,45,481,46,47,48,482,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[492,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[343,344,411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[354],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:324","failures":[383,384,39],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[387,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[107,108,109,110,202,10,13,14,256,24,25,350,33,34,35,37,471,39,40,45,481,47,48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[387],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[507],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[387,391],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[114,115,0,118,119,120,121,125,127,129,130,1,131,132,138,139,140,4,153,156,159,160,164,165,180,181,182,9,202,203,204,15,16,225,234,249,253,256,24,25,283,284,287,289,290,291,292,294,295,296,297,299,300,301,302,341,30,347,348,349,31,350,351,352,36,381,394,404,406,415,416,418,443,446,471,40,481,47,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[45],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":116,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests2.UsageTest.argumentsOrdered":14,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":246,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":405,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":12,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":99,"org.easymock.tests2.DelegateToTest.testReturnException":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":466,"org.easymock.tests.MockingTest.testPartialClassMocking":306,"org.easymock.tests.MockClassControlTest.testToString":432,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":106,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":74,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":260,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":442,"org.easymock.tests2.UsageTest.wrongArguments":10,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":449,"org.easymock.samples.ExampleTest.answerVsDelegate":92,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":333,"org.easymock.tests2.UsageConstraintsTest.testNull":119,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":311,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":168,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":437,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":21,"org.easymock.tests2.CaptureTest.testPrimitive":155,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":446,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":279,"org.easymock.tests.UsageTest.moreThanOneArgument":350,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":327,"org.easymock.tests.UsageTest.argumentsOrdered":35,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":354,"org.easymock.tests.UsageVarargTest.varargIntAccepted":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":451,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":199,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":455,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":216,"org.easymock.tests.ReplayStateInvalidUsageTest.times":321,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":487,"org.easymock.tests2.DependencyTest.testClassMocking":206,"org.easymock.tests2.AnswerTest.answer":249,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":412,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":144,"org.easymock.tests2.CaptureTest.testAnd":152,"org.easymock.tests2.UsageTest.strictResetToDefault":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":348,"org.easymock.tests2.DelegateToTest.testDelegate":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":275,"org.easymock.tests.LimitationsTest.mockFinalMethod":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":469,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":363,"org.easymock.tests2.DependencyTest.testClassMockingSupport":207,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":343,"org.easymock.tests2.CaptureTest.testCapture1_2446744":156,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":142,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":315,"org.easymock.tests.UsageThrowableTest.throwError":379,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":332,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":27,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":329,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":88,"org.easymock.samples.PartialClassMockTest.testGetArea":90,"org.easymock.tests.MockingTest.testInterfaceMocking":308,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":452,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":485,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":464,"org.easymock.tests2.UsageTest.niceToStrict":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":261,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":148,"org.easymock.tests2.MockBuilderTest.testCreateMock":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":219,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":488,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":269,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":19,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":375,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":472,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":447,"org.easymock.tests.UsageOverloadedMethodTest.overloading":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":85,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":129,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":339,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":294,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":501,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":128,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":161,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":422,"org.easymock.tests.MockClassControlTest.testEquals":436,"org.easymock.tests2.EasyMockSupportClassTest.testAll":67,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":389,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":277,"org.easymock.tests2.CaptureTest.testCaptureAll":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":361,"org.easymock.tests.MockNameTest.defaultName":378,"org.easymock.tests2.UsageConstraintsTest.testMatches":130,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":328,"org.easymock.samples.ExampleTest.voteForRemovals":96,"org.easymock.tests.UsageVarargTest.allKinds":429,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":471,"org.easymock.samples.BasicClassMockTest.testPrintContent":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":362,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":385,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":470,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":196,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":500,"org.easymock.tests2.UsageConstraintsTest.greaterThan":131,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":68,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":347,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":8,"org.easymock.samples.ExampleTest.voteForRemoval":93,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":372,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":181,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":178,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":171,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":353,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":241,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":465,"org.easymock.tests2.CaptureTest.testCaptureFirst":165,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":242,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":16,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":290,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":183,"org.easymock.tests2.CaptureTest.testCapture2_2446744":164,"org.easymock.tests2.UsageTest.moreThanOneArgument":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":413,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":4,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":428,"org.easymock.tests.GenericTest.testBridgedEquals":391,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":42,"org.easymock.tests.UsageExpectAndReturnTest.longType":286,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":359,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":278,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":136,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":325,"org.easymock.tests.UsageCallCountTest.tooManyCalls":43,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":84,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":384,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":236,"org.easymock.tests.MockingTest.testNiceClassMocking":312,"org.easymock.tests.MockingTest.testClassMocking":304,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":503,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":473,"org.easymock.tests2.UsageConstraintsTest.testContains":127,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":187,"org.easymock.tests2.UsageConstraintsTest.testFind":118,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":394,"org.easymock.tests.MockTypeTest.fromEasyMockClass":331,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":113,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests.UsageExpectAndReturnTest.object":293,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":424,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":462,"org.easymock.tests.UsageTest.exactCallCountByLastCall":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":52,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":419,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":338,"org.easymock.tests.MockClassControlTest.testHashCode":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":190,"org.easymock.tests2.EasyMockSupportTest.testVerify":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":77,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":356,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":374,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":141,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":28,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":210,"org.easymock.tests.UsageVarargTest.varargCharAccepted":423,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":364,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastCall":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":492,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":247,"org.easymock.tests.DefaultClassInstantiatorTest.object":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":373,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":460,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":78,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":382,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":214,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":189,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":266,"org.easymock.tests.CapturesMatcherTest.test":496,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":280,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":86,"org.easymock.tests2.UsageTest.resumeIfFailure":15,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":468,"org.easymock.tests2.StubTest.stubWithReturnValue":234,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":57,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":292,"org.easymock.tests2.SerializationTest.testAllMockedMethod":259,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":411,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":489,"org.easymock.samples.SupportTest.voteForRemovals":104,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":272,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":417,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":250,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":458,"org.easymock.tests.UsageExpectAndThrowTest.object":270,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":134,"org.easymock.tests2.DelegateToTest.testWrongClass":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":478,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":479,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":49,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":231,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":271,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":150,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":448,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":486,"org.easymock.tests2.CaptureTest.testCaptureNone":160,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":26,"org.easymock.tests.UsageVerifyTest.twoReturns":40,"org.easymock.tests.UsageVarargTest.varargByteAccepted":427,"org.easymock.tests2.ThreadingTest.testThreadSafe":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":81,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":477,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":463,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":100,"org.easymock.tests2.CaptureTest.testCapture_2617107":154,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":415,"org.easymock.tests2.UsageConstraintsTest.any":125,"org.easymock.tests2.StubTest.stub":233,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndThrowTest.longType":263,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":319,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":23,"org.easymock.tests2.SerializationTest.testClass":89,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests.LimitationsTest.mockNativeMethod":440,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":390,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":302,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":213,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":257,"org.easymock.tests2.NameTest.nameForMocksControl":110,"org.easymock.tests2.MockedExceptionTest.testMockedException":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":69,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":352,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":112,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":264,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":309,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":151,"org.easymock.tests.MockingTest.testNicePartialClassMocking":307,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":170,"org.easymock.tests2.CaptureTest.testCaptureLast":159,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":211,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":344,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":122,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":62,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":135,"org.easymock.tests.MockingTest.testTwoMocks":305,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":283,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":268,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":139,"org.easymock.samples.ExampleTest.removeNonExistingDocument":97,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":218,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":191,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":367,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":182,"org.easymock.tests2.MockBuilderTest.testCreateMockString":5,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":71,"org.easymock.tests.UsageExpectAndThrowTest.floatType":262,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":66,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":105,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":80,"org.easymock.samples.ExampleTest.voteAgainstRemoval":94,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":177,"org.easymock.tests.LimitationsTest.privateConstructor":439,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":54,"org.easymock.tests2.UsageConstraintsTest.testNotNull":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":386,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":185,"org.easymock.tests2.UsageTest.defaultResetToNice":205,"org.easymock.samples.ExampleTest.voteAgainstRemovals":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":298,"org.easymock.tests.UsageVarargTest.differentLength":38,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":212,"org.easymock.tests2.CallbackTest.callback":17,"org.easymock.tests2.UsageConstraintsTest.equals":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":174,"org.easymock.tests.UsageTest.openCallCountByLastCall":351,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":444,"org.easymock.tests.UsageCallCountTest.tooFewCalls":475,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":450,"org.easymock.tests.UsageThrowableTest.throwCheckedException":383,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":303,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":239,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":377,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":217,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":238,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":254,"org.easymock.tests.ObjectMethodsTest.testHashCode":461,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":184,"org.easymock.tests2.NameTest.nameForNiceMock":109,"org.easymock.tests2.DependencyTest.testInterfaceMocking":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.DelegateToTest.testStubDelegate":225,"org.easymock.tests2.AnswerTest.stubAnswer":253,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":481,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":507,"org.easymock.tests.UsageVarargTest.varargLongAccepted":426,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.floatType":285,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":51,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":50,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":198,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests.UsageThrowableTest.noUpperLimit":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":115,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":229,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":157,"org.easymock.tests2.SerializationTest.test":258,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":502,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":366,"org.easymock.tests2.UsageConstraintsTest.testSame":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":284,"org.easymock.samples.SupportTest.addDocument":103,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":72,"org.easymock.tests.GenericTest.testPackageScope":388,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":197,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":310,"org.easymock.tests2.NameTest.nameForMock":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":295,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":287,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":274,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":349,"org.easymock.tests2.MockedExceptionTest.testRealException":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":408,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":443,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":324,"org.easymock.tests2.NameTest.nameForStrictMock":108,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":147,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":493,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":111,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":169,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":230,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":133,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":2,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":140,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":505,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":18,"org.easymock.tests2.CaptureTest.testCaptureRightOne":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":76,"org.easymock.tests2.UsageConstraintsTest.testOr":121,"org.easymock.tests.UsageRangeTest.combination":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":6,"org.easymock.tests.UsageTest.wrongArguments":33,"org.easymock.tests2.MockBuilderTest.testWithConstructor":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":73,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":431,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":296,"org.easymock.tests.UsageVarargTest.varargShortAccepted":425,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":41,"org.easymock.tests2.UsageConstraintsTest.cmpTo":126,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":398,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":204,"org.easymock.tests2.CaptureTest.testCaptureFromStub":163,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":314,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":146,"org.easymock.tests.UsageTest.unexpectedCallWithArray":32,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":476,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":297,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":98,"org.easymock.tests.UsageStrictMockTest.testVerify":483,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":102,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":360,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":158,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":453,"org.easymock.tests.LimitationsTest.abstractClass":438,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":289,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":454,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":20}}]
