[{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.RecordState:305","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,3,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,13,107,108,109,110,111,112,113,114,115,116,117,118,15,119,120,121,122,123,124,125,17,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,6,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,11,212,213,214,215,216,217,218,219,220],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[40,41,221,222],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[40,41,221,222],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[24,223,224,25,225,226,37,38,39,1,40,227,228,111,229,230,231,112,232,113,233,114,234,235,236,115,237,238,239,240,124,125,241,242,243,244,245],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[18,19,20,21,246,22,247,248,249,23,250,251,252,24,223,224,253,25,225,226,26,27,28,254,29,255,30,31,32,256,257,33,34,258,259,35,260,261,262,36,263,264,37,265,266,267,268,269,270,271,272,273,38,274,275,276,277,278,39,279,280,1,2,3,4,281,282,283,40,41,221,42,43,44,45,46,47,48,49,50,51,52,53,284,285,54,55,56,286,57,58,59,60,61,287,62,63,64,65,66,67,288,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,289,290,85,291,86,87,292,293,294,295,296,297,88,298,299,300,89,90,91,92,93,94,95,301,302,96,97,98,99,303,100,101,102,304,305,306,103,307,308,309,310,311,104,312,313,314,315,316,317,105,106,13,107,318,108,109,110,14,227,228,111,229,230,231,112,232,113,233,114,234,235,236,115,237,238,319,320,116,117,321,322,323,324,325,326,327,118,15,119,120,121,122,239,328,123,240,329,16,124,125,17,330,241,331,332,333,334,335,126,336,337,338,339,340,341,127,128,129,130,131,342,343,344,132,345,346,347,348,349,350,351,352,353,354,355,356,357,133,134,135,136,137,358,359,138,139,360,361,140,141,142,5,362,143,144,363,364,365,145,146,366,147,367,368,369,148,149,242,150,370,243,371,151,152,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,153,389,390,391,392,393,394,395,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,396,397,398,399,400,401,402,403,404,405,406,407,174,408,175,176,177,178,179,180,409,410,411,412,413,181,6,414,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,244,415,416,417,418,245,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,202,436,203,204,437,438,205,439,206,207,440,208,441,209,210,211,442,443,444,445,446,447,448,449,450,7,8,9,10,11,12,212,213,214,215,216,217,218,219,220,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[40,41,221,222],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[28,254,256,257,85,86,87,490,491,492,493,494,495,496,497,498,499,500,137,358,359,360,361,144,501,502,503,504,505,506,151,152,435,202,203,204,439,440,208,441,209,210,211],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[18,19,20,21,246,22,248,249,23,250,251,252,24,223,224,253,25,26,27,28,254,29,255,30,31,32,256,257,33,34,259,35,36,37,38,39,1,2,3,4,281,283,40,41,221,42,43,44,45,46,47,48,49,50,51,52,53,284,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,289,290,85,291,86,87,292,88,300,89,90,91,92,93,94,95,301,302,96,97,98,99,303,100,101,102,304,305,306,103,104,105,106,13,107,108,109,110,227,111,112,232,113,114,236,115,238,116,117,118,15,119,120,121,122,239,123,16,124,125,17,126,127,128,129,130,131,342,132,346,347,348,349,353,354,355,356,357,133,134,135,136,137,358,359,138,139,360,361,140,141,142,5,362,143,144,145,146,147,148,149,150,370,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,408,175,176,177,178,179,180,409,410,411,412,413,181,6,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,426,427,428,429,430,431,432,433,434,435,202,436,203,204,437,205,206,207,441,209,210,211,7,8,9,10,11,12,212,213,214,215,216,217,219,220,463,464,465,467,468,469,470,471,472,473,474],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[28,254,256,257,491,496,498,500,137,358,359,360,361,501,503,505,435],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[40,41,221,222],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[19,281,283,88,300,90,103,205],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[258,281,283,58,59,60,61,62,63,64,65,66,67,288,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,91,92,93,94,95,301,302,96,97,98,99,303,100,101,123,141,142,5,362,143,144,148,149,181,6,435,202,11,212,213,214,215,216,474],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[444,448],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[40,41,221,222],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[24,223,223,224,224,25,225,226,37,38,40,228,230,112,233,234,235,236,237,238,240,125,241,242,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:94","failures":[60,61,62,63,64,65,66,67,288,68,77,78,82,83,91,92,93,94,99,303],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[60,61,63,65,66,288,77,82,91,93,99],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[18,19,20,21,246,22,247,248,249,23,250,251,252,24,223,224,253,25,225,226,26,27,28,254,29,255,30,31,32,256,257,33,34,258,259,35,260,261,262,36,263,264,37,265,266,267,268,269,270,271,272,273,38,274,275,276,277,278,39,279,280,1,2,3,4,281,282,283,40,41,221,42,43,44,45,46,47,48,49,50,51,52,53,284,285,54,55,56,286,57,58,59,60,61,287,62,63,64,65,66,67,288,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,289,290,85,291,86,87,292,293,294,295,296,297,88,298,299,300,89,90,91,92,93,94,95,301,302,96,97,98,99,303,100,101,102,304,305,306,103,307,308,309,310,311,104,312,313,314,315,316,317,105,106,13,107,318,108,109,110,14,227,228,111,229,230,231,112,232,113,233,114,234,235,236,115,237,238,319,320,116,117,321,322,323,324,325,326,327,118,15,119,120,121,122,239,328,123,240,329,16,124,125,17,330,241,331,332,333,334,335,126,336,337,338,339,340,341,127,128,129,130,131,342,343,344,132,345,346,347,348,349,350,351,352,353,354,355,356,357,133,134,135,136,137,358,359,138,139,360,361,140,141,142,5,362,143,144,363,364,365,145,146,366,147,367,368,369,148,149,242,150,370,243,371,151,152,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,153,389,390,391,392,393,394,395,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,396,397,398,399,400,401,402,403,404,405,406,407,174,408,175,176,177,178,179,180,409,410,411,412,413,181,6,414,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,244,415,416,417,418,245,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,202,436,203,204,437,438,205,439,206,207,440,208,441,209,210,211,442,443,444,445,446,447,448,449,450,7,8,9,10,11,12,212,213,214,215,216,217,218,219,220,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[225,507,508,509,510,511,40,233,235],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[177,178,210],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[18,19,20,21,246,22,247,248,249,23,250,251,252,24,223,224,253,25,225,226,26,27,28,254,29,255,30,31,32,256,257,33,34,258,259,35,260,261,262,36,263,264,37,265,266,267,268,269,270,271,272,273,38,274,275,276,277,278,39,279,280,1,2,3,4,281,282,283,40,41,221,42,43,44,45,46,47,48,49,50,51,52,53,284,285,54,55,56,286,57,58,59,60,61,287,62,63,64,65,66,67,288,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,289,290,85,291,86,87,292,293,294,295,296,297,88,298,299,300,89,90,91,92,93,94,95,301,302,96,97,98,99,303,100,101,102,304,305,306,103,307,308,309,310,311,104,312,313,314,315,316,317,105,106,13,107,318,108,109,110,14,227,228,111,229,230,231,112,232,113,233,114,234,235,236,115,237,238,319,320,116,117,321,322,323,324,325,326,327,118,15,119,120,121,122,239,328,123,240,329,16,124,125,17,330,241,331,332,333,334,335,126,336,337,338,339,340,341,127,128,129,130,131,342,343,344,132,345,346,347,348,349,350,351,352,353,354,355,356,357,133,134,135,136,137,358,359,138,139,360,361,140,141,142,5,362,143,144,363,364,365,145,146,366,147,367,368,369,148,149,242,150,370,243,371,151,152,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,153,389,390,391,392,393,394,395,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,396,397,398,399,400,401,402,403,404,405,406,407,174,408,175,176,177,178,179,180,409,410,411,412,413,181,6,414,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,244,415,416,417,418,245,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,202,436,203,204,437,438,205,439,206,207,440,208,441,209,210,211,442,443,444,445,446,447,448,449,450,7,8,9,10,11,12,212,213,214,215,216,217,218,219,220,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[281,283,80,82],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[259,35,36,37,38,39,1,2,3,4,281,283,40,41,221,42,43,44,45,46,47,48,49,50,51,52,53,284,285,54,55,56,286,57,58,59,60,61,62,63,64,65,66,67,288,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,289,290,85,291,86,87,292,294,295,296,297,88,298,299,300,89,90,91,92,93,94,95,301,302,96,97,98,99,303,100,101,102,304,305,306,103,104,105,106,13,107,108,109,110,227,111,112,232,113,114,236,115,238,118,15,119,120,121,122,239,123,16,124,125,17,126,127,128,129,130,342,132,346,347,348,349,351,353,354,355,356,357,133,134,135,136,137,358,359,138,139,360,361,140,141,142,5,362,143,144,365,145,146,147,148,149,150,370,243,151,152,153,394,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,396,397,398,399,400,401,402,403,404,405,406,407,174,408,175,176,177,178,179,180,409,410,411,412,413,181,6,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,202,436,203,204,437,438,205,439,206,207,440,208,441,209,210,211,443,7,8,9,10,11,12,212,213,214,215,216,217,218,219,220,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,469,470,471,472,473,474,476,477,478,481,482,483,484,485,486,487,488],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[40,41,221,222],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[295,17,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MockBuilder:178","failures":[114,244],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[18,19,20,21,246,22,247,248,249,23,250,251,252,24,223,223,224,224,253,25,225,26,27,28,254,29,255,30,31,32,256,257,33,34,259,35,260,261,262,36,263,264,37,265,266,267,268,269,270,271,272,273,38,274,275,276,277,278,39,279,280,1,2,3,4,281,282,283,40,41,221,42,43,44,45,46,47,48,49,50,51,52,53,284,285,54,55,56,286,57,58,59,60,61,287,62,63,64,65,66,67,288,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,289,290,85,291,86,87,292,293,294,295,296,297,88,298,299,300,89,90,91,92,93,94,95,301,302,96,97,98,99,303,100,101,102,304,305,306,103,307,308,309,310,311,104,312,313,314,315,316,317,105,106,13,107,108,109,110,227,111,229,231,112,232,113,114,235,236,115,238,319,320,116,117,321,325,326,327,118,15,119,120,121,122,239,328,123,240,329,16,124,125,17,330,241,331,332,333,334,335,126,336,337,338,339,340,341,127,128,129,130,131,342,343,344,132,345,346,347,348,349,350,351,352,353,354,355,356,357,133,134,135,136,137,358,359,138,139,360,361,140,141,142,5,362,143,144,363,364,365,145,146,366,147,367,368,369,148,149,242,150,370,243,371,151,152,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,153,389,390,391,392,393,394,395,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,396,397,398,399,400,401,402,403,404,405,406,407,174,408,175,176,177,178,179,180,409,410,411,412,413,181,6,414,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,244,417,418,245,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,202,436,203,204,437,438,205,439,206,207,440,208,441,209,210,211,443,444,445,446,447,448,450,7,8,9,10,11,12,212,213,214,215,216,217,218,219,220,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[28,85,86,87,490,491,492,495,497,499,137,144,503,504,506,151,152,202,203,204,209,210,211],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.ConstructorArgs:54","failures":[223,224,25,225,260,261,262,36,263,264,37,265,266,267,268,269,270,271,272,273,38,274,275,276,277,278,39,279,280,512,513,40,13,110,14,228,230,233,235,514,237],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[74,121],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":61,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests2.UsageTest.argumentsOrdered":257,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":383,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":255,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":250,"org.easymock.tests2.DelegateToTest.testReturnException":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":8,"org.easymock.tests.MockingTest.testPartialClassMocking":145,"org.easymock.tests.MockClassControlTest.testToString":483,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":293,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":182,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":507,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":67,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":141,"org.easymock.tests2.UsageTest.wrongArguments":254,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":348,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":245,"org.easymock.tests2.UsageConstraintsTest.testNull":63,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":120,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":488,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":51,"org.easymock.tests2.CaptureTest.testPrimitive":94,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":143,"org.easymock.tests.UsageTest.moreThanOneArgument":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":201,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":411,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":458,"org.easymock.tests.UsageTest.argumentsOrdered":361,"org.easymock.tests.UsageVarargTest.varargIntAccepted":465,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":212,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":511,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":316,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":323,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":216,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":494,"org.easymock.tests.ReplayStateInvalidUsageTest.times":404,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":126,"org.easymock.tests2.DependencyTest.testClassMocking":319,"org.easymock.tests2.AnswerTest.answer":88,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":389,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":306,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":416,"org.easymock.tests2.CaptureTest.testAnd":91,"org.easymock.tests2.UsageTest.strictResetToDefault":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":16,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":46,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":219,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":462,"org.easymock.tests2.DelegateToTest.testDelegate":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":197,"org.easymock.tests.LimitationsTest.mockFinalMethod":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":357,"org.easymock.tests2.DependencyTest.testClassMockingSupport":320,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":151,"org.easymock.tests2.CaptureTest.testCapture1_2446744":95,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":328,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":304,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":398,"org.easymock.tests.UsageThrowableTest.throwError":174,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":418,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":489,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":413,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":280,"org.easymock.samples.PartialClassMockTest.testGetArea":24,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":399,"org.easymock.tests.MockingTest.testInterfaceMocking":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":213,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":455,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":480,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":183,"org.easymock.tests2.UsageTest.niceToStrict":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":112,"org.easymock.tests2.MockBuilderTest.testCreateMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":338,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":191,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":47,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":415,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":423,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":424,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":346,"org.easymock.tests.UsageOverloadedMethodTest.overloading":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":278,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":72,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":165,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":133,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":0,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":71,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":466,"org.easymock.tests.MockClassControlTest.testEquals":487,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":370,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":496,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":199,"org.easymock.tests2.CaptureTest.testCaptureAll":92,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":355,"org.easymock.tests.MockNameTest.defaultName":414,"org.easymock.tests2.UsageConstraintsTest.testMatches":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":412,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":396,"org.easymock.samples.ExampleTest.voteForRemovals":22,"org.easymock.tests.UsageVarargTest.allKinds":474,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":209,"org.easymock.samples.BasicClassMockTest.testPrintContent":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":356,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":179,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":12,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":313,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":449,"org.easymock.tests2.UsageConstraintsTest.greaterThan":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":263,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":218,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":17,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":450,"org.easymock.samples.ExampleTest.voteForRemoval":20,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":128,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":419,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":239,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":342,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":44,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":7,"org.easymock.tests2.CaptureTest.testCaptureFirst":101,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":45,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":161,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":130,"org.easymock.tests2.CaptureTest.testCapture2_2446744":100,"org.easymock.tests2.UsageTest.moreThanOneArgument":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":390,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":115,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":473,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":431,"org.easymock.tests.UsageExpectAndReturnTest.longType":157,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":200,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":457,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":80,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":409,"org.easymock.tests.UsageCallCountTest.tooManyCalls":432,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":502,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":277,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":106,"org.easymock.tests.MockingTest.testNiceClassMocking":369,"org.easymock.tests.MockingTest.testClassMocking":364,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":425,"org.easymock.tests2.UsageConstraintsTest.testContains":70,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":3,"org.easymock.tests2.UsageConstraintsTest.testFind":62,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":135,"org.easymock.tests.MockTypeTest.fromEasyMockClass":417,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":433,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":283,"org.easymock.tests.UsageExpectAndReturnTest.object":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":508,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":468,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":478,"org.easymock.tests.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":459,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":350,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":505,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":225,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":463,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":170,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":206,"org.easymock.tests.MockClassControlTest.testHashCode":486,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":308,"org.easymock.tests2.EasyMockSupportTest.testVerify":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":271,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":493,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":460,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":422,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":102,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":258,"org.easymock.tests.UsageVarargTest.varargCharAccepted":467,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":442,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":395,"org.easymock.tests2.UsageTest.openCallCountByLastCall":30,"org.easymock.tests.DefaultClassInstantiatorTest.object":443,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":53,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":421,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":476,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":307,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":485,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":124,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":451,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":495,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":39,"org.easymock.tests2.UsageTest.resumeIfFailure":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":244,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":10,"org.easymock.tests2.StubTest.stubWithReturnValue":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":233,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":81,"org.easymock.tests2.SerializationTest.testAllMockedMethod":221,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":153,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":23,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":194,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":222,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":394,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":298,"org.easymock.tests.UsageExpectAndThrowTest.object":192,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":352,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":78,"org.easymock.tests2.DelegateToTest.testWrongClass":56,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":148,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":149,"org.easymock.tests.UsageStrictMockTest.range":203,"org.easymock.samples.ConstructorCalledMockTest.testTax":223,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":326,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":49,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":105,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":113,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":260,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":347,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":501,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":456,"org.easymock.tests2.CaptureTest.testCaptureNone":97,"org.easymock.tests.UsageUnorderedTest.message":144,"org.easymock.tests.UsageVerifyTest.twoReturns":211,"org.easymock.tests.UsageVarargTest.varargByteAccepted":472,"org.easymock.tests2.ThreadingTest.testThreadSafe":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":274,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":429,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":479,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":251,"org.easymock.tests2.CaptureTest.testCapture_2617107":93,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":500,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":362,"org.easymock.tests2.UsageConstraintsTest.any":68,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":403,"org.easymock.tests2.StubTest.stub":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndThrowTest.longType":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":9,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":447,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":402,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":104,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests.LimitationsTest.mockNativeMethod":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":173,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":243,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":333,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":292,"org.easymock.tests2.NameTest.nameForMocksControl":297,"org.easymock.tests2.MockedExceptionTest.testMockedException":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":264,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":186,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":147,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":282,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":118,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":114,"org.easymock.tests.MockingTest.testNicePartialClassMocking":146,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":122,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":331,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":110,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":66,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":79,"org.easymock.tests.MockingTest.testTwoMocks":365,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":190,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":256,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":83,"org.easymock.samples.ExampleTest.removeNonExistingDocument":247,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":400,"org.easymock.tests.UsageStrictMockTest.differentMethods":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":309,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":445,"org.easymock.tests2.ConstraintsToStringTest.andToString":497,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":129,"org.easymock.tests2.MockBuilderTest.testCreateMockString":238,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":481,"org.easymock.tests.UsageExpectAndThrowTest.floatType":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":265,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":262,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":300,"org.easymock.tests.UsageVerifyTest.twoThrows":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":226,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.ExampleTest.voteAgainstRemoval":21,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":384,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":125,"org.easymock.tests.LimitationsTest.privateConstructor":344,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":513,"org.easymock.tests2.UsageConstraintsTest.testNotNull":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":180,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":1,"org.easymock.tests2.UsageTest.defaultResetToNice":32,"org.easymock.samples.ExampleTest.voteAgainstRemovals":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":169,"org.easymock.tests.UsageVarargTest.differentLength":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":332,"org.easymock.tests2.CallbackTest.callback":103,"org.easymock.tests2.UsageConstraintsTest.equals":287,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":240,"org.easymock.tests.UsageTest.openCallCountByLastCall":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":5,"org.easymock.tests.UsageCallCountTest.tooFewCalls":427,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":349,"org.easymock.tests.UsageThrowableTest.throwCheckedException":177,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":503,"org.easymock.tests.MockingTest.testStrictClassMocking":363,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":109,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":336,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":108,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":90,"org.easymock.tests.ObjectMethodsTest.testHashCode":477,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":510,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":131,"org.easymock.tests2.NameTest.nameForNiceMock":296,"org.easymock.tests2.DependencyTest.testInterfaceMocking":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":509,"org.easymock.samples.ExampleTest.addDocument":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":275,"org.easymock.tests2.DelegateToTest.testStubDelegate":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":279,"org.easymock.tests2.AnswerTest.stubAnswer":89,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":202,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":234,"org.easymock.tests.UsageVarargTest.varargLongAccepted":471,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":382,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":172,"org.easymock.tests.UsageExpectAndReturnTest.floatType":156,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":25,"org.easymock.tests2.ConstraintsToStringTest.orToString":490,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":224,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":440,"org.easymock.tests.UsageThrowableTest.noUpperLimit":408,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":315,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":321,"org.easymock.tests2.SerializationTest.test":41,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":301,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":155,"org.easymock.tests2.UsageConstraintsTest.testSame":64,"org.easymock.samples.SupportTest.addDocument":249,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":318,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":266,"org.easymock.tests.GenericTest.testPackageScope":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":314,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":367,"org.easymock.tests2.NameTest.nameForMock":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":166,"org.easymock.tests2.UsageStrictMockTest.differentMethods":87,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":237,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":329,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":158,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":196,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":220,"org.easymock.tests2.MockedExceptionTest.testRealException":4,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":327,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":386,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":85,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":407,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":142,"org.easymock.tests2.NameTest.nameForStrictMock":295,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":231,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":281,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":325,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":446,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":111,"org.easymock.tests2.UsageStrictMockTest.range":86,"org.easymock.tests2.UsageConstraintsTest.lessThan":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":311,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":381,"org.easymock.tests2.CaptureTest.testCaptureRightOne":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":270,"org.easymock.tests2.UsageConstraintsTest.testOr":65,"org.easymock.tests.UsageRangeTest.combination":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":15,"org.easymock.tests.UsageTest.wrongArguments":359,"org.easymock.tests2.MockBuilderTest.testWithConstructor":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":267,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":482,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":374,"org.easymock.tests.UsageVarargTest.varargShortAccepted":470,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":448,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":430,"org.easymock.tests2.UsageConstraintsTest.cmpTo":69,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":376,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":31,"org.easymock.tests2.CaptureTest.testCaptureFromStub":303,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":397,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":229,"org.easymock.tests.UsageTest.unexpectedCallWithArray":358,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":435,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":428,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":514,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":168,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":436,"org.easymock.tests2.UsageConstraintsTest.constraints":60,"org.easymock.samples.ExampleTest.addAndChangeDocument":248,"org.easymock.tests2.ConstraintsToStringTest.notToString":492,"org.easymock.tests.UsageStrictMockTest.testVerify":438,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":253,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":434,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":354,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":214,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":160,"org.easymock.tests.LimitationsTest.abstractClass":343,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":215,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":48}}]
