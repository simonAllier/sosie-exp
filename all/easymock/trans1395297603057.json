[{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[0,1,2],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,40,41,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[121,122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[3],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[125,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[142,119,143,120],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[40,41,51,54,145,58,59,62,66,71,73,124,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,146,147,119],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[148,149,150,151,152,59,71],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[36,153,154],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,82,84,85,86,87,88,90,91,92,93,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[155,156],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[127],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[157,158,159,160,161,162,163,164,165,166],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[167],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[168,169,170],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:80","failures":[6,21,22,42,61,63,64,65,68,69,70,72,74,75,77,78,109,119],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[171],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[125,126,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[173,174,175,176,177,178,179,180,121,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,122,123,196,197,198,199],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[200,201,202,203,204,205,206,207,208,209,210,211,212,213,3,4,5,6,7,214,215,216,217,218,173,219,220,221,222,223,224,225,226,227,228,229,230,8,9,10,11,231,232,174,175,233,176,177,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,178,179,264,265,266,267,268,184,185,269,270,271,0,272,273,274,275,276,277,278,279,280,167,281,282,125,283,284,157,285,286,287,288,289,290,291,292,293,294,295,296,297,12,298,299,300,301,302,303,304,305,306,307,158,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,13,334,14,15,16,17,18,335,19,336,337,20,338,339,340,341,342,343,344,345,346,347,348,21,349,350,351,352,22,353,354,355,356,357,23,24,25,26,27,28,29,30,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,186,187,188,385,386,387,388,32,33,34,35,36,37,39,389,390,391,392,393,394,159,395,396,397,398,399,400,40,41,42,401,402,43,44,403,404,405,406,407,155,408,409,410,411,412,413,414,415,416,417,418,419,420,421,189,422,190,191,423,424,425,47,48,426,427,49,50,51,52,428,429,53,54,145,430,431,192,432,433,434,435,436,437,1,438,439,440,55,56,57,441,442,443,444,445,446,58,59,447,448,449,450,451,61,64,65,67,68,69,70,72,452,73,74,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,453,106,107,108,109,454,110,111,112,113,114,115,116,117,118,160,455,161,162,456,163,164,457,165,126,458,172,459,460,461,128,129,130,131,132,133,134,135,136,137,138,139,140,141,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,156,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,2,495,496,497,498,499,500,501,502,503,504,171,505,506,507,508,509,510,511,512,513,514,515,516,517,119,143,120,166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[200,201,207,208,209,210,212,213,4,5,7,214,215,216,217,218,173,219,10,231,232,174,175,233,176,177,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,268,184,269,270,271,0,272,273,12,298,299,300,301,302,158,309,310,314,315,316,318,319,320,321,322,323,324,325,329,332,338,339,340,341,342,343,345,346,355,356,29,30,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,186,187,188,389,390,391,392,393,394,159,395,396,397,398,400,401,402,43,44,403,404,409,418,419,420,421,189,422,190,191,423,424,425,49,52,429,430,431,192,432,433,434,435,436,1,438,439,440,55,56,57,441,442,443,444,445,446,58,82,104,105,453,106,107,108,110,116,160,162,456,163,164,165,458,172,459,461,128,129,130,131,132,133,134,135,136,137,138,139,140,141,462,463,464,465,466,467,468,470,471,472,473,474,480,491,492,493,494,495,496,497,498,499,500,502,503,504,171,505,506,507,508,509,510,511,512,513,514,515,516,517,143,120,166],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[148,149,150,151,152,518],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[168,169,170],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[200,201,202,203,204,205,206,207,208,209,210,211,212,213,3,4,5,6,7,214,215,216,217,218,173,219,220,221,222,223,224,225,226,227,228,229,230,8,9,10,11,231,232,174,175,233,176,177,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,178,179,264,265,266,267,268,184,185,269,270,271,0,272,273,274,275,276,277,278,279,280,167,281,282,125,283,284,157,285,286,287,288,289,290,291,292,293,294,295,296,297,12,298,299,300,301,302,303,304,305,306,307,158,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,13,334,14,15,16,17,18,335,19,336,337,20,338,339,340,341,342,343,344,345,346,347,348,21,351,352,22,353,354,355,356,357,23,24,25,26,27,28,29,30,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,186,187,188,385,386,387,388,31,32,33,34,35,36,37,38,39,389,390,391,392,393,394,159,395,396,397,398,399,400,40,40,41,41,42,401,402,43,44,403,404,405,406,407,155,408,409,410,411,412,413,414,415,416,417,418,419,420,421,189,422,190,191,423,424,425,47,48,426,427,49,50,51,52,429,53,54,430,431,192,432,433,434,435,436,437,1,438,439,440,55,56,57,441,442,443,444,445,446,58,59,60,447,448,449,450,451,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,453,106,107,108,109,454,110,111,112,113,114,115,116,117,118,160,455,161,162,456,163,164,457,165,126,458,172,459,460,461,128,129,130,131,132,133,134,135,136,137,138,139,140,141,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,156,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,2,495,496,497,498,499,500,501,502,503,504,171,505,506,507,508,509,510,511,512,513,514,515,516,517,119,143,120,166],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[519,491,508,514],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[519,491,493,508,514],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksBehavior:200","failures":[444],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[176,520,187,188,190],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[3],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[174,180,181,185,194,198],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[40,41,58,146,147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.MocksControl:105","failures":[200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,173,219,220,221,222,223,224,225,226,227,228,229,230,231,232,174,175,233,176,177,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,178,179,264,265,266,267,268,184,185,269,270,271,0,272,273,274,275,276,277,278,279,280,167,281,282,125,283,284,157,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,158,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,13,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,186,187,188,385,386,387,388,389,390,391,392,393,394,159,395,396,397,398,399,400,401,402,403,404,405,406,407,155,408,409,410,411,412,413,414,415,418,419,420,421,189,422,190,191,423,424,425,426,427,429,145,430,431,192,432,433,434,435,436,437,1,438,439,440,55,56,57,441,442,443,444,445,446,447,448,449,450,451,453,160,455,161,162,456,163,164,457,165,126,458,172,459,460,461,128,129,130,131,132,133,134,135,136,137,138,139,140,141,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,156,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,2,495,496,497,498,499,500,501,502,503,504,171,505,506,507,508,509,510,511,512,513,514,515,516,517,143,166],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[208,210,213,173,174,175,176,177,238,268,184,269,270,271,0,272,273,314,325,326,345,346,360,186,187,188,159,189,190,191,430,192,432,435,436,1,438,440,448,449,450,451,160,461,496,497,502,503,515,516],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Invocation:195","failures":[521,21,352,353,405,406,407,155,408,409,410,411,412,413,414,415,49,50,54,448,449,450,451,61,65,72,75,78,80,81,83,86,89,90,96,98,99,105,113,116,118,465,468,470,476,477,478,156,479,480,481,482,483,484,485,486],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[168,169,170],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":494,"org.easymock.tests2.UsageTest.argumentsOrdered":438,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":268,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":125,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":434,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":401,"org.easymock.tests2.DelegateToTest.testReturnException":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":339,"org.easymock.tests.MockingTest.testPartialClassMocking":17,"org.easymock.tests.MockClassControlTest.testToString":25,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":447,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":361,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":148,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":500,"org.easymock.tests2.UsageTest.wrongArguments":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":214,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":486,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":387,"org.easymock.samples.ExampleTest.answerVsDelegate":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":22,"org.easymock.tests2.UsageConstraintsTest.testNull":496,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":106,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":471,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":30,"org.easymock.tests2.CaptureTest.testPrimitive":131,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":218,"org.easymock.tests.UsageTest.moreThanOneArgument":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":380,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":453,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":391,"org.easymock.tests.UsageTest.argumentsOrdered":272,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":344,"org.easymock.tests.UsageVarargTest.varargIntAccepted":316,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":152,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":302,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":123,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":480,"org.easymock.tests.ReplayStateInvalidUsageTest.times":227,"org.easymock.tests2.DependencyTest.testClassMocking":416,"org.easymock.tests2.AnswerTest.answer":160,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":288,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":490,"org.easymock.tests2.CaptureTest.testAnd":128,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":350,"org.easymock.tests2.UsageTest.strictResetToDefault":431,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":113,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":466,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":383,"org.easymock.tests2.DelegateToTest.testDelegate":461,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":376,"org.easymock.tests.LimitationsTest.mockFinalMethod":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":342,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":307,"org.easymock.tests2.DependencyTest.testClassMockingSupport":417,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":178,"org.easymock.tests2.CaptureTest.testCapture1_2446744":132,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":374,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":488,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":221,"org.easymock.tests.UsageThrowableTest.throwError":236,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":352,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":521,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":393,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":103,"org.easymock.samples.PartialClassMockTest.testGetArea":42,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":222,"org.easymock.tests.MockingTest.testInterfaceMocking":335,"org.easymock.tests2.CompareToTest.testLessOrEqual":519,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":299,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":327,"org.easymock.tests2.UsageTest.niceToStrict":433,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":362,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":274,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":68,"org.easymock.tests2.MockBuilderTest.testCreateMock":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":98,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":483,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":194,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":370,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":467,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":349,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":204,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":385,"org.easymock.tests.UsageOverloadedMethodTest.overloading":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":505,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":255,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":358,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":171,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":153,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":137,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":317,"org.easymock.tests.MockClassControlTest.testEquals":29,"org.easymock.tests2.EasyMockSupportClassTest.testAll":82,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":489,"org.easymock.tests2.CaptureTest.testCaptureAll":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":305,"org.easymock.tests.MockNameTest.defaultName":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":506,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":392,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":219,"org.easymock.samples.ExampleTest.voteForRemovals":398,"org.easymock.tests.UsageVarargTest.allKinds":325,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":186,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":306,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":242,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":420,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":343,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":518,"org.easymock.tests2.UsageConstraintsTest.greaterThan":508,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":83,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":382,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":116,"org.easymock.samples.ExampleTest.voteForRemoval":395,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":39,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":443,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":117,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":109,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":430,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":12,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":464,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":338,"org.easymock.tests2.CaptureTest.testCaptureFirst":141,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":465,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":440,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":251,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":445,"org.easymock.tests2.CaptureTest.testCapture2_2446744":140,"org.easymock.tests2.UsageTest.moreThanOneArgument":192,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":289,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":324,"org.easymock.tests.GenericTest.testBridgedEquals":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":212,"org.easymock.tests.UsageExpectAndReturnTest.longType":247,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":462,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":303,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":379,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":513,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":377,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":389,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":296,"org.easymock.tests.UsageCallCountTest.tooManyCalls":213,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":121,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":485,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":241,"org.easymock.tests.MockingTest.testNiceClassMocking":20,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":50,"org.easymock.tests.MockingTest.testClassMocking":15,"org.easymock.tests2.UsageConstraintsTest.testContains":504,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":63,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":206,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":57,"org.easymock.tests2.UsageConstraintsTest.testFind":495,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":360,"org.easymock.tests.MockTypeTest.fromEasyMockClass":351,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":165,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests.UsageExpectAndReturnTest.object":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":484,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":149,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":319,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":332,"org.easymock.tests.UsageTest.exactCallCountByLastCall":273,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":279,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":265,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":345,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":260,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":314,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":406,"org.easymock.tests.MockClassControlTest.testHashCode":28,"org.easymock.tests2.EasyMockSupportTest.testVerify":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":92,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":122,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":346,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":158,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":203,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":487,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":475,"org.easymock.tests.UsageVarargTest.varargCharAccepted":318,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":31,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":294,"org.easymock.tests2.UsageTest.openCallCountByLastCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":473,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":168,"org.easymock.tests.DefaultClassInstantiatorTest.object":32,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":202,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":330,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":368,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":156,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":405,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":114,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":27,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":367,"org.easymock.tests.CapturesMatcherTest.test":127,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":101,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":26,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":196,"org.easymock.tests2.UsageTest.resumeIfFailure":439,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":341,"org.easymock.tests2.StubTest.stubWithReturnValue":425,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":71,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":253,"org.easymock.tests2.SerializationTest.testAllMockedMethod":120,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":287,"org.easymock.samples.SupportTest.voteForRemovals":404,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":198,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":373,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":142,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":293,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":455,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":267,"org.easymock.tests.UsageExpectAndThrowTest.object":371,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":511,"org.easymock.tests2.DelegateToTest.testWrongClass":459,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":355,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":356,"org.easymock.tests.UsageStrictMockTest.range":176,"org.easymock.samples.ConstructorCalledMockTest.testTax":40,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":426,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":469,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":372,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":70,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":79,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":386,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":180,"org.easymock.tests2.CaptureTest.testCaptureNone":136,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":328,"org.easymock.tests.UsageUnorderedTest.message":173,"org.easymock.tests.UsageVerifyTest.twoReturns":188,"org.easymock.tests.UsageVarargTest.varargByteAccepted":323,"org.easymock.tests2.ThreadingTest.testThreadSafe":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":96,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":210,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":333,"org.easymock.tests2.CaptureTest.testCapture_2617107":130,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":264,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":291,"org.easymock.tests2.UsageConstraintsTest.any":502,"org.easymock.tests2.StubTest.stub":424,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":226,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":340,"org.easymock.tests.UsageExpectAndThrowTest.longType":364,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":36,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":225,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":422,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":409,"org.easymock.tests2.SerializationTest.testClass":119,"org.easymock.tests.LimitationsTest.mockNativeMethod":10,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":478,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":423,"org.easymock.tests2.NameTest.nameForMocksControl":451,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":479,"org.easymock.tests2.MockedExceptionTest.testMockedException":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":84,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":271,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":457,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":365,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":72,"org.easymock.tests.MockingTest.testNicePartialClassMocking":18,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":108,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":476,"org.easymock.tests2.CaptureTest.testCaptureLast":135,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":179,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":499,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":512,"org.easymock.tests.MockingTest.testTwoMocks":16,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":369,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":1,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":516,"org.easymock.samples.ExampleTest.removeNonExistingDocument":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":482,"org.easymock.tests.UsageStrictMockTest.differentMethods":177,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":407,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":34,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":444,"org.easymock.tests2.ConstraintsToStringTest.andToString":197,"org.easymock.tests2.MockBuilderTest.testCreateMockString":78,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":86,"org.easymock.tests.UsageExpectAndThrowTest.floatType":363,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":81,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":162,"org.easymock.tests.UsageVerifyTest.twoThrows":187,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":60,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":95,"org.easymock.samples.ExampleTest.voteAgainstRemoval":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":115,"org.easymock.tests.LimitationsTest.privateConstructor":9,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":147,"org.easymock.tests2.UsageConstraintsTest.testNotNull":515,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":243,"org.easymock.tests2.UsageTest.defaultResetToNice":437,"org.easymock.samples.ExampleTest.voteAgainstRemovals":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":284,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":477,"org.easymock.tests.UsageVarargTest.differentLength":320,"org.easymock.tests2.CallbackTest.callback":166,"org.easymock.tests2.UsageConstraintsTest.equals":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":111,"org.easymock.tests.UsageTest.openCallCountByLastCall":270,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":491,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":216,"org.easymock.tests.UsageCallCountTest.tooFewCalls":208,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":388,"org.easymock.tests.UsageThrowableTest.throwCheckedException":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":181,"org.easymock.tests.MockingTest.testStrictClassMocking":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":53,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":481,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":51,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":228,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":429,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":163,"org.easymock.tests.ObjectMethodsTest.testHashCode":331,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":151,"org.easymock.tests2.NameTest.nameForNiceMock":450,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":446,"org.easymock.tests2.DependencyTest.testInterfaceMocking":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":150,"org.easymock.samples.ExampleTest.addDocument":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":97,"org.easymock.tests2.DelegateToTest.testStubDelegate":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":102,"org.easymock.tests2.AnswerTest.stubAnswer":456,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":175,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":452,"org.easymock.tests.UsageVarargTest.varargLongAccepted":322,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":282,"org.easymock.tests.UsageExpectAndReturnTest.floatType":246,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":41,"org.easymock.tests2.ConstraintsToStringTest.orToString":193,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":509,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests.UsageThrowableTest.noUpperLimit":237,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":492,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":47,"org.easymock.tests2.SerializationTest.test":143,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":133,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":154,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":33,"org.easymock.tests2.UsageConstraintsTest.testSame":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":245,"org.easymock.samples.SupportTest.addDocument":403,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":428,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":87,"org.easymock.tests.GenericTest.testPackageScope":4,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":336,"org.easymock.tests2.NameTest.nameForMock":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":256,"org.easymock.tests2.UsageStrictMockTest.differentMethods":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":112,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":375,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":329,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":384,"org.easymock.tests2.MockedExceptionTest.testRealException":441,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":354,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":285,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":182,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":215,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":230,"org.easymock.tests2.NameTest.nameForStrictMock":449,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":169,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":48,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":510,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":35,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":64,"org.easymock.tests2.UsageStrictMockTest.range":190,"org.easymock.tests2.UsageConstraintsTest.lessThan":517,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":408,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":144,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":281,"org.easymock.tests2.CaptureTest.testCaptureRightOne":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":91,"org.easymock.tests2.UsageConstraintsTest.testOr":498,"org.easymock.tests.UsageRangeTest.combination":381,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":105,"org.easymock.tests.UsageTest.wrongArguments":269,"org.easymock.tests2.MockBuilderTest.testWithConstructor":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":88,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":24,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":275,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":37,"org.easymock.tests.UsageVarargTest.varargShortAccepted":321,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":211,"org.easymock.tests2.UsageConstraintsTest.cmpTo":503,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":277,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":436,"org.easymock.tests2.CaptureTest.testCaptureFromStub":139,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":220,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":65,"org.easymock.tests.UsageTest.unexpectedCallWithArray":185,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":174,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":209,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":124,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":258,"org.easymock.tests2.UsageConstraintsTest.constraints":493,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":233,"org.easymock.samples.ExampleTest.addAndChangeDocument":400,"org.easymock.tests2.ConstraintsToStringTest.notToString":195,"org.easymock.tests.UsageStrictMockTest.testVerify":235,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":402,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":304,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":134,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":300,"org.easymock.tests.LimitationsTest.abstractClass":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":301,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":520,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":468,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":315}}]
