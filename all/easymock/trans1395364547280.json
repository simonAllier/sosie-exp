[{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[12,13,14,15,261,16,17,18,19,20,21,262,22,23,24,25,26,27,28,29,30,31,32,33,263,34,35,36,37,264,265,266,267,268,269,270,271,272,38,39,273,274,275,40,276,277,41,278,279,280,281,282,283,284,285,286,42,287,288,289,290,291,43,292,293,44,294,295,45,46,47,296,48,49,297,298,50,51,52,53,299,0,1,300,2,54,301,3,4,302,303,5,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,304,305,74,75,306,307,308,309,310,76,77,78,311,79,312,313,314,315,316,317,318,80,81,319,82,83,320,321,84,322,323,85,324,325,86,87,326,327,88,89,90,91,92,328,329,93,94,95,96,330,97,98,99,100,101,102,331,332,103,104,333,6,7,334,8,105,335,9,10,336,337,11,338,106,107,108,109,339,110,111,112,340,113,114,115,116,117,341,118,119,342,120,121,122,123,343,344,124,345,346,125,347,126,348,349,350,351,127,128,129,130,352,353,354,355,356,357,358,131,359,360,361,362,363,364,365,366,132,367,368,369,370,371,372,373,374,375,376,377,378,379,380,133,381,382,134,135,383,384,385,386,387,136,388,137,138,139,140,141,142,143,389,144,390,145,391,392,146,147,148,149,150,151,393,394,395,396,397,398,399,400,401,152,153,402,154,403,404,405,406,407,408,155,156,409,410,157,158,159,160,161,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,162,163,164,165,166,435,436,167,437,438,439,440,441,442,443,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,444,445,446,447,448,449,450,451,452,453,454,455,183,184,185,456,186,187,457,188,189,190,191,192,193,194,195,196,197,458,459,460,461,462,463,464,465,466,467,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,468,469,220,470,471,472,473,474,475,476,477,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,478,241,242,479,480,481,482,483,484,243,244,485,486,245,246,247,248,249,250,251,487,252,253,254,255,256,257,258,259,260],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[15,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[49,298,50,81,319,322,323,127,128,129,130,488,390,145,392,146,149,150,151,167,438,441,442],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[298,319,322,323,489,388,390,392,150,151,437,438,441,442,458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[86,326,327,88,385,413,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:218","sourceCode":"return ","type":"CtReturnImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,262,22,23,24,25,26,27,28,29,30,31,32,33,263,34,35,36,37,38,39,40,41,42,43,44,294,295,45,46,47,296,48,49,297,298,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,304,305,74,75,307,76,77,78,79,314,315,317,318,80,81,319,82,83,320,321,84,322,323,85,324,325,86,87,326,327,88,89,90,91,92,93,94,95,96,330,97,98,99,100,101,102,331,332,103,104,105,338,106,107,108,109,110,111,112,113,114,115,116,117,118,119,342,120,121,122,123,343,124,125,347,126,348,127,128,129,130,353,354,355,358,131,359,360,361,362,363,364,132,368,369,370,371,372,373,374,375,376,377,378,379,133,381,382,134,135,383,384,385,386,387,136,388,137,138,139,140,141,142,143,389,144,390,145,391,392,146,147,148,149,150,151,393,394,395,396,397,398,401,152,153,154,407,155,156,409,410,157,158,159,160,161,427,433,162,163,164,165,166,436,167,437,438,439,440,441,442,443,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,444,445,446,447,183,184,185,186,187,457,188,189,190,191,192,193,194,195,196,197,458,460,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,468,469,470,471,472,473,474,475,476,477,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,478,241,242,479,480,481,482,483,243,244,485,245,246,247,248,249,250,251,487,252,253,254,255,256,257,258,258,259,259,260],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[484,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[264,268,273,274,275,40,276,277,41,278,279,280,281,282,283,284,285,286,42,287,288,289,290,291,43,292,293,55,56,57,75,307,308,310,76,77,78,79,313,314,315,317,89,91,92,328,106,107,108,109,111,112,119,342,121,122,123,343,124,345,346,125,347,126,348,349,350,358,131,359,360,361,362,363,364,365,366,132,367,143,399,400,401,152,153,154,405,448,453,460,461,462,463,464,465,467,484,243,244,485,486,255,256,258,258,259,259,260],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[305,373,406,408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[15,20,21,22,25,31,32,33,34,62,69,70,83,323,102,342,126,134,150,442,458,478,241,479,480,481,482,483],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[89,90,91,490],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[12,13,16,17,18,19,24,26,27,29,30,35,36,37,49,331,133,145,155,156,157,172,173,174,175,176,193,194,195,196,197,218,219,258,258,259,259],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[264,268,273,274,275,40,276,277,41,278,279,280,281,282,283,284,285,286,42,287,288,289,290,291,43,292,293,55,56,57,491,75,307,308,310,76,77,78,79,313,314,315,492,317,89,91,92,328,106,107,108,109,111,112,493,494,495,119,342,121,122,123,343,124,345,346,125,347,126,348,349,350,357,358,359,360,361,362,363,364,365,366,132,367,143,399,400,401,152,153,154,405,448,453,460,461,462,463,464,465,467,484,243,244,485,486,255,256,258,258,259,259,260],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,263,34,35,36,37,38,39,40,41,42,43,44,45,46,47,296,48,49,297,298,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,304,305,74,75,307,76,77,78,79,314,315,317,318,80,81,319,82,83,320,321,84,322,323,85,324,86,87,326,88,89,90,91,92,93,94,95,96,330,97,98,99,100,101,102,331,332,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,342,120,121,122,123,343,124,125,347,126,348,132,133,381,382,134,135,383,385,386,388,137,138,139,140,141,142,143,389,144,390,145,391,392,146,147,149,150,151,152,153,154,155,156,409,410,157,158,160,161,162,163,164,165,166,436,167,437,438,439,440,441,442,443,168,169,170,171,172,173,174,175,176,179,180,181,182,444,445,446,183,184,185,186,187,457,188,189,190,191,192,193,194,195,196,197,458,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,478,241,242,479,480,481,482,483,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[461,465],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[496,345,258,258,259,259],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (this.int)) + \" and \") + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[298,50,392,146,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum","maximum":"minimum"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[115,142,170,175,198,199,206,213,219,221,222,229,236],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[89,90,91,490],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[497,498,499,500,390,437],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,46,47,49,298,50,53,59,60,61,64,65,68,70,72,73,76,80,81,82,320,321,85,87,88,94,96,330,99,100,101,102,103,104,117,118,122,126,133,134,135,141,145,392,146,149,150,155,156,157,158,159,160,161,436,167,439,440,193,194,195,196,197,198,199,202,204,205,206,207,209,210,211,212,214,215,216,217,218,219,221,222,225,227,228,229,230,232,233,234,235,237,238,239,240,478,479,480,481,482,483,247,260],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[325,87,421],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[325,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":15,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":436,"org.easymock.tests2.UsageTest.argumentsOrdered":323,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":421,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":83,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":257,"org.easymock.tests2.DelegateToTest.testReturnException":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":138,"org.easymock.tests.MockingTest.testPartialClassMocking":152,"org.easymock.tests.MockClassControlTest.testToString":359,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":351,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":281,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":221,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":488,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":39,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":155,"org.easymock.tests2.UsageTest.wrongArguments":319,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":170,"org.easymock.samples.ExampleTest.answerVsDelegate":247,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":453,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":404,"org.easymock.tests2.UsageConstraintsTest.testNull":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":68,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":364,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":493,"org.easymock.tests2.CaptureTest.testPrimitive":96,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":157,"org.easymock.tests.UsageTest.moreThanOneArgument":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":240,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":174,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":473,"org.easymock.tests.UsageTest.argumentsOrdered":442,"org.easymock.tests.UsageVarargTest.varargIntAccepted":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":193,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":75,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":303,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":197,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests.ReplayStateInvalidUsageTest.times":376,"org.easymock.tests2.DependencyTest.testClassMocking":271,"org.easymock.tests2.AnswerTest.answer":44,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":428,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":116,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":450,"org.easymock.tests2.CaptureTest.testAnd":93,"org.easymock.tests2.UsageTest.strictResetToDefault":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":125,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":309,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":173,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":63,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":477,"org.easymock.tests2.DelegateToTest.testDelegate":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":236,"org.easymock.tests.LimitationsTest.mockFinalMethod":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":166,"org.easymock.tests2.DependencyTest.testClassMockingSupport":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":468,"org.easymock.tests2.CaptureTest.testCapture1_2446744":330,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":234,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":114,"org.easymock.tests.UsageThrowableTest.throwError":478,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":370,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":452,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":435,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":5,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":293,"org.easymock.samples.PartialClassMockTest.testGetArea":260,"org.easymock.tests.MockingTest.testInterfaceMocking":402,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":194,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":394,"org.easymock.tests2.UsageTest.niceToStrict":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":282,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":76,"org.easymock.tests2.MockBuilderTest.testCreateMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":10,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":230,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":449,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":168,"org.easymock.tests.UsageOverloadedMethodTest.overloading":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":291,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":386,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":209,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":382,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":25,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":101,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":40,"org.easymock.tests.MockClassControlTest.testEquals":363,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":164,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":115,"org.easymock.tests2.CaptureTest.testCaptureAll":94,"org.easymock.tests.MockNameTest.defaultName":380,"org.easymock.tests2.UsageConstraintsTest.testMatches":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":175,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":368,"org.easymock.samples.ExampleTest.voteForRemovals":251,"org.easymock.tests.UsageVarargTest.allKinds":192,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":165,"org.easymock.samples.BasicClassMockTest.testPrintContent":256,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":482,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":3,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":327,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":466,"org.easymock.tests2.UsageConstraintsTest.greaterThan":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":348,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":467,"org.easymock.samples.ExampleTest.voteForRemoval":248,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":73,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":349,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":492,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":343,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":143,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":318,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":61,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":137,"org.easymock.tests2.CaptureTest.testCaptureFirst":103,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":62,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":324,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":205,"org.easymock.tests2.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":305,"org.easymock.tests2.CaptureTest.testCapture2_2446744":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":429,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":315,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":191,"org.easymock.tests.GenericTest.testBridgedEquals":486,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":445,"org.easymock.tests.UsageExpectAndReturnTest.longType":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":162,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":239,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":447,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":471,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":172,"org.easymock.tests.UsageCallCountTest.tooManyCalls":446,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":290,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":481,"org.easymock.tests.MockingTest.testNiceClassMocking":405,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":107,"org.easymock.tests.MockingTest.testClassMocking":400,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":178,"org.easymock.tests2.UsageConstraintsTest.testContains":24,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":57,"org.easymock.tests2.UsageConstraintsTest.testFind":16,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":135,"org.easymock.tests.MockTypeTest.fromEasyMockClass":451,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":389,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":118,"org.easymock.tests.UsageExpectAndReturnTest.object":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":67,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":187,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":355,"org.easymock.tests.UsageTest.exactCallCountByLastCall":443,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":474,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":406,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":328,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":214,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":385,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":0,"org.easymock.tests.MockClassControlTest.testHashCode":362,"org.easymock.tests2.EasyMockSupportTest.testVerify":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":284,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":475,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":113,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":338,"org.easymock.tests.UsageVarargTest.varargCharAccepted":186,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":459,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":434,"org.easymock.tests2.UsageTest.openCallCountByLastCall":320,"org.easymock.tests.DefaultClassInstantiatorTest.object":460,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":396,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":353,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":489,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":285,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":495,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":347,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":361,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":43,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":360,"org.easymock.tests2.UsageTest.resumeIfFailure":85,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":140,"org.easymock.tests2.StubTest.stubWithReturnValue":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":311,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":207,"org.easymock.tests2.SerializationTest.testAllMockedMethod":91,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":427,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":254,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":233,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":433,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":294,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":408,"org.easymock.tests.UsageExpectAndThrowTest.object":231,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":32,"org.easymock.tests2.DelegateToTest.testWrongClass":326,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":219,"org.easymock.tests.UsageStrictMockTest.range":392,"org.easymock.samples.ConstructorCalledMockTest.testTax":258,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":269,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":232,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":78,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":273,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":169,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":395,"org.easymock.tests2.CaptureTest.testCaptureNone":100,"org.easymock.tests.UsageUnorderedTest.message":458,"org.easymock.tests.UsageVerifyTest.twoReturns":151,"org.easymock.tests.UsageVarargTest.varargByteAccepted":190,"org.easymock.tests2.ThreadingTest.testThreadSafe":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":287,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":182,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":255,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":356,"org.easymock.tests2.CaptureTest.testCapture_2617107":95,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":410,"org.easymock.tests2.UsageConstraintsTest.any":22,"org.easymock.tests2.StubTest.stub":52,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":139,"org.easymock.tests.UsageExpectAndThrowTest.longType":224,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":464,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":374,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":54,"org.easymock.tests2.SerializationTest.testClass":89,"org.easymock.tests.LimitationsTest.mockNativeMethod":132,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":485,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":7,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.tests2.NameTest.nameForMocksControl":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":8,"org.easymock.tests2.MockedExceptionTest.testMockedException":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":277,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":440,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":225,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":341,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":79,"org.easymock.tests.MockingTest.testNicePartialClassMocking":153,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":123,"org.easymock.tests2.CaptureTest.testCaptureLast":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":333,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":469,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":112,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":20,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":33,"org.easymock.tests.MockingTest.testTwoMocks":401,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":340,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":229,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":322,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":36,"org.easymock.samples.ExampleTest.removeNonExistingDocument":487,"org.easymock.tests.UsageStrictMockTest.differentMethods":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":9,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":1,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":462,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":304,"org.easymock.tests2.MockBuilderTest.testCreateMockString":317,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.floatType":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":278,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":275,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":45,"org.easymock.tests.UsageVerifyTest.twoThrows":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":329,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":42,"org.easymock.samples.ExampleTest.voteAgainstRemoval":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":393,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":126,"org.easymock.tests.LimitationsTest.privateConstructor":366,"org.easymock.tests2.UsageConstraintsTest.testNotNull":35,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":483,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":55,"org.easymock.tests2.UsageTest.defaultResetToNice":84,"org.easymock.samples.ExampleTest.voteAgainstRemovals":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":213,"org.easymock.tests.UsageVarargTest.differentLength":457,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":6,"org.easymock.tests2.CallbackTest.callback":104,"org.easymock.tests2.UsageConstraintsTest.equals":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":345,"org.easymock.tests.UsageTest.openCallCountByLastCall":439,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":409,"org.easymock.tests.UsageCallCountTest.tooFewCalls":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":171,"org.easymock.tests.UsageThrowableTest.throwCheckedException":480,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":399,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":111,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":381,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":335,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":377,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":110,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":47,"org.easymock.tests.ObjectMethodsTest.testHashCode":354,"org.easymock.tests2.NameTest.nameForNiceMock":129,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":74,"org.easymock.tests2.DependencyTest.testInterfaceMocking":38,"org.easymock.samples.ExampleTest.addDocument":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":288,"org.easymock.tests2.DelegateToTest.testStubDelegate":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":292,"org.easymock.tests2.AnswerTest.stubAnswer":46,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":145,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":312,"org.easymock.tests.UsageVarargTest.varargLongAccepted":189,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.floatType":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":92,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":259,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":30,"org.easymock.tests.UsageThrowableTest.noUpperLimit":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":302,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":264,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":97,"org.easymock.tests2.SerializationTest.test":90,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":461,"org.easymock.tests2.UsageConstraintsTest.testSame":18,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.samples.SupportTest.addDocument":253,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":339,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":279,"org.easymock.tests.GenericTest.testPackageScope":243,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":4,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":403,"org.easymock.tests2.NameTest.nameForMock":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":210,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":316,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":346,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":235,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":352,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":161,"org.easymock.tests2.MockedExceptionTest.testRealException":58,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":424,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":156,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":379,"org.easymock.tests2.NameTest.nameForStrictMock":128,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":310,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":122,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":268,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":463,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":31,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":307,"org.easymock.tests2.UsageStrictMockTest.range":298,"org.easymock.tests2.UsageConstraintsTest.lessThan":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":2,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":60,"org.easymock.tests2.CaptureTest.testCaptureRightOne":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":283,"org.easymock.tests2.UsageConstraintsTest.testOr":19,"org.easymock.tests.UsageRangeTest.combination":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":342,"org.easymock.tests.UsageTest.wrongArguments":438,"org.easymock.tests2.MockBuilderTest.testWithConstructor":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":280,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":211,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":465,"org.easymock.tests.UsageVarargTest.varargShortAccepted":188,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":444,"org.easymock.tests2.UsageConstraintsTest.cmpTo":23,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":414,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":321,"org.easymock.tests2.CaptureTest.testCaptureFromStub":331,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":369,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":308,"org.easymock.tests.UsageTest.unexpectedCallWithArray":437,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":181,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":496,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":212,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":391,"org.easymock.tests2.UsageConstraintsTest.constraints":14,"org.easymock.samples.ExampleTest.addAndChangeDocument":252,"org.easymock.tests.UsageStrictMockTest.testVerify":148,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":245,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":163,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":98,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":494,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":195,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":204,"org.easymock.tests.LimitationsTest.abstractClass":365,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":196,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":65}}]
