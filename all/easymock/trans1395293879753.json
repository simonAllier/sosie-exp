[{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:471","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[8,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,7,46,47,48,49,50,51,52,53,54,55,56,57,58,8,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,0,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,9,203,204,205,206,207,208,209,10,11,12,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,5,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,6,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1319","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[138],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[47,192,202,473,474,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[215],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[41,46,47,50,96,97,98,100,102,103,106,107,192,202,207,10,288,295,300,475],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[82,83,84,89,90,92,95,137,138,141,143,144,160,345,449,450,451],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[285,286,287,288,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod","bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[43,72,82,83,84,85,86,87,88,89,90,91,92,93,94,95,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,0,156,157,158,159,160,161,162,174,179,181,290,291,292,293,294,306,345,346,347,402,404,405,6,436,448,449,450,451,452],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[289],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[154,480],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[481,482,483,104,484,485,486,487,165,170,171,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,9,203,204,205,206,207,208,209,10,210,211,473,474],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,28,35,37,38,39,40,43,7,47,51,52,53,54,55,56,57,58,8,59,60,61,62,63,66,67,68,69,70,73,74,75,76,77,80,81,82,83,84,85,87,88,89,90,91,92,95,96,100,101,102,103,113,120,121,123,124,126,127,130,133,135,136,137,138,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,0,156,157,159,160,161,162,163,164,165,166,168,169,170,173,174,177,178,179,181,189,192,202,207,10,11,12,210,212,214,215,218,221,247,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,283,286,287,290,291,292,293,294,307,308,309,310,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,339,341,342,343,344,345,346,348,349,350,351,352,358,359,360,361,362,363,364,365,379,380,386,387,388,389,396,398,399,400,401,402,403,404,405,406,407,408,409,410,411,416,426,427,429,433,435,436,439,440,441,448,449,452,461,462,463,464,465,466,467,468,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[123],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[488,489,490],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[17,7,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[82,84,92,137,138,143,144,146,0],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[36,46,48,52,56,57,59,97,105,106,107,122,125,126,127,131,132,133,134,137,153,172,175,176,177,212,491,492,306,340,359,360,493,494,386,412,413,414,415,5,417,420,421,422,434,6,437,438,439],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[35,36,38,39,40,41,43,44,45,7,46,47,48,49,50,74,75,76,96,495,97,98,99,100,101,102,103,104,105,106,496,107,163,164,165,166,169,170,497,182,183,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,9,203,204,205,206,207,208,209,10,12,210,211,246,247,248,249,250,251,252,253,259,281,282,283,284,285,286,287,288,289,295,300,423,424,425,426,427,429,432,433,453,454,455,456,457,458,459,471,472,473,473,474,474,475],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[454,458],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","sourceCode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[498],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[154,480],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,7,46,47,48,49,50,51,52,53,54,55,56,57,58,8,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,481,97,98,482,99,100,101,102,483,103,500,104,105,106,485,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,0,156,157,158,159,160,161,162,501,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,502,503,504,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,9,203,204,205,206,207,208,209,10,11,12,210,211,505,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,494,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,5,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,6,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,506,453,454,455,456,457,458,507,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":415,"org.easymock.tests2.UsageTest.argumentsOrdered":132,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":232,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":127,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":479,"org.easymock.tests2.DelegateToTest.testReturnException":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":399,"org.easymock.tests.MockingTest.testPartialClassMocking":426,"org.easymock.tests.MockClassControlTest.testToString":248,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":14,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":196,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":314,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":448,"org.easymock.tests2.UsageTest.wrongArguments":125,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":309,"org.easymock.samples.ExampleTest.answerVsDelegate":464,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":300,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":431,"org.easymock.tests2.UsageConstraintsTest.testNull":141,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":38,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":59,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":253,"org.easymock.tests2.CaptureTest.testPrimitive":85,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":452,"org.easymock.tests.UsageTest.moreThanOneArgument":416,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":333,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":350,"org.easymock.tests.UsageTest.argumentsOrdered":421,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":353,"org.easymock.tests.UsageVarargTest.varargIntAccepted":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":290,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":503,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":33,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":294,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests.ReplayStateInvalidUsageTest.times":374,"org.easymock.tests2.DependencyTest.testClassMocking":78,"org.easymock.tests2.AnswerTest.answer":63,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":22,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":297,"org.easymock.tests2.UsageTest.strictResetToDefault":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":7,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":55,"org.easymock.tests2.DelegateToTest.testDelegate":218,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":357,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":329,"org.easymock.tests.LimitationsTest.mockFinalMethod":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":402,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":365,"org.easymock.tests2.DependencyTest.testClassMockingSupport":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":219,"org.easymock.tests2.CaptureTest.testCapture1_2446744":86,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":20,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":368,"org.easymock.tests.UsageThrowableTest.throwError":378,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":299,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":494,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":352,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":209,"org.easymock.samples.PartialClassMockTest.testGetArea":475,"org.easymock.tests.MockingTest.testInterfaceMocking":428,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":291,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":304,"org.easymock.tests2.UsageTest.niceToStrict":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":197,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":315,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":222,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":100,"org.easymock.tests2.MockBuilderTest.testCreateMock":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":116,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":323,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":296,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":313,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":307,"org.easymock.tests.UsageOverloadedMethodTest.overloading":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":206,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":394,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":151,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":271,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":150,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":91,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":337,"org.easymock.tests2.EasyMockSupportClassTest.testAll":189,"org.easymock.tests.MockClassControlTest.testEquals":252,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":21,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":363,"org.easymock.tests.MockNameTest.defaultName":280,"org.easymock.tests2.UsageConstraintsTest.testMatches":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":351,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":366,"org.easymock.samples.ExampleTest.voteForRemovals":468,"org.easymock.tests.UsageVarargTest.allKinds":345,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":358,"org.easymock.samples.BasicClassMockTest.testPrintContent":472,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":364,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":384,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":30,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":217,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":507,"org.easymock.tests2.UsageConstraintsTest.greaterThan":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":48,"org.easymock.samples.ExampleTest.voteForRemoval":465,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":459,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":49,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":70,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":301,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":504,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":41,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":433,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":122,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":53,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":398,"org.easymock.tests2.CaptureTest.testCaptureFirst":95,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":228,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":54,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":267,"org.easymock.tests2.UsageTest.moreThanOneArgument":124,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":72,"org.easymock.tests2.CaptureTest.testCapture2_2446744":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":240,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":344,"org.easymock.tests.GenericTest.testBridgedEquals":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":413,"org.easymock.tests.UsageExpectAndReturnTest.longType":263,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":361,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":496,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":332,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":390,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":330,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":348,"org.easymock.tests.UsageCallCountTest.tooManyCalls":414,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":383,"org.easymock.tests.MockingTest.testNiceClassMocking":432,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":164,"org.easymock.tests.MockingTest.testClassMocking":424,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":495,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":407,"org.easymock.tests2.UsageConstraintsTest.testContains":149,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":76,"org.easymock.tests2.UsageConstraintsTest.testFind":140,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":462,"org.easymock.tests.MockTypeTest.fromEasyMockClass":298,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":434,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":181,"org.easymock.tests.UsageExpectAndReturnTest.object":270,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":117,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":8,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":339,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":257,"org.easymock.tests.UsageTest.exactCallCountByLastCall":422,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":227,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":354,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":211,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":276,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":334,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":393,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":24,"org.easymock.tests.MockClassControlTest.testHashCode":251,"org.easymock.tests2.EasyMockSupportTest.testVerify":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":199,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":391,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":312,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":491,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":19,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":501,"org.easymock.tests.UsageVarargTest.varargCharAccepted":338,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":506,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":245,"org.easymock.tests2.UsageTest.openCallCountByLastCall":128,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":489,"org.easymock.tests.DefaultClassInstantiatorTest.object":453,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":61,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":311,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":255,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":321,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":381,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":111,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":23,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":46,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":320,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":207,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":249,"org.easymock.tests2.UsageTest.resumeIfFailure":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":295,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":502,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":401,"org.easymock.tests2.StubTest.stubWithReturnValue":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":483,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":269,"org.easymock.tests2.SerializationTest.testAllMockedMethod":12,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":238,"org.easymock.samples.SupportTest.voteForRemovals":478,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":285,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":326,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":244,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":64,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":447,"org.easymock.tests.UsageExpectAndThrowTest.object":324,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":156,"org.easymock.tests2.DelegateToTest.testWrongClass":216,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":404,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":405,"org.easymock.samples.ConstructorCalledMockTest.testTax":473,"org.easymock.tests.UsageStrictMockTest.range":438,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":184,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":325,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":102,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":186,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":308,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":90,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":305,"org.easymock.tests.UsageUnorderedTest.message":306,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":493,"org.easymock.tests.UsageVerifyTest.twoReturns":360,"org.easymock.tests.UsageVarargTest.varargByteAccepted":343,"org.easymock.tests2.ThreadingTest.testThreadSafe":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":9,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":411,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":471,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":258,"org.easymock.tests2.CaptureTest.testCapture_2617107":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":242,"org.easymock.tests2.UsageConstraintsTest.any":147,"org.easymock.tests2.StubTest.stub":120,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":373,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":243,"org.easymock.tests.UsageExpectAndThrowTest.longType":317,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":457,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":372,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":28,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests.LimitationsTest.mockNativeMethod":283,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":279,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":110,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":178,"org.easymock.tests2.NameTest.nameForMocksControl":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":112,"org.easymock.tests2.MockedExceptionTest.testMockedException":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":191,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":419,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":429,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":318,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":35,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":103,"org.easymock.tests.MockingTest.testNicePartialClassMocking":427,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":40,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":108,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":220,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":170,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":144,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":157,"org.easymock.tests.MockingTest.testTwoMocks":425,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":171,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":322,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":131,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":161,"org.easymock.samples.ExampleTest.removeNonExistingDocument":469,"org.easymock.tests.UsageStrictMockTest.differentMethods":439,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":115,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":25,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":455,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":71,"org.easymock.tests2.MockBuilderTest.testCreateMockString":107,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":193,"org.easymock.tests.UsageExpectAndThrowTest.floatType":316,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":505,"org.easymock.tests.UsageVerifyTest.twoThrows":359,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":202,"org.easymock.samples.ExampleTest.voteAgainstRemoval":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":233,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":303,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":47,"org.easymock.tests.LimitationsTest.privateConstructor":282,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":487,"org.easymock.tests2.UsageConstraintsTest.testNotNull":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":385,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":74,"org.easymock.tests2.UsageTest.defaultResetToNice":130,"org.easymock.samples.ExampleTest.voteAgainstRemovals":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":275,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":109,"org.easymock.tests.UsageVarargTest.differentLength":340,"org.easymock.tests2.CallbackTest.callback":212,"org.easymock.tests2.UsageConstraintsTest.equals":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":44,"org.easymock.tests.UsageTest.openCallCountByLastCall":418,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":450,"org.easymock.tests.UsageCallCountTest.tooFewCalls":409,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":310,"org.easymock.tests.UsageThrowableTest.throwCheckedException":382,"org.easymock.tests.MockingTest.testStrictClassMocking":423,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":169,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":347,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":114,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":168,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":68,"org.easymock.tests.ObjectMethodsTest.testHashCode":256,"org.easymock.tests2.NameTest.nameForNiceMock":17,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":73,"org.easymock.tests2.DependencyTest.testInterfaceMocking":80,"org.easymock.samples.ExampleTest.addDocument":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.DelegateToTest.testStubDelegate":215,"org.easymock.tests2.AnswerTest.stubAnswer":67,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":436,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":500,"org.easymock.tests.UsageVarargTest.varargLongAccepted":342,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":231,"org.easymock.tests.UsageExpectAndReturnTest.floatType":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":210,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":474,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":32,"org.easymock.tests.UsageThrowableTest.noUpperLimit":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":136,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":182,"org.easymock.tests2.SerializationTest.test":11,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":87,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":454,"org.easymock.tests2.UsageConstraintsTest.testSame":142,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":261,"org.easymock.samples.SupportTest.addDocument":477,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":167,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":194,"org.easymock.tests.GenericTest.testPackageScope":286,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":31,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":430,"org.easymock.tests2.NameTest.nameForMock":15,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":272,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":485,"org.easymock.tests2.UsageStrictMockTest.differentMethods":177,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":328,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":389,"org.easymock.tests2.MockedExceptionTest.testRealException":77,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":302,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":236,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":449,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":377,"org.easymock.tests2.NameTest.nameForStrictMock":16,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":490,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":179,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":39,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":183,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":456,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":97,"org.easymock.tests2.UsageStrictMockTest.range":176,"org.easymock.tests2.UsageConstraintsTest.lessThan":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":230,"org.easymock.tests2.CaptureTest.testCaptureRightOne":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":198,"org.easymock.tests2.UsageConstraintsTest.testOr":143,"org.easymock.tests.UsageRangeTest.combination":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageTest.wrongArguments":417,"org.easymock.tests2.MockBuilderTest.testWithConstructor":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":195,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":273,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":458,"org.easymock.tests.UsageVarargTest.varargShortAccepted":341,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":412,"org.easymock.tests2.UsageConstraintsTest.cmpTo":148,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":225,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":129,"org.easymock.tests2.CaptureTest.testCaptureFromStub":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":367,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":98,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":410,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":274,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":437,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.samples.ExampleTest.addAndChangeDocument":470,"org.easymock.tests.UsageStrictMockTest.testVerify":441,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":476,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":435,"org.easymock.tests2.CompareToTest.testGreateThan":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":362,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":88,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":266,"org.easymock.tests.LimitationsTest.abstractClass":281,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":57,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":335}}]
