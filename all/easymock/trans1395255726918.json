[{"position":"org.easymock.EasyMock:2124","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[6,7,8],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[19,20,21],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,22,23,24,25,26,27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[28,29,30],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[32,33,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[5,35],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[37],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[38,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[19,20,21],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[42,43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[44,44,45,45,46,0,47,48,49,50,51,52,53,54,55,56,57,58,59,9,10,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,1,77,2,78,79,42,43,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,3,115,116,4,5,35,117,22,118,23,24,25,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,17,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,6,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,40,167,168,169,170,171,172,173,174,175,176,177,178,179,18,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,7,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,26,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,38,300,301,28,39,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,27,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,37,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,36,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,8,452,453,454,455,456],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[223],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[44,44,45,45,46,0,47,48,49,50,51,52,53,54,55,56,57,58,59,9,60,62,64,71,74,1,2,457,458,459,460,79,42,43,80,81,82,83,84,85,86,87,88,89,90,91,92,461,93,94,462,95,463,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,3,4,5,35,22,118,23,25,119,120,121,122,123,124,464,129,131,132,133,465,134,466,467,140,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,40,167,168,169,170,171,172,173,174,175,176,177,178,179,18,180,181,468,469,182,183,184,185,470,186,187,188,189,190,191,192,193,194,7,195,196,197,203,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,242,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,267,268,269,270,271,272,273,274,275,299,303,304,305,307,308,309,312,313,314,315,316,27,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,353,354,357,359,360,361,362,363,367,368,370,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,8,452,453],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:99","failures":[46,47,48,50,53,55,9,62,64,71,74,79,42,43,80,81,84,86,87,90,91,92,461,93,94,462,95,463,96,97,98,100,101,102,103,104,105,107,111,112,113,3,5,118,121,124,129,131,133,465,466,140,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,40,167,168,170,171,172,173,178,179,18,180,468,469,182,183,184,185,470,186,187,188,190,192,193,194,196,197,203,210,211,213,214,217,218,219,220,222,223,224,226,227,228,229,230,231,249,251,252,303,305,312,313,314,315,320,347,349,353,354,357,359,360,361,362,363,367,368,370,398,399,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,439,446,447,450,451,453],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[40,167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[86,189,7,195,242,248,251,304,305,471,448,449,8,452],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[44,45,9,10,108,472,473,16,17,474,475,476,477,478,18],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[44,45,46,0,47,48,49,50,52,53,54,55,56,57,58,59,9,62,64,71,74,1,2,457,458,459,460,79,42,81,83,84,87,88,89,90,91,92,461,93,94,462,95,463,96,97,98,99,100,102,103,104,105,107,110,112,3,4,5,35,22,118,25,119,120,121,122,123,124,464,131,132,133,465,140,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,40,167,168,170,171,172,173,174,175,176,177,178,179,18,180,181,468,469,182,183,184,185,470,187,188,190,191,194,196,203,210,211,212,213,215,216,217,218,219,220,223,225,226,233,234,235,236,237,238,247,249,252,253,254,257,267,268,269,270,271,272,303,304,305,312,313,314,315,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,353,354,357,359,360,361,362,363,367,368,370,376,389,390,391,392,393,398,399,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,424,425,426,427,428,429,431,432,434,435,436,437,438,439,441,442,443,444,445,447],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[18,180,181,479],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[44,45,46,0,47,48,49,50,52,53,54,55,56,57,58,59,9,62,64,71,74,1,2,79,42,43,80,81,82,83,84,85,86,87,88,89,90,91,92,461,93,94,462,95,463,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,3,4,5,35,22,118,23,25,119,120,121,122,123,124,464,129,131,132,133,465,134,466,467,140,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,40,167,168,169,170,171,172,173,174,175,176,177,178,179,18,180,181,468,469,182,183,184,185,470,186,187,188,189,190,191,192,193,194,7,195,196,197,203,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,242,246,247,248,249,250,251,252,253,269,270,271,272,273,274,275,303,304,305,312,314,315,316,27,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,353,354,357,359,360,361,362,363,367,368,370,480,480,389,390,391,392,393,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,8,452,453],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[46,0,47,48,49,50,52,53,54,55,56,57,58,59,9,62,64,71,74,1,2,457,458,459,460,79,42,81,82,83,84,85,86,87,88,89,90,91,92,461,93,94,462,463,96,97,98,99,100,101,102,103,104,105,107,111,112,113,3,4,5,35,22,118,25,121,123,124,129,131,133,465,466,140,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,40,167,168,170,171,172,173,178,179,18,180,181,468,469,182,183,184,185,470,186,187,188,189,190,191,7,195,196,197,203,210,211,212,213,215,216,217,218,219,220,223,225,226,237,242,246,247,248,249,250,251,252,253,267,269,270,271,272,274,275,303,304,305,312,313,314,315,320,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,353,354,357,359,360,361,362,363,367,368,370,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,424,425,426,427,428,429,431,432,433,434,435,436,437,438,439,446,447,449,8,452,453],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[84,86,87,127,140,188,189,7,195,203,239,241,242,248,249,251,252,255,303,304,305,307,310,374,375,447,448,449,8,452],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[477],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[18,180,181,479],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[481],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[18,180,181,479],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[86,189,7,195,242,248,251,304,305,471,448,449,8,452],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[482,483,10,472,473,16,474,475,182,470,484],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":150,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":446,"org.easymock.tests2.UsageTest.argumentsOrdered":195,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":285,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":191,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":59,"org.easymock.tests2.DelegateToTest.testReturnException":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":234,"org.easymock.tests.MockingTest.testPartialClassMocking":367,"org.easymock.tests.MockClassControlTest.testToString":258,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":78,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":294,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":326,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":11,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":398,"org.easymock.tests2.UsageTest.wrongArguments":189,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":146,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":324,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":240,"org.easymock.tests2.UsageConstraintsTest.testNull":152,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":372,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":96,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":263,"org.easymock.tests2.CaptureTest.testPrimitive":213,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":402,"org.easymock.tests.UsageTest.moreThanOneArgument":447,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":345,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":391,"org.easymock.tests.UsageTest.argumentsOrdered":452,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":36,"org.easymock.tests.UsageVarargTest.varargIntAccepted":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":359,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":464,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":208,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":363,"org.easymock.tests.ReplayStateInvalidUsageTest.times":385,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":140,"org.easymock.tests2.AnswerTest.answer":3,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":292,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":177,"org.easymock.tests2.CaptureTest.testAnd":210,"org.easymock.tests2.UsageTest.strictResetToDefault":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":473,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":93,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":314,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":397,"org.easymock.tests2.DelegateToTest.testDelegate":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":341,"org.easymock.tests.LimitationsTest.mockFinalMethod":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":445,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":374,"org.easymock.tests2.CaptureTest.testCapture1_2446744":214,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":175,"org.easymock.tests.UsageThrowableTest.throwError":224,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":379,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":393,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":476,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":76,"org.easymock.samples.PartialClassMockTest.testGetArea":53,"org.easymock.tests.MockingTest.testInterfaceMocking":369,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":360,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":244,"org.easymock.tests2.UsageTest.niceToStrict":190,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":327,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":131,"org.easymock.tests2.MockBuilderTest.testCreateMock":134,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":143,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":335,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":456,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":322,"org.easymock.tests.UsageOverloadedMethodTest.overloading":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":73,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":162,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":318,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":414,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":29,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":219,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":430,"org.easymock.tests2.EasyMockSupportClassTest.testAll":62,"org.easymock.tests.MockClassControlTest.testEquals":262,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":343,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":176,"org.easymock.tests2.CaptureTest.testCaptureAll":211,"org.easymock.tests.MockNameTest.defaultName":255,"org.easymock.tests2.UsageConstraintsTest.testMatches":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":392,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":377,"org.easymock.samples.ExampleTest.voteForRemovals":50,"org.easymock.tests.UsageVarargTest.allKinds":438,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":444,"org.easymock.samples.BasicClassMockTest.testPrintContent":57,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":230,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":82,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":238,"org.easymock.tests2.UsageConstraintsTest.greaterThan":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":15,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":313,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":113,"org.easymock.samples.ExampleTest.voteForRemoval":47,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":302,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":114,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":106,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":426,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":92,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":233,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":117,"org.easymock.tests2.CaptureTest.testCaptureFirst":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":461,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":410,"org.easymock.tests2.UsageTest.moreThanOneArgument":188,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":80,"org.easymock.tests2.CaptureTest.testCapture2_2446744":222,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":293,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":437,"org.easymock.tests.GenericTest.testBridgedEquals":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":274,"org.easymock.tests.UsageExpectAndReturnTest.longType":406,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":441,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":344,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":169,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":389,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.UsageCallCountTest.tooManyCalls":275,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":229,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":469,"org.easymock.tests.MockingTest.testNiceClassMocking":373,"org.easymock.tests.MockingTest.testClassMocking":365,"org.easymock.tests2.UsageConstraintsTest.testContains":160,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":268,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":121,"org.easymock.tests2.UsageConstraintsTest.testFind":151,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":425,"org.easymock.tests.MockTypeTest.fromEasyMockClass":239,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":2,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":246,"org.easymock.tests.UsageExpectAndReturnTest.object":413,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":463,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":432,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":12,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":309,"org.easymock.tests.UsageTest.exactCallCountByLastCall":453,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":280,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":394,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":427,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":27,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":199,"org.easymock.tests.MockClassControlTest.testHashCode":261,"org.easymock.tests2.EasyMockSupportTest.testVerify":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":68,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":395,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":455,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":174,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":60,"org.easymock.tests.UsageVarargTest.varargCharAccepted":431,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":298,"org.easymock.tests2.UsageTest.openCallCountByLastCall":192,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":33,"org.easymock.tests.DefaultClassInstantiatorTest.object":299,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":454,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":307,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":138,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":198,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":111,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":332,"org.easymock.tests.CapturesMatcherTest.test":480,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":420,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":74,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":259,"org.easymock.tests2.UsageTest.resumeIfFailure":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":236,"org.easymock.tests2.StubTest.stubWithReturnValue":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":412,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":181,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":291,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":478,"org.easymock.samples.SupportTest.voteForRemovals":55,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":338,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":479,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":297,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":115,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":266,"org.easymock.tests.UsageExpectAndThrowTest.object":336,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":167,"org.easymock.tests2.DelegateToTest.testWrongClass":23,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":353,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":354,"org.easymock.samples.ConstructorCalledMockTest.testTax":44,"org.easymock.tests.UsageStrictMockTest.range":251,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":127,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":337,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":133,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":387,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":323,"org.easymock.tests2.CaptureTest.testCaptureNone":218,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":245,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":20,"org.easymock.tests.UsageUnorderedTest.message":242,"org.easymock.tests.UsageVerifyTest.twoReturns":305,"org.easymock.tests.UsageVarargTest.varargByteAccepted":436,"org.easymock.tests2.ThreadingTest.testThreadSafe":79,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":272,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":56,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":310,"org.easymock.tests2.CaptureTest.testCapture_2617107":212,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":376,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":295,"org.easymock.tests2.UsageConstraintsTest.any":158,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":384,"org.easymock.tests2.StubTest.stub":123,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":296,"org.easymock.tests.UsageExpectAndThrowTest.longType":329,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":28,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":383,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests.LimitationsTest.mockNativeMethod":357,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":422,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":349,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":137,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.tests2.NameTest.nameForMocksControl":460,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":139,"org.easymock.tests2.MockedExceptionTest.testMockedException":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":63,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":451,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":330,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":370,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":465,"org.easymock.tests.MockingTest.testNicePartialClassMocking":368,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests2.CompareToTest.testNotComparable":481,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":135,"org.easymock.tests2.CompareToTest.testCompareEqual":31,"org.easymock.tests2.CaptureTest.testCaptureLast":217,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":375,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":470,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":155,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":168,"org.easymock.tests.MockingTest.testTwoMocks":366,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":334,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":172,"org.easymock.samples.ExampleTest.removeNonExistingDocument":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":142,"org.easymock.tests.UsageStrictMockTest.differentMethods":252,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":200,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":21,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":300,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":43,"org.easymock.tests2.MockBuilderTest.testCreateMockString":467,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":256,"org.easymock.tests.UsageExpectAndThrowTest.floatType":328,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":164,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":4,"org.easymock.tests.UsageVerifyTest.twoThrows":304,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":71,"org.easymock.samples.ExampleTest.voteAgainstRemoval":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":286,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":112,"org.easymock.tests.LimitationsTest.privateConstructor":356,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":483,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":231,"org.easymock.tests2.UsageTest.defaultResetToNice":194,"org.easymock.samples.ExampleTest.voteAgainstRemovals":46,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":287,"org.easymock.tests.UsageVarargTest.differentLength":433,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":136,"org.easymock.tests2.CallbackTest.callback":89,"org.easymock.tests2.UsageConstraintsTest.equals":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":108,"org.easymock.tests.UsageTest.openCallCountByLastCall":450,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":400,"org.easymock.tests.UsageCallCountTest.tooFewCalls":270,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":325,"org.easymock.tests.UsageThrowableTest.throwCheckedException":228,"org.easymock.tests.MockingTest.testStrictClassMocking":364,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":440,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":185,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":141,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":386,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":184,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":35,"org.easymock.tests.ObjectMethodsTest.testHashCode":308,"org.easymock.tests2.NameTest.nameForNiceMock":459,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":81,"org.easymock.tests2.DependencyTest.testInterfaceMocking":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":13,"org.easymock.samples.ExampleTest.addDocument":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":72,"org.easymock.tests2.DelegateToTest.testStubDelegate":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":75,"org.easymock.tests2.AnswerTest.stubAnswer":5,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":249,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":41,"org.easymock.tests.UsageVarargTest.varargLongAccepted":435,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":421,"org.easymock.tests.UsageExpectAndReturnTest.floatType":405,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":45,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":207,"org.easymock.tests.UsageThrowableTest.noUpperLimit":225,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":148,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":125,"org.easymock.tests2.SerializationTest.test":180,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":215,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":30,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":404,"org.easymock.tests2.UsageConstraintsTest.testSame":153,"org.easymock.samples.SupportTest.addDocument":54,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":65,"org.easymock.tests.GenericTest.testPackageScope":347,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":279,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":206,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":371,"org.easymock.tests2.NameTest.nameForMock":457,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":415,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":475,"org.easymock.tests2.UsageStrictMockTest.differentMethods":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":340,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":306,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":315,"org.easymock.tests2.MockedExceptionTest.testRealException":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":289,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":477,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":399,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":388,"org.easymock.tests2.NameTest.nameForStrictMock":458,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":34,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":104,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":126,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":301,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":129,"org.easymock.tests2.UsageStrictMockTest.range":86,"org.easymock.tests2.UsageConstraintsTest.lessThan":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":14,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":67,"org.easymock.tests2.CaptureTest.testCaptureRightOne":220,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":19,"org.easymock.tests2.UsageConstraintsTest.testOr":154,"org.easymock.tests.UsageRangeTest.combination":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":101,"org.easymock.tests.UsageTest.wrongArguments":449,"org.easymock.tests2.MockBuilderTest.testWithConstructor":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":66,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":277,"org.easymock.tests.UsageVarargTest.varargShortAccepted":434,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":39,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":273,"org.easymock.tests2.UsageConstraintsTest.cmpTo":159,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":278,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests2.CaptureTest.testCaptureFromStub":221,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":378,"org.easymock.tests.UsageTest.unexpectedCallWithArray":448,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":271,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":474,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":417,"org.easymock.tests2.UsageConstraintsTest.constraints":149,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":250,"org.easymock.samples.ExampleTest.addAndChangeDocument":52,"org.easymock.tests.UsageStrictMockTest.testVerify":254,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":58,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":442,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":361,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":409,"org.easymock.tests.LimitationsTest.abstractClass":355,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":462,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":428}}]
