[{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[64,65,66,488],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[34,41,46,489],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[490,47,49,50,52,53,54,55,57,60,61,491,63,64,66,67,70,71,72,73,75,77,79,80,82,83,113,117,492,493,494,128,129,132,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,213,216,222,223,224,224,225,225,227,274,275,331,336,358,433,438],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"searchType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:116","sourceCode":"try {\n    java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[221],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[126,178,185,258,286,294,295,298,300,301,302,303,305,306,307,308,310,311,312,313,368,408,413,424,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[495,496,497,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[271,275],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[36,71,183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,65,69,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,123,124,125,126,127,128,129,130,134,135,136,137,138,139,140,171,172,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,202,203,209,211,212,213,218,226,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,272,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,322,324,325,326,327,328,329,330,334,335,337,338,339,340,341,342,343,344,345,362,363,364,381,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,462,463,464,465,466,467,468,469,470,481,482,483,484,485,486,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[271,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[271,275],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[271],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).startsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[271,275],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[271,275],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[499],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[500,501,502,503,400,410],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[171,202,226,228],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":408,"org.easymock.tests2.UsageTest.argumentsOrdered":188,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":375,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":183,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":226,"org.easymock.tests2.DelegateToTest.testReturnException":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":421,"org.easymock.tests.MockingTest.testPartialClassMocking":474,"org.easymock.tests.MockClassControlTest.testToString":316,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":0,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":151,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":294,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":124,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":28,"org.easymock.tests2.UsageTest.wrongArguments":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":283,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":428,"org.easymock.samples.ExampleTest.answerVsDelegate":232,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":336,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":479,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":70,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":14,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":321,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":492,"org.easymock.tests2.CaptureTest.testPrimitive":102,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":287,"org.easymock.tests.UsageTest.moreThanOneArgument":409,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":313,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":467,"org.easymock.tests.UsageTest.argumentsOrdered":415,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":341,"org.easymock.tests.UsageVarargTest.varargIntAccepted":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":247,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":207,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":251,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":171,"org.easymock.tests.ReplayStateInvalidUsageTest.times":354,"org.easymock.tests2.DependencyTest.testClassMocking":121,"org.easymock.tests2.AnswerTest.answer":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":382,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":87,"org.easymock.tests2.CaptureTest.testAnd":99,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":333,"org.easymock.tests2.UsageTest.strictResetToDefault":179,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":51,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":9,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":279,"org.easymock.tests2.DelegateToTest.testDelegate":98,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":309,"org.easymock.tests.LimitationsTest.mockFinalMethod":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":424,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":397,"org.easymock.tests2.DependencyTest.testClassMockingSupport":122,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":459,"org.easymock.tests2.CaptureTest.testCapture1_2446744":103,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":85,"org.easymock.tests.UsageThrowableTest.throwError":239,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":348,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":335,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":208,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":165,"org.easymock.samples.PartialClassMockTest.testGetArea":227,"org.easymock.tests.MockingTest.testInterfaceMocking":476,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":248,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":363,"org.easymock.tests2.UsageTest.niceToStrict":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":152,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":53,"org.easymock.tests2.MockBuilderTest.testCreateMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":160,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":174,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":303,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":10,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":391,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":426,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":495,"org.easymock.tests.UsageOverloadedMethodTest.overloading":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":156,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":484,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":450,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":256,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":33,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":108,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":262,"org.easymock.tests2.EasyMockSupportClassTest.testAll":144,"org.easymock.tests.MockClassControlTest.testEquals":320,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":273,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":311,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":493,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":395,"org.easymock.tests2.CaptureTest.testCaptureAll":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":86,"org.easymock.tests.MockNameTest.defaultName":470,"org.easymock.tests2.UsageConstraintsTest.testMatches":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":468,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":346,"org.easymock.samples.ExampleTest.voteForRemovals":236,"org.easymock.tests.UsageVarargTest.allKinds":270,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":462,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":396,"org.easymock.samples.BasicClassMockTest.testPrintContent":223,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":245,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":425,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":204,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":437,"org.easymock.tests2.UsageConstraintsTest.greaterThan":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":81,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":438,"org.easymock.samples.ExampleTest.voteForRemoval":233,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":82,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":89,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":491,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":337,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":73,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":407,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":178,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":7,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":420,"org.easymock.tests2.CaptureTest.testCaptureFirst":112,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":8,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":190,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":446,"org.easymock.tests2.UsageTest.moreThanOneArgument":180,"org.easymock.tests2.CaptureTest.testCapture2_2446744":111,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":269,"org.easymock.tests.GenericTest.testBridgedEquals":275,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":496,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":329,"org.easymock.tests.UsageExpectAndReturnTest.longType":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":393,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":5,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":312,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":42,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":465,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":418,"org.easymock.tests.UsageCallCountTest.tooManyCalls":330,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":299,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":244,"org.easymock.tests.MockingTest.testNiceClassMocking":480,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":214,"org.easymock.tests.MockingTest.testClassMocking":472,"org.easymock.tests2.UsageConstraintsTest.testContains":32,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":323,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":129,"org.easymock.tests2.UsageConstraintsTest.testFind":23,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":258,"org.easymock.tests.MockTypeTest.fromEasyMockClass":334,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":211,"org.easymock.tests.UsageExpectAndReturnTest.object":449,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":13,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":264,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":291,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":497,"org.easymock.tests.UsageTest.exactCallCountByLastCall":416,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":252,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":455,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":198,"org.easymock.tests.MockClassControlTest.testHashCode":319,"org.easymock.tests2.EasyMockSupportTest.testVerify":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":154,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":343,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":481,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":84,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":120,"org.easymock.tests.UsageVarargTest.varargCharAccepted":263,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":430,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastCall":184,"org.easymock.tests.DefaultClassInstantiatorTest.object":431,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":16,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":389,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":301,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":494,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":169,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":79,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":456,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":163,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":317,"org.easymock.tests2.UsageTest.resumeIfFailure":189,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":423,"org.easymock.tests2.StubTest.stubWithReturnValue":126,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":448,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":66,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":381,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":501,"org.easymock.samples.SupportTest.voteForRemovals":230,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":306,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":488,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":387,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":192,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":254,"org.easymock.tests.UsageExpectAndThrowTest.object":304,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":40,"org.easymock.tests2.DelegateToTest.testWrongClass":96,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":339,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":340,"org.easymock.tests.UsageStrictMockTest.range":403,"org.easymock.samples.ConstructorCalledMockTest.testTax":224,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":118,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":12,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":305,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":55,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":141,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":427,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":502,"org.easymock.tests2.CaptureTest.testCaptureNone":107,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":364,"org.easymock.tests.UsageUnorderedTest.message":392,"org.easymock.tests.UsageVerifyTest.twoReturns":464,"org.easymock.tests.UsageVarargTest.varargByteAccepted":268,"org.easymock.tests2.ThreadingTest.testThreadSafe":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":158,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":327,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":222,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":292,"org.easymock.tests2.CaptureTest.testCapture_2617107":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":286,"org.easymock.tests2.UsageConstraintsTest.any":30,"org.easymock.tests2.StubTest.stub":125,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":353,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndThrowTest.longType":297,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":435,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":352,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":137,"org.easymock.tests2.SerializationTest.testClass":64,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.LimitationsTest.mockNativeMethod":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":458,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":168,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":140,"org.easymock.tests2.NameTest.nameForMocksControl":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":170,"org.easymock.tests2.MockedExceptionTest.testMockedException":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":146,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":413,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":477,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":210,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":298,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":67,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":57,"org.easymock.tests.MockingTest.testNicePartialClassMocking":475,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":72,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":166,"org.easymock.tests2.CaptureTest.testCaptureLast":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":460,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":220,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":41,"org.easymock.tests.MockingTest.testTwoMocks":473,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":439,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":302,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":187,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.samples.ExampleTest.removeNonExistingDocument":237,"org.easymock.tests.UsageStrictMockTest.differentMethods":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":173,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":199,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":433,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":90,"org.easymock.tests2.MockBuilderTest.testCreateMockString":63,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":148,"org.easymock.tests.UsageExpectAndThrowTest.floatType":296,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":143,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":194,"org.easymock.tests.UsageVerifyTest.twoThrows":463,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":133,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":157,"org.easymock.samples.ExampleTest.voteAgainstRemoval":234,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":376,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":80,"org.easymock.tests.LimitationsTest.privateConstructor":359,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":246,"org.easymock.tests2.UsageTest.defaultResetToNice":186,"org.easymock.samples.ExampleTest.voteAgainstRemovals":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":167,"org.easymock.tests.UsageVarargTest.differentLength":265,"org.easymock.tests2.CallbackTest.callback":212,"org.easymock.tests2.UsageConstraintsTest.equals":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":76,"org.easymock.tests.UsageTest.openCallCountByLastCall":412,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":285,"org.easymock.tests.UsageCallCountTest.tooFewCalls":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":429,"org.easymock.tests.UsageThrowableTest.throwCheckedException":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":503,"org.easymock.tests.MockingTest.testStrictClassMocking":471,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":219,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":215,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":218,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":196,"org.easymock.tests.ObjectMethodsTest.testHashCode":290,"org.easymock.tests2.NameTest.nameForNiceMock":3,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":92,"org.easymock.tests2.DependencyTest.testInterfaceMocking":123,"org.easymock.samples.ExampleTest.addDocument":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":164,"org.easymock.tests2.DelegateToTest.testStubDelegate":95,"org.easymock.tests2.AnswerTest.stubAnswer":195,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":401,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":58,"org.easymock.tests.UsageVarargTest.varargLongAccepted":267,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":374,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":457,"org.easymock.tests.UsageExpectAndReturnTest.floatType":441,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":131,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":225,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":206,"org.easymock.tests.UsageThrowableTest.noUpperLimit":240,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":113,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":104,"org.easymock.tests2.SerializationTest.test":65,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":432,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":440,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.samples.SupportTest.addDocument":229,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":217,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":149,"org.easymock.tests.GenericTest.testPackageScope":272,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":205,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":478,"org.easymock.tests2.NameTest.nameForMock":1,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":451,"org.easymock.tests2.UsageStrictMockTest.differentMethods":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":62,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":77,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":443,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":308,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":280,"org.easymock.tests2.MockedExceptionTest.testRealException":130,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":378,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":284,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":357,"org.easymock.tests2.NameTest.nameForStrictMock":2,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":52,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":498,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":71,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":117,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":434,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":39,"org.easymock.tests.ErrorMessageTest.testGetters":499,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":49,"org.easymock.tests2.UsageStrictMockTest.range":138,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":201,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":490,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":153,"org.easymock.tests2.CaptureTest.testCaptureRightOne":109,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":277,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":68,"org.easymock.tests.UsageTest.wrongArguments":411,"org.easymock.tests2.MockBuilderTest.testWithConstructor":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":150,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":366,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":436,"org.easymock.tests.UsageVarargTest.varargShortAccepted":266,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":328,"org.easymock.tests2.UsageConstraintsTest.cmpTo":31,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":193,"org.easymock.tests2.CompareToTest.testLessThan":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":368,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":185,"org.easymock.tests2.CaptureTest.testCaptureFromStub":110,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":347,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":50,"org.easymock.tests.UsageTest.unexpectedCallWithArray":410,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":453,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":402,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.samples.ExampleTest.addAndChangeDocument":238,"org.easymock.tests.UsageStrictMockTest.testVerify":406,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":228,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":394,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":445,"org.easymock.tests.LimitationsTest.abstractClass":358,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":11,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":260}}]
