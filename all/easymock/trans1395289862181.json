[{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cl":"cl","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","shouldBeUsedInOneThread":"state","this":"this"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[22],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[23,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,20,56,57,58,59,60,61,62,63,64,64,65,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[83,15,84,85,16,17,86,87,88,89,90],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[92,93,94],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.Range:52","failures":[83,95,96,0,97,98,1,2,99,100,101,102,103,104,105,106,107,108,109,110,111,3,112,89,113,114,115,5,116,117,6,7,118,119,120,121,8,122,123,124,73,125,9,10,13,126,14,127,128,129],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[95,0,130,19,1,2,131,99,132,133,134,135,88,40,46,47,49,54,60,62,136,21,137,138,3,112,114,4,5,6,7,118,139,140,121,8,141,9,10,142,143,144,12,145,146,13,147,14,127],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[148,149,150,151,152,153],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[154,155,156,136,157,104,158,159,160,161,108],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[162,163],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[144],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[164,165,166,167,64,65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[168,169,170,171,172,92,173,174,175,176,177,178,179,180,181,182,93,183,184,185,186,187,188,189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[190,191,192],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[193,194],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[157,158,160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[25,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[196],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[197,198,199,200,201,202,203,114,8,204,205,206,207,208],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[209,210],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[154,155,156,136,157,104,158,159,160,161,108],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[211],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[0,1,2,3,4,5,6,7,8,9,10,11,144,12,13,14],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[131,212,213,214,215],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[101,62,216],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[217,128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[3,218,9,10,14],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":157,"org.easymock.tests2.UsageTest.argumentsOrdered":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":210,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":19,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":188,"org.easymock.tests2.SerializationTest.testAllMockedMethod":26,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":211,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.samples.SupportTest.voteForRemovals":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":216,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":91,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":35,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":15,"org.easymock.tests2.UsageTest.wrongArguments":0,"org.easymock.samples.ConstructorCalledMockTest.testTax":64,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":177,"org.easymock.samples.ExampleTest.answerVsDelegate":89,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":70,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":27,"org.easymock.tests2.UsageConstraintsTest.testNull":104,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":208,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests.UsageTest.moreThanOneArgument":115,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":142,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":120,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":67,"org.easymock.tests2.CaptureTest.testCapture_2617107":155,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":43,"org.easymock.tests2.UsageConstraintsTest.any":106,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":212,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests.LimitationsTest.mockNativeMethod":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":203,"org.easymock.tests2.AnswerTest.answer":83,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":75,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":213,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":52,"org.easymock.tests2.CaptureTest.testAnd":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":59,"org.easymock.tests2.NameTest.nameForMocksControl":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":172,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.DelegateToTest.testDelegate":110,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":168,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":194,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":32,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":159,"org.easymock.tests.MockingTest.testTwoMocks":77,"org.easymock.tests2.CaptureTest.testCapture1_2446744":197,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":206,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":1,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":109,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":191,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":193,"org.easymock.tests.UsageStrictMockTest.differentMethods":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":173,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":94,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":180,"org.easymock.tests2.MockBuilderTest.testCreateMockString":49,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":143,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":187,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":21,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":85,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":36,"org.easymock.samples.PartialClassMockTest.testGetArea":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":204,"org.easymock.tests2.UsageTest.niceToStrict":130,"org.easymock.tests2.ThreadingTest.testChangeDefault":192,"org.easymock.tests2.UsageConstraintsTest.testNotNull":108,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":42,"org.easymock.tests2.MockBuilderTest.testCreateMock":46,"org.easymock.samples.ExampleTest.voteAgainstRemovals":149,"org.easymock.tests.UsageVarargTest.differentLength":141,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":169,"org.easymock.tests2.CallbackTest.callback":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":167,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":174,"org.easymock.tests.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":133,"org.easymock.tests.UsageCallCountTest.tooFewCalls":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":30,"org.easymock.tests2.EasyMockSupportClassTest.testAll":34,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":74,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":207,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":50,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":17,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests2.NameTest.nameForNiceMock":102,"org.easymock.tests.UsageVarargTest.allKinds":124,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":125,"org.easymock.samples.BasicClassMockTest.testPrintContent":68,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":137,"org.easymock.tests2.AnswerTest.stubAnswer":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":183,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":126,"org.easymock.tests2.UsageConstraintsTest.greaterThan":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":214,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":62,"org.easymock.samples.ExampleTest.voteForRemoval":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":57,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":33,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":185,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":95,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":71,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":195,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":196,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.tests2.UsageConstraintsTest.testSame":105,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":18,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":99,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":200,"org.easymock.tests.GenericTest.testPackageScope":73,"org.easymock.tests2.CaptureTest.testCapture2_2446744":198,"org.easymock.tests2.UsageTest.moreThanOneArgument":96,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":47,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":184,"org.easymock.tests2.NameTest.nameForMock":100,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":140,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":48,"org.easymock.tests2.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":166,"org.easymock.tests.UsageCallCountTest.tooManyCalls":121,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":176,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":111,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":24,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":39,"org.easymock.tests2.NameTest.nameForStrictMock":101,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":63,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":113,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":86,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":87,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":146,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":58,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":40,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":175,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":182,"org.easymock.tests.UsageTest.exactCallCountByLastCall":118,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":132,"org.easymock.tests2.CaptureTest.testCaptureRightOne":156,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":128,"org.easymock.tests2.UsageConstraintsTest.testOr":158,"org.easymock.tests.UsageRangeTest.combination":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":54,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":123,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor":164,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":179,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":201,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":129,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":90,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":139,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":144,"org.easymock.tests2.UsageConstraintsTest.cmpTo":107,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":84,"org.easymock.tests2.UsageTest.openCallCountByLastCall":97,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":98,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":82,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":23,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":41,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":12,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":205,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":13,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":171,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":60,"org.easymock.tests2.UsageConstraintsTest.constraints":136,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":81,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":37,"org.easymock.tests2.CompareToTest.testGreateThan":162,"org.easymock.tests2.UsageTest.resumeIfFailure":131,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":153,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":69,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":134}}]
