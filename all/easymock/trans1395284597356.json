[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[0],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[0],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,57,58,58,59,60,61,62,63,0,64,65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[79,80,81],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[82,83,84,85,86,87,88,7,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,3,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,17],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[97,101,121,124,127,131],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[136,137],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[20,33,40,138,41,42,43,44,45,46,47,48,139,49,59,63,74,75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","name":"methodName"}},{"position":"org.easymock.internal.LastControl:85","failures":[106,140,141,109],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[142,143,84,86,87,144,19,22,23,24,25,145,26,27,105,28,29,146,30,31,32,34,36,37,38,41,43,45,46,48,51,52,53,54,147,148,149,150,151,59,152,153,154,155,115,117,118,156,157,69,71,72,73,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[140,107],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[84,187,188,189,190,106,191,192,193,194,195,196,197,109,198,199,57,57,58,58,152,153,154,155,200,115,157,119,120,201,175,176,177,178,179,185,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:222","failures":[202,203,204,205],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:193","sourceCode":"final java.lang.Number java.lang.Number = ((java.lang.Number)(java.lang.Object))","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[206,136,207,208,137,209],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[210,211,50,212,9,10,11,12,213,13,14,15,16,17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[153,161,165,170,171,179],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[214,215,216],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[217,218,219,220,221,222,223],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[19,217,20,224,225,226,223,227,228,229,230,231,232,57,58],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[233,234,235,236,237,238],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[19,217,218,219,220,239,240,20,223,227],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[241,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageTest.argumentsOrdered":103,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":16,"org.easymock.tests2.StubTest.stubWithReturnValue":7,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":165,"org.easymock.tests2.SerializationTest.testAllMockedMethod":21,"org.easymock.tests2.DelegateToTest.testReturnException":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":14,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":232,"org.easymock.tests.MockingTest.testPartialClassMocking":71,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.samples.SupportTest.voteForRemovals":151,"org.easymock.tests.MockClassControlTest.testToString":65,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":52,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":143,"org.easymock.tests2.DelegateToTest.testWrongClass":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":185,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":186,"org.easymock.tests2.UsageTest.wrongArguments":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":157,"org.easymock.samples.ConstructorCalledMockTest.testTax":57,"org.easymock.tests.UsageStrictMockTest.range":117,"org.easymock.samples.ExampleTest.answerVsDelegate":237,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":75,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":22,"org.easymock.tests2.UsageConstraintsTest.testNull":106,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":30,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":45,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":120,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":8,"org.easymock.tests.UsageTest.moreThanOneArgument":128,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":132,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":146,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":154,"org.easymock.tests2.CaptureTest.testCaptureNone":95,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":80,"org.easymock.tests.UsageUnorderedTest.message":114,"org.easymock.tests.UsageVerifyTest.twoReturns":125,"org.easymock.tests.UsageTest.argumentsOrdered":133,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":40,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":44,"org.easymock.tests2.UsageConstraintsTest.any":107,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":15,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":78,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests.LimitationsTest.mockNativeMethod":69,"org.easymock.tests2.AnswerTest.answer":82,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":173,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":35,"org.easymock.tests2.NameTest.nameForMocksControl":113,"org.easymock.tests2.MockedExceptionTest.testMockedException":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":182,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.DelegateToTest.testDelegate":236,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":73,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":46,"org.easymock.tests.MockingTest.testNicePartialClassMocking":72,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":32,"org.easymock.tests2.CaptureTest.testCaptureLast":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":203,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":77,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":27,"org.easymock.tests.MockingTest.testTwoMocks":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":202,"org.easymock.tests2.CaptureTest.testCapture1_2446744":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":158,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":198,"org.easymock.tests.UsageThrowableTest.throwError":241,"org.easymock.tests.UsageStrictMockTest.differentMethods":118,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":207,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":81,"org.easymock.tests2.MockBuilderTest.testCreateMockString":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":200,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":108,"org.easymock.tests.UsageVerifyTest.twoThrows":124,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":230,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":53,"org.easymock.samples.PartialClassMockTest.testGetArea":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":176,"org.easymock.samples.ExampleTest.voteAgainstRemoval":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":37,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":60,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":210,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":216,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":43,"org.easymock.tests2.MockBuilderTest.testCreateMock":47,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":169,"org.easymock.tests2.CallbackTest.callback":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":224,"org.easymock.tests.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":188,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":25,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":166,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":135,"org.easymock.tests2.EasyMockSupportClassTest.testAll":51,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":62,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests2.CaptureTest.testCaptureAll":89,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":213,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":26,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":24,"org.easymock.tests2.UsageConstraintsTest.testMatches":195,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":155,"org.easymock.samples.ExampleTest.voteForRemovals":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":221,"org.easymock.tests2.NameTest.nameForNiceMock":112,"org.easymock.tests.UsageVarargTest.allKinds":122,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":123,"org.easymock.tests2.DependencyTest.testInterfaceMocking":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":220,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests2.DelegateToTest.testStubDelegate":105,"org.easymock.tests2.AnswerTest.stubAnswer":83,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":18,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":115,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":240,"org.easymock.tests2.UsageConstraintsTest.greaterThan":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":181,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":209,"org.easymock.samples.ExampleTest.voteForRemoval":148,"org.easymock.tests.UsageExpectAndReturnTest.floatType":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":172,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":33,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":58,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":197,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":76,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":189,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":92,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":12,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":136,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":121,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":159,"org.easymock.tests2.UsageConstraintsTest.testSame":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":13,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.GenericTest.testPackageScope":61,"org.easymock.tests2.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":144,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests2.NameTest.nameForMock":110,"org.easymock.tests.UsageExpectAndReturnTest.longType":161,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":167,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":229,"org.easymock.tests2.UsageStrictMockTest.differentMethods":87,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":183,"org.easymock.tests2.MockedExceptionTest.testRealException":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":231,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":119,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":23,"org.easymock.tests2.UsageConstraintsTest.testContains":193,"org.easymock.tests2.NameTest.nameForStrictMock":111,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":138,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":190,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":126,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":215,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":31,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":208,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":34,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":41,"org.easymock.tests2.UsageStrictMockTest.range":86,"org.easymock.tests2.UsageConstraintsTest.lessThan":199,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":219,"org.easymock.tests.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":239,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":79,"org.easymock.tests2.UsageConstraintsTest.testOr":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":217,"org.easymock.tests.UsageRangeTest.combination":180,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":29,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":170,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":238,"org.easymock.tests.UsageTest.wrongArguments":129,"org.easymock.tests2.MockBuilderTest.testWithConstructor":225,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":168,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":137,"org.easymock.tests2.UsageTest.openCallCountByLastCall":100,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":214,"org.easymock.tests.DefaultClassInstantiatorTest.object":206,"org.easymock.tests2.CaptureTest.testCaptureFromStub":187,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":42,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":242,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":228,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":67,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":36,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":9,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":54,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":178}}]
