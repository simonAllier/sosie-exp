[{"position":"org.easymock.internal.MockBuilder:205","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[37,38,39,40],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[18,33],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[88,89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[3,19,22,91,92,93,94,95,28],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:100","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[96,97,98,99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[19,91,92,93,94,95,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[43,44,45,59,62,63,64,65,66,75,76,78,81,82],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[47,54,62,69,71,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[103],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[3,104,105,106],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[49,50,70],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[107,108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,42,41,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,0,1,2,152,3,104,153,154,155,156,157,158,4,107,159,6,7,160,161,162,163,164,165,166,167,168,169,37,170,108,171,172,38,173,57,174,102,175,176,177,178,179,180,39,181,182,183,9,184,185,186,58,59,187,188,189,190,10,16,17,18,20,23,26,191,27,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,61,62,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,96,241,242,243,244,245,68,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,77,78,265,266,267,268,269,270,271,272,273,80,81,82,274,275,276,277,278,279,280,281,282,283,284,285,97,286,98,287,288,289,290,291,292,293,294,295,296,297,298,299,99,100,300,301,83,302,303,85,86,304,305,306,307,308,309,310,311,312,313,314,315,101,316,317,318,319,320,34,35,35,36,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[110,111,112,113,114,115,116,117,321,118,119,322,323,120,121,123,324,128,129,42,41,130,131,133,134,136,137,138,139,140,141,142,144,145,146,147,149,150,151,0,1,2,152,3,104,153,154,155,156,157,158,107,7,161,162,163,164,165,166,167,168,169,37,170,108,171,172,38,173,57,174,102,175,176,177,178,179,180,39,181,182,58,59,60,188,16,18,20,191,27,192,193,194,195,196,197,208,61,209,210,211,212,325,234,235,236,237,238,239,240,245,31,246,326,327,328,259,260,261,77,78,79,80,82,276,277,278,279,280,329,330,331,332,333,281,282,283,284,285,97,286,98,287,288,289,290,291,292,293,294,295,296,297,298,299,99,100,304,306,307,313,314,315,101,316,317,334,319,335,336,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[164,168],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[110,111,112,113,337,114,115,116,338,117,321,339,118,119,340,341,322,323,120,121,122,123,324,124,125,126,127,342,128,129,42,43,41,343,130,131,132,44,45,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,344,345,149,150,346,347,348,151,349,350,0,351,352,353,354,355,356,357,358,359,1,360,361,362,363,364,2,365,366,367,88,89,368,369,370,371,372,373,374,375,152,376,377,378,379,380,381,3,104,105,382,383,384,153,154,155,156,157,158,4,385,107,5,386,159,6,7,160,387,8,161,162,163,164,87,165,166,167,168,169,37,388,170,108,171,172,38,173,57,174,102,175,176,177,389,178,179,180,39,181,390,391,392,182,183,9,184,185,186,393,394,58,395,59,60,396,397,187,188,189,398,190,399,400,401,402,403,10,12,13,15,16,17,18,20,21,22,23,24,26,404,191,27,28,405,406,407,408,409,410,192,411,193,194,195,196,412,413,414,415,416,197,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,198,199,200,201,202,203,204,205,206,207,208,61,62,63,209,210,64,65,211,66,212,213,435,325,436,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,437,235,236,237,238,239,240,438,96,241,242,243,244,30,245,439,31,440,67,68,441,442,443,246,444,445,446,447,448,247,248,249,250,251,252,253,254,255,256,257,258,326,327,328,259,260,261,449,262,263,264,450,451,452,453,76,77,454,78,79,455,265,266,267,268,269,270,271,272,273,456,32,457,458,459,460,33,461,462,80,81,82,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,274,486,487,488,489,275,490,491,492,493,494,495,496,276,277,278,279,280,497,498,499,500,501,502,503,504,505,506,507,508,329,509,330,510,511,512,513,514,515,516,517,331,332,518,333,519,520,521,281,282,522,283,523,524,525,284,285,97,286,98,287,288,289,290,291,292,293,294,295,296,297,298,299,99,100,300,526,527,528,529,530,531,301,83,302,303,84,85,86,304,305,306,307,308,309,310,311,312,313,314,532,533,315,101,316,317,318,334,319,534,335,320,535,536,336,537,538,539,34,540,35,36],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[343,157,57,253],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[117,339,118,119,340,341,322,120,541,121],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[129],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[110,111,112,113,114,115,116,117,321,118,119,322,323,120,121,123,324,128,129,42,41,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,0,1,2,152,3,104,153,154,155,156,157,158,107,6,7,160,161,162,163,164,165,166,167,168,169,37,170,108,171,172,38,173,57,174,102,175,176,177,178,179,180,39,181,182,185,58,59,60,188,12,16,18,20,24,191,27,192,193,194,195,196,197,208,61,209,210,211,212,325,234,235,236,237,238,239,240,245,31,246,326,327,328,259,260,261,77,78,79,80,82,276,277,278,279,280,329,330,331,332,333,281,282,283,284,285,97,286,98,287,288,289,290,291,292,293,294,295,296,297,298,299,99,100,85,304,305,306,307,313,314,315,101,316,317,334,319,335,336,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[166,388,175,179],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[154,8,399,400],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"invocation"}},{"position":"org.easymock.internal.LastControl:95","failures":[117,339,121,163,164,166,168,169,388,175,179],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[110,111,112,113,115,116,346,151,350,351,352,355,358,360,361,364,367,368,105,153,154,156,157,158,4,107,386,159,6,7,160,387,8,9,184,185,30,245,439,440,442,443,246,444,266,267,268,269,270,271,272,273,456,519,520,521,281,282,283,525,300,526,527,528,529,530,531,538,539,34,35,36],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[191,202,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,261,81,497,498,499,503,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":164,"org.easymock.tests2.UsageTest.argumentsOrdered":45,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":208,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":509,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":343,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":540,"org.easymock.tests2.DelegateToTest.testReturnException":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":199,"org.easymock.tests.MockingTest.testPartialClassMocking":281,"org.easymock.tests.MockClassControlTest.testToString":268,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":399,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":517,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":214,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":150,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":91,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":37,"org.easymock.tests2.UsageTest.wrongArguments":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":313,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":206,"org.easymock.samples.ExampleTest.answerVsDelegate":318,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":33,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":524,"org.easymock.tests2.UsageConstraintsTest.testNull":166,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":156,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":145,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":273,"org.easymock.tests2.CaptureTest.testPrimitive":118,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":315,"org.easymock.tests.UsageTest.moreThanOneArgument":61,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":233,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":242,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":492,"org.easymock.tests.UsageTest.argumentsOrdered":65,"org.easymock.tests.UsageVarargTest.varargIntAccepted":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":513,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":276,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":280,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":468,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":50,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":152,"org.easymock.tests.ReplayStateInvalidUsageTest.times":255,"org.easymock.tests2.DependencyTest.testClassMocking":344,"org.easymock.tests2.AnswerTest.answer":181,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":515,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":127,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":458,"org.easymock.tests2.CaptureTest.testAnd":117,"org.easymock.tests2.UsageTest.strictResetToDefault":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":140,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":306,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":496,"org.easymock.tests2.DelegateToTest.testDelegate":190,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":467,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":229,"org.easymock.tests.LimitationsTest.mockFinalMethod":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":312,"org.easymock.tests2.DependencyTest.testClassMockingSupport":345,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":67,"org.easymock.tests2.CaptureTest.testCapture1_2446744":119,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":125,"org.easymock.tests.UsageThrowableTest.throwError":234,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":249,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":460,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":471,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests.MockingTest.testInterfaceMocking":522,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":277,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":327,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":451,"org.easymock.tests2.UsageTest.niceToStrict":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":355,"org.easymock.tests2.ThreadingTest.testChangeDefault":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":500,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":16,"org.easymock.tests2.MockBuilderTest.testCreateMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":378,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":223,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":141,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":457,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":499,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":485,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":204,"org.easymock.tests.UsageOverloadedMethodTest.overloading":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":364,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":38,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":303,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":293,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":172,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":120,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":426,"org.easymock.tests2.EasyMockSupportClassTest.testAll":151,"org.easymock.tests.MockClassControlTest.testEquals":272,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":439,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":52,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":310,"org.easymock.tests2.CaptureTest.testCaptureAll":321,"org.easymock.tests.MockNameTest.defaultName":438,"org.easymock.tests2.UsageConstraintsTest.testMatches":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":243,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":247,"org.easymock.samples.ExampleTest.voteForRemovals":335,"org.easymock.tests.UsageVarargTest.allKinds":434,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":80,"org.easymock.samples.BasicClassMockTest.testPrintContent":539,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":311,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":239,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":393,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":418,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":203,"org.easymock.tests2.UsageConstraintsTest.greaterThan":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":160,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":472,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":531,"org.easymock.samples.ExampleTest.voteForRemoval":334,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":387,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":4,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":464,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":456,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":507,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":138,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":198,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":397,"org.easymock.tests2.CaptureTest.testCaptureFirst":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":506,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":139,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":289,"org.easymock.tests2.CaptureTest.testCapture2_2446744":123,"org.easymock.tests2.UsageTest.moreThanOneArgument":42,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":516,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":24,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":433,"org.easymock.tests.GenericTest.testBridgedEquals":440,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":490,"org.easymock.tests.UsageExpectAndReturnTest.longType":286,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":308,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":232,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":448,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":389,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":230,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":96,"org.easymock.tests.UsageCallCountTest.tooManyCalls":491,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":70,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":380,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":238,"org.easymock.tests.MockingTest.testNiceClassMocking":525,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":111,"org.easymock.tests.MockingTest.testClassMocking":520,"org.easymock.tests2.UsageConstraintsTest.testContains":171,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":274,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":185,"org.easymock.tests2.UsageConstraintsTest.testFind":165,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":261,"org.easymock.tests.MockTypeTest.fromEasyMockClass":459,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":452,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":384,"org.easymock.tests.UsageExpectAndReturnTest.object":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":144,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":92,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":264,"org.easymock.tests.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":505,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":493,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":435,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":28,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":423,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":302,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":413,"org.easymock.tests.MockClassControlTest.testHashCode":271,"org.easymock.tests2.EasyMockSupportTest.testVerify":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":357,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":49,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":494,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":498,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":124,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":135,"org.easymock.tests.UsageVarargTest.varargCharAccepted":427,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":333,"org.easymock.tests2.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":147,"org.easymock.tests.DefaultClassInstantiatorTest.object":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":497,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":262,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":412,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":470,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":6,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":220,"org.easymock.tests.ReplayStateInvalidCallsTest.times":476,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":445,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":2,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":51,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":269,"org.easymock.tests2.UsageTest.resumeIfFailure":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":201,"org.easymock.tests2.StubTest.stubWithReturnValue":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":19,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":291,"org.easymock.tests2.SerializationTest.testAllMockedMethod":105,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":514,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":54,"org.easymock.samples.SupportTest.voteForRemovals":336,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":226,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":106,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":518,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":390,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":436,"org.easymock.tests.UsageExpectAndThrowTest.object":224,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":176,"org.easymock.tests2.DelegateToTest.testWrongClass":189,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":474,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":316,"org.easymock.samples.ConstructorCalledMockTest.testTax":35,"org.easymock.tests.UsageStrictMockTest.range":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":369,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":143,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":18,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":205,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":69,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":466,"org.easymock.tests2.CaptureTest.testCaptureNone":323,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":328,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":406,"org.easymock.tests.UsageUnorderedTest.message":66,"org.easymock.tests.UsageVerifyTest.twoReturns":82,"org.easymock.tests.UsageVarargTest.varargByteAccepted":432,"org.easymock.tests2.ThreadingTest.testThreadSafe":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":360,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":489,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":538,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":450,"org.easymock.tests2.CaptureTest.testCapture_2617107":339,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":56,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":533,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":331,"org.easymock.tests2.UsageConstraintsTest.any":170,"org.easymock.tests2.StubTest.stub":404,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":254,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":200,"org.easymock.tests.UsageExpectAndThrowTest.longType":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":529,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":253,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":395,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests.LimitationsTest.mockNativeMethod":246,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":31,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":373,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":482,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":396,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":407,"org.easymock.tests2.NameTest.nameForMocksControl":403,"org.easymock.tests2.MockedExceptionTest.testMockedException":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":350,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":218,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":283,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":20,"org.easymock.tests.MockingTest.testNicePartialClassMocking":282,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":158,"org.easymock.tests2.CompareToTest.testCompareEqual":109,"org.easymock.tests2.CaptureTest.testCaptureLast":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":68,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":481,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":169,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":116,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":177,"org.easymock.tests.MockingTest.testTwoMocks":521,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":478,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":338,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":222,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":180,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":410,"org.easymock.samples.ExampleTest.removeNonExistingDocument":320,"org.easymock.tests.UsageStrictMockTest.differentMethods":79,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":414,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":527,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":409,"org.easymock.tests2.ConstraintsToStringTest.andToString":53,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":194,"org.easymock.tests2.MockBuilderTest.testCreateMockString":26,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":266,"org.easymock.tests.UsageExpectAndThrowTest.floatType":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":351,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":392,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":29,"org.easymock.tests.UsageVerifyTest.twoThrows":81,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":1,"org.easymock.samples.ExampleTest.voteAgainstRemoval":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":330,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":7,"org.easymock.tests.LimitationsTest.privateConstructor":443,"org.easymock.tests2.UsageConstraintsTest.testNotNull":179,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":240,"org.easymock.tests2.UsageTest.defaultResetToNice":132,"org.easymock.samples.ExampleTest.voteAgainstRemovals":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":510,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":297,"org.easymock.tests.UsageVarargTest.differentLength":429,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":372,"org.easymock.tests2.CallbackTest.callback":342,"org.easymock.tests2.UsageConstraintsTest.equals":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":5,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":72,"org.easymock.tests.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":532,"org.easymock.tests.UsageCallCountTest.tooFewCalls":487,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":113,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":207,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":408,"org.easymock.tests.UsageThrowableTest.throwCheckedException":237,"org.easymock.tests.MockingTest.testStrictClassMocking":519,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":71,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":115,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":213,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":114,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":183,"org.easymock.tests2.CompareToTest.testGreateOrEqual":40,"org.easymock.tests.ObjectMethodsTest.testHashCode":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":94,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":480,"org.easymock.tests2.NameTest.nameForNiceMock":402,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":196,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":475,"org.easymock.tests2.DependencyTest.testInterfaceMocking":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":93,"org.easymock.samples.ExampleTest.addDocument":534,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":361,"org.easymock.tests2.DelegateToTest.testStubDelegate":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.AnswerTest.stubAnswer":182,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":77,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":21,"org.easymock.tests.UsageVarargTest.varargLongAccepted":431,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":329,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":99,"org.easymock.tests.UsageExpectAndReturnTest.floatType":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":27,"org.easymock.tests2.ConstraintsToStringTest.orToString":46,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":36,"org.easymock.tests.UsageThrowableTest.noUpperLimit":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":420,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":102,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":84,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":162,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":367,"org.easymock.tests2.SerializationTest.test":104,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":340,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":526,"org.easymock.tests2.UsageConstraintsTest.testSame":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":285,"org.easymock.samples.SupportTest.addDocument":536,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":337,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":465,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":352,"org.easymock.tests.GenericTest.testPackageScope":245,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":504,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":419,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":523,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":463,"org.easymock.tests2.NameTest.nameForMock":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":294,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":25,"org.easymock.tests2.UsageStrictMockTest.differentMethods":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":386,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":228,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":449,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":307,"org.easymock.tests2.MockedExceptionTest.testRealException":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":512,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":370,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":511,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":58,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":314,"org.easymock.tests2.NameTest.nameForStrictMock":401,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":15,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":157,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":368,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":528,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":175,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":12,"org.easymock.tests2.UsageStrictMockTest.range":59,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":469,"org.easymock.tests2.UsageConstraintsTest.lessThan":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":416,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":508,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":137,"org.easymock.tests2.CaptureTest.testCaptureRightOne":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":356,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":405,"org.easymock.tests2.UsageConstraintsTest.testOr":168,"org.easymock.tests.UsageRangeTest.combination":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":154,"org.easymock.tests.UsageTest.wrongArguments":63,"org.easymock.tests2.MockBuilderTest.testWithConstructor":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":353,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":501,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":295,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":530,"org.easymock.tests.UsageVarargTest.varargShortAccepted":430,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":275,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":483,"org.easymock.tests2.UsageConstraintsTest.cmpTo":108,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":391,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":503,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.CaptureTest.testCaptureFromStub":122,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":248,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":13,"org.easymock.tests.UsageTest.unexpectedCallWithArray":62,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":479,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":488,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":296,"org.easymock.tests2.CaptureTest.testCapture":541,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":454,"org.easymock.tests2.UsageConstraintsTest.constraints":163,"org.easymock.samples.ExampleTest.addAndChangeDocument":535,"org.easymock.tests2.ConstraintsToStringTest.notToString":48,"org.easymock.tests.UsageStrictMockTest.testVerify":265,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":537,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":453,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":309,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":278,"org.easymock.tests.LimitationsTest.abstractClass":442,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":288,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":279,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":142}}]
