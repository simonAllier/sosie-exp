[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[17],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[18,19,20,21,22,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[24,11,25,26,27,28,29,30,31,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,12,75,13,14,15,76,77,0,1,78,2,79,3,4,80,5,81,82,83,84,85,86,17,87,88,6,89,90,91,92,7,93,94,95,96,97,98,99,100,101,102,103,104,105,106,8,107,9,108,109,110,111,112,113,114,10,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,20,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,23,263,264,265,266,267,268,269,16,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[302,303,304,305,306,307,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[45,47,309,310,289,290,291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:98","sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"failures":[311],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[18,19,20,21,22,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[34,37,38,39,43,44,45,46,63,67,68,71,0,17,95,97,98,99,122,132,137,138,139,143,151,153,157,175,20,177,180,181,182,188,312,313,314,262,23,264,265,266,275,276,288,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[150],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[8,9,108,109,110,111,112,114,316,10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:163","failures":[105,106],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[317,318,319],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[317,318,319],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[24,11,25,26,320,27,321,28,322,29,323,324,325,30,31,31,32,32,326,33,302,327,34,35,36,37,38,39,40,41,42,43,44,45,46,328,47,48,329,330,331,49,332,333,50,334,335,336,337,338,339,340,341,342,51,343,344,345,346,347,52,348,349,53,54,55,56,57,350,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,351,74,12,75,13,14,15,76,77,0,1,352,78,2,79,3,4,80,5,81,82,83,84,85,86,17,87,88,6,89,90,91,92,7,93,94,95,353,96,97,98,99,100,354,355,356,357,358,101,102,103,104,105,106,8,107,9,108,109,110,111,112,113,114,10,115,116,117,118,119,120,121,122,359,360,361,362,363,123,364,365,366,367,368,369,124,125,126,127,128,129,130,131,370,132,371,372,373,133,134,135,308,136,374,137,138,375,139,376,377,140,141,378,379,380,381,142,143,144,145,146,147,148,382,149,383,384,150,151,152,153,385,386,387,388,389,390,391,154,392,393,394,395,396,397,155,156,157,158,159,160,398,399,161,400,162,163,164,165,401,166,402,167,168,169,170,171,172,173,174,175,176,20,177,178,179,180,181,182,183,184,185,186,187,188,403,404,189,190,191,405,192,406,407,408,193,194,409,195,196,197,410,198,199,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,200,309,428,429,430,431,201,432,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,433,434,435,436,437,438,439,310,440,441,442,443,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,444,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,445,446,447,448,449,450,257,258,259,260,451,261,452,453,454,312,313,314,262,455,23,263,264,265,266,267,456,268,269,16,270,271,272,273,274,275,276,457,458,459,460,461,317,462,463,464,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,465,299,300,466,467,468,469,470,471,472,473,315,474,475,476,477,301,478,479,480,481,482,483,484,311,485,486,487,488,489,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:39","sourceCode":"if (!(org.easymock.IArgumentMatcher.matches(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[0,4,8,9,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[491,492,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[385,157],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[36,37,43,44,18,494,19,495,176,20,177,180,181,21,22,496,23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[17],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,9,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[497,498,499,500],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[102],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[43,352,180],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[199,437],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:229","failures":[50],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[24,11,25,26,320,27,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,328,47,48,53,54,55,56,57,58,59,60,61,12,75,13,15,76,77,0,1,78,2,79,3,4,80,81,82,83,84,85,86,17,87,88,6,89,90,92,7,93,94,95,353,96,97,98,99,100,355,356,357,358,101,104,105,106,8,107,9,108,109,110,111,112,113,114,10,115,116,117,118,119,120,121,122,125,126,129,130,131,133,134,138,139,140,142,143,144,145,146,147,149,150,152,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,173,174,175,176,20,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,199,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,437,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,260,451,261,452,453,454,262,455,23,263,264,265,266,267,456,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,468,469,470,472,473,474,475,476,477,301,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[59,60,61,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":175,"org.easymock.tests2.UsageTest.argumentsOrdered":44,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":422,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":39,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":323,"org.easymock.tests2.DelegateToTest.testReturnException":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":278,"org.easymock.tests.MockingTest.testPartialClassMocking":190,"org.easymock.tests.MockClassControlTest.testToString":485,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":354,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":237,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":303,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":183,"org.easymock.tests2.UsageTest.wrongArguments":37,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":164,"org.easymock.samples.ExampleTest.answerVsDelegate":11,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":448,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":407,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":145,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":490,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":71,"org.easymock.tests2.CaptureTest.testPrimitive":108,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":187,"org.easymock.tests.UsageTest.moreThanOneArgument":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":256,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":232,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":465,"org.easymock.tests.UsageTest.argumentsOrdered":181,"org.easymock.tests.UsageVarargTest.varargIntAccepted":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":283,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":368,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":287,"org.easymock.tests.ReplayStateInvalidUsageTest.times":440,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":154,"org.easymock.tests2.DependencyTest.testClassMocking":376,"org.easymock.tests2.AnswerTest.answer":101,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":121,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":150,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":66,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":290,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":467,"org.easymock.tests2.DelegateToTest.testDelegate":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":252,"org.easymock.tests.LimitationsTest.mockFinalMethod":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":171,"org.easymock.tests2.DependencyTest.testClassMockingSupport":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":198,"org.easymock.tests2.CaptureTest.testCapture1_2446744":109,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":119,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":435,"org.easymock.tests.UsageThrowableTest.throwError":222,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":447,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":349,"org.easymock.samples.PartialClassMockTest.testGetArea":30,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":436,"org.easymock.tests.MockingTest.testInterfaceMocking":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":284,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":296,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":483,"org.easymock.tests2.UsageTest.niceToStrict":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":338,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":133,"org.easymock.tests2.MockBuilderTest.testCreateMock":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":345,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":394,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":246,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":67,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":260,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":162,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":85,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":270,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":213,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":84,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":318,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":114,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":471,"org.easymock.tests.MockClassControlTest.testEquals":489,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":196,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":120,"org.easymock.tests2.CaptureTest.testCaptureAll":107,"org.easymock.tests.MockNameTest.defaultName":444,"org.easymock.tests2.UsageConstraintsTest.testMatches":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":433,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":233,"org.easymock.samples.ExampleTest.voteForRemovals":27,"org.easymock.tests.UsageVarargTest.allKinds":301,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":170,"org.easymock.samples.BasicClassMockTest.testPrintContent":325,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":228,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":95,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":365,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":463,"org.easymock.tests2.UsageConstraintsTest.greaterThan":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":289,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":153,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":464,"org.easymock.samples.ExampleTest.voteForRemoval":25,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":385,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":156,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":148,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":160,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":64,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":277,"org.easymock.tests2.CaptureTest.testCaptureFirst":117,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":65,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":46,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":209,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":158,"org.easymock.tests2.CaptureTest.testCapture2_2446744":116,"org.easymock.tests2.UsageTest.moreThanOneArgument":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":138,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":477,"org.easymock.tests.GenericTest.testBridgedEquals":410,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":313,"org.easymock.tests.UsageExpectAndReturnTest.longType":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":167,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":62,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":255,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":91,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":230,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":293,"org.easymock.tests.UsageCallCountTest.tooManyCalls":314,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":346,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":242,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":227,"org.easymock.tests.MockingTest.testNiceClassMocking":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":125,"org.easymock.tests.MockingTest.testClassMocking":404,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":451,"org.easymock.tests2.UsageConstraintsTest.testContains":83,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":55,"org.easymock.tests2.UsageConstraintsTest.testFind":78,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":446,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":58,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":262,"org.easymock.tests.UsageExpectAndReturnTest.object":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":70,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":473,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":304,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":481,"org.easymock.tests.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":401,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":299,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":496,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":302,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":468,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":218,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":16,"org.easymock.tests.MockClassControlTest.testHashCode":488,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":360,"org.easymock.tests2.EasyMockSupportTest.testVerify":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":340,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":258,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":118,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":328,"org.easymock.tests.UsageVarargTest.varargCharAccepted":472,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":457,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":432,"org.easymock.tests2.UsageTest.openCallCountByLastCall":40,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":491,"org.easymock.tests.DefaultClassInstantiatorTest.object":458,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":257,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":479,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":341,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":390,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":359,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":487,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":292,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests2.UsageTest.resumeIfFailure":45,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":280,"org.easymock.tests2.StubTest.stubWithReturnValue":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":308,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":211,"org.easymock.tests2.SerializationTest.testAllMockedMethod":61,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":200,"org.easymock.samples.SupportTest.voteForRemovals":29,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":19,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":249,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":201,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":102,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":402,"org.easymock.tests.UsageExpectAndThrowTest.object":247,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":89,"org.easymock.tests2.DelegateToTest.testWrongClass":13,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":194,"org.easymock.samples.ConstructorCalledMockTest.testTax":31,"org.easymock.tests.UsageStrictMockTest.range":265,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":380,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":69,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":124,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":248,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":135,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":442,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":163,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":21,"org.easymock.tests2.CaptureTest.testCaptureNone":113,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":297,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":498,"org.easymock.tests.UsageUnorderedTest.message":188,"org.easymock.tests.UsageVerifyTest.twoReturns":276,"org.easymock.tests.UsageVarargTest.varargByteAccepted":476,"org.easymock.tests2.ThreadingTest.testThreadSafe":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":343,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":454,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":482,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":324,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":186,"org.easymock.tests2.UsageConstraintsTest.any":81,"org.easymock.tests2.StubTest.stub":47,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":310,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndThrowTest.longType":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":279,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":317,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":439,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":97,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":123,"org.easymock.tests2.SerializationTest.testClass":59,"org.easymock.tests.LimitationsTest.mockNativeMethod":161,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":221,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":389,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":100,"org.easymock.tests2.NameTest.nameForMocksControl":358,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":391,"org.easymock.tests2.MockedExceptionTest.testMockedException":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":333,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":241,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":350,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":142,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":136,"org.easymock.tests.MockingTest.testNicePartialClassMocking":191,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":147,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":387,"org.easymock.tests2.CaptureTest.testCaptureLast":112,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":130,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":90,"org.easymock.tests.MockingTest.testTwoMocks":189,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":245,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":43,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":93,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":500,"org.easymock.samples.ExampleTest.removeNonExistingDocument":321,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":437,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":393,"org.easymock.tests.UsageStrictMockTest.differentMethods":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":361,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":460,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":157,"org.easymock.tests2.MockBuilderTest.testCreateMockString":139,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":484,"org.easymock.tests.UsageExpectAndThrowTest.floatType":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":334,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":104,"org.easymock.tests.UsageVerifyTest.twoThrows":275,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":327,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":152,"org.easymock.tests.LimitationsTest.privateConstructor":399,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":229,"org.easymock.tests2.UsageTest.defaultResetToNice":42,"org.easymock.samples.ExampleTest.voteAgainstRemovals":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":388,"org.easymock.tests.UsageVarargTest.differentLength":315,"org.easymock.tests2.CallbackTest.callback":122,"org.easymock.tests2.UsageConstraintsTest.equals":352,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":383,"org.easymock.tests.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":185,"org.easymock.tests.UsageCallCountTest.tooFewCalls":452,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":127,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":165,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":499,"org.easymock.tests.UsageThrowableTest.throwCheckedException":226,"org.easymock.tests.MockingTest.testStrictClassMocking":403,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":22,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":129,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":392,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":126,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":441,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":128,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":106,"org.easymock.tests.ObjectMethodsTest.testHashCode":480,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":306,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":159,"org.easymock.tests2.NameTest.nameForNiceMock":357,"org.easymock.tests2.DependencyTest.testInterfaceMocking":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":305,"org.easymock.samples.ExampleTest.addDocument":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":344,"org.easymock.tests2.DelegateToTest.testStubDelegate":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.AnswerTest.stubAnswer":105,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":263,"org.easymock.tests.UsageVarargTest.varargLongAccepted":475,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.floatType":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":33,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":32,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests.UsageThrowableTest.noUpperLimit":223,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":367,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":77,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":378,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":110,"org.easymock.tests2.SerializationTest.test":60,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":319,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":459,"org.easymock.tests2.UsageConstraintsTest.testSame":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":203,"org.easymock.samples.SupportTest.addDocument":322,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":335,"org.easymock.tests.GenericTest.testPackageScope":195,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":366,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":406,"org.easymock.tests2.NameTest.nameForMock":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":214,"org.easymock.tests2.UsageStrictMockTest.differentMethods":99,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":375,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":251,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":478,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":291,"org.easymock.tests2.MockedExceptionTest.testRealException":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":425,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":96,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":443,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":184,"org.easymock.tests2.NameTest.nameForStrictMock":356,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":492,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":146,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":379,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":461,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":132,"org.easymock.tests2.UsageStrictMockTest.range":98,"org.easymock.tests2.UsageConstraintsTest.lessThan":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":63,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":339,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":497,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":288,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":143,"org.easymock.tests.UsageTest.wrongArguments":177,"org.easymock.tests2.MockBuilderTest.testWithConstructor":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":336,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":215,"org.easymock.tests.UsageVarargTest.varargShortAccepted":474,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":462,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":312,"org.easymock.tests2.UsageConstraintsTest.cmpTo":82,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.CaptureTest.testCaptureFromStub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":434,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":371,"org.easymock.tests.UsageTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":453,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":216,"org.easymock.tests2.CaptureTest.testCapture":316,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":264,"org.easymock.samples.ExampleTest.addAndChangeDocument":28,"org.easymock.tests.UsageStrictMockTest.testVerify":456,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":326,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":455,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":168,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":285,"org.easymock.tests.LimitationsTest.abstractClass":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":208,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":286,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":68}}]
