[{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:29","sourceCode":"new org.easymock.internal.matchers.Any()","type":"CtNewClassImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[25,26,27],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + java.lang.String) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.EasyMock.DISABLE_CLASS_MOCKING":"message"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[29,30,31,32,33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[39,40,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[43,44,45,46,47,48,0,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,1,75,76,2,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,3,99,100,101,102,103,4,5,104,105,106,107,6,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,8,9,10,11,12,157,158,159,160,13,161,162,163,164,165,166,14,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,15,16,17,18,19,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,20,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,27,21,22,258,259,260,261,262,263,264,265,23,24,266,267,268,269,270,271,272,273,274,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[93,276,277,278,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[280,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[258,261],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[280,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[282,113,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"position":"org.easymock.internal.RecordState:305","failures":[25,26,27],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[284,70,76,80,91],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[285],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[43,286,287,44,45,46,47,48,0,49,50,51,52,53,54,55,288,56,57,58,59,60,289,290,291,292,61,62,63,64,65,66,67,68,69,70,71,72,73,74,1,75,76,28,2,77,78,79,80,81,82,83,84,85,86,87,293,88,89,90,91,294,93,276,277,95,98,3,99,100,101,102,103,4,5,104,105,106,107,6,295,296,297,298,299,300,301,302,303,304,305,306,307,308,108,109,110,111,282,112,113,114,309,115,120,121,122,123,124,125,126,127,128,129,130,131,132,133,310,134,135,311,312,136,137,138,139,140,141,142,143,144,145,146,313,148,314,149,315,279,316,317,317,318,318,319,320,321,150,151,152,153,154,155,156,322,323,8,9,10,11,12,157,158,159,160,13,161,324,162,163,25,325,164,165,166,14,167,168,169,170,171,176,326,177,178,179,180,327,328,329,330,331,332,182,333,334,335,336,337,183,34,35,36,37,15,16,17,18,19,184,185,186,187,188,189,190,191,197,198,338,199,200,201,202,203,339,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,20,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,285,340,341,342,343,26,27,21,22,258,259,260,261,262,263,264,265,23,24,344,266,267,268,269,271,272,273,274,345,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[100],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[43,61,62,63,348],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[350,351,352,42,353,354,355,356,135,137,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,50,51,122,358,359,360,361,14,168,169,184,185,186,20,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[53,362,363,364,365,366,353,367,356],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[368,369,370],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[57,58],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[0,51,52,122,14,169,170,183,184,185,186,250],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[70,71,73,1,75,28,85,89,98,99,105],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":71,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":249,"org.easymock.tests2.UsageTest.argumentsOrdered":130,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":283,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":125,"org.easymock.tests2.StubTest.stubWithReturnValue":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":353,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":316,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":218,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":88,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests2.DelegateToTest.testReturnException":112,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":158,"org.easymock.tests.MockingTest.testPartialClassMocking":266,"org.easymock.samples.SupportTest.voteForRemovals":320,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":280,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":241,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":325,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":229,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":286,"org.easymock.tests.UsageExpectAndThrowTest.object":239,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":358,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":315,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":362,"org.easymock.tests2.DelegateToTest.testWrongClass":114,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":21,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":22,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":15,"org.easymock.tests2.UsageTest.wrongArguments":123,"org.easymock.samples.ConstructorCalledMockTest.testTax":317,"org.easymock.tests.UsageStrictMockTest.range":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":174,"org.easymock.samples.ExampleTest.answerVsDelegate":151,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":303,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":310,"org.easymock.tests2.UsageConstraintsTest.testNull":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":240,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":143,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":305,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":276,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":19,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":255,"org.easymock.tests.UsageTest.moreThanOneArgument":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":248,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":189,"org.easymock.tests2.CaptureTest.testCaptureNone":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":37,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.UsageVerifyTest.twoReturns":186,"org.easymock.tests.UsageVarargTest.varargByteAccepted":206,"org.easymock.tests2.ThreadingTest.testThreadSafe":56,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":285,"org.easymock.tests.UsageTest.argumentsOrdered":256,"org.easymock.tests.UsageVarargTest.varargIntAccepted":201,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":274,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":8,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":366,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":31,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":94,"org.easymock.tests2.UsageConstraintsTest.any":2,"org.easymock.tests2.StubTest.stub":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":12,"org.easymock.tests.UsageExpectAndThrowTest.longType":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":159,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":368,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":295,"org.easymock.tests2.SerializationTest.testClass":53,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests.LimitationsTest.mockNativeMethod":182,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":338,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":228,"org.easymock.tests2.AnswerTest.answer":43,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":119,"org.easymock.tests2.CaptureTest.testAnd":98,"org.easymock.tests2.UsageTest.strictResetToDefault":121,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":147,"org.easymock.tests2.NameTest.nameForMocksControl":67,"org.easymock.tests2.MockedExceptionTest.testMockedException":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":179,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":254,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":343,"org.easymock.tests2.DelegateToTest.testDelegate":115,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":233,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":277,"org.easymock.tests.MockingTest.testNicePartialClassMocking":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":244,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":145,"org.easymock.tests2.CaptureTest.testCaptureLast":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":75,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":196,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":87,"org.easymock.tests.MockingTest.testTwoMocks":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":26,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":117,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":129,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":90,"org.easymock.tests.UsageThrowableTest.throwError":258,"org.easymock.tests.UsageStrictMockTest.differentMethods":169,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":181,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":58,"org.easymock.tests2.MockBuilderTest.testCreateMockString":96,"org.easymock.tests.UsageExpectAndThrowTest.floatType":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":191,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":44,"org.easymock.tests.UsageVerifyTest.twoThrows":185,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":291,"org.easymock.samples.PartialClassMockTest.testGetArea":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":9,"org.easymock.samples.ExampleTest.voteAgainstRemoval":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":30,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":35,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":36,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":230,"org.easymock.tests2.UsageTest.niceToStrict":124,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":351,"org.easymock.tests2.UsageConstraintsTest.testNotNull":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":265,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":108,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":39,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":93,"org.easymock.tests2.UsageTest.defaultResetToNice":128,"org.easymock.samples.ExampleTest.voteAgainstRemovals":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":224,"org.easymock.tests.UsageVarargTest.differentLength":339,"org.easymock.tests2.CallbackTest.callback":63,"org.easymock.tests.UsageTest.openCallCountByLastCall":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":238,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":301,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":329,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":172,"org.easymock.tests.UsageCallCountTest.tooFewCalls":272,"org.easymock.tests.UsageOverloadedMethodTest.overloading":162,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":336,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":220,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":369,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":79,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":175,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":347,"org.easymock.tests.UsageThrowableTest.throwCheckedException":262,"org.easymock.tests2.EasyMockSupportClassTest.testAll":289,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":198,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":194,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":118,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":24,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":135,"org.easymock.tests2.UsageConstraintsTest.testMatches":81,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":312,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":190,"org.easymock.tests2.CompareToTest.testGreateOrEqual":284,"org.easymock.samples.ExampleTest.voteForRemovals":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":365,"org.easymock.tests2.NameTest.nameForNiceMock":66,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":60,"org.easymock.tests.UsageVarargTest.allKinds":208,"org.easymock.tests2.DependencyTest.testInterfaceMocking":149,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":364,"org.easymock.samples.BasicClassMockTest.testPrintContent":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":195,"org.easymock.samples.ExampleTest.addDocument":154,"org.easymock.tests2.DelegateToTest.testStubDelegate":113,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":264,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":47,"org.easymock.tests2.AnswerTest.stubAnswer":45,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":161,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.UsageConstraintsTest.greaterThan":83,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":314,"org.easymock.tests.UsageVarargTest.varargLongAccepted":205,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":29,"org.easymock.samples.ExampleTest.voteForRemoval":152,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":227,"org.easymock.tests.UsageExpectAndReturnTest.floatType":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":133,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":318,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests.UsageThrowableTest.noUpperLimit":259,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":84,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":69,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":120,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":176,"org.easymock.tests2.SerializationTest.test":54,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":367,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":298,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":210,"org.easymock.tests2.UsageConstraintsTest.testSame":74,"org.easymock.samples.SupportTest.addDocument":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":157,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":282,"org.easymock.tests2.CaptureTest.testCaptureFirst":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":299,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":132,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":216,"org.easymock.tests.GenericTest.testPackageScope":197,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":59,"org.easymock.tests2.CaptureTest.testCapture2_2446744":107,"org.easymock.tests2.UsageTest.moreThanOneArgument":122,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":342,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":95,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":207,"org.easymock.tests.GenericTest.testBridgedEquals":281,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":345,"org.easymock.tests2.NameTest.nameForMock":64,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":38,"org.easymock.tests.UsageExpectAndReturnTest.longType":212,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":192,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":221,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":326,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":245,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":213,"org.easymock.tests.UsageCallCountTest.tooManyCalls":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":180,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":271,"org.easymock.tests2.MockedExceptionTest.testRealException":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":234,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":134,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":270,"org.easymock.tests2.UsageConstraintsTest.testContains":78,"org.easymock.tests2.NameTest.nameForStrictMock":65,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":110,"org.easymock.tests2.UsageConstraintsTest.testFind":72,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":163,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":61,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":144,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":62,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests.UsageExpectAndReturnTest.object":219,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":359,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":85,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":146,"org.easymock.tests.ErrorMessageTest.testGetters":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":294,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests2.UsageConstraintsTest.lessThan":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":363,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":203,"org.easymock.tests.UsageTest.exactCallCountByLastCall":257,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":297,"org.easymock.tests2.CaptureTest.testCaptureRightOne":105,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":340,"org.easymock.tests2.UsageConstraintsTest.testOr":1,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":356,"org.easymock.tests.UsageRangeTest.combination":177,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":225,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":199,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":141,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":335,"org.easymock.tests.UsageTest.wrongArguments":252,"org.easymock.tests2.MockBuilderTest.testWithConstructor":352,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":275,"org.easymock.tests2.EasyMockSupportTest.testVerify":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":214,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":222,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":341,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":328,"org.easymock.tests.UsageVarargTest.varargShortAccepted":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":116,"org.easymock.tests2.UsageConstraintsTest.cmpTo":77,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":97,"org.easymock.tests.UsageVarargTest.varargCharAccepted":202,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":287,"org.easymock.tests2.CompareToTest.testLessThan":349,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":33,"org.easymock.tests2.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":307,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":40,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":327,"org.easymock.tests2.CaptureTest.testCaptureFromStub":106,"org.easymock.tests.UsageTest.unexpectedCallWithArray":251,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":261,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":166,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":273,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":223,"org.easymock.tests2.ConstraintsToStringTest.anyToString":7,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":313,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":235,"org.easymock.samples.ExampleTest.addAndChangeDocument":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":226,"org.easymock.tests.UsageStrictMockTest.testVerify":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":330,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":292,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":193,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests2.UsageTest.resumeIfFailure":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":10,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":11,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":302,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":200}}]
