[{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[1,2,3,4,5,6,7],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[34,35,36,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.RecordState:85","failures":[38,39,40,41,42,43,44,45,46,47,48,48,49,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,8,66,9,10,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,34,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,0,154,155,156,157,158,159,160,11,12,13,14,161,162,163,164,165,36,166,167,168,169,170,37,171,172,173,15,16,174,175,176,177,178,17,18,179,180,181,182,183,184,185,186,187,188,22,23,24,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,25,26,204,27,28,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,29,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,30,336,31,337,338,32,33,339],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[39,40,41,42,43,45,47,48,48,49,49,51,55,56,57,58,59,60,61,62,63,64,8,66,9,10,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,34,102,103,104,105,106,107,108,109,110,112,113,114,115,340,116,117,118,341,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,342,145,146,147,148,149,150,151,152,153,0,154,155,156,157,158,159,160,11,161,343,344,162,163,164,165,36,166,167,168,169,170,37,171,172,173,15,16,174,175,176,177,178,17,18,179,180,181,182,183,184,345,346,347,348,185,186,187,188,22,23,24,189,190,191,192,193,349,350,351,194,195,196,197,198,199,200,201,202,25,26,204,27,28,205,352,353,354,211,212,213,214,215,216,219,226,355,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,260,356,261,262,357,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,29,285,358,359,360,361,362,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,311,312,313,314,315,316,317,318,363,319,320,321,330,364,365,366,367,368,331,332,333,334,335,30,336,31,337,338,32,33,339],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,369,370,371,372,373,60,374,375,376,377,378,379,380,381,61,62,63,1,64,65,8,66,9,10,67,68,69,70,71,72,73,74,75,382,76,77,78,383,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,384,100,385,386,101,34,102,103,387,35,104,388,105,106,107,108,109,389,390,391,392,393,110,394,395,396,397,398,399,112,113,114,115,340,116,117,118,341,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,400,139,140,141,142,143,144,342,145,146,147,148,149,150,151,152,153,0,154,155,156,157,158,159,160,401,11,12,13,14,161,343,344,162,163,164,165,36,402,403,166,167,168,169,404,170,37,171,405,406,407,408,172,173,15,16,174,175,176,177,178,17,18,179,180,409,410,411,181,412,413,182,414,415,416,417,418,419,420,421,422,183,423,424,425,426,427,184,428,429,345,346,347,348,185,186,187,188,22,23,24,189,190,191,192,193,430,349,431,350,351,432,194,195,196,197,198,199,200,201,202,203,25,26,204,27,28,205,206,352,353,354,207,433,434,435,436,437,438,439,208,209,210,440,441,211,212,213,214,215,216,442,443,444,445,446,447,448,449,217,218,219,220,221,222,223,224,225,450,226,227,355,451,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,356,261,262,357,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,29,452,453,285,454,358,359,360,361,362,286,287,455,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,456,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,457,458,363,319,320,459,321,460,461,462,322,323,324,325,326,327,328,329,330,364,365,366,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,367,479,480,481,482,483,368,484,331,332,333,334,335,30,336,31,337,338,32,33,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[41,8,9,10,119,140,141,145,146,158,159,11,12,13,14,161,172,15,16,176,177,17,18,180,22,23,24,196,25,26,27,28,220,222,225,29,359,360,300,301,311,312,335,30,31,337,338,32,33,339],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[38,39,40,41,42,43,44,45,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,8,66,9,10,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,100,34,102,103,104,105,108,110,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,0,154,155,156,157,158,159,160,11,12,13,14,161,162,163,164,36,166,168,169,37,172,173,15,16,174,175,176,177,17,18,179,180,181,182,183,184,22,23,24,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,25,26,204,27,28,205,215,217,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,29,285,286,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,319,320,321,330,331,332,333,334,335,30,31,337,338,32,33,339],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[148],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[161],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[51,166,168,169,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[163,164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[486,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[58,60,8,66,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,101,104,105,111,112,135,136,137,138,139,140,141,142,143,144,342,145,146,147,148,149,150,151,152,153,0,154,155,156,157,158,159,160,189,190,191,192,193,25,26,215,216,29,286,287,288,293,294,295,296,297,311,312,313,314],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[138,143,162,294,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[451],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests2.UsageTest.argumentsOrdered":18,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":335,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":473,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":50,"org.easymock.tests2.DelegateToTest.testReturnException":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":212,"org.easymock.tests.MockingTest.testPartialClassMocking":319,"org.easymock.tests.MockClassControlTest.testToString":324,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":401,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":481,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":417,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":265,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":19,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":144,"org.easymock.tests2.UsageTest.wrongArguments":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":293,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":187,"org.easymock.samples.ExampleTest.answerVsDelegate":41,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":447,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":461,"org.easymock.tests2.UsageConstraintsTest.testNull":140,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":129,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":329,"org.easymock.tests2.CaptureTest.testPrimitive":82,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":297,"org.easymock.tests.UsageTest.moreThanOneArgument":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":284,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":316,"org.easymock.tests.UsageTest.argumentsOrdered":33,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":358,"org.easymock.tests.UsageVarargTest.varargIntAccepted":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":478,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":189,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":398,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":193,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":487,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":60,"org.easymock.tests.ReplayStateInvalidUsageTest.times":256,"org.easymock.tests2.DependencyTest.testClassMocking":380,"org.easymock.tests2.AnswerTest.answer":161,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":479,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":115,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":444,"org.easymock.tests2.CaptureTest.testAnd":79,"org.easymock.tests2.UsageTest.strictResetToDefault":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":124,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":333,"org.easymock.tests2.DelegateToTest.testDelegate":119,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":362,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":280,"org.easymock.tests.LimitationsTest.mockFinalMethod":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":292,"org.easymock.tests2.DependencyTest.testClassMockingSupport":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":350,"org.easymock.tests2.CaptureTest.testCapture1_2446744":83,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":113,"org.easymock.tests.UsageThrowableTest.throwError":194,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":250,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":446,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":429,"org.easymock.samples.PartialClassMockTest.testGetArea":51,"org.easymock.tests.MockingTest.testInterfaceMocking":459,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":347,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":418,"org.easymock.tests2.UsageTest.niceToStrict":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":166,"org.easymock.tests2.MockBuilderTest.testCreateMock":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":425,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":274,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":125,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":443,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":185,"org.easymock.tests.UsageOverloadedMethodTest.overloading":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":149,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":239,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":298,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":148,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":181,"org.easymock.tests.MockClassControlTest.testEquals":328,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":227,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":114,"org.easymock.tests2.CaptureTest.testCaptureAll":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":290,"org.easymock.tests.MockNameTest.defaultName":455,"org.easymock.tests2.UsageConstraintsTest.testMatches":150,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":317,"org.easymock.samples.ExampleTest.voteForRemovals":45,"org.easymock.tests.UsageVarargTest.allKinds":311,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":22,"org.easymock.samples.BasicClassMockTest.testPrintContent":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":200,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":64,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":216,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":341,"org.easymock.tests2.UsageConstraintsTest.greaterThan":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":412,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":332,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":103,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":438,"org.easymock.samples.ExampleTest.voteForRemoval":42,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":387,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":99,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":172,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":330,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":122,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":211,"org.easymock.tests2.CaptureTest.testCaptureFirst":92,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":123,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":235,"org.easymock.tests2.UsageTest.moreThanOneArgument":15,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":58,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":480,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":37,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":310,"org.easymock.tests.GenericTest.testBridgedEquals":451,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":224,"org.easymock.tests.UsageExpectAndReturnTest.longType":231,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":288,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":485,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":283,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":156,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":314,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":353,"org.easymock.tests.UsageCallCountTest.tooManyCalls":225,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":488,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":199,"org.easymock.tests.MockingTest.testNiceClassMocking":462,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":73,"org.easymock.tests.MockingTest.testClassMocking":458,"org.easymock.tests2.UsageConstraintsTest.testContains":147,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":218,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":108,"org.easymock.tests2.UsageConstraintsTest.testFind":139,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":300,"org.easymock.tests.MockTypeTest.fromEasyMockClass":445,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":105,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":202,"org.easymock.tests.UsageExpectAndReturnTest.object":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":305,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":210,"org.easymock.tests.UsageTest.exactCallCountByLastCall":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":430,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":359,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":244,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":261,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":390,"org.easymock.tests.MockClassControlTest.testHashCode":327,"org.easymock.tests2.EasyMockSupportTest.testVerify":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":420,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":486,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":360,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":112,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":111,"org.easymock.tests.UsageVarargTest.varargCharAccepted":304,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":484,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":131,"org.easymock.tests.DefaultClassInstantiatorTest.object":207,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":364,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":421,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":389,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":34,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":326,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":271,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":184,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":325,"org.easymock.tests2.UsageTest.resumeIfFailure":179,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":214,"org.easymock.tests2.StubTest.stubWithReturnValue":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":237,"org.easymock.tests2.SerializationTest.testAllMockedMethod":70,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":367,"org.easymock.samples.SupportTest.voteForRemovals":39,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":450,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":277,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":368,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":343,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":431,"org.easymock.tests.UsageExpectAndThrowTest.object":275,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":154,"org.easymock.tests2.DelegateToTest.testWrongClass":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":312,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":313,"org.easymock.tests.UsageStrictMockTest.range":27,"org.easymock.samples.ConstructorCalledMockTest.testTax":48,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":407,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":276,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":409,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":258,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":186,"org.easymock.tests2.CaptureTest.testCaptureNone":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":348,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":309,"org.easymock.tests2.ThreadingTest.testThreadSafe":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":423,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":222,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":440,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":52,"org.easymock.tests2.CaptureTest.testCapture_2617107":81,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":482,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":296,"org.easymock.tests2.UsageConstraintsTest.any":145,"org.easymock.tests2.StubTest.stub":133,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":213,"org.easymock.tests.UsageExpectAndThrowTest.longType":268,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":436,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":254,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":66,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests2.SerializationTest.testClass":68,"org.easymock.tests.LimitationsTest.mockNativeMethod":285,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":247,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":355,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":371,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":67,"org.easymock.tests2.NameTest.nameForMocksControl":14,"org.easymock.tests2.MockedExceptionTest.testMockedException":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":413,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":338,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":388,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":269,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":321,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":169,"org.easymock.tests.MockingTest.testNicePartialClassMocking":320,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests2.CaptureTest.testCaptureLast":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":369,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":351,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":155,"org.easymock.tests.MockingTest.testTwoMocks":363,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":383,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":228,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":273,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":159,"org.easymock.samples.ExampleTest.removeNonExistingDocument":46,"org.easymock.tests.UsageStrictMockTest.differentMethods":28,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":391,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":434,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":57,"org.easymock.tests2.MockBuilderTest.testCreateMockString":171,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":414,"org.easymock.tests.UsageExpectAndThrowTest.floatType":267,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":162,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":183,"org.easymock.samples.ExampleTest.voteAgainstRemoval":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":474,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":346,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":102,"org.easymock.tests.LimitationsTest.privateConstructor":453,"org.easymock.tests2.UsageConstraintsTest.testNotNull":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":201,"org.easymock.tests2.UsageTest.defaultResetToNice":178,"org.easymock.samples.ExampleTest.voteAgainstRemovals":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":243,"org.easymock.tests.UsageVarargTest.differentLength":306,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":370,"org.easymock.tests2.CallbackTest.callback":71,"org.easymock.tests2.UsageConstraintsTest.equals":400,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":385,"org.easymock.tests.UsageTest.openCallCountByLastCall":337,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":295,"org.easymock.tests.UsageCallCountTest.tooFewCalls":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":188,"org.easymock.tests.UsageThrowableTest.throwCheckedException":198,"org.easymock.tests.MockingTest.testStrictClassMocking":457,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":287,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":374,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":76,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":164,"org.easymock.tests.ObjectMethodsTest.testHashCode":209,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests2.NameTest.nameForNiceMock":13,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":59,"org.easymock.tests2.DependencyTest.testInterfaceMocking":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.ExampleTest.addDocument":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.DelegateToTest.testStubDelegate":117,"org.easymock.tests2.AnswerTest.stubAnswer":163,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":26,"org.easymock.tests.UsageVarargTest.varargLongAccepted":308,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.floatType":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":246,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":63,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":397,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":153,"org.easymock.tests.UsageThrowableTest.noUpperLimit":195,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":136,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":405,"org.easymock.tests2.SerializationTest.test":69,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":84,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":433,"org.easymock.tests2.UsageConstraintsTest.testSame":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":229,"org.easymock.samples.SupportTest.addDocument":38,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":382,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":415,"org.easymock.tests.GenericTest.testPackageScope":226,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":396,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":460,"org.easymock.tests2.NameTest.nameForMock":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":240,"org.easymock.tests2.UsageStrictMockTest.differentMethods":10,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":386,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":279,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":334,"org.easymock.tests2.MockedExceptionTest.testRealException":109,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":476,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":294,"org.easymock.tests2.NameTest.nameForStrictMock":12,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":403,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":406,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":435,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":9,"org.easymock.tests2.UsageConstraintsTest.lessThan":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":419,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.UsageConstraintsTest.testOr":142,"org.easymock.tests.UsageRangeTest.combination":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":94,"org.easymock.tests.UsageTest.wrongArguments":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":416,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":241,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":437,"org.easymock.tests.UsageVarargTest.varargShortAccepted":307,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":223,"org.easymock.tests2.UsageConstraintsTest.cmpTo":146,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":466,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":249,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":402,"org.easymock.tests.UsageTest.unexpectedCallWithArray":336,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":221,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":242,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":204,"org.easymock.samples.ExampleTest.addAndChangeDocument":47,"org.easymock.tests.UsageStrictMockTest.testVerify":206,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":54,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":289,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":191,"org.easymock.tests.LimitationsTest.abstractClass":452,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":192,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":126,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":21,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":302}}]
