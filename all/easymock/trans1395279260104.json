[{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,14,64,16,17,20,65,21,23,66,25,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,3,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,11,189,190,191,13,192,193,194],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[195,196,197],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[214,215,216,217,5,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[218,219,220,221,222,38,39,43,44,56,57,84,86,0,88,89,1,2,92,223,121,123,3,124,155,156,6,157,158,7,8,159,224,225,9,162,172,226,227,228,188,10,11,229,230,231,12,191,13,192],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[232,35,42,47,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[49],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[26,234,234,235,235,236,237,32,238,239,240,59,241,242,60,243,61,62,244,245,63,246,247,67,68,70,71,72,248,73,249,250,251,74,75,76,252,253,254,255,82,256,257,98,99,100,101,103,104,258,259,260,261,262,263,264,265,117,266,267,118,268,269,270,271,272,273,274,275,276,119,277,278,279,280,281,120,282,283,125,284,285,286,287,147,148,149,288,289,290,291,292,293,294,295,296,297,298,299,168,300,169,301,228,302,303,304,305,306,307,308,309,310,178,311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[313,64,20,65,25,314,223,9,172],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[26,27,218,28,29,315,30,313,316,236,237,317,318,31,32,219,220,221,222,319,320,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,14,64,15,16,18,19,20,65,21,23,25,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,84,85,86,0,87,321,1,2,91,92,93,94,314,95,322,96,223,323,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,324,117,118,119,120,121,325,122,326,327,328,123,329,3,124,330,125,126,284,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,6,7,8,159,291,9,160,351,162,168,300,171,172,226,352,353,354,355,356,357,358,359,360,227,178,179,180,361,362,181,182,183,184,185,186,363,188,10,11,364,365,229,366,230,367,231,189,190,368,369,12,191,370,13,192,371],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"min"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[232,35,42,47,58],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[125,126,284],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[218,322,372,223,373],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[374],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:100","sourceCode":"return this","type":"CtReturnImpl"},"failures":[26,60,61,62],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[70,72,123,3,124,12,191,13,192,375],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[218,319,320,314,121,325,122,326,377],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[83,86,0,1,2,95,378,123,3,124,379,380,381,382,156,5,6,7,8,9,383,384,385,188,10,11,12,191,13,192],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[39],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[232,42,47,58],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[125,126,284,386],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[387,96,388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[292,293,294,295,297,298],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,389,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[161,163],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":36,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.UsageTest.argumentsOrdered":2,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":388,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":321,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":316,"org.easymock.tests2.DelegateToTest.testReturnException":322,"org.easymock.tests.MockingTest.testPartialClassMocking":147,"org.easymock.tests.MockClassControlTest.testToString":303,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":271,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":331,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":179,"org.easymock.tests2.UsageTest.wrongArguments":0,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":213,"org.easymock.samples.ExampleTest.answerVsDelegate":218,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":290,"org.easymock.tests2.UsageConstraintsTest.testNull":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":70,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":114,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":308,"org.easymock.tests2.CaptureTest.testPrimitive":16,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":181,"org.easymock.tests.UsageTest.moreThanOneArgument":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":350,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":69,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.UsageVarargTest.varargIntAccepted":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":182,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":204,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":186,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":95,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":233,"org.easymock.tests2.AnswerTest.answer":121,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests2.UsageTest.strictResetToDefault":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":251,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":109,"org.easymock.tests2.DelegateToTest.testDelegate":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":346,"org.easymock.tests.LimitationsTest.mockFinalMethod":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":363,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":381,"org.easymock.tests2.CaptureTest.testCapture1_2446744":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":344,"org.easymock.tests.UsageThrowableTest.throwError":161,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":283,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":183,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":193,"org.easymock.tests2.UsageTest.niceToStrict":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":272,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":332,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":197,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.MockBuilderTest.testCreateMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":210,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":214,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":340,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":110,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":364,"org.easymock.tests.UsageOverloadedMethodTest.overloading":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":281,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":47,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":138,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":46,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":21,"org.easymock.tests2.EasyMockSupportClassTest.testAll":117,"org.easymock.tests.MockClassControlTest.testEquals":307,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":348,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":258,"org.easymock.tests2.CaptureTest.testCaptureAll":64,"org.easymock.tests.MockNameTest.defaultName":383,"org.easymock.tests2.UsageConstraintsTest.testMatches":48,"org.easymock.samples.ExampleTest.voteForRemovals":30,"org.easymock.tests.UsageVarargTest.allKinds":227,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":188,"org.easymock.samples.BasicClassMockTest.testPrintContent":237,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":166,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":201,"org.easymock.tests2.UsageConstraintsTest.greaterThan":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":76,"org.easymock.samples.ExampleTest.voteForRemoval":28,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":298,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":78,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":248,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":291,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":107,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":264,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":387,"org.easymock.tests2.CaptureTest.testCaptureFirst":25,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":108,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":134,"org.easymock.tests2.CaptureTest.testCapture2_2446744":66,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":80,"org.easymock.tests2.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":360,"org.easymock.tests.GenericTest.testBridgedEquals":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":367,"org.easymock.tests.UsageExpectAndReturnTest.longType":130,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":105,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":347,"org.easymock.tests.UsageCallCountTest.tooManyCalls":231,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":99,"org.easymock.tests.MockingTest.testNiceClassMocking":288,"org.easymock.tests.MockingTest.testClassMocking":286,"org.easymock.tests2.UsageConstraintsTest.testContains":45,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":240,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":37,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":172,"org.easymock.tests.MockTypeTest.fromEasyMockClass":379,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":320,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":368,"org.easymock.tests.UsageExpectAndReturnTest.object":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":113,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":355,"org.easymock.tests.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":160,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":238,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":143,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":226,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":198,"org.easymock.tests.MockClassControlTest.testHashCode":306,"org.easymock.tests2.EasyMockSupportTest.testVerify":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":274,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":225,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":377,"org.easymock.tests.UsageVarargTest.varargCharAccepted":354,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":177,"org.easymock.tests2.UsageTest.openCallCountByLastCall":88,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":195,"org.easymock.tests.DefaultClassInstantiatorTest.object":292,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":384,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":163,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":262,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":74,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":305,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":337,"org.easymock.tests.CapturesMatcherTest.test":374,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":120,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":304,"org.easymock.tests2.UsageTest.resumeIfFailure":91,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":289,"org.easymock.tests2.StubTest.stubWithReturnValue":97,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":55,"org.easymock.tests2.SerializationTest.testAllMockedMethod":284,"org.easymock.samples.SupportTest.voteForRemovals":31,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":215,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":343,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":386,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":376,"org.easymock.tests.UsageExpectAndThrowTest.object":341,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":53,"org.easymock.tests2.DelegateToTest.testWrongClass":372,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":189,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":190,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":234,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":378,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":112,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":342,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":61,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":263,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":216,"org.easymock.tests2.CaptureTest.testCaptureNone":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":194,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":359,"org.easymock.tests2.ThreadingTest.testThreadSafe":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":277,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":230,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":385,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":236,"org.easymock.tests2.CaptureTest.testCapture_2617107":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":362,"org.easymock.tests2.UsageConstraintsTest.any":43,"org.easymock.tests2.StubTest.stub":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":176,"org.easymock.tests.UsageExpectAndThrowTest.longType":334,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":296,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":329,"org.easymock.tests2.SerializationTest.testClass":125,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":83,"org.easymock.tests.LimitationsTest.mockNativeMethod":178,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":169,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":146,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":207,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":261,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":330,"org.easymock.tests2.NameTest.nameForMocksControl":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":208,"org.easymock.tests2.MockedExceptionTest.testMockedException":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":267,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":335,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":67,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":62,"org.easymock.tests.MockingTest.testNicePartialClassMocking":148,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":72,"org.easymock.tests2.CaptureTest.testCaptureLast":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":382,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":104,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":41,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":54,"org.easymock.tests.MockingTest.testTwoMocks":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":339,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":1,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":57,"org.easymock.tests.UsageStrictMockTest.differentMethods":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":209,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":199,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":294,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":79,"org.easymock.tests2.MockBuilderTest.testCreateMockString":247,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":268,"org.easymock.tests.UsageExpectAndThrowTest.floatType":333,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":325,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":119,"org.easymock.samples.ExampleTest.voteAgainstRemoval":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":174,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":75,"org.easymock.tests.LimitationsTest.privateConstructor":310,"org.easymock.tests2.UsageConstraintsTest.testNotNull":56,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":167,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":254,"org.easymock.tests2.UsageTest.defaultResetToNice":90,"org.easymock.samples.ExampleTest.voteAgainstRemovals":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":142,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":206,"org.easymock.tests.UsageVarargTest.differentLength":356,"org.easymock.tests2.CallbackTest.callback":314,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":249,"org.easymock.tests.UsageTest.openCallCountByLastCall":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":361,"org.easymock.tests.UsageCallCountTest.tooFewCalls":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":101,"org.easymock.tests.UsageThrowableTest.throwCheckedException":164,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":217,"org.easymock.tests.MockingTest.testStrictClassMocking":285,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":100,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":102,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":326,"org.easymock.tests2.CompareToTest.testGreateOrEqual":232,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":81,"org.easymock.tests2.NameTest.nameForNiceMock":221,"org.easymock.tests2.DependencyTest.testInterfaceMocking":93,"org.easymock.samples.ExampleTest.addDocument":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":278,"org.easymock.tests2.DelegateToTest.testStubDelegate":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":282,"org.easymock.tests2.AnswerTest.stubAnswer":122,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":191,"org.easymock.tests.UsageVarargTest.varargLongAccepted":358,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":145,"org.easymock.tests.UsageExpectAndReturnTest.floatType":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":235,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":203,"org.easymock.tests.UsageThrowableTest.noUpperLimit":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":34,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":256,"org.easymock.tests2.SerializationTest.test":126,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":18,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":293,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":128,"org.easymock.tests2.UsageConstraintsTest.testSame":39,"org.easymock.samples.SupportTest.addDocument":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":269,"org.easymock.tests.GenericTest.testPackageScope":168,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":202,"org.easymock.tests2.NameTest.nameForMock":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":139,"org.easymock.tests2.UsageStrictMockTest.differentMethods":124,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":250,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":131,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":154,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":380,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":180,"org.easymock.tests2.NameTest.nameForStrictMock":220,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":196,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":71,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":257,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":52,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":295,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":59,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":58,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":200,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":106,"org.easymock.tests2.CaptureTest.testCaptureRightOne":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":273,"org.easymock.tests2.UsageConstraintsTest.testOr":40,"org.easymock.tests.UsageRangeTest.combination":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":68,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":270,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":140,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":297,"org.easymock.tests.UsageVarargTest.varargShortAccepted":357,"org.easymock.tests2.UsageConstraintsTest.cmpTo":44,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":89,"org.easymock.tests2.CaptureTest.testCaptureFromStub":24,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":241,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":366,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":141,"org.easymock.tests2.CaptureTest.testCapture":22,"org.easymock.tests2.UsageConstraintsTest.constraints":35,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":370,"org.easymock.samples.ExampleTest.addAndChangeDocument":313,"org.easymock.tests.UsageStrictMockTest.testVerify":375,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":317,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":369,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":184,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":133,"org.easymock.tests.LimitationsTest.abstractClass":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":185,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":111,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":352}}]
