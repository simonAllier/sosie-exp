[{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[0,1,42,43,44,45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[46,47,48,49,50,51,52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.MocksControl:189","failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[109],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:163","sourceCode":"java.util.Collection<org.easymock.internal.matchers.Captures<?>>.add(org.easymock.internal.matchers.Captures<java.lang.Object>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[110,41],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[111,112,113,108,114,31,33,115,116,117,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"defaultValue"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[119,120,73,121,122],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"position":"org.easymock.Capture:134","failures":[123,124],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[125],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[126],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[127,128,129,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[131,132,46,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,55,56,57,58,59,60,61,62,63,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,64,65,67,68,69,70,71,47,175,176,177,178,179,73,74,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,77,226,78,227,111,228,112,229,230,231,232,233,234,113,235,236,237,238,239,240,241,242,243,244,49,50,128,129,130,245,246,79,247,80,81,248,82,83,249,250,251,252,84,253,254,255,256,257,258,259,260,261,85,262,86,87,88,263,90,91,264,92,93,94,95,96,97,98,265,100,266,103,104,105,106,267,268,107,114,115,269,270,271,272,273,117,274,275,276,277,52,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[131,132,46,134,137,0,0,1,1,279,280,144,145,281,146,282,283,284,285,147,286,287,288,289,148,290,291,292,293,149,294,295,151,152,296,153,297,298,299,300,154,301,302,303,304,155,305,306,307,308,309,310,311,312,2,313,157,55,56,57,58,59,60,61,62,63,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,4,5,6,314,64,65,66,315,67,316,317,71,318,319,320,321,322,323,47,324,175,176,177,178,7,75,181,182,183,184,185,188,191,192,325,13,14,15,16,17,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,18,19,20,21,22,23,24,218,219,220,221,222,223,224,225,77,226,78,326,227,327,111,229,328,234,113,25,329,330,331,332,236,237,238,239,240,241,242,243,244,333,49,334,51,128,129,245,246,79,247,80,81,248,82,83,249,250,251,252,84,253,254,255,256,257,258,259,260,335,261,125,85,262,86,87,88,263,90,91,264,336,93,337,338,95,339,98,26,101,103,104,105,106,267,268,27,107,28,29,108,114,30,31,32,33,115,269,270,271,34,272,35,36,273,37,38,117,274,275,277,39,40,41,340,52,278],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[54,314,64,65,315,68,69,70,73,7,75,76,341,342,343,344,336,92,96,97,26,101,102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[0,1,42,43,44,45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[131,0,0,1,1,141,142,149,150,345,156,159,346,182,183,184,218,220,221,223,224,225,77,226,78,326,227,327,238,239,240,241,244,128,130,253,254,255,256,258,259,85,347,262,86,87,88,263,89,90,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[54,348,349,64,65,75,101],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[350],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[202,224,94,273],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[111,112,113,108,114,31,33,115,116,117,39],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[75,76,101,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[351,352],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[353,354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[355,28,37,277],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[73,7,75,76,181,26,101,102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[356,357,358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[359,360,361,362,363,364,365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":114,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests2.UsageTest.argumentsOrdered":97,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":321,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":94,"org.easymock.tests2.StubTest.stubWithReturnValue":27,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":364,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":300,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":277,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":143,"org.easymock.tests2.SerializationTest.testAllMockedMethod":130,"org.easymock.tests2.DelegateToTest.testReturnException":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":319,"org.easymock.tests.MockingTest.testPartialClassMocking":182,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":122,"org.easymock.samples.SupportTest.voteForRemovals":139,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":351,"org.easymock.tests.MockClassControlTest.testToString":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":12,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":279,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":239,"org.easymock.tests.UsageExpectAndThrowTest.object":147,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":274,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":359,"org.easymock.tests2.DelegateToTest.testWrongClass":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":23,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":24,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":269,"org.easymock.tests2.UsageTest.wrongArguments":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":4,"org.easymock.tests.UsageStrictMockTest.range":75,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":57,"org.easymock.samples.ExampleTest.answerVsDelegate":46,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":253,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":223,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":87,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":165,"org.easymock.tests2.CaptureTest.testPrimitive":229,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":6,"org.easymock.tests.UsageTest.moreThanOneArgument":315,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":293,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":206,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":222,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":15,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":119,"org.easymock.tests2.CaptureTest.testCaptureNone":233,"org.easymock.tests.UsageUnorderedTest.message":54,"org.easymock.tests.UsageVerifyTest.twoReturns":65,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":126,"org.easymock.tests.UsageVarargTest.varargByteAccepted":215,"org.easymock.tests2.ThreadingTest.testThreadSafe":330,"org.easymock.tests.UsageTest.argumentsOrdered":70,"org.easymock.tests.UsageVarargTest.varargIntAccepted":210,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":187,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":18,"org.easymock.tests2.CaptureTest.testCapture_2617107":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":363,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":174,"org.easymock.tests2.UsageConstraintsTest.any":270,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":353,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":320,"org.easymock.tests.UsageExpectAndThrowTest.longType":145,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":202,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":100,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":107,"org.easymock.tests2.SerializationTest.testClass":128,"org.easymock.tests.LimitationsTest.mockNativeMethod":218,"org.easymock.tests.ReplayStateInvalidUsageTest.times":204,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":84,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":345,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":308,"org.easymock.tests2.AnswerTest.answer":49,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":106,"org.easymock.tests2.CaptureTest.testAnd":111,"org.easymock.tests2.UsageTest.strictResetToDefault":264,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":78,"org.easymock.tests2.NameTest.nameForMocksControl":344,"org.easymock.tests2.MockedExceptionTest.testMockedException":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":14,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":80,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":317,"org.easymock.tests2.DelegateToTest.testDelegate":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":281,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":184,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":88,"org.easymock.tests.MockingTest.testNicePartialClassMocking":183,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":148,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":225,"org.easymock.tests2.CompareToTest.testNotComparable":350,"org.easymock.tests2.CaptureTest.testCaptureLast":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":219,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":259,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":115,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":63,"org.easymock.tests.MockingTest.testTwoMocks":346,"org.easymock.tests2.CaptureTest.testCapture1_2446744":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":294,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":104,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":96,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":40,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":198,"org.easymock.tests.UsageThrowableTest.throwError":166,"org.easymock.samples.ExampleTest.removeNonExistingDocument":137,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":200,"org.easymock.tests.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":332,"org.easymock.tests2.MockBuilderTest.testCreateMockString":90,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":17,"org.easymock.tests.UsageExpectAndThrowTest.floatType":144,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":273,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":50,"org.easymock.tests.UsageVerifyTest.twoThrows":64,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":240,"org.easymock.samples.PartialClassMockTest.testGetArea":131,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":199,"org.easymock.tests2.CompareToTest.testLessOrEqual":355,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":19,"org.easymock.samples.ExampleTest.voteAgainstRemoval":134,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":280,"org.easymock.tests2.UsageTest.niceToStrict":93,"org.easymock.tests2.UsageConstraintsTest.testNotNull":39,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":242,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":8,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":262,"org.easymock.tests2.MockBuilderTest.testCreateMock":263,"org.easymock.tests2.UsageTest.defaultResetToNice":95,"org.easymock.samples.ExampleTest.voteAgainstRemovals":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":155,"org.easymock.tests2.CallbackTest.callback":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":42,"org.easymock.tests.UsageTest.openCallCountByLastCall":316,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":285,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":121,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":81,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":55,"org.easymock.tests.UsageOverloadedMethodTest.overloading":192,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":256,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":191,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":272,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":58,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":118,"org.easymock.tests.UsageThrowableTest.throwCheckedException":170,"org.easymock.tests2.EasyMockSupportClassTest.testAll":238,"org.easymock.tests.MockClassControlTest.testEquals":164,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":291,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":120,"org.easymock.tests2.CaptureTest.testCaptureAll":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":105,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":313,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":258,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":255,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":205,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":257,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":51,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":16,"org.easymock.tests.ObjectMethodsTest.testHashCode":194,"org.easymock.samples.ExampleTest.voteForRemovals":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":362,"org.easymock.tests2.NameTest.nameForNiceMock":343,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":237,"org.easymock.tests.UsageVarargTest.allKinds":217,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":314,"org.easymock.tests2.DependencyTest.testInterfaceMocking":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":361,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":62,"org.easymock.samples.BasicClassMockTest.testPrintContent":142,"org.easymock.samples.ExampleTest.addDocument":135,"org.easymock.tests2.DelegateToTest.testStubDelegate":335,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":172,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":99,"org.easymock.tests2.AnswerTest.stubAnswer":334,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":323,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":7,"org.easymock.tests2.UsageConstraintsTest.greaterThan":37,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":310,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":327,"org.easymock.tests.UsageVarargTest.varargLongAccepted":214,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":180,"org.easymock.samples.ExampleTest.voteForRemoval":133,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":307,"org.easymock.tests.UsageExpectAndReturnTest.floatType":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":77,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":38,"org.easymock.tests.UsageThrowableTest.noUpperLimit":167,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":156,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":230,"org.easymock.tests2.SerializationTest.test":129,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":79,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":295,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.samples.SupportTest.addDocument":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":318,"org.easymock.tests2.CaptureTest.testCaptureFirst":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":247,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":98,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":201,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":298,"org.easymock.tests.GenericTest.testPackageScope":149,"org.easymock.tests2.UsageTest.moreThanOneArgument":336,"org.easymock.tests2.CaptureTest.testCapture2_2446744":329,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":236,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":9,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":216,"org.easymock.tests.GenericTest.testBridgedEquals":352,"org.easymock.tests2.NameTest.nameForMock":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":189,"org.easymock.tests.UsageExpectAndReturnTest.longType":152,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":302,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":292,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":276,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":3,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":290,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":45,"org.easymock.tests2.UsageStrictMockTest.differentMethods":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":13,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":296,"org.easymock.tests.UsageCallCountTest.tooManyCalls":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":312,"org.easymock.tests2.MockedExceptionTest.testRealException":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":11,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":146,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":254,"org.easymock.tests2.NameTest.nameForStrictMock":342,"org.easymock.tests2.UsageConstraintsTest.testContains":34,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":185,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":244,"org.easymock.tests2.UsageConstraintsTest.testFind":30,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":325,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":52,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":224,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":72,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":53,"org.easymock.tests.UsageExpectAndReturnTest.object":154,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":348,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":226,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":347,"org.easymock.tests2.UsageStrictMockTest.range":101,"org.easymock.tests2.UsageConstraintsTest.lessThan":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":360,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":212,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":195,"org.easymock.tests.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":10,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":246,"org.easymock.tests2.CaptureTest.testCaptureRightOne":113,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":365,"org.easymock.tests.UsageRangeTest.combination":309,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":221,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":208,"org.easymock.tests.UsageTest.wrongArguments":68,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":175,"org.easymock.tests2.MockBuilderTest.testWithConstructor":43,"org.easymock.tests.MockClassControlTest.testHashCode":163,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":159,"org.easymock.tests2.EasyMockSupportTest.testVerify":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":357,"org.easymock.tests.UsageVarargTest.varargShortAccepted":213,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":47,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":103,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":188,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":340,"org.easymock.tests2.UsageConstraintsTest.cmpTo":271,"org.easymock.tests.UsageVarargTest.varargCharAccepted":211,"org.easymock.tests2.CompareToTest.testLessThan":110,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests2.UsageTest.openCallCountByLastCall":337,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":338,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":251,"org.easymock.tests.DefaultClassInstantiatorTest.object":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":356,"org.easymock.tests2.CaptureTest.testCaptureFromStub":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":197,"org.easymock.tests.UsageTest.unexpectedCallWithArray":67,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":193,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":283,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":169,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":186,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":304,"org.easymock.tests2.CaptureTest.testCapture":124,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":326,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":74,"org.easymock.tests2.UsageConstraintsTest.constraints":108,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":282,"org.easymock.tests.CapturesMatcherTest.test":123,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":306,"org.easymock.tests.UsageStrictMockTest.testVerify":181,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":241,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":161,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":60,"org.easymock.tests2.UsageTest.resumeIfFailure":339,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":21,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":248,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":209}}]
