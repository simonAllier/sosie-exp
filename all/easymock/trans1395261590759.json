[{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.ConstructorArgs:50","failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:108","sourceCode":"return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation)","type":"CtReturnImpl"},"failures":[72,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[86,87],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[88,89],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[90,41,91,92],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[93,94,95,96,97,98,99,100,11,101,102,103,104,105,106,75,107,108,78,109,110,111,112,15,113],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[34,35,114,115,116,117,118,41,42,43],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[119,120,121,122,123,124,125,126,127,128,129,30,30,31,31,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,41,92,42,47,50,60,66,153,154,69,155,156,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[90,41,91,92],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[34,35,114,115,116,117,118,41,42,43],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[16,17,18,19,20,157,158,21,22,23,24,25,26,159,160,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[161,162,163,164,165,166,167,93,94,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,119,95,198,199,121,122,123,96,200,201,202,203,204,205,206,207,208,97,209,7,210,211,212,213,214,98,8,9,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,99,236,237,238,239,240,241,124,126,242,243,244,245,246,247,127,248,249,250,72,11,101,251,252,253,254,29,255,256,102,103,257,258,259,260,261,262,263,129,264,265,266,267,268,269,30,30,31,31,270,271,272,273,274,104,105,275,276,277,133,134,136,137,139,278,279,141,142,280,143,144,145,147,149,150,151,281,106,75,76,107,77,108,78,79,282,283,284,109,285,286,110,287,288,111,81,289,290,291,82,112,292,293,294,295,296,297,298,299,300,152,301,302,303,304,88,89,305,306,307,308,309,310,311,312,313,314,41,91,42,315,316,317,318,319,320,321,322,323,324,325,326,47,50,60,66,327,73,15,113,328,329,153,154,69,155,330,156,70,83,331,332,333,334,335,336,85,337,338,339],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[340,341,342,343,344,345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[30,31,32,37,346],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[1,348,349,10,350,351],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[274],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[167,2,3,4,7,98,8,9,10,72,11,101,273,12,13,14,352,353,354,355,73,15,113],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[90,41,91,92],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[75,76,78,79,80,81,83,84,85],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"position":"org.easymock.internal.MockBuilder:178","failures":[28,137],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[34,35,114,115,116,118,41,42,43],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[90,41,91,92],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[281,75,288,291,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[281,75,357],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[358,198,199,7,210,211,212,213,214,246,10,72,251,252,259,260,261,262,263,147,281,106,75,76,107,77,108,78,79,282,80,283,284,109,285,286,110,287,288,111,81,289,290,359,291,82,112,292,302,303,73,360,83,331,84,332,333,361,362,334,335,336,85,337,338,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests2.UsageTest.argumentsOrdered":14,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":166,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":245,"org.easymock.tests2.StubTest.stubWithReturnValue":329,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":34,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":291,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":224,"org.easymock.tests2.SerializationTest.testAllMockedMethod":92,"org.easymock.tests2.DelegateToTest.testReturnException":310,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":243,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":0,"org.easymock.tests.MockingTest.testPartialClassMocking":121,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":351,"org.easymock.samples.SupportTest.voteForRemovals":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":86,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":54,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":90,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":250,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":178,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":294,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":171,"org.easymock.tests.UsageExpectAndThrowTest.object":188,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":289,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":279,"org.easymock.tests2.DelegateToTest.testWrongClass":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":114,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":251,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":252,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":210,"org.easymock.tests2.UsageTest.wrongArguments":12,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":27,"org.easymock.samples.ConstructorCalledMockTest.testTax":30,"org.easymock.samples.ExampleTest.answerVsDelegate":265,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":153,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":143,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":189,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":324,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":136,"org.easymock.tests2.CaptureTest.testPrimitive":332,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":214,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":197,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":44,"org.easymock.tests.UsageTest.moreThanOneArgument":167,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":163,"org.easymock.tests2.CaptureTest.testCaptureNone":335,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":29,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":341,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests2.ThreadingTest.testThreadSafe":304,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":256,"org.easymock.tests.UsageTest.argumentsOrdered":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":61,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":259,"org.easymock.tests2.CaptureTest.testCapture_2617107":84,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":158,"org.easymock.tests2.UsageConstraintsTest.any":283,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":135,"org.easymock.tests2.StubTest.stub":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":244,"org.easymock.tests.UsageExpectAndThrowTest.longType":181,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":308,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":327,"org.easymock.tests.LimitationsTest.mockNativeMethod":127,"org.easymock.tests2.AnswerTest.answer":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":234,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":126,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":80,"org.easymock.tests2.CaptureTest.testAnd":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":23,"org.easymock.tests2.UsageTest.strictResetToDefault":272,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":148,"org.easymock.tests2.NameTest.nameForMocksControl":355,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":342,"org.easymock.tests2.MockedExceptionTest.testMockedException":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":319,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":49,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.DelegateToTest.testDelegate":314,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":258,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":182,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":137,"org.easymock.tests.MockingTest.testNicePartialClassMocking":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":193,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":145,"org.easymock.tests2.CaptureTest.testCaptureLast":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":246,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":209,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":70,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":290,"org.easymock.tests.MockingTest.testTwoMocks":120,"org.easymock.tests2.CaptureTest.testCapture1_2446744":333,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":186,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":112,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":345,"org.easymock.tests.UsageThrowableTest.throwError":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":25,"org.easymock.tests.UsageStrictMockTest.differentMethods":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":17,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":344,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":89,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":21,"org.easymock.tests2.MockBuilderTest.testCreateMockString":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":165,"org.easymock.tests.UsageExpectAndThrowTest.floatType":180,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":46,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":296,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":60,"org.easymock.samples.PartialClassMockTest.testGetArea":129,"org.easymock.tests2.CompareToTest.testLessOrEqual":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":260,"org.easymock.samples.ExampleTest.voteAgainstRemoval":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":254,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":253,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":150,"org.easymock.tests2.UsageTest.niceToStrict":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":179,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":39,"org.easymock.tests2.UsageConstraintsTest.testNotNull":82,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":299,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":241,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":134,"org.easymock.tests2.UsageTest.defaultResetToNice":275,"org.easymock.tests2.MockBuilderTest.testCreateMock":138,"org.easymock.samples.ExampleTest.voteAgainstRemovals":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":63,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":22,"org.easymock.tests2.CallbackTest.callback":307,"org.easymock.tests2.UsageConstraintsTest.equals":356,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":346,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":26,"org.easymock.tests.UsageTest.openCallCountByLastCall":93,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":187,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":320,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":212,"org.easymock.tests.UsageOverloadedMethodTest.overloading":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":286,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":226,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":155,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":285,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":336,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":343,"org.easymock.tests.UsageThrowableTest.throwCheckedException":238,"org.easymock.tests2.EasyMockSupportClassTest.testAll":47,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":125,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":195,"org.easymock.tests2.CaptureTest.testCaptureAll":331,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":199,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":156,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":69,"org.easymock.tests2.UsageConstraintsTest.testMatches":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":330,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":164,"org.easymock.samples.ExampleTest.voteForRemovals":268,"org.easymock.tests2.NameTest.nameForNiceMock":354,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":306,"org.easymock.tests.UsageVarargTest.allKinds":358,"org.easymock.tests2.DependencyTest.testInterfaceMocking":278,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":116,"org.easymock.samples.BasicClassMockTest.testPrintContent":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":62,"org.easymock.tests2.DelegateToTest.testStubDelegate":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":67,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":240,"org.easymock.tests2.AnswerTest.stubAnswer":297,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":72,"org.easymock.tests2.UsageConstraintsTest.greaterThan":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":48,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":200,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":151,"org.easymock.samples.ExampleTest.voteForRemoval":266,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":233,"org.easymock.tests.UsageExpectAndReturnTest.floatType":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":146,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":31,"org.easymock.tests.UsageThrowableTest.noUpperLimit":99,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":157,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":271,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":106,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":119,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":361,"org.easymock.tests2.SerializationTest.test":91,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":317,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":216,"org.easymock.tests2.UsageConstraintsTest.testSame":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":242,"org.easymock.tests2.CaptureTest.testCaptureFirst":339,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":318,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":248,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":52,"org.easymock.tests.GenericTest.testPackageScope":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":338,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":305,"org.easymock.tests2.UsageTest.moreThanOneArgument":273,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":257,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":139,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":20,"org.easymock.tests2.NameTest.nameForMock":352,"org.easymock.tests.UsageExpectAndReturnTest.longType":218,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":227,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":196,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":359,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":194,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":37,"org.easymock.tests2.UsageStrictMockTest.differentMethods":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":202,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":95,"org.easymock.tests2.MockedExceptionTest.testRealException":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":160,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":211,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":154,"org.easymock.tests2.NameTest.nameForStrictMock":353,"org.easymock.tests2.UsageConstraintsTest.testContains":109,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":152,"org.easymock.tests2.UsageConstraintsTest.testFind":107,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":97,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":144,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":303,"org.easymock.tests.UsageExpectAndReturnTest.object":225,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":81,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":147,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":133,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":159,"org.easymock.tests2.UsageConstraintsTest.lessThan":292,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":323,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":18,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":40,"org.easymock.tests.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":198,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":117,"org.easymock.tests2.CaptureTest.testCaptureRightOne":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":56,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":340,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":102,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":169,"org.easymock.tests2.UsageConstraintsTest.testOr":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":43,"org.easymock.tests.UsageRangeTest.combination":96,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":142,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":204,"org.easymock.tests.UsageTest.wrongArguments":2,"org.easymock.tests2.MockBuilderTest.testWithConstructor":32,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":53,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":57,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":103,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":203,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":176,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":360,"org.easymock.tests2.UsageConstraintsTest.cmpTo":284,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":295,"org.easymock.tests2.UsageTest.openCallCountByLastCall":104,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":105,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":175,"org.easymock.tests2.CaptureTest.testCaptureFromStub":337,"org.easymock.tests.UsageTest.unexpectedCallWithArray":1,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":58,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":237,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":87,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":36,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":229,"org.easymock.tests2.UsageConstraintsTest.constraints":75,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":149,"org.easymock.samples.ExampleTest.addAndChangeDocument":269,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":66,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":362,"org.easymock.tests2.UsageTest.resumeIfFailure":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":221,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":28,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":262,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":321}}]
