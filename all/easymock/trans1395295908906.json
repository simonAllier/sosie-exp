[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[295,83,85,100,106],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,120,124,126,127,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,156,162,163,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,296,297,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,282,283,284,285,286,298,288,293],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[299,300,166,301,302,271],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[303,304,305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[299,300,166,301,302,271],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[10,12,13,14,15,16,17,306,19,21,23,24,26,27,37,46,47,50,51,66,68,69,70,71,75,76,77,78,85,99,307,308,309,310,111,118,121,311,122,123,312,126,127,128,129,130,131,313,314,315,316,156,317,318,319,164,166,167,168,169,170,171,320,172,173,176,177,178,321,254,260,263,264,265,269,270,271,272,275,276,277,322,323,324,325,326,327,328,329,330,331,298,287],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[44,132,133,134,135,332,333,334,335,336,181,238,289,290,291,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[337,338,339],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[299,300,166,301,302,271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.internal.LastControl:95","failures":[52,54,62,85,86,88,90,91,340,102,107],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[341,342,343,288],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[299,300,166,301,302,271],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[158,220,226,233,234,248],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[79,81,344,82,144,345,285],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[52,54,62,85,86,88,90,91,340,102,107],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[157,219,221,235,236,282],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[14,15,169,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[346,347,348,150,151],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[132,133,134,135,181,238,289,290,291,292,293,294],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[349,350,36,351,40,42,45,46,47,48,50,51,352,353,354,355,110,111,113,114,115,116,117,346,356,118,119,120,121,357,311,122,123,312,358,124,125,126,127,359,128,129,130,132,133,134,360,361,362,136,363,364,137,365,366,367,368,369,370,371,372,373,138,374,375,376,377,378,139,379,380,141,142,150,150,151,151,155,381,382,383,384,303,385,386,387,162,163,388,389,390,391,317,318,319,392,393,394,395,341,205,396,397,398,399,206,207,208,400,324,327,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[71,99,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","shouldBeUsedInOneThread":"state","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[337,338,339],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[40,41,42,401],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[86,90],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[0,1,2,3,4,5,6,402,403,7,8,9,10,11,12,13,14,15,16,404,405,406,407,408,17,306,409,410,411,412,413,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,414,39,41,43,44,49,415,416,417,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,418,79,80,81,344,82,419,83,84,85,86,420,87,88,89,90,91,92,340,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,421,307,308,309,310,112,422,423,424,425,426,131,313,427,428,429,430,431,132,133,134,135,140,143,144,145,146,147,148,432,149,152,153,154,433,314,434,435,315,316,156,436,437,438,439,440,441,442,443,444,445,332,446,447,448,449,157,158,159,160,161,333,334,335,164,165,166,167,168,169,170,171,450,451,452,453,320,454,172,173,174,175,176,177,178,455,456,345,457,458,459,460,336,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,179,180,181,182,183,477,296,297,478,479,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,321,480,481,482,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,483,484,485,239,240,241,242,243,244,245,246,247,248,249,250,251,486,252,253,254,255,256,257,258,259,260,487,261,262,263,264,265,488,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,322,323,489,325,326,328,329,282,283,284,330,285,286,331,298,287,289,290,291,292,293,294],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[418,344],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[7,37,38,39],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[490,83,100,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[436],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":86,"org.easymock.tests2.UsageTest.argumentsOrdered":76,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":269,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":463,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":71,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":154,"org.easymock.tests2.DelegateToTest.testReturnException":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":290,"org.easymock.tests.MockingTest.testPartialClassMocking":206,"org.easymock.tests.MockClassControlTest.testToString":317,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":421,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":185,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":137,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":5,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":179,"org.easymock.tests2.UsageTest.wrongArguments":69,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":413,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":280,"org.easymock.samples.ExampleTest.answerVsDelegate":144,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":327,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":482,"org.easymock.tests2.UsageConstraintsTest.testNull":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":113,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":27,"org.easymock.tests2.CaptureTest.testPrimitive":55,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":204,"org.easymock.tests.UsageTest.moreThanOneArgument":270,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":159,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":477,"org.easymock.tests.UsageTest.argumentsOrdered":276,"org.easymock.tests.UsageVarargTest.varargIntAccepted":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":468,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":244,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":354,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":248,"org.easymock.tests.ReplayStateInvalidUsageTest.times":444,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests2.DependencyTest.testClassMocking":349,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":470,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":3,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests2.UsageTest.strictResetToDefault":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":261,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":479,"org.easymock.tests2.DelegateToTest.testDelegate":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":200,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":342,"org.easymock.tests.LimitationsTest.mockFinalMethod":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":243,"org.easymock.tests2.DependencyTest.testClassMockingSupport":350,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":322,"org.easymock.tests2.CaptureTest.testCapture1_2446744":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":1,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":438,"org.easymock.tests.UsageThrowableTest.throwError":209,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":326,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":380,"org.easymock.samples.PartialClassMockTest.testGetArea":155,"org.easymock.tests.MockingTest.testInterfaceMocking":480,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":439,"org.easymock.tests2.CompareToTest.testLessOrEqual":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":245,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":452,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":186,"org.easymock.tests2.UsageTest.niceToStrict":70,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":339,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":124,"org.easymock.tests2.MockBuilderTest.testCreateMock":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":410,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":194,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":299,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":23,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":449,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":278,"org.easymock.tests.UsageOverloadedMethodTest.overloading":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":378,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":97,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":266,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":96,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":304,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":486,"org.easymock.tests.MockClassControlTest.testEquals":393,"org.easymock.tests2.EasyMockSupportClassTest.testAll":136,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":163,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":202,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":2,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":241,"org.easymock.tests.MockNameTest.defaultName":321,"org.easymock.tests2.UsageConstraintsTest.testMatches":98,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":436,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":160,"org.easymock.samples.ExampleTest.voteForRemovals":148,"org.easymock.tests.UsageVarargTest.allKinds":259,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":263,"org.easymock.samples.BasicClassMockTest.testPrintContent":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":242,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":215,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":294,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":344,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":363,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":487,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":121,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":386,"org.easymock.samples.ExampleTest.voteForRemoval":145,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":32,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":357,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":328,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":116,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":288,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":20,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":289,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":418,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":21,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":78,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":34,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":471,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":129,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":258,"org.easymock.tests.GenericTest.testBridgedEquals":389,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":177,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":239,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":203,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":488,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":334,"org.easymock.tests.UsageCallCountTest.tooManyCalls":178,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":377,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":214,"org.easymock.tests.MockingTest.testNiceClassMocking":400,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":46,"org.easymock.tests.MockingTest.testClassMocking":398,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":454,"org.easymock.tests2.UsageConstraintsTest.testContains":95,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":134,"org.easymock.tests2.UsageConstraintsTest.testFind":87,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":268,"org.easymock.tests.MockTypeTest.fromEasyMockClass":325,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":39,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":26,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":253,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":435,"org.easymock.tests.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":483,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":351,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":423,"org.easymock.tests.MockClassControlTest.testHashCode":392,"org.easymock.tests2.EasyMockSupportTest.testVerify":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":371,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":448,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":0,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":419,"org.easymock.tests.UsageVarargTest.varargCharAccepted":252,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":476,"org.easymock.tests2.UsageTest.openCallCountByLastCall":72,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":29,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":337,"org.easymock.tests.DefaultClassInstantiatorTest.object":381,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":447,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":314,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":422,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":119,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":319,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":191,"org.easymock.tests.CapturesMatcherTest.test":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":139,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":318,"org.easymock.tests2.UsageTest.resumeIfFailure":77,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":292,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":469,"org.easymock.samples.SupportTest.voteForRemovals":153,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":300,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":197,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":401,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":475,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":402,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":485,"org.easymock.tests.UsageExpectAndThrowTest.object":195,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":103,"org.easymock.tests2.DelegateToTest.testWrongClass":81,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":282,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":283,"org.easymock.tests.UsageStrictMockTest.range":169,"org.easymock.samples.ConstructorCalledMockTest.testTax":150,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":416,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":25,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":196,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":126,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":279,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":301,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":453,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.UsageUnorderedTest.message":156,"org.easymock.tests.UsageVerifyTest.twoReturns":265,"org.easymock.tests.UsageVarargTest.varargByteAccepted":257,"org.easymock.tests2.ThreadingTest.testThreadSafe":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":374,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":175,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":141,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":315,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":182,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":443,"org.easymock.tests2.StubTest.stub":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndThrowTest.longType":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":291,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":303,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":442,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":13,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests.LimitationsTest.mockNativeMethod":205,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":388,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":406,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":16,"org.easymock.tests2.NameTest.nameForMocksControl":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":408,"org.easymock.tests2.MockedExceptionTest.testMockedException":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":364,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":414,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":189,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":208,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":127,"org.easymock.tests.MockingTest.testNicePartialClassMocking":207,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":404,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":323,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":91,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":104,"org.easymock.tests.MockingTest.testTwoMocks":399,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":193,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":108,"org.easymock.samples.ExampleTest.removeNonExistingDocument":432,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":409,"org.easymock.tests.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":424,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":383,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":33,"org.easymock.tests2.MockBuilderTest.testCreateMockString":130,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":390,"org.easymock.tests.UsageExpectAndThrowTest.floatType":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":365,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":7,"org.easymock.tests.UsageVerifyTest.twoThrows":264,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":138,"org.easymock.samples.ExampleTest.voteAgainstRemoval":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":451,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":120,"org.easymock.tests.LimitationsTest.privateConstructor":341,"org.easymock.tests2.UsageConstraintsTest.testNotNull":107,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":216,"org.easymock.tests2.UsageTest.defaultResetToNice":74,"org.easymock.samples.ExampleTest.voteAgainstRemovals":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":405,"org.easymock.tests.UsageVarargTest.differentLength":254,"org.easymock.tests2.CallbackTest.callback":37,"org.easymock.tests2.UsageConstraintsTest.equals":420,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":346,"org.easymock.tests.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":181,"org.easymock.tests.UsageCallCountTest.tooFewCalls":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":281,"org.easymock.tests.UsageThrowableTest.throwCheckedException":213,"org.easymock.tests.MockingTest.testStrictClassMocking":397,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":302,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":50,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":238,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":306,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":445,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":49,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":9,"org.easymock.tests.ObjectMethodsTest.testHashCode":434,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":35,"org.easymock.tests2.NameTest.nameForNiceMock":309,"org.easymock.tests2.DependencyTest.testInterfaceMocking":4,"org.easymock.samples.ExampleTest.addDocument":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":375,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.AnswerTest.stubAnswer":8,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":167,"org.easymock.tests.UsageVarargTest.varargLongAccepted":256,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":36,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests.UsageThrowableTest.noUpperLimit":210,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":84,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":352,"org.easymock.tests2.SerializationTest.test":41,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":57,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":305,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":382,"org.easymock.tests2.UsageConstraintsTest.testSame":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.samples.SupportTest.addDocument":152,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":366,"org.easymock.tests.GenericTest.testPackageScope":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":481,"org.easymock.tests2.NameTest.nameForMock":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":348,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":356,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":199,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":433,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":262,"org.easymock.tests2.MockedExceptionTest.testRealException":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":466,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":180,"org.easymock.tests2.NameTest.nameForStrictMock":308,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":358,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":38,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":338,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":114,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":355,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":384,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":123,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":19,"org.easymock.tests2.CaptureTest.testCaptureRightOne":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":370,"org.easymock.tests2.UsageConstraintsTest.testOr":90,"org.easymock.tests.UsageRangeTest.combination":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":111,"org.easymock.tests.UsageTest.wrongArguments":272,"org.easymock.tests2.MockBuilderTest.testWithConstructor":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":367,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":385,"org.easymock.tests.UsageVarargTest.varargShortAccepted":255,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":176,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":457,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":73,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":437,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":312,"org.easymock.tests.UsageTest.unexpectedCallWithArray":271,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":166,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":168,"org.easymock.tests2.UsageConstraintsTest.constraints":85,"org.easymock.samples.ExampleTest.addAndChangeDocument":149,"org.easymock.tests.UsageStrictMockTest.testVerify":450,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests2.CompareToTest.testGreateThan":490,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":240,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":246,"org.easymock.tests.LimitationsTest.abstractClass":395,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":247,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":24,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":250}}]
