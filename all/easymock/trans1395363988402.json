[{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[43,44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,54,55,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,2,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,0,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,3,190,191,192,193,194,195,4,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,5,214,215,216,217,218,219,220,221,222,6,223,7,8,9,10,11,12,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,13,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,14,275,276,277,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,35,295,296,297,36,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,37,38,39,321,322,323,324,325,326,41,327,328,329,330,42,331,332,333],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[106,0,194],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[46,47,49,50,52,57,61,62,63,64,65,66,67,68,69,72,74,75,77,78,81,82,83,84,85,86,87,88,89,91,92,95,96,97,98,100,101,102,103,104,105,106,107,109,111,112,113,118,120,127,131,132,133,134,135,136,137,138,139,140,141,142,2,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,0,161,162,163,164,165,167,168,169,170,179,182,183,185,186,188,3,190,191,193,195,4,196,199,200,201,202,203,204,207,208,213,214,215,216,217,218,219,220,6,7,8,9,10,11,12,227,229,230,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,276,279,285,292,293,295,296,297,36,309,310,317,318,319,323,324,325,326,41,327,330,42,333],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[334,197,331],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[63,70,73,74,75,80,103,111,113,132,136,137,140,147,0,182,187,188,189,3,192,193,194,197,198,199,200,5,214,224,226,228,229,230,246,247,248,278,303,323,41,328,329,331,332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[335],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,54,55,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,2,145,146,147,148,149,150,151,152,153,154,336,155,156,157,158,159,160,0,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,188,3,190,191,192,193,194,195,4,196,197,198,199,200,201,202,203,204,205,206,207,208,213,5,214,215,216,217,218,219,220,221,222,6,223,7,8,9,10,11,12,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,13,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,14,275,276,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,278,279,280,281,282,283,284,285,286,287,292,293,294,35,295,296,297,36,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,337,320,37,38,39,321,322,323,324,325,326,41,327,329,330,42,331,332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[46,47,49,50,52,217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[77,78,79],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[116,117,118,119,2,3,4,5,6,7,8,9,10,11,12,236,237,238,239,13,240,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,286,36,41,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[338],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[339],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[340],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[341,342,343,344,345],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[163],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[72,74,75,103,105,107,110,113,226,227,229,230,232,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[346,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[88,90,98,147,148,150,151,152,336,163,168,169],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[348,349,350,351,191,192,197,198,352,353,354,226,327,328,329,331,332],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[73,74,80,0,3,200,355,356,5,214,228,229,247,248,278,323,41,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[5,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:115","sourceCode":"final java.util.Stack<org.easymock.internal.Invocation> java.util.Stack<org.easymock.internal.Invocation> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":148,"org.easymock.tests2.UsageTest.argumentsOrdered":198,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":239,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":194,"org.easymock.tests2.StubTest.stubWithReturnValue":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":261,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":56,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":167,"org.easymock.tests2.SerializationTest.testAllMockedMethod":79,"org.easymock.tests2.DelegateToTest.testReturnException":126,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":237,"org.easymock.tests.MockingTest.testPartialClassMocking":317,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":350,"org.easymock.samples.SupportTest.voteForRemovals":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":44,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":220,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":27,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":322,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":15,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":176,"org.easymock.tests.UsageExpectAndThrowTest.object":25,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":68,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":164,"org.easymock.tests2.DelegateToTest.testWrongClass":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":309,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":310,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":292,"org.easymock.tests2.UsageTest.wrongArguments":192,"org.easymock.tests.UsageStrictMockTest.range":229,"org.easymock.samples.ConstructorCalledMockTest.testTax":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":211,"org.easymock.samples.ExampleTest.answerVsDelegate":48,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":138,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":81,"org.easymock.tests2.UsageConstraintsTest.testNull":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":185,"org.easymock.tests2.CaptureTest.testPrimitive":91,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":295,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":331,"org.easymock.tests.UsageTest.moreThanOneArgument":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":210,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":104,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":313,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":208,"org.easymock.tests2.CaptureTest.testCaptureNone":96,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":342,"org.easymock.tests.UsageUnorderedTest.message":278,"org.easymock.tests.UsageVerifyTest.twoReturns":214,"org.easymock.tests.UsageVarargTest.varargByteAccepted":306,"org.easymock.tests2.ThreadingTest.testThreadSafe":61,"org.easymock.tests.UsageTest.argumentsOrdered":332,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":280,"org.easymock.tests.UsageVarargTest.varargIntAccepted":300,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":245,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":215,"org.easymock.tests2.CaptureTest.testCapture_2617107":90,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":351,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":35,"org.easymock.tests2.UsageConstraintsTest.any":155,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":184,"org.easymock.tests2.StubTest.stub":144,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":238,"org.easymock.tests.UsageExpectAndThrowTest.longType":18,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.tests2.SerializationTest.testClass":77,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":120,"org.easymock.tests.LimitationsTest.mockNativeMethod":279,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":271,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":251,"org.easymock.tests2.AnswerTest.answer":175,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":124,"org.easymock.tests2.CaptureTest.testAnd":88,"org.easymock.tests2.UsageTest.strictResetToDefault":190,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":1,"org.easymock.tests2.NameTest.nameForMocksControl":174,"org.easymock.tests2.MockedExceptionTest.testMockedException":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":135,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":42,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":284,"org.easymock.tests2.DelegateToTest.testDelegate":130,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":319,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":19,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":186,"org.easymock.tests.MockingTest.testNicePartialClassMocking":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":30,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":107,"org.easymock.tests2.CaptureTest.testCaptureLast":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":222,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":87,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":291,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":165,"org.easymock.tests.MockingTest.testTwoMocks":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":221,"org.easymock.tests2.CaptureTest.testCapture1_2446744":92,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":345,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":23,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":122,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":197,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":169,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":344,"org.easymock.tests.UsageThrowableTest.throwError":6,"org.easymock.tests.UsageStrictMockTest.differentMethods":230,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":343,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":63,"org.easymock.tests2.MockBuilderTest.testCreateMockString":189,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":315,"org.easymock.tests.UsageExpectAndThrowTest.floatType":17,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":178,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":203,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":216,"org.easymock.samples.ExampleTest.voteAgainstRemoval":50,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":207,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":206,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":112,"org.easymock.tests2.UsageTest.niceToStrict":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":16,"org.easymock.tests2.ThreadingTest.testChangeDefault":341,"org.easymock.tests2.UsageConstraintsTest.testNotNull":168,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":12,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":183,"org.easymock.tests2.UsageTest.defaultResetToNice":196,"org.easymock.tests2.MockBuilderTest.testCreateMock":187,"org.easymock.samples.ExampleTest.voteAgainstRemovals":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":339,"org.easymock.tests.UsageVarargTest.differentLength":303,"org.easymock.tests2.CallbackTest.callback":80,"org.easymock.tests2.UsageConstraintsTest.equals":334,"org.easymock.tests.UsageTest.openCallCountByLastCall":330,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":24,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":145,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":209,"org.easymock.tests.UsageCallCountTest.tooFewCalls":243,"org.easymock.tests.UsageOverloadedMethodTest.overloading":297,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":159,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":84,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":158,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":212,"org.easymock.tests.UsageThrowableTest.throwCheckedException":9,"org.easymock.tests2.EasyMockSupportClassTest.testAll":201,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":250,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":353,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":289,"org.easymock.tests2.CaptureTest.testCaptureAll":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":286,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":86,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":83,"org.easymock.tests2.UsageConstraintsTest.testMatches":160,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":85,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":314,"org.easymock.samples.ExampleTest.voteForRemovals":52,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":65,"org.easymock.tests2.NameTest.nameForNiceMock":173,"org.easymock.tests.UsageVarargTest.allKinds":308,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":213,"org.easymock.tests2.DependencyTest.testInterfaceMocking":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":290,"org.easymock.samples.BasicClassMockTest.testPrintContent":59,"org.easymock.samples.ExampleTest.addDocument":51,"org.easymock.tests2.DelegateToTest.testStubDelegate":127,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":11,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":70,"org.easymock.tests2.AnswerTest.stubAnswer":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":240,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":129,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":227,"org.easymock.tests2.UsageConstraintsTest.greaterThan":161,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":324,"org.easymock.tests.UsageVarargTest.varargLongAccepted":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":113,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.samples.ExampleTest.voteForRemoval":49,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":270,"org.easymock.tests.UsageExpectAndReturnTest.floatType":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":108,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":55,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":275,"org.easymock.tests.UsageThrowableTest.noUpperLimit":223,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":162,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":320,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":146,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":93,"org.easymock.tests2.SerializationTest.test":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":133,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":253,"org.easymock.tests2.UsageConstraintsTest.testSame":151,"org.easymock.samples.SupportTest.addDocument":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":236,"org.easymock.tests2.CaptureTest.testCaptureFirst":101,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":134,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":259,"org.easymock.tests.GenericTest.testPackageScope":249,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":64,"org.easymock.tests2.CaptureTest.testCapture2_2446744":100,"org.easymock.tests2.UsageTest.moreThanOneArgument":191,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":283,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":188,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":307,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":247,"org.easymock.tests2.NameTest.nameForMock":171,"org.easymock.tests.UsageExpectAndReturnTest.longType":255,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":287,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":264,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":33,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":205,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":166,"org.easymock.tests2.UsageStrictMockTest.differentMethods":75,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":256,"org.easymock.tests.UsageCallCountTest.tooManyCalls":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":29,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":326,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":338,"org.easymock.tests2.MockedExceptionTest.testRealException":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":260,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":82,"org.easymock.tests2.UsageConstraintsTest.testContains":157,"org.easymock.tests2.NameTest.nameForStrictMock":172,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":149,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":36,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":114,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":106,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":224,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":115,"org.easymock.tests.UsageExpectAndReturnTest.object":262,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":355,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":182,"org.easymock.tests2.UsageStrictMockTest.range":74,"org.easymock.tests2.UsageConstraintsTest.lessThan":170,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":139,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":302,"org.easymock.tests.UsageTest.exactCallCountByLastCall":333,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":335,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":132,"org.easymock.tests2.CaptureTest.testCaptureRightOne":98,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":340,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":281,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":354,"org.easymock.tests2.UsageConstraintsTest.testOr":152,"org.easymock.tests.UsageRangeTest.combination":323,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":103,"org.easymock.tests.UsageTest.wrongArguments":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":257,"org.easymock.tests2.EasyMockSupportTest.testVerify":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":265,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":282,"org.easymock.tests.UsageVarargTest.varargShortAccepted":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":38,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":121,"org.easymock.tests2.UsageConstraintsTest.cmpTo":156,"org.easymock.tests.UsageVarargTest.varargCharAccepted":301,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":177,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":40,"org.easymock.tests2.UsageTest.openCallCountByLastCall":195,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":4,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":142,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":37,"org.easymock.tests2.CaptureTest.testCaptureFromStub":99,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":346,"org.easymock.tests.UsageTest.unexpectedCallWithArray":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":22,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":266,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":228,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":111,"org.easymock.tests2.UsageConstraintsTest.constraints":147,"org.easymock.samples.ExampleTest.addAndChangeDocument":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":269,"org.easymock.tests.UsageStrictMockTest.testVerify":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":233,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":60,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":288,"org.easymock.tests2.UsageTest.resumeIfFailure":199,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":217,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":258,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":218,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":356,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":137}}]
