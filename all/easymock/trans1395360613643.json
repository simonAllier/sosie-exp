[{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,7,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[230,231,30,232,233,234,235,236,237,40,238,239,240,241,242,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,117,243,129,150,244,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[176,183,188,199],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[0,1,81,246,82,84,247,164,166,168,248,172,249,173],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[225,227],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[250,138,251,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[17,19,20,59,81,82,83,116,117,118,151,152,153,154,157,172,173,174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[253,254,255,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[257,209,210,211],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[51,187],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[258,259,260],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[261,262,27,263,264,265,32,33,34,266,267,268,35,269,270,52,53,271,272,273,274,275,276,277,278,279,280,9,122,281,282,283,10,284,285,286,286,287,287,288,289,290,137,250,291,292,293,138,139,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,162,247,164,165,166,328,167,329,330,168,251,169,248,14,331,332,333,200,334,205,206,207,209,211,335,212,213,336,214,215],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"m":"result","methodName":"name"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[337,338,108,110,161],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[339,340,17,19,20,21,22,341,342,343,344,345,346,347,23,24,25,26,28,348,231,29,30,232,233,234,235,236,349,253,350,237,254,31,351,36,37,38,39,40,41,42,43,44,45,46,352,47,48,49,50,51,52,353,54,55,56,57,58,11,258,354,238,59,0,355,356,239,357,358,359,240,241,242,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,259,360,80,1,81,361,246,82,83,84,85,86,362,363,8,364,365,255,256,366,367,368,369,370,371,372,373,374,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,260,119,120,375,243,121,9,123,124,125,126,127,376,128,129,130,131,132,133,134,135,136,377,378,379,380,140,141,13,381,142,143,144,145,146,147,148,149,150,151,152,153,154,155,382,244,156,157,383,158,159,384,245,160,385,386,161,387,162,163,170,388,389,390,391,392,393,394,395,396,397,398,399,400,401,171,172,402,249,173,174,7,175,176,177,178,179,180,181,182,183,403,184,185,186,187,188,189,190,191,192,193,194,195,404,196,197,198,199,200,405,406,201,407,408,202,203,204,205,206,207,208,409,410,210,411,15,216,217,412,16,218,219,220,221,222,413,223,224,225,226,227,228,414,415,229],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[7,191,194],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[19,20,21,22,342,343,27,28,231,29,30,232,233,234,235,236,349,350,237,32,33,34,35,40,42,43,44,45,46,47,48,49,50,51,52,53,353,238,59,355,356,239,357,358,359,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,1,81,361,246,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,112,113,114,115,116,117,118,119,120,375,243,121,376,128,129,130,131,132,133,134,135,136,377,378,379,380,288,289,290,138,294,295,140,141,13,381,142,306,309,319,325,147,148,150,155,382,244,156,157,383,158,159,384,245,385,386,387,162,247,163,164,165,166,167,169,170,388,389,390,391,392,393,394,396,397,398,399,400,171,172,402,249,173,174,7,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,404,196,197,198,199,200,405,201,202,203,204,207,409,209,210,211,335,212,213,336,411,214,215,216,217,412,218,219,220,221,222,413,223,224,225,226,227,228,415,229],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[416],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"name"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":177,"org.easymock.tests2.UsageTest.argumentsOrdered":386,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":238,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":410,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":159,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":380,"org.easymock.tests2.DelegateToTest.testReturnException":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":37,"org.easymock.tests.MockingTest.testPartialClassMocking":32,"org.easymock.tests.MockClassControlTest.testToString":281,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":416,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":259,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":60,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":309,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":119,"org.easymock.tests2.UsageTest.wrongArguments":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":25,"org.easymock.samples.ExampleTest.answerVsDelegate":131,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":262,"org.easymock.tests2.UsageConstraintsTest.testNull":179,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":164,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":397,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":285,"org.easymock.tests2.CaptureTest.testPrimitive":222,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":121,"org.easymock.tests.UsageTest.moreThanOneArgument":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":79,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":125,"org.easymock.tests.UsageTest.argumentsOrdered":358,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":370,"org.easymock.tests.UsageVarargTest.varargIntAccepted":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":111,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":137,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":115,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":405,"org.easymock.tests2.AnswerTest.answer":201,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":146,"org.easymock.tests2.CaptureTest.testAnd":219,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":109,"org.easymock.tests2.DelegateToTest.testDelegate":218,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":75,"org.easymock.tests.LimitationsTest.mockFinalMethod":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":255,"org.easymock.tests2.CaptureTest.testCapture1_2446744":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":144,"org.easymock.tests.UsageThrowableTest.throwError":231,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":327,"org.easymock.samples.PartialClassMockTest.testGetArea":288,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":12,"org.easymock.tests2.CompareToTest.testLessOrEqual":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":258,"org.easymock.tests2.UsageTest.niceToStrict":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":61,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":314,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":138,"org.easymock.tests2.MockBuilderTest.testCreateMock":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":322,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":69,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":393,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":242,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":23,"org.easymock.tests.UsageOverloadedMethodTest.overloading":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":324,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":188,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":98,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":376,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":187,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":227,"org.easymock.tests.MockClassControlTest.testEquals":284,"org.easymock.tests2.EasyMockSupportClassTest.testAll":306,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":53,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":56,"org.easymock.tests2.CaptureTest.testCaptureAll":220,"org.easymock.tests.MockNameTest.defaultName":369,"org.easymock.tests2.UsageConstraintsTest.testMatches":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":126,"org.easymock.samples.ExampleTest.voteForRemovals":135,"org.easymock.tests.UsageVarargTest.allKinds":51,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":57,"org.easymock.samples.BasicClassMockTest.testPrintContent":290,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":235,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":41,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":16,"org.easymock.tests2.UsageConstraintsTest.greaterThan":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":108,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":248,"org.easymock.samples.ExampleTest.voteForRemoval":132,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":279,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":141,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":14,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":346,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":328,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":27,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":244,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":390,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":36,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":15,"org.easymock.tests2.CaptureTest.testCaptureFirst":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":391,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":387,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":94,"org.easymock.tests2.CaptureTest.testCapture2_2446744":415,"org.easymock.tests2.UsageTest.moreThanOneArgument":157,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":381,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":298,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":50,"org.easymock.tests.GenericTest.testBridgedEquals":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":342,"org.easymock.tests.UsageExpectAndReturnTest.longType":90,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":388,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":78,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":299,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":404,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":123,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":367,"org.easymock.tests.UsageCallCountTest.tooManyCalls":343,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":323,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":95,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":234,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":212,"org.easymock.tests.MockingTest.testNiceClassMocking":266,"org.easymock.tests.MockingTest.testClassMocking":264,"org.easymock.tests2.UsageConstraintsTest.testContains":186,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":18,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":250,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":207,"org.easymock.tests2.UsageConstraintsTest.testFind":178,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":129,"org.easymock.tests.MockTypeTest.fromEasyMockClass":344,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":148,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":360,"org.easymock.tests.UsageExpectAndReturnTest.object":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":396,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":46,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":364,"org.easymock.tests.UsageTest.exactCallCountByLastCall":359,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":28,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":103,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":42,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":350,"org.easymock.tests.MockClassControlTest.testHashCode":10,"org.easymock.tests2.EasyMockSupportTest.testVerify":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":316,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":349,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":143,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":6,"org.easymock.tests.UsageVarargTest.varargCharAccepted":45,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests2.UsageTest.openCallCountByLastCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":399,"org.easymock.tests.DefaultClassInstantiatorTest.object":273,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":240,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":232,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":251,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":66,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":104,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":366,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":325,"org.easymock.tests2.UsageTest.resumeIfFailure":161,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":39,"org.easymock.tests2.StubTest.stubWithReturnValue":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":196,"org.easymock.tests2.SerializationTest.testAllMockedMethod":211,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":339,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.samples.SupportTest.voteForRemovals":379,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":270,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":72,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":257,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":340,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":407,"org.easymock.tests.UsageExpectAndThrowTest.object":70,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":194,"org.easymock.tests2.DelegateToTest.testWrongClass":412,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":86,"org.easymock.tests.UsageStrictMockTest.range":246,"org.easymock.samples.ConstructorCalledMockTest.testTax":286,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":395,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":71,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":303,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":24,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests2.CaptureTest.testCaptureNone":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":354,"org.easymock.tests.UsageUnorderedTest.message":353,"org.easymock.tests.UsageVerifyTest.twoReturns":118,"org.easymock.tests.UsageVarargTest.varargByteAccepted":49,"org.easymock.tests2.ThreadingTest.testThreadSafe":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":320,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":22,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":289,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":365,"org.easymock.tests2.CaptureTest.testCapture_2617107":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":243,"org.easymock.tests2.UsageConstraintsTest.any":184,"org.easymock.tests2.StubTest.stub":149,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":38,"org.easymock.tests.UsageExpectAndThrowTest.longType":63,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":277,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":402,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":409,"org.easymock.tests2.SerializationTest.testClass":209,"org.easymock.tests.LimitationsTest.mockNativeMethod":35,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":106,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":271,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests2.NameTest.nameForMocksControl":154,"org.easymock.tests2.MockedExceptionTest.testMockedException":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":308,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":239,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":34,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":64,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":295,"org.easymock.tests.MockingTest.testNicePartialClassMocking":33,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":166,"org.easymock.tests2.CaptureTest.testCaptureLast":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":256,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":182,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":215,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":195,"org.easymock.tests.MockingTest.testTwoMocks":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":68,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":385,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":198,"org.easymock.tests.UsageStrictMockTest.differentMethods":82,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":275,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":13,"org.easymock.tests2.MockBuilderTest.testCreateMockString":300,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":9,"org.easymock.tests.UsageExpectAndThrowTest.floatType":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":310,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":305,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":202,"org.easymock.tests.UsageVerifyTest.twoThrows":117,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":319,"org.easymock.samples.ExampleTest.voteAgainstRemoval":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":11,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":169,"org.easymock.tests.LimitationsTest.privateConstructor":268,"org.easymock.tests2.UsageConstraintsTest.testNotNull":197,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":236,"org.easymock.tests2.UsageTest.defaultResetToNice":160,"org.easymock.samples.ExampleTest.voteAgainstRemovals":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":102,"org.easymock.tests.UsageVarargTest.differentLength":352,"org.easymock.tests2.CallbackTest.callback":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":329,"org.easymock.tests.UsageTest.openCallCountByLastCall":356,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":375,"org.easymock.tests.UsageCallCountTest.tooFewCalls":20,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":26,"org.easymock.tests.UsageThrowableTest.throwCheckedException":233,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.MockingTest.testStrictClassMocking":263,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":214,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":348,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":406,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":411,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":204,"org.easymock.tests.ObjectMethodsTest.testHashCode":8,"org.easymock.tests2.NameTest.nameForNiceMock":153,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":142,"org.easymock.tests2.DependencyTest.testInterfaceMocking":155,"org.easymock.samples.ExampleTest.addDocument":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":321,"org.easymock.tests2.DelegateToTest.testStubDelegate":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":326,"org.easymock.tests2.AnswerTest.stubAnswer":203,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":81,"org.easymock.tests.UsageVarargTest.varargLongAccepted":48,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":105,"org.easymock.tests.UsageExpectAndReturnTest.floatType":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":200,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":287,"org.easymock.tests.UsageThrowableTest.noUpperLimit":29,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":192,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":254,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":175,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":332,"org.easymock.tests2.SerializationTest.test":210,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":223,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":274,"org.easymock.tests2.UsageConstraintsTest.testSame":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":88,"org.easymock.samples.SupportTest.addDocument":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":311,"org.easymock.tests.GenericTest.testPackageScope":52,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":373,"org.easymock.tests2.NameTest.nameForMock":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":99,"org.easymock.tests2.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":330,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":74,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":362,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":110,"org.easymock.tests2.MockedExceptionTest.testRealException":208,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":347,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":120,"org.easymock.tests2.NameTest.nameForStrictMock":152,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":293,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":165,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":333,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":193,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":276,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":291,"org.easymock.tests2.UsageStrictMockTest.range":249,"org.easymock.tests2.UsageConstraintsTest.lessThan":199,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":301,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":389,"org.easymock.tests2.CaptureTest.testCaptureRightOne":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":315,"org.easymock.tests2.UsageConstraintsTest.testOr":181,"org.easymock.tests.UsageRangeTest.combination":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":247,"org.easymock.tests.UsageTest.wrongArguments":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":312,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":100,"org.easymock.tests.UsageVarargTest.varargShortAccepted":47,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":278,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":341,"org.easymock.tests2.UsageConstraintsTest.cmpTo":185,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":230,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":245,"org.easymock.tests2.CaptureTest.testCaptureFromStub":414,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":292,"org.easymock.tests.UsageTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":101,"org.easymock.tests2.UsageConstraintsTest.constraints":176,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":361,"org.easymock.samples.ExampleTest.addAndChangeDocument":136,"org.easymock.tests.UsageStrictMockTest.testVerify":84,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":377,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":55,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":113,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":302,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":93,"org.easymock.tests.LimitationsTest.abstractClass":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":114,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":394,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":43}}]
