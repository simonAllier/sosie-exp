[{"position":"org.easymock.EasyMock:557","failures":[0,1,2,3,4,5,6,7,7,8,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[217,256],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[257,20,24,96,117,125,258,259,135,136,260,155,261,262,214,247,251,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[263],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[264],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[19,20,21,266,267,268,269,270,271,272,119,273,274,275,134,135,136,276,145,154,155,156,214,252,277,278,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[7,7,8,8,9,280,281,18,22,282,25,26,27,28,30,31,283,284,285,43,44,46,47,48,286,49,287,50,51,52,57,288,289,112,290,113,291,114,115,292,116,293,294,126,127,128,129,295,296,167,297,168,215,298,238,239,240,299,241],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[36,38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:172","failures":[114,296],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[312,0,1,3,4,313,5,6,314,280,281,315,316,257,20,21,317,282,33,318,319,320,36,37,42,69,75,76,77,321,322,113,273,323,274,275,276,145,147,324,325,260,155,156,326,327,328,329,261,262,297,214,225,330,331,332,333,334,335,336,337,338,339,241,277,278,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[340,341,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[20,273,274,275,135,136,343,325,155,214,344,277,278,279],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[7,7,8,8,9,280,281,18,22,282,25,26,27,28,30,31,283,284,285,43,44,46,47,48,286,49,287,50,51,52,57,288,289,112,290,113,291,114,115,292,116,293,294,126,127,128,129,295,296,167,297,168,215,298,238,239,240,299,241],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[171,173,187,188,231,233],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[345],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[220],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:190","sourceCode":"if ((java.lang.reflect.Type[].int) != (java.lang.Class<?>[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,7,8,8,19,40,79,80,81,84,85,86,87,92,94,95,97,98,99,103,104,105,130,137,138,139,140,141,154,346,221,223,224,227,231,232,233,234,235,236,237,347,348,349,350,351],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests2.UsageTest.argumentsOrdered":275,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":251,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":163,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":323,"org.easymock.tests2.StubTest.stubWithReturnValue":79,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":314,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":102,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":178,"org.easymock.tests2.SerializationTest.testAllMockedMethod":282,"org.easymock.tests2.DelegateToTest.testReturnException":61,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":161,"org.easymock.tests.MockingTest.testPartialClassMocking":238,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":270,"org.easymock.samples.SupportTest.voteForRemovals":0,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":206,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":194,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":127,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":107,"org.easymock.tests.UsageExpectAndThrowTest.object":204,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":144,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":17,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.DelegateToTest.testWrongClass":63,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":89,"org.easymock.tests2.UsageTest.wrongArguments":273,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":223,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":305,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests.UsageStrictMockTest.range":155,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":25,"org.easymock.tests2.UsageConstraintsTest.testNull":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":205,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":114,"org.easymock.tests2.CaptureTest.testPrimitive":34,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":227,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":278,"org.easymock.tests.UsageTest.moreThanOneArgument":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":213,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":235,"org.easymock.tests2.CaptureTest.testCaptureNone":37,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":133,"org.easymock.tests.UsageUnorderedTest.message":214,"org.easymock.tests.UsageVerifyTest.twoReturns":136,"org.easymock.tests.UsageVarargTest.varargByteAccepted":337,"org.easymock.tests2.ThreadingTest.testThreadSafe":10,"org.easymock.tests.UsageTest.argumentsOrdered":279,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":216,"org.easymock.tests.UsageVarargTest.varargIntAccepted":332,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":329,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":280,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":271,"org.easymock.tests2.CaptureTest.testCapture_2617107":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":137,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":342,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":226,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":291,"org.easymock.tests2.UsageConstraintsTest.any":90,"org.easymock.tests2.StubTest.stub":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":141,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":159,"org.easymock.tests.UsageExpectAndThrowTest.longType":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":162,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":268,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":59,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":215,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":15,"org.easymock.tests2.AnswerTest.answer":106,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":188,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":301,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":285,"org.easymock.tests2.CaptureTest.testAnd":32,"org.easymock.tests2.UsageTest.strictResetToDefault":118,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":263,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":302,"org.easymock.tests2.MockedExceptionTest.testMockedException":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":70,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":254,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":220,"org.easymock.tests2.DelegateToTest.testDelegate":65,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":345,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":198,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":115,"org.easymock.tests.MockingTest.testNicePartialClassMocking":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":209,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":340,"org.easymock.tests2.CaptureTest.testCaptureLast":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":164,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":145,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":88,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":31,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests.MockingTest.testTwoMocks":298,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":276,"org.easymock.tests2.CaptureTest.testCapture1_2446744":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":202,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":274,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":104,"org.easymock.tests.UsageThrowableTest.throwError":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":303,"org.easymock.tests.UsageStrictMockTest.differentMethods":156,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":307,"org.easymock.tests2.ConstraintsToStringTest.andToString":269,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":12,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":311,"org.easymock.tests2.MockBuilderTest.testCreateMockString":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":237,"org.easymock.tests.UsageExpectAndThrowTest.floatType":196,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":96,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":109,"org.easymock.tests.UsageVerifyTest.twoThrows":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":128,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":138,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":131,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":132,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":195,"org.easymock.tests2.UsageTest.niceToStrict":120,"org.easymock.tests2.UsageConstraintsTest.testNotNull":103,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":113,"org.easymock.tests2.MockBuilderTest.testCreateMock":292,"org.easymock.tests2.UsageTest.defaultResetToNice":123,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":184,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":300,"org.easymock.tests2.CallbackTest.callback":24,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":304,"org.easymock.tests.UsageTest.openCallCountByLastCall":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":203,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":71,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":225,"org.easymock.tests.UsageCallCountTest.tooFewCalls":327,"org.easymock.tests.UsageOverloadedMethodTest.overloading":229,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":192,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":94,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":228,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":28,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":180,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":93,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":38,"org.easymock.tests.UsageThrowableTest.throwCheckedException":150,"org.easymock.tests2.EasyMockSupportClassTest.testAll":126,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":211,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":283,"org.easymock.tests2.CaptureTest.testCaptureAll":33,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":222,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":27,"org.easymock.tests2.UsageConstraintsTest.testMatches":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":29,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":111,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":236,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":341,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":14,"org.easymock.tests.UsageVarargTest.allKinds":339,"org.easymock.tests2.DependencyTest.testInterfaceMocking":16,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":134,"org.easymock.samples.BasicClassMockTest.testPrintContent":281,"org.easymock.samples.ExampleTest.addDocument":313,"org.easymock.tests2.DelegateToTest.testStubDelegate":62,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":152,"org.easymock.tests2.AnswerTest.stubAnswer":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":309,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":165,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":154,"org.easymock.tests2.UsageConstraintsTest.greaterThan":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":248,"org.easymock.tests.UsageVarargTest.varargLongAccepted":336,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":52,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":326,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":11,"org.easymock.tests.UsageExpectAndReturnTest.floatType":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.tests2.ConstraintsToStringTest.orToString":266,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":98,"org.easymock.tests.UsageThrowableTest.noUpperLimit":147,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":241,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":81,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":117,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":319,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":68,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":148,"org.easymock.tests2.UsageConstraintsTest.testSame":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":170,"org.easymock.samples.SupportTest.addDocument":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":160,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":60,"org.easymock.tests2.CaptureTest.testCaptureFirst":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":69,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":176,"org.easymock.tests.GenericTest.testPackageScope":167,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":13,"org.easymock.tests2.CaptureTest.testCapture2_2446744":41,"org.easymock.tests2.UsageTest.moreThanOneArgument":119,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":219,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":310,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":338,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":261,"org.easymock.tests.UsageExpectAndReturnTest.longType":172,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":66,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":181,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":322,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":130,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":210,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":173,"org.easymock.tests.UsageCallCountTest.tooManyCalls":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":208,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":250,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":166,"org.easymock.tests2.MockedExceptionTest.testRealException":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":199,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":224,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":26,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":289,"org.easymock.tests2.UsageConstraintsTest.testContains":92,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":57,"org.easymock.tests2.UsageConstraintsTest.testFind":84,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":230,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":47,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":54,"org.easymock.tests.UsageExpectAndReturnTest.object":179,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":258,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests.ErrorMessageTest.testGetters":264,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":112,"org.easymock.tests2.UsageStrictMockTest.range":20,"org.easymock.tests2.UsageConstraintsTest.lessThan":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":74,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":334,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":308,"org.easymock.tests.UsageTest.exactCallCountByLastCall":255,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":67,"org.easymock.tests2.CaptureTest.testCaptureRightOne":39,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":217,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":142,"org.easymock.tests2.UsageConstraintsTest.testOr":87,"org.easymock.tests.UsageRangeTest.combination":247,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":330,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":185,"org.easymock.tests.UsageTest.wrongArguments":277,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":191,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":306,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":299,"org.easymock.tests2.EasyMockSupportTest.testVerify":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":182,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":218,"org.easymock.tests.UsageVarargTest.varargShortAccepted":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":243,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":190,"org.easymock.tests2.UsageConstraintsTest.cmpTo":91,"org.easymock.tests.UsageVarargTest.varargCharAccepted":333,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":108,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":316,"org.easymock.tests2.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":77,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":242,"org.easymock.tests2.CaptureTest.testCaptureFromStub":40,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":290,"org.easymock.tests.UsageTest.unexpectedCallWithArray":344,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":201,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":325,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":149,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":183,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":260,"org.easymock.tests2.UsageConstraintsTest.constraints":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":200,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests2.ConstraintsToStringTest.notToString":267,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":157,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":315,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":129,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":320,"org.easymock.tests2.UsageTest.resumeIfFailure":124,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":139,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":175,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":140,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":331,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":72}}]
