[{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[6,6,7,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,2,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,3,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"toStringMethod","finalizeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[23,25,29,148,187,194],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[8,10,12,13,14,97],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[206,310,216,311,312,313,314,315,316,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[48,52,53,55,58,67,68,118,122,123,125,128,318,154,157,158,203,204],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1205","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[8,9,10,11,12,13,14,22,23,24,25,26,28,29,32,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,67,68,74,75,76,77,80,321,84,85,86,87,93,95,96,97,98,99,100,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,146,148,149,150,151,152,153,164,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,193,194,195,198,199,201,203,204,206,207,211,212,216,217,218,219,220,221,223,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,282,284,285,286,287,288,291,292,293,294,296,297,298,301,302,303,305,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[322,6,6,7,7,323,8,9,324,10,11,12,13,325,14,15,326,327,328,329,330,331,332,333,334,335,336,19,22,23,24,25,26,2,27,28,29,30,31,32,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,337,3,65,66,67,68,69,338,74,75,76,77,78,79,80,339,340,341,342,343,344,81,82,83,345,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,346,347,108,348,349,350,109,351,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,352,146,147,148,149,150,151,152,153,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,353,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,354,201,202,203,204,205,206,355,356,357,358,207,210,211,212,213,214,215,359,216,217,360,218,219,220,221,222,225,361,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,279,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,301,302,303,305,306,307,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[262],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[363,20,22,23,24,25,26,2,27,30,31,32,33,34,35,36,37,38,39,40,64,3,65,66,67,68,69,364,365,87,366,346,108,348,367,368,369,137,138,139,140,143,144,145,164,173,175,177,178,180,181,186,187,189,190,191,192,196,197,198,199,200,201,202,203,204,205,355,356,357,358,222,223,224,226,227,370,228,229,231,232,235,236,244,259,271,277,280,281,282,283,298,299],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[256],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[310,371,372,373,311,374,232,236,375,376,377,378,379,380,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[382,208],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":245,"org.easymock.tests2.UsageTest.argumentsOrdered":197,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":25,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":182,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":92,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":192,"org.easymock.tests2.StubTest.stubWithReturnValue":171,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":311,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":324,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":266,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":53,"org.easymock.tests2.SerializationTest.testAllMockedMethod":360,"org.easymock.tests2.DelegateToTest.testReturnException":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":141,"org.easymock.tests.MockingTest.testPartialClassMocking":41,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests.MockClassControlTest.testToString":138,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":126,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":114,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":142,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":208,"org.easymock.tests.UsageExpectAndThrowTest.object":124,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":263,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":313,"org.easymock.tests2.DelegateToTest.testWrongClass":303,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":135,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":136,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":76,"org.easymock.tests2.UsageTest.wrongArguments":190,"org.easymock.tests.UsageStrictMockTest.range":67,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":83,"org.easymock.samples.ExampleTest.answerVsDelegate":11,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":179,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":230,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":38,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":378,"org.easymock.tests2.UsageConstraintsTest.testNull":247,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":125,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":226,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":181,"org.easymock.tests2.CaptureTest.testPrimitive":287,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":80,"org.easymock.tests.UsageTest.moreThanOneArgument":26,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":133,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":82,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":0,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":161,"org.easymock.tests2.CaptureTest.testCaptureNone":292,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":72,"org.easymock.tests.UsageUnorderedTest.message":137,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":335,"org.easymock.tests2.ThreadingTest.testThreadSafe":237,"org.easymock.tests.UsageTest.argumentsOrdered":31,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":154,"org.easymock.tests.UsageVarargTest.varargIntAccepted":330,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":350,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":326,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":144,"org.easymock.tests2.CaptureTest.testCapture_2617107":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":95,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":361,"org.easymock.tests2.UsageConstraintsTest.any":253,"org.easymock.tests2.StubTest.stub":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":99,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":91,"org.easymock.tests.UsageExpectAndThrowTest.longType":117,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":282,"org.easymock.tests2.SerializationTest.testClass":216,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":298,"org.easymock.tests.LimitationsTest.mockNativeMethod":134,"org.easymock.tests2.AnswerTest.answer":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":63,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":110,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":359,"org.easymock.tests2.CaptureTest.testAnd":284,"org.easymock.tests2.UsageTest.strictResetToDefault":188,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":277,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":205,"org.easymock.tests2.NameTest.nameForMocksControl":358,"org.easymock.tests2.MockedExceptionTest.testMockedException":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":160,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":176,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":29,"org.easymock.tests2.DelegateToTest.testDelegate":305,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":158,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":118,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":270,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":227,"org.easymock.tests.MockingTest.testNicePartialClassMocking":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":129,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":275,"org.easymock.tests2.CaptureTest.testCaptureLast":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":93,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":34,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":250,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":236,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":264,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":33,"org.easymock.tests2.CaptureTest.testCapture1_2446744":288,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":44,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":122,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":196,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":268,"org.easymock.tests.UsageThrowableTest.throwError":146,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":341,"org.easymock.tests.UsageStrictMockTest.differentMethods":68,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":37,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":239,"org.easymock.tests2.MockBuilderTest.testCreateMockString":229,"org.easymock.tests.UsageExpectAndThrowTest.floatType":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":163,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":259,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":210,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":220,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":96,"org.easymock.samples.ExampleTest.voteAgainstRemoval":13,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":71,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":70,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":115,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":145,"org.easymock.tests2.UsageTest.niceToStrict":191,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":377,"org.easymock.tests2.UsageConstraintsTest.testNotNull":267,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":306,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":153,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":319,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":225,"org.easymock.tests2.MockBuilderTest.testCreateMock":370,"org.easymock.tests2.UsageTest.defaultResetToNice":195,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":59,"org.easymock.tests.UsageVarargTest.differentLength":363,"org.easymock.tests2.CallbackTest.callback":186,"org.easymock.tests2.UsageConstraintsTest.equals":362,"org.easymock.tests.UsageTest.openCallCountByLastCall":28,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":123,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":177,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":242,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":78,"org.easymock.tests.UsageCallCountTest.tooFewCalls":348,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":379,"org.easymock.tests.UsageOverloadedMethodTest.overloading":112,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":257,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":55,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":111,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":256,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":345,"org.easymock.tests.UsageThrowableTest.throwCheckedException":150,"org.easymock.tests2.EasyMockSupportClassTest.testAll":218,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":351,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":131,"org.easymock.tests2.CaptureTest.testCaptureAll":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":235,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":299,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":232,"org.easymock.tests.MockNameTest.defaultName":20,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":343,"org.easymock.tests2.UsageConstraintsTest.testMatches":258,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":234,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":212,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":162,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests2.NameTest.nameForNiceMock":357,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":241,"org.easymock.tests.UsageVarargTest.allKinds":19,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":22,"org.easymock.tests2.DependencyTest.testInterfaceMocking":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":315,"org.easymock.samples.BasicClassMockTest.testPrintContent":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":103,"org.easymock.samples.ExampleTest.addDocument":325,"org.easymock.tests2.DelegateToTest.testStubDelegate":302,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":152,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":200,"org.easymock.tests2.AnswerTest.stubAnswer":211,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":94,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":317,"org.easymock.tests2.UsageConstraintsTest.greaterThan":260,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":165,"org.easymock.tests.UsageVarargTest.varargLongAccepted":334,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":280,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":69,"org.easymock.samples.ExampleTest.voteForRemoval":12,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":238,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":62,"org.easymock.tests.UsageExpectAndReturnTest.floatType":46,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":39,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":206,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":261,"org.easymock.tests.UsageThrowableTest.noUpperLimit":147,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":243,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":88,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":289,"org.easymock.tests2.SerializationTest.test":217,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":174,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":148,"org.easymock.tests2.UsageConstraintsTest.testSame":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":45,"org.easymock.samples.SupportTest.addDocument":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":89,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":300,"org.easymock.tests2.CaptureTest.testCaptureFirst":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":175,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":51,"org.easymock.tests.GenericTest.testPackageScope":109,"org.easymock.tests2.CaptureTest.testCapture2_2446744":296,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":240,"org.easymock.tests2.UsageTest.moreThanOneArgument":189,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":157,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":228,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":336,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":368,"org.easymock.tests2.NameTest.nameForMock":355,"org.easymock.tests.UsageExpectAndReturnTest.longType":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":100,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":132,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":265,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":21,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":374,"org.easymock.tests2.UsageStrictMockTest.differentMethods":204,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":130,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":159,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":48,"org.easymock.tests.UsageCallCountTest.tooManyCalls":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":128,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":167,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":108,"org.easymock.tests2.MockedExceptionTest.testRealException":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":52,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":40,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":119,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":231,"org.easymock.tests2.NameTest.nameForStrictMock":356,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":347,"org.easymock.tests2.UsageConstraintsTest.testContains":255,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":308,"org.easymock.tests2.UsageConstraintsTest.testFind":246,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":371,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":274,"org.easymock.tests.MockTypeTest.fromEasyMockClass":36,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":64,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":169,"org.easymock.tests.UsageExpectAndReturnTest.object":54,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":276,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":223,"org.easymock.tests2.UsageStrictMockTest.range":203,"org.easymock.tests2.UsageConstraintsTest.lessThan":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":180,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":314,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":381,"org.easymock.tests.UsageTest.exactCallCountByLastCall":32,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":316,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":173,"org.easymock.tests2.CaptureTest.testCaptureRightOne":294,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":155,"org.easymock.tests2.UsageConstraintsTest.testOr":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":310,"org.easymock.tests.UsageRangeTest.combination":164,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":328,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":271,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":60,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":85,"org.easymock.tests.UsageTest.wrongArguments":27,"org.easymock.tests2.MockBuilderTest.testWithConstructor":372,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":352,"org.easymock.tests2.EasyMockSupportTest.testVerify":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":49,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":57,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":156,"org.easymock.tests.UsageVarargTest.varargShortAccepted":333,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":17,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":367,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":213,"org.easymock.tests2.UsageConstraintsTest.cmpTo":254,"org.easymock.tests.UsageVarargTest.varargCharAccepted":331,"org.easymock.tests2.CaptureTest.testCaptureMultiple":320,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":209,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":354,"org.easymock.tests2.UsageTest.openCallCountByLastCall":193,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":194,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":16,"org.easymock.tests2.CaptureTest.testCaptureFromStub":295,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":339,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":224,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":121,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":149,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":58,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":278,"org.easymock.tests2.UsageConstraintsTest.constraints":244,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":66,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":140,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":120,"org.easymock.tests.UsageStrictMockTest.testVerify":338,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":105,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":322,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":221,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":101,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":290,"org.easymock.tests2.UsageTest.resumeIfFailure":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":50,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":35,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":98,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":178}}]
