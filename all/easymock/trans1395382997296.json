[{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[23,24,25,26,26,27,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,20,49,50,51,52,53,54,55,56,57,58,59,60,61,62,3,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[103,104,105],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[106],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[107,108,109,110,111,112,113,114,115,116,117,118],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[54,119,120,121,69,70],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[122,123,124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[126,127,64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[9,128,87,125,129,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.Range:44","failures":[23,24,25,130,26,27,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,28,29,30,31,153,154,32,155,5,6,7,8,9,10,156,157,158,159,160,161,162,163,164,165,166,167,168,0,169,170,171,172,173,174,11,175,176,33,177,178,179,180,181,182,183,184,185,186,187,188,128,85,189,190,191,192,193,194,195,196,12,122,123,124,197,198,199,200,201,202,203,204,205,206,207,208,209,103,210,211,212,213,214,34,35,36,215,37,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,86,87,88,244,245,246,247,248,249,250,251,252,253,254,255,38,39,40,41,42,43,44,45,256,257,258,259,260,261,13,262,263,264,265,89,46,266,267,268,269,47,270,271,272,273,274,275,90,276,277,278,91,92,279,93,280,281,94,282,283,284,285,286,287,288,289,290,291,292,293,294,95,295,14,15,16,296,297,298,299,300,301,302,96,303,304,97,98,305,2,306,307,308,309,310,311,312,48,313,314,315,125,316,317,318,17,319,320,321,322,323,84,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,18,19,20,21,354,355,356,357,358,359,83,360,361,4,362,363,364,365,366,367,368,369,126,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,107,410,108,109,110,111,112,113,411,114,116,117,412,118,413,414,415,416,49,417,50,418,419,420,421,422,423,424,425,426,427,51,428,52,53,429,430,54,55,56,431,57,432,433,58,59,434,60,129,1,99,435,436,127,437,438,439,440,441,442,443,61,444,445,446,447,448,449,450,451,452,453,454,62,3,455,63,64,65,66,456,67,457,458,68,69,70,71,459,72,73,74,75,76,460,461,77,78,462,463,22,464,465,466,467,468,469,470,471,100,472,473,101,102,474,475,476,79,477,478,80,479,480,481,482,483,484,485,486,487,81,488,489,490,491,492,82,493,494],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[313,314,315,125,316,317,318,17,319,320,321,322,323,84,324,325,327,328,329,330,331,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[356,357,359,83,360,361,4,362,363,364,372,373,377,378,107,410,108,109,116,117],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[496,49,417,50],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[118],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[23,24,25,130,26,27,131,132,133,134,135,136,137,138,139,141,147,148,149,150,151,28,29,32,5,6,7,8,9,10,158,159,160,161,162,163,164,165,33,177,178,179,180,181,182,183,184,128,85,189,190,191,192,193,194,195,196,12,197,198,199,200,201,202,203,204,35,36,37,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,86,87,88,244,245,246,248,249,250,251,252,253,254,255,256,258,259,260,261,13,262,263,272,273,274,275,90,276,277,278,91,92,279,93,280,281,94,282,283,284,285,286,288,289,290,292,293,295,296,297,298,299,300,301,302,96,303,304,97,98,334,335,336,337,338,339,340,341,342,343,344,345,346,18,19,20,21,354,355,356,357,359,83,360,361,4,362,364,365,366,367,368,369,126,370,371,372,373,374,375,376,377,378,379,386,393,394,396,397,403,107,410,108,109,110,111,112,113,411,114,116,117,412,118,415,416,49,417,50,419,420,421,423,424,425,426,427,51,52,54,55,56,57,58,59,60,129,1,99,435,436,127,437,438,439,440,441,442,443,61,446,449,450,451,452,454,62,3,455,63,64,65,66,67,68,69,70,71,73,74,75,76,461,77,78,463,22,464,470,471,100,472,473,101,102,79,80,81,82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":357,"org.easymock.tests2.UsageTest.argumentsOrdered":441,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":321,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":127,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":130,"org.easymock.tests2.DelegateToTest.testReturnException":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":6,"org.easymock.tests.MockingTest.testPartialClassMocking":35,"org.easymock.tests.MockClassControlTest.testToString":40,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":465,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":482,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":272,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":416,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":362,"org.easymock.tests2.UsageTest.wrongArguments":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":260,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":409,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":298,"org.easymock.samples.ExampleTest.answerVsDelegate":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":47,"org.easymock.tests2.UsageConstraintsTest.testNull":83,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":217,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":63,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":45,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":343,"org.easymock.tests2.CaptureTest.testPrimitive":109,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":263,"org.easymock.tests.UsageTest.moreThanOneArgument":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":286,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":179,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":142,"org.easymock.tests.UsageTest.argumentsOrdered":194,"org.easymock.tests.UsageVarargTest.varargIntAccepted":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":239,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":349,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":243,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":403,"org.easymock.tests.ReplayStateInvalidUsageTest.times":173,"org.easymock.tests2.DependencyTest.testClassMocking":413,"org.easymock.tests2.AnswerTest.answer":446,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":427,"org.easymock.tests2.CaptureTest.testAnd":107,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":267,"org.easymock.tests2.UsageTest.strictResetToDefault":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":338,"org.easymock.tests2.DelegateToTest.testDelegate":423,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":282,"org.easymock.tests.LimitationsTest.mockFinalMethod":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":151,"org.easymock.tests2.DependencyTest.testClassMockingSupport":414,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":264,"org.easymock.tests2.CaptureTest.testCapture1_2446744":110,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":425,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":168,"org.easymock.tests.UsageThrowableTest.throwError":197,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":269,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":494,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":0,"org.easymock.tests.MockingTest.testInterfaceMocking":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":240,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":483,"org.easymock.tests2.UsageTest.niceToStrict":436,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":54,"org.easymock.tests2.MockBuilderTest.testCreateMock":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":406,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":92,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":339,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":124,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":156,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":296,"org.easymock.tests.UsageOverloadedMethodTest.overloading":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":487,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":293,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":368,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":230,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":104,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":367,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":114,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":247,"org.easymock.tests.MockClassControlTest.testEquals":44,"org.easymock.tests2.EasyMockSupportClassTest.testAll":79,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":29,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":284,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":426,"org.easymock.tests2.CaptureTest.testCaptureAll":410,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":149,"org.easymock.tests.MockNameTest.defaultName":188,"org.easymock.tests2.UsageConstraintsTest.testMatches":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":180,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":166,"org.easymock.samples.ExampleTest.voteForRemovals":139,"org.easymock.tests.UsageVarargTest.allKinds":255,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":150,"org.easymock.samples.BasicClassMockTest.testPrintContent":25,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":203,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":470,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":10,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":211,"org.easymock.tests2.UsageConstraintsTest.greaterThan":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":257,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":71,"org.easymock.samples.ExampleTest.voteForRemoval":136,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":212,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":459,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":394,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":270,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":66,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":129,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":33,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":336,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":5,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":418,"org.easymock.tests2.CaptureTest.testCaptureFirst":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":337,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":443,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":226,"org.easymock.tests2.CaptureTest.testCapture2_2446744":412,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":396,"org.easymock.tests2.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":328,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":254,"org.easymock.tests.GenericTest.testBridgedEquals":31,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":163,"org.easymock.tests.UsageExpectAndReturnTest.longType":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":147,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":285,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":287,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":177,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":15,"org.easymock.tests.UsageCallCountTest.tooManyCalls":164,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":202,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":74,"org.easymock.tests.MockingTest.testNiceClassMocking":218,"org.easymock.tests.MockingTest.testClassMocking":214,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":157,"org.easymock.tests2.UsageConstraintsTest.testContains":366,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":20,"org.easymock.tests2.UsageConstraintsTest.testFind":359,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":184,"org.easymock.tests.MockTypeTest.fromEasyMockClass":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":454,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests.UsageExpectAndReturnTest.object":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":342,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":249,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":311,"org.easymock.tests.UsageTest.exactCallCountByLastCall":195,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":185,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":444,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":235,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":244,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":292,"org.easymock.tests.MockClassControlTest.testHashCode":43,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":485,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":123,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":424,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":380,"org.easymock.tests.UsageVarargTest.varargCharAccepted":248,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":205,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":333,"org.easymock.tests2.UsageTest.openCallCountByLastCall":437,"org.easymock.tests.DefaultClassInstantiatorTest.object":206,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":122,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":486,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":278,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":401,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":42,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":277,"org.easymock.tests.CapturesMatcherTest.test":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":14,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":82,"org.easymock.tests2.UsageTest.resumeIfFailure":442,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":8,"org.easymock.tests2.StubTest.stubWithReturnValue":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":431,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":228,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":376,"org.easymock.tests2.SerializationTest.testAllMockedMethod":50,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":326,"org.easymock.samples.SupportTest.voteForRemovals":133,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":280,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":496,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":332,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":447,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":187,"org.easymock.tests.UsageExpectAndThrowTest.object":279,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":373,"org.easymock.tests2.DelegateToTest.testWrongClass":421,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":289,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests.UsageStrictMockTest.range":304,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":352,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":474,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":11,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":297,"org.easymock.tests2.CaptureTest.testCaptureNone":411,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":307,"org.easymock.tests.UsageUnorderedTest.message":165,"org.easymock.tests.UsageVerifyTest.twoReturns":88,"org.easymock.tests.UsageVarargTest.varargByteAccepted":253,"org.easymock.tests2.ThreadingTest.testThreadSafe":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":488,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":161,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":24,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":312,"org.easymock.tests2.CaptureTest.testCapture_2617107":108,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":330,"org.easymock.tests2.UsageConstraintsTest.any":364,"org.easymock.tests2.StubTest.stub":463,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":7,"org.easymock.tests.UsageExpectAndThrowTest.longType":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":331,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":103,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":171,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":472,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":386,"org.easymock.tests2.SerializationTest.testClass":49,"org.easymock.tests.LimitationsTest.mockNativeMethod":32,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":30,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":238,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":400,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":120,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":102,"org.easymock.tests2.NameTest.nameForMocksControl":469,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":402,"org.easymock.tests2.MockedExceptionTest.testMockedException":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":478,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":453,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":90,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":62,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":57,"org.easymock.tests.MockingTest.testNicePartialClassMocking":36,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":398,"org.easymock.tests2.CaptureTest.testCaptureLast":113,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":374,"org.easymock.tests.MockingTest.testTwoMocks":34,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":91,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":440,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":378,"org.easymock.samples.ExampleTest.removeNonExistingDocument":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":405,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":169,"org.easymock.tests.UsageStrictMockTest.differentMethods":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":208,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":395,"org.easymock.tests2.MockBuilderTest.testCreateMockString":60,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":479,"org.easymock.tests.UsageExpectAndThrowTest.floatType":274,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":449,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":445,"org.easymock.tests.UsageVerifyTest.twoThrows":87,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":81,"org.easymock.samples.ExampleTest.voteAgainstRemoval":137,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":322,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":70,"org.easymock.tests.LimitationsTest.privateConstructor":154,"org.easymock.tests2.UsageConstraintsTest.testNotNull":377,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":204,"org.easymock.tests2.UsageTest.defaultResetToNice":439,"org.easymock.samples.ExampleTest.voteAgainstRemovals":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":323,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":399,"org.easymock.tests.UsageVarargTest.differentLength":250,"org.easymock.tests2.CallbackTest.callback":464,"org.easymock.tests2.UsageConstraintsTest.equals":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":457,"org.easymock.tests.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":13,"org.easymock.tests.UsageCallCountTest.tooFewCalls":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":299,"org.easymock.tests.UsageThrowableTest.throwCheckedException":201,"org.easymock.tests.MockingTest.testStrictClassMocking":213,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":12,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":404,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":75,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":461,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":451,"org.easymock.tests.ObjectMethodsTest.testHashCode":310,"org.easymock.tests2.NameTest.nameForNiceMock":468,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":397,"org.easymock.tests2.DependencyTest.testInterfaceMocking":415,"org.easymock.samples.ExampleTest.addDocument":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.DelegateToTest.testStubDelegate":420,"org.easymock.tests2.AnswerTest.stubAnswer":450,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":96,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":432,"org.easymock.tests.UsageVarargTest.varargLongAccepted":252,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":320,"org.easymock.tests.UsageExpectAndReturnTest.floatType":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests.UsageThrowableTest.noUpperLimit":198,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":371,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":355,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":347,"org.easymock.tests2.SerializationTest.test":417,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":111,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":105,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":220,"org.easymock.tests2.UsageConstraintsTest.testSame":360,"org.easymock.samples.SupportTest.addDocument":132,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":460,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":480,"org.easymock.tests.GenericTest.testPackageScope":28,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":216,"org.easymock.tests2.NameTest.nameForMock":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":231,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":434,"org.easymock.tests2.UsageStrictMockTest.differentMethods":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":458,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":94,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":308,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":259,"org.easymock.tests2.MockedExceptionTest.testRealException":21,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":353,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":84,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":261,"org.easymock.tests2.NameTest.nameForStrictMock":467,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":430,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":452,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":351,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":209,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":372,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":473,"org.easymock.tests2.UsageConstraintsTest.lessThan":379,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":484,"org.easymock.tests2.CaptureTest.testCaptureRightOne":116,"org.easymock.tests2.UsageConstraintsTest.testOr":361,"org.easymock.tests.UsageRangeTest.combination":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":3,"org.easymock.tests.UsageTest.wrongArguments":190,"org.easymock.tests2.MockBuilderTest.testWithConstructor":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":481,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":39,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":314,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":210,"org.easymock.tests.UsageVarargTest.varargShortAccepted":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":162,"org.easymock.tests2.UsageConstraintsTest.cmpTo":365,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":125,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":438,"org.easymock.tests2.CaptureTest.testCaptureFromStub":117,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":167,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":53,"org.easymock.tests.UsageTest.unexpectedCallWithArray":189,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":302,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":160,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":233,"org.easymock.tests2.CaptureTest.testCapture":115,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":303,"org.easymock.tests2.UsageConstraintsTest.constraints":356,"org.easymock.samples.ExampleTest.addAndChangeDocument":141,"org.easymock.tests.UsageStrictMockTest.testVerify":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":131,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":301,"org.easymock.tests2.CompareToTest.testGreateThan":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":148,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":241,"org.easymock.tests.LimitationsTest.abstractClass":153,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":225,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":242,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":340}}]
