[{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[4,5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[24,25,26],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:98","sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[27,28,29,30,31,32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[33,34,35,36,37,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[40,41,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Invocation:99","failures":[43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[57],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.LastControl:95","failures":[62,63,2,64,59,65,60,66,61,67,68],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[69,70,71,72,73],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[74,75,76,77,43,78,79,55,80,81,82,83,84,85,86,87,88,89,90,91,6,7,8,9,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,57,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,10,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,71,177,178,179,180,181,182,183,62,184,63,185,186,187,188,189,0,190,2,191,192,3,193,194,39,195,196,197,198,199,200,64,59,201,202,65,203,60,66,204,61,44,205,206,207,208,209,210,211,212,67,213,214,215,216,68,217,218,219,220,221,222,58,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,45,240,46,241,242,243,244,245,246,247,248,249,250,251,4,5,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,27,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,48,336,337,338,339,340,341,342,343,344,345,346,24,25,347,348,349,26,350,351,352,353,354,355,356,357,358,359,360,361,362,363,11,12,13,14,15,16,56,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,17,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,28,422,423,424,29,425,426,427,428,429,30,430,431,432,433,434,435,31,32,436,437,438,439,18,440,441,442,19,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,20,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,21,22,23,500,501,502,503,504,505,506,507,508,509,510,511,72,73,49,512,50,513,514,51,52,515,53,516,54,517,518,519,520],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[521,522,280,523,524,488],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[525,526,527],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[75,43,79,55,83,87,89,90,95,98,108,114,138,148,149,150,151,152,153,155,156,157,164,168,169,170,171,172,173,176,179,180,181,194,271,272,274,281,283,284,295,296,301,27,302,303,333,48,336,337,338,345,351,415,418,419,420,421,28,422,423,424,29,425,426,429,30,431,432,433,435,31,32,436,437,438,461,462,496,498,49,50,513,51,52,53],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[43,528],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[495],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[61],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[89,222,227,228,280,283,342,449,450,529,488,489,492,493],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[7,8,92,95,97,99,100,103,106,109,110,113,150,153,168,169,171,172,173,176,177,178,181,182,183,197,242,245,268,269,270,277,343,344,345,346,24,25,347,348,349,26,350,463,464,465,466,467,468,469,470,471,496,497,499,517,518],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[74,69,75,76,530,77,43,78,79,33,55,80,81,82,83,70,84,85,86,87,88,89,90,91,6,7,8,9,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,136,137,138,139,140,141,142,143,144,145,10,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,71,177,178,179,180,181,182,183,62,184,63,185,186,187,188,189,0,190,2,191,192,3,193,194,39,531,195,196,197,198,199,200,64,59,201,202,65,203,60,66,204,61,44,205,206,207,208,209,210,211,212,67,213,214,215,216,68,217,218,219,220,221,222,58,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,45,240,46,241,242,243,244,532,245,246,247,248,249,250,251,4,5,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,27,302,303,304,327,328,329,330,331,332,533,333,334,335,48,336,337,338,339,340,341,342,343,344,345,346,534,24,25,347,348,349,26,535,350,351,352,353,354,355,356,357,358,359,360,361,362,363,11,12,13,14,15,16,56,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,17,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,28,422,423,424,29,425,426,427,428,429,30,430,431,432,433,434,435,31,32,436,437,438,439,18,440,441,442,19,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,20,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,21,22,23,500,501,502,503,504,505,506,507,508,509,510,511,72,73,49,512,50,513,514,51,52,515,53,516,54,517,518,519,520],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[62,63,2,64,59,65,203,60,61,67,68,217],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[44,15,439,441,442,19],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":59,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":486,"org.easymock.tests2.UsageTest.argumentsOrdered":228,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":400,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":223,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":519,"org.easymock.tests2.DelegateToTest.testReturnException":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":12,"org.easymock.tests.MockingTest.testPartialClassMocking":271,"org.easymock.tests.MockClassControlTest.testToString":465,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":140,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":102,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":371,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":149,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":34,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":438,"org.easymock.tests2.UsageTest.wrongArguments":222,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":299,"org.easymock.samples.ExampleTest.answerVsDelegate":514,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":368,"org.easymock.tests2.UsageConstraintsTest.testNull":65,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":276,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":171,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":470,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":45,"org.easymock.tests2.CaptureTest.testPrimitive":185,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":441,"org.easymock.tests.UsageTest.moreThanOneArgument":487,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":390,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":302,"org.easymock.tests.UsageTest.argumentsOrdered":493,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":359,"org.easymock.tests.UsageVarargTest.varargIntAccepted":502,"org.easymock.tests.InvocationTest.testEquals":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":38,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":127,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":244,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":28,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":310,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":526,"org.easymock.tests.ReplayStateInvalidUsageTest.times":483,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":261,"org.easymock.tests2.DependencyTest.testClassMocking":146,"org.easymock.tests2.AnswerTest.answer":248,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":407,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":255,"org.easymock.tests2.CaptureTest.testAnd":62,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":365,"org.easymock.tests2.UsageTest.strictResetToDefault":220,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":530,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":235,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":337,"org.easymock.tests2.DelegateToTest.testDelegate":167,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":363,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":386,"org.easymock.tests.LimitationsTest.mockFinalMethod":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":447,"org.easymock.tests2.DependencyTest.testClassMockingSupport":147,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":339,"org.easymock.tests2.CaptureTest.testCapture1_2446744":186,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":253,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":477,"org.easymock.tests.UsageThrowableTest.throwError":287,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":367,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":533,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":116,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":313,"org.easymock.samples.PartialClassMockTest.testGetArea":49,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":478,"org.easymock.tests.MockingTest.testInterfaceMocking":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":419,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":103,"org.easymock.tests2.UsageTest.niceToStrict":58,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":372,"org.easymock.tests2.ThreadingTest.testChangeDefault":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":391,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":42,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":43,"org.easymock.tests2.MockBuilderTest.testCreateMock":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":264,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":521,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":380,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":364,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":474,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":451,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":297,"org.easymock.tests.UsageOverloadedMethodTest.overloading":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":107,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":208,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":431,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":333,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":207,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":190,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":503,"org.easymock.tests.MockClassControlTest.testEquals":469,"org.easymock.tests2.EasyMockSupportClassTest.testAll":95,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":388,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":445,"org.easymock.tests2.CaptureTest.testCaptureAll":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":254,"org.easymock.tests.MockNameTest.defaultName":417,"org.easymock.tests2.UsageConstraintsTest.testMatches":209,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":475,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":303,"org.easymock.samples.ExampleTest.voteForRemovals":53,"org.easymock.tests.UsageVarargTest.allKinds":511,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":448,"org.easymock.samples.BasicClassMockTest.testPrintContent":518,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":446,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":293,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":85,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":16,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":535,"org.easymock.tests2.UsageConstraintsTest.greaterThan":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":336,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":181,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":314,"org.easymock.samples.ExampleTest.voteForRemoval":51,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":350,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":182,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":136,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":369,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":532,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":174,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":306,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":471,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":219,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":233,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":11,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":162,"org.easymock.tests2.CaptureTest.testCaptureFirst":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":234,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":230,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":428,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":138,"org.easymock.tests2.CaptureTest.testCapture2_2446744":192,"org.easymock.tests2.UsageTest.moreThanOneArgument":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":408,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":83,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":510,"org.easymock.tests.GenericTest.testBridgedEquals":499,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":458,"org.easymock.tests.UsageExpectAndReturnTest.longType":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":443,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":231,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":528,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":389,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":215,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":351,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":387,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":301,"org.easymock.tests.UsageCallCountTest.tooManyCalls":459,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":527,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":112,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":429,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":376,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":292,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":151,"org.easymock.tests.MockingTest.testNiceClassMocking":277,"org.easymock.tests.MockingTest.testClassMocking":269,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":452,"org.easymock.tests2.UsageConstraintsTest.testContains":206,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":8,"org.easymock.tests2.UsageConstraintsTest.testFind":202,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":335,"org.easymock.tests.MockTypeTest.fromEasyMockClass":366,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":161,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests.UsageExpectAndReturnTest.object":430,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":239,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":505,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":35,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":330,"org.easymock.tests.UsageTest.exactCallCountByLastCall":494,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":39,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":500,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":31,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":354,"org.easymock.tests.MockClassControlTest.testHashCode":468,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":118,"org.easymock.tests2.EasyMockSupportTest.testVerify":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":105,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":525,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":361,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":473,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":252,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":193,"org.easymock.tests.UsageVarargTest.varargCharAccepted":504,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":534,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastCall":224,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":40,"org.easymock.tests.DefaultClassInstantiatorTest.object":24,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":472,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":529,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":378,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":259,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":117,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":467,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":179,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":377,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":32,"org.easymock.tests.ReplayStateInvalidCallsTest.times":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":21,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":319,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":114,"org.easymock.tests2.UsageTest.resumeIfFailure":229,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":14,"org.easymock.tests2.StubTest.stubWithReturnValue":10,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":30,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":216,"org.easymock.tests2.SerializationTest.testAllMockedMethod":197,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":406,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":522,"org.easymock.samples.SupportTest.voteForRemovals":50,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":383,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":412,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":249,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":416,"org.easymock.tests.UsageExpectAndThrowTest.object":381,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":213,"org.easymock.tests2.DelegateToTest.testWrongClass":165,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":295,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":316,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":296,"org.easymock.samples.ConstructorCalledMockTest.testTax":72,"org.easymock.tests.UsageStrictMockTest.range":283,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":246,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":382,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":79,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":492,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":298,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":523,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":308,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":462,"org.easymock.tests2.CaptureTest.testCaptureNone":0,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":129,"org.easymock.tests.UsageUnorderedTest.message":342,"org.easymock.tests.UsageVerifyTest.twoReturns":450,"org.easymock.tests.UsageVarargTest.varargByteAccepted":509,"org.easymock.tests2.ThreadingTest.testThreadSafe":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":109,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":456,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":517,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":331,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":341,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":410,"org.easymock.tests2.UsageConstraintsTest.any":44,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":482,"org.easymock.tests2.StubTest.stub":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":13,"org.easymock.tests.UsageExpectAndThrowTest.longType":374,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":349,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":481,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":88,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests2.SerializationTest.testClass":195,"org.easymock.tests.LimitationsTest.mockNativeMethod":345,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":498,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":258,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":324,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":91,"org.easymock.tests2.NameTest.nameForMocksControl":144,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":130,"org.easymock.tests2.MockedExceptionTest.testMockedException":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":97,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":491,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":160,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":375,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":168,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":55,"org.easymock.tests.MockingTest.testNicePartialClassMocking":272,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":173,"org.easymock.tests2.CaptureTest.testCaptureLast":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":256,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":340,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":157,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":66,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":323,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":214,"org.easymock.tests.MockingTest.testTwoMocks":270,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":320,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":422,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":379,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":227,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":217,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":133,"org.easymock.samples.ExampleTest.removeNonExistingDocument":516,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":479,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":263,"org.easymock.tests.UsageStrictMockTest.differentMethods":284,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":119,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":132,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":347,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":137,"org.easymock.tests2.MockBuilderTest.testCreateMockString":84,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":99,"org.easymock.tests.UsageExpectAndThrowTest.floatType":373,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":94,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":251,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":531,"org.easymock.tests.UsageVerifyTest.twoThrows":449,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":108,"org.easymock.samples.ExampleTest.voteAgainstRemoval":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":180,"org.easymock.tests.LimitationsTest.privateConstructor":344,"org.easymock.tests2.UsageConstraintsTest.testNotNull":68,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":6,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":294,"org.easymock.tests2.UsageTest.defaultResetToNice":226,"org.easymock.samples.ExampleTest.voteAgainstRemovals":513,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":402,"org.easymock.tests.UsageVarargTest.differentLength":506,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":257,"org.easymock.tests2.CallbackTest.callback":198,"org.easymock.tests2.UsageConstraintsTest.equals":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":71,"org.easymock.tests.UsageTest.openCallCountByLastCall":490,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.UsageCallCountTest.tooFewCalls":454,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":153,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":300,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":131,"org.easymock.tests.UsageThrowableTest.throwCheckedException":291,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":524,"org.easymock.tests.MockingTest.testStrictClassMocking":268,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":19,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":262,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":484,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":155,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.tests.ObjectMethodsTest.testHashCode":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":37,"org.easymock.tests2.NameTest.nameForNiceMock":143,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":139,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":322,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":317,"org.easymock.tests2.DependencyTest.testInterfaceMocking":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":36,"org.easymock.samples.ExampleTest.addDocument":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":110,"org.easymock.tests2.DelegateToTest.testStubDelegate":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":115,"org.easymock.tests2.AnswerTest.stubAnswer":4,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":281,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":80,"org.easymock.tests.UsageVarargTest.varargLongAccepted":508,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":436,"org.easymock.tests.UsageExpectAndReturnTest.floatType":424,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":194,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":126,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":212,"org.easymock.tests.UsageThrowableTest.noUpperLimit":288,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":200,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":242,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":187,"org.easymock.tests2.SerializationTest.test":196,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":423,"org.easymock.tests2.UsageConstraintsTest.testSame":203,"org.easymock.samples.SupportTest.addDocument":512,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":154,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":307,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":100,"org.easymock.tests.GenericTest.testPackageScope":496,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":125,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":275,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":305,"org.easymock.tests2.NameTest.nameForMock":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":432,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":70,"org.easymock.tests2.UsageStrictMockTest.differentMethods":90,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":177,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":425,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":385,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":327,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":338,"org.easymock.tests2.MockedExceptionTest.testRealException":9,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":403,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":87,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":485,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":439,"org.easymock.tests2.NameTest.nameForStrictMock":142,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":77,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":159,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":245,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":67,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":348,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":75,"org.easymock.tests2.UsageStrictMockTest.range":89,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":311,"org.easymock.tests2.UsageConstraintsTest.lessThan":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":104,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":57,"org.easymock.tests2.UsageConstraintsTest.testOr":60,"org.easymock.tests.UsageRangeTest.combination":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":169,"org.easymock.tests.UsageTest.wrongArguments":489,"org.easymock.tests2.MockBuilderTest.testWithConstructor":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":101,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":464,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":426,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":392,"org.easymock.tests.UsageVarargTest.varargShortAccepted":507,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":26,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":457,"org.easymock.tests2.UsageConstraintsTest.cmpTo":205,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":325,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":250,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":394,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":225,"org.easymock.tests2.CaptureTest.testCaptureFromStub":191,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":476,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":76,"org.easymock.tests.UsageTest.unexpectedCallWithArray":488,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":321,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":455,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":434,"org.easymock.tests2.CaptureTest.testCapture":1,"org.easymock.tests2.UsageConstraintsTest.constraints":64,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.samples.ExampleTest.addAndChangeDocument":54,"org.easymock.tests.UsageStrictMockTest.testVerify":286,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":520,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":444,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":420,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":427,"org.easymock.tests.LimitationsTest.abstractClass":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":421,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":501,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":237}}]
