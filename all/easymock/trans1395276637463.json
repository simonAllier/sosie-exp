[{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[0,1,2],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[3,4,5,6,7,8,9],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[10,11,12,13,14],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[18,19,20,21,22,23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,11,12,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,13,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,18,272,273,274,275,276,277,278,279,280,19,20,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,21,3,22,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,0,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,1,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,9,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,23,437,438,439,440,441,442,443,444,445,24,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,14,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[498],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[499,401,402,403],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[339],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[259],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[19,20,299,302,3,307,500,310,501,502,401,404,9,431,432,433,434,435,436,23,437,438,439,440,441,442,443,444,445,24,446,447,448,449,450,451,452,453,477,482,483],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[31,32,33,36,37,503,504,505,240,506,507,508,509,287,288,294,295],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[168,169,170,171,172],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[299,302,3,500,310,501,502,9,477,482,483],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[419],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[332,350,356,510],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[511,512,2,513,510],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30,31,33,34,35,36,37,38,40,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,91,92,93,94,96,97,99,100,103,104,105,107,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,128,129,130,131,132,133,134,11,12,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,169,170,171,173,174,175,176,177,178,181,220,226,238,239,240,241,242,13,243,244,245,246,247,248,249,250,251,252,253,254,255,256,266,267,268,269,270,271,18,272,273,274,275,276,277,278,280,19,19,20,20,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,300,304,21,22,309,314,315,316,317,318,319,320,321,0,327,328,329,332,333,334,335,337,338,339,340,341,342,343,344,1,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,370,371,372,373,374,376,377,378,379,380,381,382,388,395,396,397,398,399,400,401,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,420,421,422,423,434,23,24,451,459,466,467,468,469,14,470,471,472,473,475,476,477,478,480,481,482,484,485,486,487,488,489,490,491,492,493,494,495,496,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[117,274,396,398,400],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[323,515,516],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[514,484,486,487,488,489,490,491,493,517,494,495,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"suffix"}},{"position":"org.easymock.internal.RecordState:99","failures":[30,31,34,35,38,99,104,105,107,111,112,113,114,120,122,123,124,129,130,133,134,12,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,169,171,181,241,13,243,246,247,266,267,268,269,270,18,273,275,276,278,284,285,286,287,289,291,292,293,296,297,300,304,21,22,309,314,315,316,317,318,319,320,321,0,327,328,329,332,333,334,335,337,338,339,340,341,342,344,1,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,364,372,377,378,379,380,381,388,397,401,402,404,406,407,408,409,410,411,412,413,414,415,416,417,434,23,24,451,459,468,14,470,473,475,476,477,478,480,481,482,484,485,487,488,491,492,493,494,496,497],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[32,503,504,240,506,508],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[126,187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[200,518,519],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,11,12,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,13,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,18,272,273,274,275,276,277,278,279,280,19,20,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,21,3,22,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,0,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,1,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,9,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,23,437,438,439,440,441,442,443,444,445,24,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,14,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[357],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[334,335,338,340,341,343,352,357,484,486,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[30,31,33,36,37,38,82,89,91,92,96,97,111,520,521,10,128,134,11,12,238,240,241,242,13,243,244,285,287,288,289,290,294,295,297,300,309,327,329,334,349,382,407,411,412,415,420,421,422,423,466,468,469,14,470,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[3,522,4,5,6,7,8,523,401,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[32,33,36,37,524,128,11,12,240,13,288,294,295,14],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[349],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[197,201],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":335,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests2.UsageTest.argumentsOrdered":295,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":416,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":214,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":290,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":272,"org.easymock.tests2.DelegateToTest.testReturnException":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":174,"org.easymock.tests.MockingTest.testPartialClassMocking":104,"org.easymock.tests.MockClassControlTest.testToString":260,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":419,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":56,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":520,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":315,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":129,"org.easymock.tests2.UsageTest.wrongArguments":288,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":465,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":230,"org.easymock.samples.ExampleTest.answerVsDelegate":274,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":47,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":109,"org.easymock.tests2.UsageConstraintsTest.testNull":338,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":319,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":415,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":265,"org.easymock.tests2.CaptureTest.testPrimitive":487,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":133,"org.easymock.tests.UsageTest.moreThanOneArgument":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":75,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":27,"org.easymock.tests.UsageTest.argumentsOrdered":37,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":252,"org.easymock.tests.UsageVarargTest.varargIntAccepted":78,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":393,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":270,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":459,"org.easymock.tests.ReplayStateInvalidUsageTest.times":191,"org.easymock.tests2.DependencyTest.testClassMocking":312,"org.easymock.tests2.AnswerTest.answer":360,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":369,"org.easymock.tests2.CaptureTest.testAnd":484,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":44,"org.easymock.tests2.UsageTest.strictResetToDefault":286,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":410,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":113,"org.easymock.tests2.DelegateToTest.testDelegate":400,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":71,"org.easymock.tests.LimitationsTest.mockFinalMethod":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":167,"org.easymock.tests2.DependencyTest.testClassMockingSupport":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":125,"org.easymock.tests2.CaptureTest.testCapture1_2446744":488,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":367,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":185,"org.easymock.tests.UsageThrowableTest.throwError":155,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":46,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":394,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":29,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":453,"org.easymock.samples.PartialClassMockTest.testGetArea":18,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":186,"org.easymock.tests.MockingTest.testInterfaceMocking":106,"org.easymock.tests2.CompareToTest.testLessOrEqual":510,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":441,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":57,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":237,"org.easymock.tests2.UsageTest.niceToStrict":289,"org.easymock.tests2.ThreadingTest.testChangeDefault":516,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":204,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":304,"org.easymock.tests2.MockBuilderTest.testCreateMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":448,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":462,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":65,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":411,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":43,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":228,"org.easymock.tests.UsageOverloadedMethodTest.overloading":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":445,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":118,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":146,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":122,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":518,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":346,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":493,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":79,"org.easymock.tests2.EasyMockSupportClassTest.testAll":434,"org.easymock.tests.MockClassControlTest.testEquals":264,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":170,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":73,"org.easymock.tests2.CaptureTest.testCaptureAll":485,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":368,"org.easymock.tests.MockNameTest.defaultName":98,"org.easymock.tests2.UsageConstraintsTest.testMatches":348,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":28,"org.easymock.samples.ExampleTest.voteForRemovals":278,"org.easymock.tests.UsageVarargTest.allKinds":87,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":166,"org.easymock.samples.BasicClassMockTest.testPrintContent":282,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":161,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":466,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":523,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":202,"org.easymock.tests2.UsageConstraintsTest.greaterThan":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":112,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":329,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":203,"org.easymock.samples.ExampleTest.voteForRemoval":275,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":330,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":378,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":48,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":427,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":322,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":88,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":285,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":408,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":173,"org.easymock.tests2.CaptureTest.testCaptureFirst":497,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":409,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":297,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":142,"org.easymock.tests2.CaptureTest.testCapture2_2446744":496,"org.easymock.tests2.UsageTest.moreThanOneArgument":287,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":222,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":309,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":86,"org.easymock.tests.GenericTest.testBridgedEquals":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":96,"org.easymock.tests.UsageExpectAndReturnTest.longType":138,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":406,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":74,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":251,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":25,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":51,"org.easymock.tests.UsageCallCountTest.tooManyCalls":97,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":464,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":160,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":476,"org.easymock.tests.MockingTest.testNiceClassMocking":110,"org.easymock.tests.MockingTest.testClassMocking":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":90,"org.easymock.tests2.UsageConstraintsTest.testContains":345,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":372,"org.easymock.tests2.UsageConstraintsTest.testFind":337,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":124,"org.easymock.tests.MockTypeTest.fromEasyMockClass":45,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":238,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":376,"org.easymock.tests.UsageExpectAndReturnTest.object":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":0,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":414,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":81,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":235,"org.easymock.tests.UsageTest.exactCallCountByLastCall":38,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":209,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":39,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":253,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":505,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":151,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":76,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":117,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":384,"org.easymock.tests.MockClassControlTest.testHashCode":263,"org.easymock.tests2.EasyMockSupportTest.testVerify":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":443,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":115,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":366,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":474,"org.easymock.tests.UsageVarargTest.varargCharAccepted":80,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":195,"org.easymock.tests2.CaptureTest.testCaptureMultiple":514,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":227,"org.easymock.tests2.UsageTest.openCallCountByLastCall":291,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":417,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":16,"org.easymock.tests.DefaultClassInstantiatorTest.object":196,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":53,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":233,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":524,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":444,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":383,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":262,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":152,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":451,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":261,"org.easymock.tests2.UsageTest.resumeIfFailure":296,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":42,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":176,"org.easymock.tests2.StubTest.stubWithReturnValue":473,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":356,"org.easymock.tests2.SerializationTest.testAllMockedMethod":403,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":220,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":508,"org.easymock.samples.SupportTest.voteForRemovals":284,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":68,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":499,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":226,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":361,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":41,"org.easymock.tests.UsageExpectAndThrowTest.object":66,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":353,"org.easymock.tests2.DelegateToTest.testWrongClass":398,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":247,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":429,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":413,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":475,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":67,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":431,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":193,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests2.CaptureTest.testCaptureNone":492,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":250,"org.easymock.tests.UsageUnorderedTest.message":128,"org.easymock.tests.UsageVerifyTest.twoReturns":12,"org.easymock.tests.UsageVarargTest.varargByteAccepted":85,"org.easymock.tests2.ThreadingTest.testThreadSafe":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":446,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":94,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":236,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":281,"org.easymock.tests2.CaptureTest.testCapture_2617107":486,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":509,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":224,"org.easymock.tests2.UsageConstraintsTest.any":344,"org.easymock.tests2.StubTest.stub":472,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":175,"org.easymock.tests.UsageExpectAndThrowTest.longType":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":225,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":200,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":189,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":469,"org.easymock.tests2.SerializationTest.testClass":401,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":388,"org.easymock.tests.LimitationsTest.mockNativeMethod":181,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":456,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":471,"org.easymock.tests2.NameTest.nameForMocksControl":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":458,"org.easymock.tests2.MockedExceptionTest.testMockedException":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":436,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":35,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":60,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":375,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":316,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":22,"org.easymock.tests.MockingTest.testNicePartialClassMocking":105,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":522,"org.easymock.tests2.CaptureTest.testCaptureLast":491,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":454,"org.easymock.tests2.CompareToTest.testCompareEqual":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":126,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":482,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":341,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":354,"org.easymock.tests.MockingTest.testTwoMocks":103,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":64,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":294,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":358,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":515,"org.easymock.samples.ExampleTest.removeNonExistingDocument":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":461,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":187,"org.easymock.tests.UsageStrictMockTest.differentMethods":243,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":385,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":198,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":379,"org.easymock.tests2.MockBuilderTest.testCreateMockString":311,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":437,"org.easymock.tests.UsageExpectAndThrowTest.floatType":58,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":405,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":24,"org.easymock.samples.ExampleTest.voteAgainstRemoval":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":248,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":328,"org.easymock.tests.LimitationsTest.privateConstructor":180,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":502,"org.easymock.tests2.UsageConstraintsTest.testNotNull":357,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":162,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":370,"org.easymock.tests2.UsageTest.defaultResetToNice":293,"org.easymock.samples.ExampleTest.voteAgainstRemovals":273,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":455,"org.easymock.tests.UsageVarargTest.differentLength":82,"org.easymock.tests2.CallbackTest.callback":382,"org.easymock.tests2.UsageConstraintsTest.equals":336,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":324,"org.easymock.tests.UsageTest.openCallCountByLastCall":34,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":131,"org.easymock.tests.UsageCallCountTest.tooFewCalls":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":231,"org.easymock.tests.UsageThrowableTest.throwCheckedException":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":481,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":100,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":477,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":460,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":192,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":480,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":365,"org.easymock.tests2.CompareToTest.testGreateOrEqual":513,"org.easymock.tests.ObjectMethodsTest.testHashCode":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":7,"org.easymock.tests2.NameTest.nameForNiceMock":422,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":381,"org.easymock.tests2.DependencyTest.testInterfaceMocking":314,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.samples.ExampleTest.addDocument":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":452,"org.easymock.tests2.DelegateToTest.testStubDelegate":397,"org.easymock.tests2.AnswerTest.stubAnswer":364,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":241,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":306,"org.easymock.tests.UsageVarargTest.varargLongAccepted":84,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":153,"org.easymock.tests.UsageExpectAndReturnTest.floatType":137,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":404,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":392,"org.easymock.tests.UsageThrowableTest.noUpperLimit":156,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":119,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":333,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":424,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":489,"org.easymock.tests2.SerializationTest.test":402,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":519,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":136,"org.easymock.tests2.UsageConstraintsTest.testSame":339,"org.easymock.samples.SupportTest.addDocument":283,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":479,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":438,"org.easymock.tests.GenericTest.testPackageScope":169,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":208,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":391,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":108,"org.easymock.tests2.NameTest.nameForMock":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":147,"org.easymock.tests2.UsageStrictMockTest.differentMethods":470,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":139,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":70,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":114,"org.easymock.tests2.MockedExceptionTest.testRealException":373,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":218,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":130,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":194,"org.easymock.tests2.NameTest.nameForStrictMock":421,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":303,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":17,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":374,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":320,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":428,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":521,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":199,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":352,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":300,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":387,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":212,"org.easymock.tests2.CaptureTest.testCaptureRightOne":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":442,"org.easymock.tests2.UsageConstraintsTest.testOr":340,"org.easymock.tests.UsageRangeTest.combination":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":317,"org.easymock.tests.UsageTest.wrongArguments":33,"org.easymock.tests2.MockBuilderTest.testWithConstructor":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":439,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":205,"org.easymock.tests.UsageVarargTest.varargShortAccepted":83,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":201,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":95,"org.easymock.tests2.UsageConstraintsTest.cmpTo":1,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":362,"org.easymock.tests2.CompareToTest.testLessThan":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":207,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":292,"org.easymock.tests2.CaptureTest.testCaptureFromStub":495,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":184,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":301,"org.easymock.tests.UsageTest.unexpectedCallWithArray":32,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":93,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":500,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":149,"org.easymock.tests2.CaptureTest.testCapture":517,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":242,"org.easymock.tests2.UsageConstraintsTest.constraints":334,"org.easymock.samples.ExampleTest.addAndChangeDocument":280,"org.easymock.tests.UsageStrictMockTest.testVerify":245,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":271,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":239,"org.easymock.tests2.CompareToTest.testGreateThan":512,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":164,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":490,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":268,"org.easymock.tests.LimitationsTest.abstractClass":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":141,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":412,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":10,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":77}}]
