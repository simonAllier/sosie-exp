[{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[3],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.internal.RecordState:217","failures":[6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:109","sourceCode":"org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,54],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,55,56,57,58,6,59,60,61,62,63,64,7,65,66,67,68,69,70,71,72,73,74,75,8,76,77,78,79,80,81,82,15,83,84,85,86,87,88,89,90,91,92,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,3,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,9,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,10,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,11,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,12,13,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,14,276,277,278,279,280,281,282,283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[203,265],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[66,284,285,286,287,288,289,290,9,142,143,187,188,205,291,228,257,12,13,292,293,294,295,275,14,277,278],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[296],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[297,298],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[299],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[67,73,74,142,188,189,192,193,205,12,13,300,295,275,277],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[37,39,48,103,104,108,109,301,119],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[285,289,188,292,293,275],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[6,59,60,61,63,64,76,146,302],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:277","sourceCode":"return this","type":"CtReturnImpl"},"failures":[6,59,61,63,64,76,146,302],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[7,86,186,303,242,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[53],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:280","failures":[305,130,131,132,306,133,146,307],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[130,132,133,146,307],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[308,309,310,311,312,313,314],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[315,0,1,2,6,59,62,316,7,65,67,68,69,73,74,8,317,318,319,320,321,322,323,324,325,326,327,328,329,77,78,330,331,79,80,81,332,333,334,335,88,336,337,92,37,38,39,40,42,43,44,45,46,48,51,52,93,94,95,96,97,98,100,104,109,110,111,112,114,3,119,120,121,338,122,128,339,130,132,137,138,140,141,144,340,341,34,145,146,147,148,149,150,35,342,343,344,345,154,163,167,168,170,175,180,185,189,192,193,10,198,199,346,347,206,207,210,211,213,218,223,228,229,230,11,231,232,233,234,235,244,245,246,247,248,249,250,251,252,253,254,255,12,13,302,307,348,263,274,275,276,279,281,282,283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[66,82,15,83,84,9,143,144,187,194,196,197,257,12,13,14,278,279],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[67,73,74,142,188,189,192,193,205,12,13,295,275,277],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[315,0,1,6,349,350,59,60,61,62,316,63,64,7,65,66,68,70,71,72,75,8,317,318,319,320,321,322,323,351,324,325,326,327,76,329,77,78,330,331,79,80,81,332,333,334,335,85,86,352,88,336,337,90,37,38,40,41,44,45,46,48,49,50,51,52,93,94,95,96,97,98,353,100,16,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,3,117,118,119,120,121,122,123,124,125,126,127,128,129,339,305,130,131,132,306,133,134,135,136,137,138,9,142,143,341,145,146,147,148,150,151,354,354,355,355,342,356,357,358,152,153,345,154,155,359,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,191,10,297,360,361,196,200,201,202,203,204,205,362,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,11,231,232,233,234,235,236,237,363,364,365,366,367,238,239,240,241,242,243,254,368,257,12,13,258,259,260,261,262,302,307,348,263,298,369,370,269,270,271,272,14,277,278,281,282,283,371,372,373,374,375],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[376,103,110,115,125],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":104,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests2.UsageTest.argumentsOrdered":74,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":30,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":69,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests2.DelegateToTest.testReturnException":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":239,"org.easymock.tests.MockingTest.testPartialClassMocking":281,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":366,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":208,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":333,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":316,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":398,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":310,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageTest.wrongArguments":67,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":158,"org.easymock.samples.ExampleTest.answerVsDelegate":146,"org.easymock.tests2.UsageConstraintsTest.testNull":106,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":95,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":325,"org.easymock.tests2.CaptureTest.testPrimitive":40,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":164,"org.easymock.tests.UsageTest.moreThanOneArgument":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":227,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":260,"org.easymock.tests.UsageTest.argumentsOrdered":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":246,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":200,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":314,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":204,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":382,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":315,"org.easymock.tests2.DependencyTest.testClassMocking":4,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":58,"org.easymock.tests2.CaptureTest.testAnd":37,"org.easymock.tests2.UsageTest.strictResetToDefault":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":259,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":271,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":321,"org.easymock.tests2.DelegateToTest.testDelegate":133,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":375,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":268,"org.easymock.tests2.DependencyTest.testClassMockingSupport":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":291,"org.easymock.tests2.CaptureTest.testCapture1_2446744":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":56,"org.easymock.tests.UsageThrowableTest.throwError":229,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":304,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":262,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":385,"org.easymock.samples.PartialClassMockTest.testGetArea":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":201,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":357,"org.easymock.tests2.UsageTest.niceToStrict":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":209,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":88,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":24,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":217,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":285,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":322,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":156,"org.easymock.tests.UsageOverloadedMethodTest.overloading":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":115,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":176,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":345,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":114,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":46,"org.easymock.tests2.EasyMockSupportClassTest.testAll":332,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":225,"org.easymock.tests2.CaptureTest.testCaptureAll":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":266,"org.easymock.tests2.UsageConstraintsTest.testMatches":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":261,"org.easymock.samples.ExampleTest.voteForRemovals":150,"org.easymock.tests.UsageVarargTest.allKinds":253,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":267,"org.easymock.samples.BasicClassMockTest.testPrintContent":344,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":234,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":243,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":306,"org.easymock.tests2.UsageConstraintsTest.greaterThan":117,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":16,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":386,"org.easymock.samples.ExampleTest.voteForRemoval":147,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":135,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":378,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":185,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":319,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":238,"org.easymock.tests2.CaptureTest.testCaptureFirst":51,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":320,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":8,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":172,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":137,"org.easymock.tests2.CaptureTest.testCapture2_2446744":50,"org.easymock.tests2.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":90,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":252,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":346,"org.easymock.tests.UsageExpectAndReturnTest.longType":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":264,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":317,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":226,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":338,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":347,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":233,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":77,"org.easymock.tests2.UsageConstraintsTest.testContains":113,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":195,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":128,"org.easymock.tests2.UsageConstraintsTest.testFind":105,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":155,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":64,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":273,"org.easymock.tests.UsageExpectAndReturnTest.object":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":98,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":324,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":311,"org.easymock.tests.UsageTest.exactCallCountByLastCall":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":152,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":365,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":181,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":244,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":27,"org.easymock.tests2.EasyMockSupportTest.testVerify":328,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":55,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":92,"org.easymock.tests.UsageVarargTest.varargCharAccepted":247,"org.easymock.tests2.CaptureTest.testCaptureMultiple":36,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":140,"org.easymock.tests2.UsageTest.openCallCountByLastCall":70,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":298,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":215,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":26,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":384,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":214,"org.easymock.tests.CapturesMatcherTest.test":53,"org.easymock.tests.ReplayStateInvalidCallsTest.times":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":182,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":297,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":391,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":335,"org.easymock.tests2.UsageTest.resumeIfFailure":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":241,"org.easymock.tests2.StubTest.stubWithReturnValue":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":309,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":174,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":122,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":363,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":289,"org.easymock.samples.SupportTest.voteForRemovals":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":220,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":54,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":364,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":349,"org.easymock.tests.UsageExpectAndThrowTest.object":218,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":367,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":120,"org.easymock.tests2.DelegateToTest.testWrongClass":132,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":388,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":237,"org.easymock.tests.UsageStrictMockTest.range":277,"org.easymock.samples.ConstructorCalledMockTest.testTax":354,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":219,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":336,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":157,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":292,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":380,"org.easymock.tests2.CaptureTest.testCaptureNone":45,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":358,"org.easymock.tests.UsageUnorderedTest.message":205,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":251,"org.easymock.tests2.ThreadingTest.testThreadSafe":134,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":199,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":343,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":163,"org.easymock.tests2.UsageConstraintsTest.any":111,"org.easymock.tests2.StubTest.stub":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageExpectAndThrowTest.longType":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":240,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":339,"org.easymock.tests.LimitationsTest.mockNativeMethod":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":184,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":20,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":396,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests2.NameTest.nameForMocksControl":84,"org.easymock.tests2.MockedExceptionTest.testMockedException":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":21,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":212,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":283,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":52,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":337,"org.easymock.tests.MockingTest.testNicePartialClassMocking":282,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":97,"org.easymock.tests2.CaptureTest.testCaptureLast":44,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":18,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":228,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":395,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":121,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":216,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":73,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":23,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":206,"org.easymock.tests.UsageStrictMockTest.differentMethods":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":28,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":136,"org.easymock.tests2.ConstraintsToStringTest.andToString":288,"org.easymock.tests2.MockBuilderTest.testCreateMockString":91,"org.easymock.tests.UsageExpectAndThrowTest.floatType":210,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":3,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":59,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":334,"org.easymock.samples.ExampleTest.voteAgainstRemoval":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":356,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":100,"org.easymock.tests2.UsageConstraintsTest.testNotNull":123,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":235,"org.easymock.tests2.UsageTest.defaultResetToNice":72,"org.easymock.samples.ExampleTest.voteAgainstRemovals":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":180,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":19,"org.easymock.tests2.CallbackTest.callback":76,"org.easymock.tests2.UsageConstraintsTest.equals":296,"org.easymock.tests.UsageTest.openCallCountByLastCall":190,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":162,"org.easymock.tests.UsageCallCountTest.tooFewCalls":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":159,"org.easymock.tests.UsageThrowableTest.throwCheckedException":232,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":293,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":153,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":22,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":78,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":331,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":61,"org.easymock.tests2.CompareToTest.testGreateOrEqual":376,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":313,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":394,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":138,"org.easymock.tests2.NameTest.nameForNiceMock":83,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":389,"org.easymock.tests2.DependencyTest.testInterfaceMocking":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":312,"org.easymock.samples.ExampleTest.addDocument":149,"org.easymock.tests2.DelegateToTest.testStubDelegate":131,"org.easymock.tests2.AnswerTest.stubAnswer":60,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests.UsageVarargTest.varargLongAccepted":250,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":279,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":183,"org.easymock.tests.UsageExpectAndReturnTest.floatType":167,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":81,"org.easymock.tests2.ConstraintsToStringTest.orToString":284,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":355,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":118,"org.easymock.tests.UsageThrowableTest.noUpperLimit":230,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":102,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":42,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":166,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.samples.SupportTest.addDocument":340,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":379,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":362,"org.easymock.tests.GenericTest.testPackageScope":254,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":32,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":377,"org.easymock.tests2.NameTest.nameForMock":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":177,"org.easymock.tests2.UsageStrictMockTest.differentMethods":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":169,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":272,"org.easymock.tests2.MockedExceptionTest.testRealException":129,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":294,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":161,"org.easymock.tests2.NameTest.nameForStrictMock":15,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":63,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":96,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":119,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":352,"org.easymock.tests2.UsageStrictMockTest.range":142,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":383,"org.easymock.tests2.UsageConstraintsTest.lessThan":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":29,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":318,"org.easymock.tests2.CaptureTest.testCaptureRightOne":48,"org.easymock.tests2.UsageConstraintsTest.testOr":108,"org.easymock.tests.UsageRangeTest.combination":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":93,"org.easymock.tests.UsageTest.wrongArguments":189,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":178,"org.easymock.tests.UsageVarargTest.varargShortAccepted":249,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":397,"org.easymock.tests2.UsageConstraintsTest.cmpTo":112,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":350,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":303,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":71,"org.easymock.tests2.CaptureTest.testCaptureFromStub":49,"org.easymock.tests.UsageTest.unexpectedCallWithArray":188,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":393,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":198,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":179,"org.easymock.tests2.CaptureTest.testCapture":47,"org.easymock.tests2.UsageConstraintsTest.constraints":103,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":276,"org.easymock.samples.ExampleTest.addAndChangeDocument":151,"org.easymock.tests2.ConstraintsToStringTest.notToString":286,"org.easymock.tests.UsageStrictMockTest.testVerify":280,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":35,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":265,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":202,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":203,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":323}}]
