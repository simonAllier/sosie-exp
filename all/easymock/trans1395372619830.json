[{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:148","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError(java.lang.StringBuilder))","type":"CtThrowImpl"},"failures":[13,14,6,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,8,41,42,9,10,43,11,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[53],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[54],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:52","sourceCode":"return org.easymock.internal.MocksControl","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[56,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[17,58,59,60,12,61,62,63,64,65,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[67,68,39,69,70,45],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[71,72,73,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:60","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[75,76,77,14,78,79,80,81,82,83,84,85,86,87,88,58,12,89,90,91,0,18,62,92,93,94,95,96,97,98,99,64,100,65,101,102,103,104,105,106,66,107,108,109,23,110,111,112,24,25,113,26,114,115,116,117,118,119,27,120,28,29,30,31,32,34,121,122,123,124,125,126,127,128,129,35,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,39,40,154,155,156,157,158,159,160,161,9,10,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,46,47,48,49,74,184,185,186,187,188,189,190,191,192,193,194,195,196,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Injector:131","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:233","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()))","type":"CtThrowImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[197,198],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[197],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[199,60,90,100,104,105,107,200,201,202,203,204,205,206,207,208,209,161,210,11,211,212,213,214],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1647","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[12,89,64,100,65,101,66,215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":58,"org.easymock.tests2.UsageTest.argumentsOrdered":32,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":5,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":30,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":139,"org.easymock.tests2.SerializationTest.testAllMockedMethod":81,"org.easymock.tests2.DelegateToTest.testReturnException":118,"org.easymock.tests.MockingTest.testPartialClassMocking":192,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":68,"org.easymock.samples.SupportTest.voteForRemovals":141,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":86,"org.easymock.tests.UsageExpectAndThrowTest.object":182,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":137,"org.easymock.tests2.DelegateToTest.testWrongClass":119,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":211,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":212,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":207,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.samples.ExampleTest.answerVsDelegate":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":122,"org.easymock.tests2.UsageConstraintsTest.testNull":59,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":131,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":97,"org.easymock.tests2.CaptureTest.testPrimitive":101,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":210,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":130,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":69,"org.easymock.tests2.CaptureTest.testCaptureNone":105,"org.easymock.tests.UsageUnorderedTest.message":11,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":171,"org.easymock.tests.UsageTest.argumentsOrdered":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":2,"org.easymock.tests.UsageVarargTest.varargIntAccepted":166,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":196,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":200,"org.easymock.tests2.CaptureTest.testCapture_2617107":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":161,"org.easymock.tests2.UsageConstraintsTest.any":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":204,"org.easymock.tests.UsageExpectAndThrowTest.longType":180,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":14,"org.easymock.tests2.SerializationTest.testClass":79,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":82,"org.easymock.tests.LimitationsTest.mockNativeMethod":156,"org.easymock.tests2.AnswerTest.answer":75,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":61,"org.easymock.tests2.CaptureTest.testAnd":64,"org.easymock.tests2.UsageTest.strictResetToDefault":120,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":112,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":98,"org.easymock.tests.MockingTest.testNicePartialClassMocking":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":183,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":133,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":74,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":12,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":128,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":73,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":54,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests.UsageThrowableTest.throwError":184,"org.easymock.tests.UsageStrictMockTest.differentMethods":41,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":197,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.UsageExpectAndThrowTest.floatType":179,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":18,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":76,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":71,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":87,"org.easymock.samples.PartialClassMockTest.testGetArea":138,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":201,"org.easymock.samples.ExampleTest.voteAgainstRemoval":146,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":135,"org.easymock.tests2.UsageTest.niceToStrict":29,"org.easymock.tests2.UsageConstraintsTest.testNotNull":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":191,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":96,"org.easymock.tests2.MockBuilderTest.testCreateMock":20,"org.easymock.samples.ExampleTest.voteAgainstRemovals":143,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":178,"org.easymock.tests.UsageVarargTest.differentLength":43,"org.easymock.tests2.CallbackTest.callback":16,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":67,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":209,"org.easymock.tests.UsageOverloadedMethodTest.overloading":152,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":125,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":151,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.UsageThrowableTest.throwCheckedException":188,"org.easymock.tests2.EasyMockSupportClassTest.testAll":85,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":163,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":70,"org.easymock.tests2.CaptureTest.testCaptureAll":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":214,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":124,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":126,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":57,"org.easymock.samples.ExampleTest.voteForRemovals":148,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":84,"org.easymock.tests.UsageVarargTest.allKinds":173,"org.easymock.tests2.DependencyTest.testInterfaceMocking":136,"org.easymock.samples.BasicClassMockTest.testPrintContent":150,"org.easymock.samples.ExampleTest.addDocument":147,"org.easymock.tests2.DelegateToTest.testStubDelegate":4,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":190,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":13,"org.easymock.tests2.AnswerTest.stubAnswer":56,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":206,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":37,"org.easymock.tests.UsageVarargTest.varargLongAccepted":170,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":154,"org.easymock.samples.ExampleTest.voteForRemoval":145,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":198,"org.easymock.tests.UsageExpectAndReturnTest.floatType":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":121,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests.UsageThrowableTest.noUpperLimit":185,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":55,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":155,"org.easymock.tests2.SerializationTest.test":80,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":110,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":186,"org.easymock.samples.SupportTest.addDocument":140,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":3,"org.easymock.tests2.CaptureTest.testCaptureFirst":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":111,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.GenericTest.testPackageScope":162,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":51,"org.easymock.tests.UsageExpectAndReturnTest.longType":175,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":109,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":94,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests.UsageCallCountTest.tooManyCalls":52,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":123,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":132,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":38,"org.easymock.tests.UsageExpectAndReturnTest.object":177,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":134,"org.easymock.tests.ErrorMessageTest.testGetters":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":113,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":168,"org.easymock.tests.UsageTest.exactCallCountByLastCall":49,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":213,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":23,"org.easymock.tests2.CaptureTest.testCaptureRightOne":66,"org.easymock.tests2.UsageConstraintsTest.testOr":60,"org.easymock.tests.UsageRangeTest.combination":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":35,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":164,"org.easymock.tests.UsageTest.wrongArguments":46,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":158,"org.easymock.tests2.EasyMockSupportTest.testVerify":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":176,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":157,"org.easymock.tests.UsageVarargTest.varargShortAccepted":169,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":50,"org.easymock.tests2.UsageConstraintsTest.cmpTo":91,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":99,"org.easymock.tests.UsageVarargTest.varargCharAccepted":167,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":77,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":115,"org.easymock.tests2.CaptureTest.testCaptureFromStub":215,"org.easymock.tests.UsageTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":187,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":195,"org.easymock.tests2.UsageConstraintsTest.constraints":17,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":36,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":40,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":88,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":153,"org.easymock.tests2.UsageTest.resumeIfFailure":33,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":203,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":25,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":165}}]
