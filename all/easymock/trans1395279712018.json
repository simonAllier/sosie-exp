[{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,4,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,186,187,187],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[21,188,103,107],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[189,190,191,192,193,194,195],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[196],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[7,189],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[7,189,8,197,14,15,17,18,19,198,20,199,200,196,21,22,23,201,188,202,203,204,205,206,207,208,209,210,70,211,212,71,213,214,215,216,217,218,219,220,221,72,222,223,224,225,226,73,227,228,94,95,96,97,99,100,229,230,101,231,103,232,233,104,234,105,106,235,236,107,237,238,128,239,129,240,241,242,243,244,141,245,246,247,248,150,151,152,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,181,266,267,186,186,187,187],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[11,292,293,294,295,154,296,297,170,298,299,300,301,302],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[108,109,116,123,145,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[11,292,293,294,295,154,296,297,170,298,299,300,301,303,302],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[304,305,306,307,308],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[309,310],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[10,11,12,311,312,313,314,76,292,293,294,295,153,154,155,169,297,170,315,316,317,172,299,300,301,302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[238,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.RecordState:314","failures":[318,319,320,321],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"suffix","key":"suffix"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[189,8,322,190,191,192,193,194,323,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[8,9,197,324],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[189,190,191,192,193,194,195],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[325,326,327,328,329,5,330,268,269,270,271,272,6,273,274,275,276,277,278,7,189,331,8,9,197,332,333,10,334,11,12,335,336,337,13,338,309,339,14,15,16,17,18,19,198,340,20,199,200,196,21,22,23,201,188,202,203,204,341,205,342,343,24,25,26,27,344,28,29,30,31,32,33,345,34,35,36,37,38,39,40,41,42,4,43,44,346,45,46,47,48,206,207,49,50,51,52,53,54,55,56,57,58,59,60,61,62,347,348,349,350,63,64,65,66,67,68,351,352,353,69,354,355,311,312,313,314,208,209,210,70,211,212,71,213,214,215,216,217,218,219,220,221,72,222,223,224,225,226,73,227,228,74,75,76,292,77,356,78,79,80,293,294,81,82,83,84,357,85,86,358,359,87,88,89,90,91,92,93,94,95,96,97,360,98,99,100,361,229,230,101,362,279,280,281,282,283,102,284,285,286,287,288,289,363,231,364,103,232,365,233,104,234,105,195,106,366,235,236,107,367,237,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,238,128,239,129,240,130,131,132,133,368,134,135,136,137,138,139,140,369,241,370,371,372,373,242,374,375,376,318,319,243,244,141,245,377,378,379,142,143,144,145,146,380,320,321,147,148,381,382,149,246,247,248,150,151,383,152,384,385,249,386,387,295,153,388,154,155,389,390,391,392,393,394,395,396,397,398,399,400,156,157,158,159,160,161,162,401,402,403,404,250,251,252,253,254,255,256,257,405,406,407,408,409,410,411,412,413,414,163,415,164,165,166,167,168,169,297,170,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,171,172,298,299,173,174,300,301,175,441,442,443,444,445,176,303,446,258,259,260,261,262,263,447,264,302,448,449,450,310,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,177,178,179,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,265,504,180,290,181,266,267,182,505,183,184,506,185,507,508,291,186,187],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,295,509,2,298],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[11,12,25,26,28,30,31,36,39,42,47,78,79,132,368,154,155,392,393,407,164,169,173,174,450],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,295,509,2,298],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[8,9,197,324],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[7,189,8,510,511,208,209,210,70,211,212,71,213,214,215,216,217,218,219,220,221,72,222,223,224,225,226,73,227,228,96,100,361,364,365,195,235,512,367,186,187],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[15,196],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:230","sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[44],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":27,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.UsageTest.argumentsOrdered":294,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":458,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":356,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":290,"org.easymock.tests2.DelegateToTest.testReturnException":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":417,"org.easymock.tests.MockingTest.testPartialClassMocking":150,"org.easymock.tests.MockClassControlTest.testToString":252,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":355,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":484,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":71,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":315,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":190,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":147,"org.easymock.tests2.UsageTest.wrongArguments":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":289,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":403,"org.easymock.samples.ExampleTest.answerVsDelegate":505,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":242,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":385,"org.easymock.tests2.UsageConstraintsTest.testNull":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":17,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":60,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":257,"org.easymock.tests2.CaptureTest.testPrimitive":85,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":503,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":391,"org.easymock.tests.UsageTest.argumentsOrdered":301,"org.easymock.tests.UsageVarargTest.varargIntAccepted":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":194,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":231,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":277,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":160,"org.easymock.tests.ReplayStateInvalidUsageTest.times":430,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":102,"org.easymock.tests2.DependencyTest.testClassMocking":206,"org.easymock.tests2.AnswerTest.answer":68,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":465,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":328,"org.easymock.tests2.CaptureTest.testAnd":83,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":371,"org.easymock.tests2.UsageTest.strictResetToDefault":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":55,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":395,"org.easymock.tests2.DelegateToTest.testDelegate":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":499,"org.easymock.tests.LimitationsTest.mockFinalMethod":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":420,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":400,"org.easymock.tests2.DependencyTest.testClassMockingSupport":207,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":377,"org.easymock.tests2.CaptureTest.testCapture1_2446744":86,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":497,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":326,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":424,"org.easymock.tests.UsageThrowableTest.throwError":133,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":373,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":434,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":146,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":228,"org.easymock.samples.PartialClassMockTest.testGetArea":181,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":425,"org.easymock.tests.MockingTest.testInterfaceMocking":383,"org.easymock.tests2.CompareToTest.testLessOrEqual":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":157,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":485,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":440,"org.easymock.tests2.UsageTest.niceToStrict":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":104,"org.easymock.tests2.MockBuilderTest.testCreateMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":224,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":286,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":493,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":405,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":401,"org.easymock.tests.UsageOverloadedMethodTest.overloading":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":226,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":444,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":38,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":119,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":37,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":89,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":475,"org.easymock.tests2.EasyMockSupportClassTest.testAll":70,"org.easymock.tests.MockClassControlTest.testEquals":256,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":239,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":501,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":398,"org.easymock.tests2.CaptureTest.testCaptureAll":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":327,"org.easymock.tests.MockNameTest.defaultName":448,"org.easymock.tests2.UsageConstraintsTest.testMatches":39,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":145,"org.easymock.samples.ExampleTest.voteForRemovals":185,"org.easymock.tests.UsageVarargTest.allKinds":483,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":399,"org.easymock.samples.BasicClassMockTest.testPrintContent":267,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":138,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":274,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":309,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":447,"org.easymock.tests2.UsageConstraintsTest.greaterThan":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":165,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":23,"org.easymock.samples.ExampleTest.voteForRemoval":183,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":264,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":64,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":201,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":374,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":341,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":198,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":265,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":53,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":416,"org.easymock.tests2.CaptureTest.testCaptureFirst":93,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":54,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":115,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":66,"org.easymock.tests2.UsageTest.moreThanOneArgument":76,"org.easymock.tests2.CaptureTest.testCapture2_2446744":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":466,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":107,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":482,"org.easymock.tests.GenericTest.testBridgedEquals":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":412,"org.easymock.tests.UsageExpectAndReturnTest.longType":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":396,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":502,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":168,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":500,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":142,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":320,"org.easymock.tests.UsageCallCountTest.tooManyCalls":413,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":288,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":489,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":137,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":95,"org.easymock.tests.MockingTest.testNiceClassMocking":249,"org.easymock.tests.MockingTest.testClassMocking":247,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":406,"org.easymock.tests2.UsageConstraintsTest.testContains":36,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":101,"org.easymock.tests2.UsageConstraintsTest.testFind":28,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":132,"org.easymock.tests.MockTypeTest.fromEasyMockClass":372,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":350,"org.easymock.tests.UsageExpectAndReturnTest.object":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":59,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":477,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":191,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":438,"org.easymock.tests.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":392,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":189,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":472,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":124,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":443,"org.easymock.tests.MockClassControlTest.testHashCode":255,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":269,"org.easymock.tests2.EasyMockSupportTest.testVerify":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":219,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":393,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":441,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":325,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":363,"org.easymock.tests.UsageVarargTest.varargCharAccepted":476,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":446,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastCall":78,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":62,"org.easymock.tests.DefaultClassInstantiatorTest.object":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":376,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":436,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":282,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":268,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":21,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":125,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":73,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":253,"org.easymock.tests2.UsageTest.resumeIfFailure":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":419,"org.easymock.tests2.StubTest.stubWithReturnValue":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":195,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":117,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":45,"org.easymock.tests2.SerializationTest.testAllMockedMethod":197,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":464,"org.easymock.samples.SupportTest.voteForRemovals":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":496,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":324,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":470,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":351,"org.easymock.tests.UsageExpectAndThrowTest.object":494,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":415,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":43,"org.easymock.tests2.DelegateToTest.testWrongClass":338,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":161,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":162,"org.easymock.samples.ConstructorCalledMockTest.testTax":186,"org.easymock.tests.UsageStrictMockTest.range":154,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":342,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":495,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":105,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":208,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":402,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":509,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":179,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.UsageUnorderedTest.message":302,"org.easymock.tests.UsageVerifyTest.twoReturns":170,"org.easymock.tests.UsageVarargTest.varargByteAccepted":481,"org.easymock.tests2.ThreadingTest.testThreadSafe":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":222,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":410,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":439,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":266,"org.easymock.tests2.CaptureTest.testCapture_2617107":357,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":382,"org.easymock.tests2.UsageConstraintsTest.any":34,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":429,"org.easymock.tests2.StubTest.stub":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":321,"org.easymock.tests.UsageExpectAndThrowTest.longType":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":418,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":262,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":428,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":334,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":6,"org.easymock.tests.LimitationsTest.mockNativeMethod":141,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":281,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":335,"org.easymock.tests2.NameTest.nameForMocksControl":314,"org.easymock.tests2.MockedExceptionTest.testMockedException":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":212,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":488,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":152,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":349,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":14,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":106,"org.easymock.tests.MockingTest.testNicePartialClassMocking":151,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":19,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":279,"org.easymock.tests2.CompareToTest.testCompareEqual":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":378,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":32,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":44,"org.easymock.tests.MockingTest.testTwoMocks":248,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":492,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.samples.ExampleTest.removeNonExistingDocument":507,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":426,"org.easymock.tests.UsageStrictMockTest.differentMethods":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":285,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":270,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":260,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":65,"org.easymock.tests2.MockBuilderTest.testCreateMockString":237,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":250,"org.easymock.tests.UsageExpectAndThrowTest.floatType":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":213,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":210,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":353,"org.easymock.tests.UsageVerifyTest.twoThrows":297,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":331,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":72,"org.easymock.samples.ExampleTest.voteAgainstRemoval":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":459,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":177,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":22,"org.easymock.tests.LimitationsTest.privateConstructor":244,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":511,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":139,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":229,"org.easymock.tests2.UsageTest.defaultResetToNice":80,"org.easymock.samples.ExampleTest.voteAgainstRemovals":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":123,"org.easymock.tests.UsageVarargTest.differentLength":478,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":280,"org.easymock.tests2.CallbackTest.callback":330,"org.easymock.tests2.UsageConstraintsTest.equals":344,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":3,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":199,"org.easymock.tests.UsageTest.openCallCountByLastCall":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":381,"org.easymock.tests.UsageCallCountTest.tooFewCalls":408,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":404,"org.easymock.tests.UsageThrowableTest.throwCheckedException":136,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.MockingTest.testStrictClassMocking":246,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":369,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":284,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":431,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":98,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":354,"org.easymock.tests.ObjectMethodsTest.testHashCode":437,"org.easymock.tests2.CompareToTest.testGreateOrEqual":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":193,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":67,"org.easymock.tests2.NameTest.nameForNiceMock":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":192,"org.easymock.samples.ExampleTest.addDocument":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":223,"org.easymock.tests2.DelegateToTest.testStubDelegate":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":227,"org.easymock.tests2.AnswerTest.stubAnswer":69,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":153,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":366,"org.easymock.tests.UsageVarargTest.varargLongAccepted":480,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":457,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":126,"org.easymock.tests.UsageExpectAndReturnTest.floatType":110,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":187,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":276,"org.easymock.tests.UsageThrowableTest.noUpperLimit":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":25,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":202,"org.easymock.tests2.SerializationTest.test":9,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":358,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":259,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":109,"org.easymock.tests2.UsageConstraintsTest.testSame":30,"org.easymock.samples.SupportTest.addDocument":504,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":360,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":214,"org.easymock.tests.GenericTest.testPackageScope":128,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":275,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":384,"org.easymock.tests2.NameTest.nameForMock":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":120,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":498,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":167,"org.easymock.tests2.MockedExceptionTest.testRealException":362,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":461,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":433,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":148,"org.easymock.tests2.NameTest.nameForStrictMock":312,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":233,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":18,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":205,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":261,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":316,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":103,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":52,"org.easymock.tests2.CaptureTest.testCaptureRightOne":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":218,"org.easymock.tests2.UsageConstraintsTest.testOr":31,"org.easymock.tests.UsageRangeTest.combination":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":15,"org.easymock.tests.UsageTest.wrongArguments":299,"org.easymock.tests2.MockBuilderTest.testWithConstructor":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":215,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":121,"org.easymock.tests.UsageVarargTest.varargShortAccepted":479,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":263,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":411,"org.easymock.tests2.UsageConstraintsTest.cmpTo":35,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":352,"org.easymock.tests2.CompareToTest.testLessThan":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":451,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":79,"org.easymock.tests2.CaptureTest.testCaptureFromStub":91,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":423,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":232,"org.easymock.tests.UsageTest.unexpectedCallWithArray":298,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":409,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":512,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":122,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":388,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.samples.ExampleTest.addAndChangeDocument":508,"org.easymock.tests.UsageStrictMockTest.testVerify":390,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":291,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":397,"org.easymock.tests2.CompareToTest.testGreateThan":305,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":158,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":114,"org.easymock.tests.LimitationsTest.abstractClass":243,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":159,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":57,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":317}}]
