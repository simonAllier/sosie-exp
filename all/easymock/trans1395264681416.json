[{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[5],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[15,16,8,17,18,9,19,20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[24,25,26],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[27,28,29,30],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[31,32,33,3,34,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,27,28,29,53,54,55,56,57,0,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,31,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,21,136,22,32,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,1,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,3,4,221,222,223,224,225,226,227,228,229,7,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,34,270,271,35,272,273,274,275,276,277,278,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[43,44,45,46,56,58,138,139,145,146,178,179,181,184,3,4,272,274,277,278],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[117,280],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[281,282,178,283,284,273],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[285],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[286],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[287,288,289,290,291,292],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[293,49,294],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:134","failures":[295,296],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[297,298,299,33,300,301,302,303,304,305,294,306,307,308,309,310,311,312,313,314,315,316],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[317,317,318,318,56,81,31,100,101,104,105,106,107,112,114,115,117,118,119,123,124,125,319,297,300,301,309,313,161,162,163,164,165,179,222,223,226,227,228,229,7,230,232,263,264,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[0,58,139,145,146,321,322,178,1,181,184,3,4,323,324,273,274,277,278],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[325,326,327,36,37,38,39,40,41,42,328,329,317,318,330,331,48,49,50,51,52,27,28,29,53,332,333,54,55,56,57,0,58,59,60,334,61,62,63,64,65,66,335,67,68,336,69,337,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,31,94,95,96,97,98,99,338,339,340,341,342,343,344,345,346,347,348,349,350,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,351,122,123,124,125,126,127,128,129,130,352,131,132,353,354,355,133,134,356,135,21,357,358,136,22,359,360,361,362,32,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,363,171,172,173,174,175,176,177,178,179,180,1,181,182,184,185,186,364,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,214,215,216,217,218,220,3,4,222,223,224,225,226,227,228,229,7,230,231,232,233,236,237,238,239,365,366,367,296,296,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,368,369,370,371,266,267,268,269,34,270,35,272,273,274,275,276,277,278,279],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[372],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"position":"org.easymock.internal.RecordState:314","failures":[373,374,375,376],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[377,70,72,73,74,75,76,77,79,295,80,81,83],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[117,280],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[378,379,380],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[378,379,380],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[380],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":103,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.UsageTest.argumentsOrdered":146,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":294,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":141,"org.easymock.tests2.StubTest.stubWithReturnValue":31,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":199,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":122,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests2.DelegateToTest.testReturnException":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":267,"org.easymock.tests.MockingTest.testPartialClassMocking":260,"org.easymock.samples.SupportTest.voteForRemovals":329,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":282,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":252,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":30,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":240,"org.easymock.tests.UsageExpectAndThrowTest.object":250,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":334,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":120,"org.easymock.tests2.DelegateToTest.testWrongClass":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":264,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":222,"org.easymock.tests2.UsageTest.wrongArguments":139,"org.easymock.samples.ConstructorCalledMockTest.testTax":317,"org.easymock.tests.UsageStrictMockTest.range":1,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":151,"org.easymock.samples.ExampleTest.answerVsDelegate":37,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":356,"org.easymock.tests2.UsageConstraintsTest.testNull":105,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":251,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":353,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":347,"org.easymock.tests2.CaptureTest.testPrimitive":73,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":226,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":277,"org.easymock.tests.UsageTest.moreThanOneArgument":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":259,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":150,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":163,"org.easymock.tests2.CaptureTest.testCaptureNone":78,"org.easymock.tests.UsageUnorderedTest.message":184,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":321,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":173,"org.easymock.tests2.ThreadingTest.testThreadSafe":88,"org.easymock.tests.UsageTest.argumentsOrdered":278,"org.easymock.tests.UsageVarargTest.varargIntAccepted":168,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":239,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":227,"org.easymock.tests2.CaptureTest.testCapture_2617107":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":225,"org.easymock.tests2.UsageConstraintsTest.any":110,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":299,"org.easymock.tests2.StubTest.stub":93,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":268,"org.easymock.tests.UsageExpectAndThrowTest.longType":243,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":378,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":57,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":333,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":332,"org.easymock.tests.LimitationsTest.mockNativeMethod":231,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":285,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":209,"org.easymock.tests2.AnswerTest.answer":84,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":311,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":97,"org.easymock.tests2.CaptureTest.testAnd":70,"org.easymock.tests2.UsageTest.strictResetToDefault":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":68,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":59,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":18,"org.easymock.tests2.NameTest.nameForMocksControl":46,"org.easymock.tests2.MockedExceptionTest.testMockedException":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":212,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":276,"org.easymock.tests2.DelegateToTest.testDelegate":51,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":262,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":244,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":354,"org.easymock.tests.MockingTest.testNicePartialClassMocking":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":255,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":66,"org.easymock.tests2.CaptureTest.testCaptureLast":77,"org.easymock.tests2.CompareToTest.testCompareEqual":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":34,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":219,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":218,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":121,"org.easymock.tests2.CaptureTest.testCapture1_2446744":74,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":95,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":145,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":124,"org.easymock.tests.UsageThrowableTest.throwError":153,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":271,"org.easymock.tests.UsageStrictMockTest.differentMethods":181,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":289,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":90,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":322,"org.easymock.tests2.MockBuilderTest.testCreateMockString":134,"org.easymock.tests.UsageExpectAndThrowTest.floatType":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":165,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":116,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":85,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":361,"org.easymock.samples.PartialClassMockTest.testGetArea":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":228,"org.easymock.samples.ExampleTest.voteAgainstRemoval":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":306,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":241,"org.easymock.tests2.UsageTest.niceToStrict":140,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":16,"org.easymock.tests2.UsageConstraintsTest.testNotNull":123,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":24,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":131,"org.easymock.tests2.MockBuilderTest.testCreateMock":355,"org.easymock.tests2.UsageTest.defaultResetToNice":144,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":205,"org.easymock.tests.UsageVarargTest.differentLength":363,"org.easymock.tests2.CallbackTest.callback":52,"org.easymock.tests.UsageTest.openCallCountByLastCall":275,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":249,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":343,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":376,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":149,"org.easymock.tests.UsageCallCountTest.tooFewCalls":237,"org.easymock.tests.UsageOverloadedMethodTest.overloading":187,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":370,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":114,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":201,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":379,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":113,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":152,"org.easymock.tests.UsageThrowableTest.throwCheckedException":157,"org.easymock.tests2.EasyMockSupportClassTest.testAll":359,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":186,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":216,"org.easymock.tests2.CaptureTest.testCaptureAll":71,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":233,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":21,"org.easymock.tests2.UsageConstraintsTest.testMatches":115,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":358,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":164,"org.easymock.samples.ExampleTest.voteForRemovals":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":13,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":92,"org.easymock.tests2.NameTest.nameForNiceMock":45,"org.easymock.tests.UsageVarargTest.allKinds":175,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":220,"org.easymock.tests2.DependencyTest.testInterfaceMocking":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.samples.BasicClassMockTest.testPrintContent":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":217,"org.easymock.samples.ExampleTest.addDocument":40,"org.easymock.tests2.DelegateToTest.testStubDelegate":49,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":159,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":54,"org.easymock.tests2.AnswerTest.stubAnswer":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":270,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":179,"org.easymock.tests2.UsageConstraintsTest.greaterThan":117,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":211,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":337,"org.easymock.tests.UsageVarargTest.varargLongAccepted":172,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":305,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":292,"org.easymock.samples.ExampleTest.voteForRemoval":38,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":208,"org.easymock.tests.UsageExpectAndReturnTest.floatType":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":53,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":318,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":118,"org.easymock.tests.UsageThrowableTest.noUpperLimit":154,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":32,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":101,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":189,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":75,"org.easymock.tests2.SerializationTest.test":28,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":303,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":340,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":288,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":155,"org.easymock.tests2.UsageConstraintsTest.testSame":106,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":191,"org.easymock.samples.SupportTest.addDocument":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":266,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":293,"org.easymock.tests2.CaptureTest.testCaptureFirst":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":341,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":197,"org.easymock.tests.GenericTest.testPackageScope":185,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":91,"org.easymock.tests2.CaptureTest.testCapture2_2446744":82,"org.easymock.tests2.UsageTest.moreThanOneArgument":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":312,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":174,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":366,"org.easymock.tests2.NameTest.nameForMock":43,"org.easymock.tests.UsageExpectAndReturnTest.longType":193,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":338,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":214,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":202,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":351,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":319,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":256,"org.easymock.tests2.UsageStrictMockTest.differentMethods":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":20,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":194,"org.easymock.tests.UsageCallCountTest.tooManyCalls":367,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":213,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":236,"org.easymock.tests2.MockedExceptionTest.testRealException":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":245,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":158,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":135,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":235,"org.easymock.tests2.NameTest.nameForStrictMock":44,"org.easymock.tests2.UsageConstraintsTest.testContains":112,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":128,"org.easymock.tests2.UsageConstraintsTest.testFind":104,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":26,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":99,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":176,"org.easymock.tests.UsageExpectAndReturnTest.object":200,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":290,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":352,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":346,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":170,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":286,"org.easymock.tests.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":304,"org.easymock.tests2.CaptureTest.testCaptureRightOne":80,"org.easymock.tests2.UsageConstraintsTest.testOr":107,"org.easymock.tests.UsageRangeTest.combination":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":62,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":166,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":369,"org.easymock.tests.UsageTest.wrongArguments":274,"org.easymock.tests2.MockBuilderTest.testWithConstructor":17,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":221,"org.easymock.tests2.EasyMockSupportTest.testVerify":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":203,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":375,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":368,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":291,"org.easymock.tests.UsageVarargTest.varargShortAccepted":171,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":365,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":94,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":47,"org.easymock.tests2.UsageConstraintsTest.cmpTo":111,"org.easymock.tests.UsageVarargTest.varargCharAccepted":169,"org.easymock.tests2.CaptureTest.testCaptureMultiple":377,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":316,"org.easymock.tests2.UsageTest.openCallCountByLastCall":142,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":143,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":349,"org.easymock.tests.DefaultClassInstantiatorTest.object":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":25,"org.easymock.tests2.CaptureTest.testCaptureFromStub":81,"org.easymock.tests.UsageTest.unexpectedCallWithArray":273,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":247,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":156,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":238,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":19,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":204,"org.easymock.tests2.CaptureTest.testCapture":295,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":336,"org.easymock.tests2.UsageConstraintsTest.constraints":102,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":180,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":246,"org.easymock.samples.ExampleTest.addAndChangeDocument":42,"org.easymock.tests.CapturesMatcherTest.test":296,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":207,"org.easymock.tests.UsageStrictMockTest.testVerify":183,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":362,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests2.CompareToTest.testGreateThan":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":215,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":76,"org.easymock.tests2.UsageTest.resumeIfFailure":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":229,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":196,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":344,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":2,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":167}}]
