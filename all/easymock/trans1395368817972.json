[{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[21,58,59,60,61,62,63,64,65,66,67,68,69,70,71,22,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,4,109,110,111,112,113,23,24,114,115,116,117,118,119,120,25,121,122,123,26,27,124,28,125,126,29,127,128,129,130,131,132,133,134,135,136,30,31,137,138,139,140,140,141,142,143,144,32,145,146,147,33,34,148,35,149,150,36,151,152,153,154,155,37,39,40,156,7,157,158,159,41,160,161,162,163,164,165,166,167,168,169,170,171,172,173,42,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,8,202,203,204,205,206,207,208,209,210,211,212,43,213,214,215,216,217,218,219,220,221,44,45,222,223,224,46,225,226,227,9,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,47,48,255,256,49,50,257,51,258,52,53,259,260,261,262,54,263,264,55,265,266,56,267,268,269,270,271,272,57,273,274,275,276,277,278,279,10,11,12,13,280,281,282,283,284,285,286,287,14,288,289,16,17,18,20,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[304,305,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1039","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[105,111,135,30,31,41,160,161,307,308,309,310,218,253,47,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,312],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[71,73,74,75,76,77,80,90,314,315,316,117,118,119,120,25,121,122,123,26,27,124,28,125,126,29,127,128,129,130,131,160,165,213],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[317,318,319,320,321,322],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[257],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[236],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[259,290,292,300],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[323,324,325],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[326,327,68,328,82,83,84,85,103,104,329,330,184,184,185,185,187,188,189,190,331,191,332,192,193,194,195,196,197,333,198,334,335,336,207,208,209,210,226,227,228,229,230,231,232,233,234,235,236,274,12,281,283,284,285,286,287,288,289],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":257,"org.easymock.tests2.UsageTest.argumentsOrdered":224,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":110,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":89,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":221,"org.easymock.tests2.StubTest.stubWithReturnValue":213,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":271,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":34,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":186,"org.easymock.tests2.SerializationTest.testAllMockedMethod":283,"org.easymock.tests2.DelegateToTest.testReturnException":16,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":87,"org.easymock.tests.MockingTest.testPartialClassMocking":82,"org.easymock.samples.SupportTest.voteForRemovals":183,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":125,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":117,"org.easymock.tests.UsageExpectAndThrowTest.object":124,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":307,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":268,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":215,"org.easymock.tests2.DelegateToTest.testWrongClass":18,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":139,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":260,"org.easymock.tests2.UsageTest.wrongArguments":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":162,"org.easymock.tests.UsageStrictMockTest.range":30,"org.easymock.samples.ConstructorCalledMockTest.testTax":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":66,"org.easymock.samples.ExampleTest.answerVsDelegate":175,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":245,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":284,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":317,"org.easymock.tests2.UsageConstraintsTest.testNull":258,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":28,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":247,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":194,"org.easymock.tests2.CaptureTest.testPrimitive":293,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":166,"org.easymock.tests.UsageTest.moreThanOneArgument":111,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":114,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":65,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":169,"org.easymock.tests2.CaptureTest.testCaptureNone":298,"org.easymock.tests.UsageUnorderedTest.message":105,"org.easymock.tests.UsageVerifyTest.twoReturns":161,"org.easymock.tests.UsageVarargTest.varargByteAccepted":100,"org.easymock.tests2.ThreadingTest.testThreadSafe":199,"org.easymock.tests.UsageTest.argumentsOrdered":115,"org.easymock.tests.UsageVarargTest.varargIntAccepted":94,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":60,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":188,"org.easymock.tests2.CaptureTest.testCapture_2617107":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":156,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":165,"org.easymock.tests2.UsageConstraintsTest.any":261,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":193,"org.easymock.tests2.StubTest.stub":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":88,"org.easymock.tests.UsageExpectAndThrowTest.longType":120,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":325,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":254,"org.easymock.tests2.SerializationTest.testClass":281,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests.ReplayStateInvalidUsageTest.times":306,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":275,"org.easymock.tests.LimitationsTest.mockNativeMethod":85,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":329,"org.easymock.tests2.AnswerTest.answer":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":155,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":206,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":336,"org.easymock.tests2.CaptureTest.testAnd":290,"org.easymock.tests2.UsageTest.strictResetToDefault":217,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":233,"org.easymock.tests2.MockedExceptionTest.testMockedException":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":39,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":24,"org.easymock.tests2.DelegateToTest.testDelegate":20,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":25,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":195,"org.easymock.tests.MockingTest.testNicePartialClassMocking":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":127,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":230,"org.easymock.tests2.CompareToTest.testCompareEqual":311,"org.easymock.tests2.CaptureTest.testCaptureLast":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":90,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":289,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":259,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":109,"org.easymock.tests.MockingTest.testTwoMocks":328,"org.easymock.tests2.CaptureTest.testCapture1_2446744":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":141,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":26,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":223,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":57,"org.easymock.tests.UsageThrowableTest.throwError":71,"org.easymock.tests.UsageStrictMockTest.differentMethods":31,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":201,"org.easymock.tests2.MockBuilderTest.testCreateMockString":198,"org.easymock.tests.UsageExpectAndThrowTest.floatType":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":171,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":265,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":277,"org.easymock.tests.UsageVerifyTest.twoThrows":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":209,"org.easymock.samples.PartialClassMockTest.testGetArea":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":7,"org.easymock.samples.ExampleTest.voteAgainstRemoval":177,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":235,"org.easymock.tests2.UsageTest.niceToStrict":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":118,"org.easymock.tests2.UsageConstraintsTest.testNotNull":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":77,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":10,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":192,"org.easymock.tests2.UsageTest.defaultResetToNice":222,"org.easymock.tests2.MockBuilderTest.testCreateMock":196,"org.easymock.samples.ExampleTest.voteAgainstRemovals":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":151,"org.easymock.tests.UsageVarargTest.differentLength":97,"org.easymock.tests2.CallbackTest.callback":237,"org.easymock.tests2.UsageConstraintsTest.equals":313,"org.easymock.tests.UsageTest.openCallCountByLastCall":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":27,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":243,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":164,"org.easymock.tests.UsageCallCountTest.tooFewCalls":58,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":318,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":264,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":80,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":35,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":263,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":299,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":67,"org.easymock.tests.UsageThrowableTest.throwCheckedException":74,"org.easymock.tests2.EasyMockSupportClassTest.testAll":207,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":104,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":129,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":334,"org.easymock.tests2.CaptureTest.testCaptureAll":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":288,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":70,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":286,"org.easymock.tests2.UsageConstraintsTest.testMatches":55,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":14,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":170,"org.easymock.samples.ExampleTest.voteForRemovals":179,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":202,"org.easymock.tests.UsageVarargTest.allKinds":102,"org.easymock.tests2.DependencyTest.testInterfaceMocking":214,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":4,"org.easymock.samples.BasicClassMockTest.testPrintContent":189,"org.easymock.samples.ExampleTest.addDocument":178,"org.easymock.tests2.DelegateToTest.testStubDelegate":17,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":76,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":251,"org.easymock.tests2.AnswerTest.stubAnswer":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":91,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":135,"org.easymock.tests2.UsageConstraintsTest.greaterThan":266,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":3,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":38,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":236,"org.easymock.tests.UsageVarargTest.varargLongAccepted":99,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":137,"org.easymock.samples.ExampleTest.voteForRemoval":176,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":200,"org.easymock.tests.UsageExpectAndReturnTest.floatType":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":274,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":231,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":185,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":56,"org.easymock.tests.UsageThrowableTest.noUpperLimit":22,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":216,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":68,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":49,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":295,"org.easymock.tests2.SerializationTest.test":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":240,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":5,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":72,"org.easymock.tests2.UsageConstraintsTest.testSame":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":142,"org.easymock.samples.SupportTest.addDocument":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":86,"org.easymock.tests2.CaptureTest.testCaptureFirst":303,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":15,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":241,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":225,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":81,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":147,"org.easymock.tests.GenericTest.testPackageScope":103,"org.easymock.tests2.CaptureTest.testCapture2_2446744":302,"org.easymock.tests2.UsageTest.moreThanOneArgument":218,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":8,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":197,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":101,"org.easymock.tests.GenericTest.testBridgedEquals":312,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":62,"org.easymock.tests.UsageExpectAndReturnTest.longType":144,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":106,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":149,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":270,"org.easymock.tests2.UsageStrictMockTest.differentMethods":48,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":167,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":32,"org.easymock.tests.UsageCallCountTest.tooManyCalls":63,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":29,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":40,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":21,"org.easymock.tests2.MockedExceptionTest.testRealException":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":33,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":285,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":331,"org.easymock.tests2.UsageConstraintsTest.testContains":54,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":12,"org.easymock.tests2.UsageConstraintsTest.testFind":51,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":42,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":322,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":229,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":212,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":132,"org.easymock.tests.UsageExpectAndReturnTest.object":148,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":308,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":232,"org.easymock.tests.ErrorMessageTest.testGetters":309,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":191,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":246,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":96,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":320,"org.easymock.tests.UsageTest.exactCallCountByLastCall":116,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":69,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":239,"org.easymock.tests2.CaptureTest.testCaptureRightOne":300,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests.UsageRangeTest.combination":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":227,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":152,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":79,"org.easymock.tests.UsageTest.wrongArguments":113,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":330,"org.easymock.tests2.EasyMockSupportTest.testVerify":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":150,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":315,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":78,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":6,"org.easymock.tests.UsageVarargTest.varargShortAccepted":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":203,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":61,"org.easymock.tests2.UsageConstraintsTest.cmpTo":262,"org.easymock.tests.UsageVarargTest.varargCharAccepted":95,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":2,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":252,"org.easymock.tests2.UsageTest.openCallCountByLastCall":44,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":321,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":249,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":314,"org.easymock.tests2.CaptureTest.testCaptureFromStub":301,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":332,"org.easymock.tests.UsageTest.unexpectedCallWithArray":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":73,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":36,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":234,"org.easymock.tests2.UsageConstraintsTest.constraints":50,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":136,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":122,"org.easymock.samples.ExampleTest.addAndChangeDocument":180,"org.easymock.tests.CapturesMatcherTest.test":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":153,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":210,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":107,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":296,"org.easymock.tests2.UsageTest.resumeIfFailure":46,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":157,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":158,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":244,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":93}}]
