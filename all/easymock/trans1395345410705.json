[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,1,144,145,146,147,148,149,150,151,152,153,154,155,2,156,157,158,159,160,3,4,161,162,163,164,5,165,166,167,168,169,170,171,172,6,173,7,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,8,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,9,324,325,326,10,11,327,328,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[132],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:87","sourceCode":"return new java.lang.IllegalArgumentException(((java.lang.Object + \" isn\\'t of type \") + java.lang.Class<?>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,1,144,145,146,147,148,149,150,151,152,153,154,155,2,156,157,158,159,160,3,4,161,162,163,164,5,165,166,167,168,169,170,171,172,6,173,7,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,8,190,191,192,193,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,329,329,319,320,322,323,9,324,325,326,10,11,327,328,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[25,29,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[23,23,24,24,38,352,45,353,354],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[355],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[16,94,96,356,97,249],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[331,332,333,334,336,337,338,339,340,342,343,344,345,347,348,349,350,351],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[56,58,66,115,116,118,120,121,357,132,137],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[358,359,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[15,16,17,18,19,20,21,22,30,31,32,33,34,36,38,39,40,0,41,42,43,44,45,46,47,48,50,51,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,361,78,79,80,81,362,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,1,144,145,146,147,148,363,364,149,150,153,154,155,365,366,367,368,369,2,156,157,158,159,160,3,4,161,162,163,164,5,169,170,171,172,6,173,7,174,175,176,177,178,370,371,179,180,181,182,183,184,185,186,187,188,189,8,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,372,373,374,375,376,377,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,378,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,379,380,308,309,381,310,382,383,384,311,312,313,314,315,316,317,318,319,320,321,322,323,9,324,325,326,10,11,327,328,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[118,357,132,137],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[42,43,191,192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[56,57,58,59,66,67,115,116,117,118,119,120,121,122,357,123,132,133,137,138],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[385,386,387],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[285,388],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[42,158,162,163,173,7,389,189,191,252,273,325,326,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[390],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[13,14,15,16,17,18,19,20,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,77,79,80,81,82,83,86,88,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,357,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,1,144,145,146,148,149,151,152,154,2,156,157,158,159,160,3,4,161,162,163,164,5,165,166,167,168,6,173,7,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,8,190,191,192,193,194,203,205,207,208,209,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,391,392,275,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,308,309,310,319,320,321,322,323,9,324,326,10,11,327,328,12],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":116,"org.easymock.tests2.UsageTest.argumentsOrdered":163,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":346,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":160,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":25,"org.easymock.tests2.DelegateToTest.testReturnException":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":200,"org.easymock.tests.MockingTest.testPartialClassMocking":308,"org.easymock.tests.MockClassControlTest.testToString":313,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":253,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":37,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":122,"org.easymock.tests2.UsageTest.wrongArguments":158,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":282,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":171,"org.easymock.samples.ExampleTest.answerVsDelegate":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":375,"org.easymock.tests2.UsageConstraintsTest.testNull":118,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":383,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":73,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":107,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":318,"org.easymock.tests2.CaptureTest.testPrimitive":59,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":272,"org.easymock.tests.UsageTest.moreThanOneArgument":324,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":305,"org.easymock.tests.UsageTest.argumentsOrdered":328,"org.easymock.tests.UsageVarargTest.varargIntAccepted":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":174,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":350,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":366,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":178,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests.ReplayStateInvalidUsageTest.times":244,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":93,"org.easymock.tests2.CaptureTest.testAnd":56,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":322,"org.easymock.tests2.DelegateToTest.testDelegate":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":281,"org.easymock.tests2.CaptureTest.testCapture1_2446744":60,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":91,"org.easymock.tests.UsageThrowableTest.throwError":179,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":238,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":374,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":307,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":239,"org.easymock.tests.MockingTest.testInterfaceMocking":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":175,"org.easymock.tests2.UsageTest.niceToStrict":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":254,"org.easymock.tests2.ThreadingTest.testChangeDefault":358,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":149,"org.easymock.tests2.MockBuilderTest.testCreateMock":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":337,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":262,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":103,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":169,"org.easymock.tests.UsageOverloadedMethodTest.overloading":288,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":127,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":227,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":287,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":386,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":126,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests2.EasyMockSupportClassTest.testAll":165,"org.easymock.tests.MockClassControlTest.testEquals":317,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":270,"org.easymock.tests2.CaptureTest.testCaptureAll":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":279,"org.easymock.tests2.UsageConstraintsTest.testMatches":128,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":306,"org.easymock.samples.ExampleTest.voteForRemovals":20,"org.easymock.tests.UsageVarargTest.allKinds":300,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":6,"org.easymock.samples.BasicClassMockTest.testPrintContent":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":280,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":185,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":347,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":356,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":81,"org.easymock.samples.ExampleTest.voteForRemoval":17,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":31,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":362,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":376,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":76,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":319,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":100,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":199,"org.easymock.tests2.CaptureTest.testCaptureFirst":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":101,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":5,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":223,"org.easymock.tests2.UsageTest.moreThanOneArgument":157,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":33,"org.easymock.tests2.CaptureTest.testCapture2_2446744":68,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":154,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":212,"org.easymock.tests.UsageExpectAndReturnTest.longType":219,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":277,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":271,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":135,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":303,"org.easymock.tests.UsageCallCountTest.tooManyCalls":213,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":258,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":184,"org.easymock.tests.MockingTest.testNiceClassMocking":384,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":50,"org.easymock.tests.MockingTest.testClassMocking":380,"org.easymock.tests2.UsageConstraintsTest.testContains":125,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":206,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":86,"org.easymock.tests2.UsageConstraintsTest.testFind":117,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":289,"org.easymock.tests.MockTypeTest.fromEasyMockClass":373,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":187,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":83,"org.easymock.tests.UsageExpectAndReturnTest.object":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":106,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":294,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":198,"org.easymock.tests.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":275,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":391,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":352,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":232,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":290,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":249,"org.easymock.tests.MockClassControlTest.testHashCode":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":342,"org.easymock.tests2.EasyMockSupportTest.testVerify":110,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":392,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":90,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":89,"org.easymock.tests.UsageVarargTest.varargCharAccepted":293,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":40,"org.easymock.tests2.UsageTest.openCallCountByLastCall":3,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":109,"org.easymock.tests.DefaultClassInstantiatorTest.object":195,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":196,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":389,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":260,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":341,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":79,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":315,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":259,"org.easymock.tests.CapturesMatcherTest.test":329,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":168,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":314,"org.easymock.tests2.UsageTest.resumeIfFailure":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":202,"org.easymock.tests2.StubTest.stubWithReturnValue":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":225,"org.easymock.tests2.SerializationTest.testAllMockedMethod":47,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":265,"org.easymock.tests.UsageExpectAndThrowTest.object":263,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":133,"org.easymock.tests2.DelegateToTest.testWrongClass":96,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":301,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":302,"org.easymock.tests.UsageStrictMockTest.range":191,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":105,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":264,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":151,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":246,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":170,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.UsageUnorderedTest.message":273,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":390,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":298,"org.easymock.tests2.ThreadingTest.testThreadSafe":30,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":210,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":27,"org.easymock.tests2.CaptureTest.testCapture_2617107":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":371,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":285,"org.easymock.tests2.UsageConstraintsTest.any":123,"org.easymock.tests2.StubTest.stub":111,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":201,"org.easymock.tests.UsageExpectAndThrowTest.longType":256,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":385,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":242,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":88,"org.easymock.tests.LimitationsTest.mockNativeMethod":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":235,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":332,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":44,"org.easymock.tests2.NameTest.nameForMocksControl":143,"org.easymock.tests2.MockedExceptionTest.testMockedException":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":334,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":257,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":310,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":70,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":152,"org.easymock.tests.MockingTest.testNicePartialClassMocking":309,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":75,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":330,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":370,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":261,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":162,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":138,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":359,"org.easymock.samples.ExampleTest.removeNonExistingDocument":21,"org.easymock.tests.UsageStrictMockTest.differentMethods":192,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":343,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":32,"org.easymock.tests2.MockBuilderTest.testCreateMockString":155,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":311,"org.easymock.tests.UsageExpectAndThrowTest.floatType":255,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":144,"org.easymock.tests.UsageVerifyTest.twoThrows":173,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":167,"org.easymock.samples.ExampleTest.voteAgainstRemoval":18,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":80,"org.easymock.tests2.UsageConstraintsTest.testNotNull":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":84,"org.easymock.tests2.UsageTest.defaultResetToNice":161,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":231,"org.easymock.tests.UsageVarargTest.differentLength":295,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":331,"org.easymock.tests2.CallbackTest.callback":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":353,"org.easymock.tests.UsageTest.openCallCountByLastCall":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":284,"org.easymock.tests.UsageCallCountTest.tooFewCalls":208,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":172,"org.easymock.tests.UsageThrowableTest.throwCheckedException":183,"org.easymock.tests.MockingTest.testStrictClassMocking":379,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":335,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":53,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":146,"org.easymock.tests.ObjectMethodsTest.testHashCode":197,"org.easymock.tests2.NameTest.nameForNiceMock":142,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":34,"org.easymock.tests2.DependencyTest.testInterfaceMocking":36,"org.easymock.samples.ExampleTest.addDocument":19,"org.easymock.tests2.DelegateToTest.testStubDelegate":95,"org.easymock.tests2.AnswerTest.stubAnswer":145,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests.UsageVarargTest.varargLongAccepted":297,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.tests.UsageExpectAndReturnTest.floatType":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":38,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests.UsageThrowableTest.noUpperLimit":180,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":114,"org.easymock.tests2.SerializationTest.test":46,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":387,"org.easymock.tests2.UsageConstraintsTest.testSame":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":217,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":241,"org.easymock.tests.GenericTest.testPackageScope":214,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":348,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":382,"org.easymock.tests2.NameTest.nameForMock":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":43,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":361,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":267,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":323,"org.easymock.tests2.MockedExceptionTest.testRealException":87,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":369,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":283,"org.easymock.tests2.NameTest.nameForStrictMock":141,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":364,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":74,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":368,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":132,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":148,"org.easymock.tests2.UsageStrictMockTest.range":42,"org.easymock.tests2.UsageConstraintsTest.lessThan":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":345,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":99,"org.easymock.tests2.CaptureTest.testCaptureRightOne":66,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":355,"org.easymock.tests2.UsageConstraintsTest.testOr":120,"org.easymock.tests.UsageRangeTest.combination":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":71,"org.easymock.tests.UsageTest.wrongArguments":326,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":229,"org.easymock.tests.UsageVarargTest.varargShortAccepted":296,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":211,"org.easymock.tests2.UsageConstraintsTest.cmpTo":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":4,"org.easymock.tests2.CaptureTest.testCaptureFromStub":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":237,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":363,"org.easymock.tests.UsageTest.unexpectedCallWithArray":325,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":209,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":230,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests2.UsageConstraintsTest.constraints":115,"org.easymock.samples.ExampleTest.addAndChangeDocument":22,"org.easymock.tests.UsageStrictMockTest.testVerify":194,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":29,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":278,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":176,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":177,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":104,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":291}}]
