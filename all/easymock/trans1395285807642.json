[{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"key"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,43,44,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[7,9,10,12,13,14,18,27,28,29,30,39,40,41,42,43,43,44,44,45,46,47,48,49,50,51,54,55,56,57,60,115,62,116,66,69,79,85,88,89,92,93,94,95,96,97,98,99,100,101,103,104,105,106,108,109,110,111,114],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[7,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,51,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[9,10,11,14,40,43,44,50,52,55,56,59,60,61,236,69,79,85,88,98,237,100,101,238,102,103,104,105,239,106,240,107,108,109,241,111,112],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[187,189,197,205,211],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[242],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[244,88,245,89],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[142,145,246,247,248,249,250,179,251,252,253,254,255,256],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[142,145,257,246,247,248,249,250,258,179,251,252,253,254,255,256],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[259,260,261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[5,6,7,8,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,9,262,263,264,265,10,266,267,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,268,170,171,172,173,174,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,11,12,13,14,15,292,293,294,295,296,297,298,299,300,16,17,18,19,20,21,22,23,24,301,302,303,304,305,306,307,308,309,310,311,175,176,312,313,314,315,316,177,317,318,319,320,321,322,247,248,323,324,249,250,325,25,26,27,28,29,326,30,327,328,31,329,330,331,332,333,32,33,34,35,36,37,334,38,335,336,337,338,339,340,341,342,343,344,345,178,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,258,179,389,390,391,392,393,394,251,252,39,180,181,395,182,183,184,185,186,396,397,398,40,41,42,43,44,399,400,401,402,403,404,405,406,407,408,409,410,411,187,188,189,190,191,192,193,194,195,196,197,198,199,200,45,46,412,47,48,49,50,0,51,52,53,54,55,56,57,58,59,413,414,415,416,417,418,419,420,421,201,422,253,423,424,60,61,236,425,426,427,428,202,429,430,431,432,433,434,435,436,437,438,439,440,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,203,204,205,206,441,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,442,443,444,445,446,447,448,449,231,232,450,451,452,453,233,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,88,245,89,479,480,481,254,482,483,484,485,486,255,256,487,488,234,489,235,90,259,260,261,91,490,491,92,93,94,95,492,493,96,97,494,98,237,100,101,238,102,103,104,105,239,106,240,107,108,109,241,111,112,113,114,495,496,497,498,499,500,501],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[50,59,98,104,112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[356,442,444],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[225],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[502,503,504,142,143,145,146,322,248,249,250,179,394,251,252,416,417,418,419,201,253,423,481,254,255,256],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[206,207,210,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[32,33,34,35,37,38],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[118,290,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[11,15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,6,7,8,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,9,264,265,10,266,267,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,268,170,171,172,173,174,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,11,12,13,14,15,292,293,294,295,296,297,298,299,300,16,17,18,19,20,21,22,23,24,301,302,303,304,305,306,307,308,309,310,311,175,176,312,313,314,315,316,177,317,318,319,320,321,322,247,248,323,324,249,250,325,25,26,27,28,29,326,30,327,328,31,329,330,331,332,333,32,33,34,35,36,37,334,38,335,336,337,338,339,340,341,342,343,344,345,178,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,258,179,389,390,391,392,393,394,251,252,39,180,181,182,183,184,185,186,396,397,398,40,41,42,43,43,44,44,399,400,401,402,403,404,405,406,407,408,409,410,411,187,188,189,190,191,192,193,194,195,196,197,198,199,200,45,46,412,47,48,49,50,0,51,52,53,54,55,56,57,58,59,413,414,415,416,417,418,419,420,421,201,422,253,423,424,60,61,236,425,426,427,428,202,429,430,431,432,433,434,435,436,437,438,439,440,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,203,204,205,206,441,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,442,443,444,445,446,447,448,449,231,232,450,451,452,453,233,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,88,245,89,479,480,481,254,482,483,484,485,486,255,256,487,488,234,489,235,90,91,490,491,92,93,94,95,493,96,97,98,237,100,101,238,102,103,104,105,239,106,107,108,109,241,111,112,113,114,495,496,497,498,499,500,501],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[142,505,506,247,507,508],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[447],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[195,509,197,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[61,510,511,512,513,514,239],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[515],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[7,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,154,155,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,174,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,12,13,292,293,294,295,297,298,299,17,18,19,20,21,22,23,24,301,302,303,304,305,306,307,308,309,310,311,175,176,313,314,315,316,177,317,321,322,247,248,323,324,249,250,325,28,29,30,329,330,331,332,32,335,336,337,339,340,341,342,343,344,345,178,370,371,372,373,374,375,376,377,378,379,380,381,383,385,386,388,258,179,389,390,391,392,393,394,251,252,39,180,181,182,183,184,185,186,40,41,42,43,43,44,44,399,400,401,402,403,404,405,406,407,408,409,410,411,187,188,189,190,191,192,193,194,195,196,197,198,199,200,45,46,412,47,48,49,50,51,54,55,56,57,413,414,416,417,418,419,420,421,201,422,253,423,424,60,425,426,427,428,434,66,69,79,85,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,443,444,445,447,231,232,450,451,452,453,233,459,466,467,468,469,470,471,472,473,474,475,476,477,478,88,245,89,479,480,481,254,482,483,484,485,486,255,256,487,488,234,235,92,93,94,95,493,96,97,98,100,103,104,105,106,108,109,111,112,113,114,495,496,499,500,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[33,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[142,505,506,516,322,247,248,249,250,507,517,508,518,481,254,255,256],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[220],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[7,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,143,144,145,146,147,150,151,156,157,158,159,161,162,170,171,172,173,174,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,12,13,15,292,294,295,296,299,23,24,301,302,303,304,305,306,307,308,309,310,311,175,176,313,314,315,316,177,317,321,322,323,324,249,325,335,336,337,339,340,342,343,344,345,178,383,385,386,179,389,390,391,392,393,394,251,252,39,180,181,182,183,184,185,186,41,42,399,400,401,402,403,404,405,406,407,408,410,411,187,188,189,190,191,192,193,194,195,196,197,198,199,200,45,46,412,47,48,49,51,413,414,421,201,422,253,423,424,434,66,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,443,444,445,447,231,232,450,451,452,453,233,459,466,467,468,469,470,471,472,474,475,476,477,478,245,89,479,480,481,482,483,484,485,255,487,488,234,235,92,95,493,112,113,114,495,496,499,500,501],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[60,61,510,511,512,519,520,88,239,107],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[43,44,52,237,521,522,241],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[40,43,44,69,79],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[143,146,147,154,156,157,322,394,251,252,416,417,418,419,201,423,424,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,370,371,372,373,374,376,377,378,379,380,381],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"failures":[36,545],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":206,"org.easymock.tests2.UsageTest.argumentsOrdered":256,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":321,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":356,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":483,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":400,"org.easymock.tests2.DelegateToTest.testReturnException":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":314,"org.easymock.tests.MockingTest.testPartialClassMocking":28,"org.easymock.tests.MockClassControlTest.testToString":19,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":415,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":269,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":502,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":232,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":544,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":510,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":212,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":170,"org.easymock.tests2.UsageTest.wrongArguments":254,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":440,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":331,"org.easymock.samples.ExampleTest.answerVsDelegate":404,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":10,"org.easymock.tests2.UsageConstraintsTest.testNull":208,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":328,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":47,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":475,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":24,"org.easymock.tests2.CaptureTest.testPrimitive":190,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":288,"org.easymock.tests.UsageTest.moreThanOneArgument":322,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":391,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":149,"org.easymock.tests.UsageTest.argumentsOrdered":250,"org.easymock.tests.UsageVarargTest.varargIntAccepted":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":514,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":260,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":186,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":528,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":434,"org.easymock.tests.ReplayStateInvalidUsageTest.times":378,"org.easymock.tests2.DependencyTest.testClassMocking":448,"org.easymock.tests2.AnswerTest.answer":496,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":428,"org.easymock.tests2.CaptureTest.testAnd":187,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":263,"org.easymock.tests2.UsageTest.strictResetToDefault":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":470,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":294,"org.easymock.tests2.DelegateToTest.testDelegate":447,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":153,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":527,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":284,"org.easymock.tests.LimitationsTest.mockFinalMethod":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":167,"org.easymock.tests2.DependencyTest.testClassMockingSupport":449,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":168,"org.easymock.tests2.CaptureTest.testCapture1_2446744":191,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":426,"org.easymock.tests.UsageThrowableTest.throwError":304,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":372,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":265,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":465,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":87,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":531,"org.easymock.samples.PartialClassMockTest.testGetArea":40,"org.easymock.tests.MockingTest.testInterfaceMocking":326,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":183,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":290,"org.easymock.tests2.UsageTest.niceToStrict":482,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":270,"org.easymock.tests2.ThreadingTest.testChangeDefault":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":103,"org.easymock.tests2.MockBuilderTest.testCreateMock":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":437,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":278,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":471,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":262,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":329,"org.easymock.tests.UsageOverloadedMethodTest.overloading":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":84,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":386,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":131,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":301,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":217,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":196,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":338,"org.easymock.tests.MockClassControlTest.testEquals":23,"org.easymock.tests2.EasyMockSupportClassTest.testAll":66,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":13,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":517,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":286,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":115,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":522,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":427,"org.easymock.tests2.CaptureTest.testCaptureAll":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":165,"org.easymock.tests.MockNameTest.defaultName":382,"org.easymock.tests2.UsageConstraintsTest.testMatches":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":392,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":370,"org.easymock.samples.ExampleTest.voteForRemovals":408,"org.easymock.tests.UsageVarargTest.allKinds":178,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":166,"org.easymock.samples.BasicClassMockTest.testPrintContent":42,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":310,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":420,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":461,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":520,"org.easymock.tests2.UsageConstraintsTest.greaterThan":221,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":67,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":293,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":57,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":532,"org.easymock.samples.ExampleTest.voteForRemoval":405,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":38,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":451,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":58,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":266,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":261,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":50,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":524,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":479,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":39,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":468,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":313,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":442,"org.easymock.tests2.CaptureTest.testCaptureFirst":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":352,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":469,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":488,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":481,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":453,"org.easymock.tests2.CaptureTest.testCapture2_2446744":199,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":364,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":345,"org.easymock.tests.GenericTest.testBridgedEquals":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":161,"org.easymock.tests.UsageExpectAndReturnTest.longType":123,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":163,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":287,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":226,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":312,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":389,"org.easymock.tests.UsageCallCountTest.tooManyCalls":162,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":439,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":309,"org.easymock.tests.MockingTest.testNiceClassMocking":31,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":93,"org.easymock.tests.MockingTest.testClassMocking":26,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":155,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":99,"org.easymock.tests2.UsageConstraintsTest.testContains":216,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":207,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":303,"org.easymock.tests.MockTypeTest.fromEasyMockClass":264,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":140,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":235,"org.easymock.tests.UsageExpectAndReturnTest.object":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":474,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":511,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":340,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":299,"org.easymock.tests.UsageTest.exactCallCountByLastCall":325,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":150,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":117,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":516,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":136,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":335,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":385,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":455,"org.easymock.tests.MockClassControlTest.testHashCode":22,"org.easymock.tests2.EasyMockSupportTest.testVerify":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":76,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":319,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":425,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":202,"org.easymock.tests.UsageVarargTest.varargCharAccepted":339,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":333,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":369,"org.easymock.tests2.UsageTest.openCallCountByLastCall":484,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":477,"org.easymock.tests.DefaultClassInstantiatorTest.object":32,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":318,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":297,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":432,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":454,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":530,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":21,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":275,"org.easymock.tests.ReplayStateInvalidCallsTest.times":536,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":396,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":537,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":85,"org.easymock.tests2.UsageTest.resumeIfFailure":487,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":316,"org.easymock.tests2.StubTest.stubWithReturnValue":414,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":239,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":227,"org.easymock.tests2.SerializationTest.testAllMockedMethod":89,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":362,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":508,"org.easymock.samples.SupportTest.voteForRemovals":402,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":281,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":244,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":368,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":497,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":119,"org.easymock.tests.UsageExpectAndThrowTest.object":279,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":224,"org.easymock.tests2.DelegateToTest.testWrongClass":445,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":534,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":180,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":181,"org.easymock.tests.UsageStrictMockTest.range":145,"org.easymock.samples.ConstructorCalledMockTest.testTax":43,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":490,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":473,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":280,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":63,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":249,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":330,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":505,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":526,"org.easymock.tests2.CaptureTest.testCaptureNone":195,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":291,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":2,"org.easymock.tests.UsageUnorderedTest.message":179,"org.easymock.tests.UsageVerifyTest.twoReturns":252,"org.easymock.tests.UsageVarargTest.varargByteAccepted":344,"org.easymock.tests2.ThreadingTest.testThreadSafe":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":80,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":159,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":41,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":300,"org.easymock.tests2.CaptureTest.testCapture_2617107":189,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":518,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":268,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":366,"org.easymock.tests2.UsageConstraintsTest.any":214,"org.easymock.tests2.StubTest.stub":413,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":377,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageExpectAndThrowTest.longType":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":367,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":36,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":376,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":422,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":459,"org.easymock.tests2.SerializationTest.testClass":88,"org.easymock.tests.LimitationsTest.mockNativeMethod":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":139,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":431,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":116,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":542,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":424,"org.easymock.tests2.NameTest.nameForMocksControl":419,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":433,"org.easymock.tests2.MockedExceptionTest.testMockedException":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":68,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":324,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":489,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":273,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":45,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":106,"org.easymock.tests.MockingTest.testNicePartialClassMocking":29,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":49,"org.easymock.tests2.CompareToTest.testNotComparable":242,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":429,"org.easymock.tests2.CaptureTest.testCaptureLast":194,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":169,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":541,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":97,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":211,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":225,"org.easymock.tests.MockingTest.testTwoMocks":27,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":538,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":494,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":277,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":255,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":229,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":4,"org.easymock.samples.ExampleTest.removeNonExistingDocument":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":436,"org.easymock.tests.UsageStrictMockTest.differentMethods":146,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":456,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":34,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":3,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":452,"org.easymock.tests2.MockBuilderTest.testCreateMockString":111,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":70,"org.easymock.tests.UsageExpectAndThrowTest.floatType":271,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":499,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":236,"org.easymock.tests.UsageVerifyTest.twoThrows":251,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":79,"org.easymock.samples.ExampleTest.voteAgainstRemoval":406,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":357,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":56,"org.easymock.tests.LimitationsTest.privateConstructor":6,"org.easymock.tests2.UsageConstraintsTest.testNotNull":228,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":311,"org.easymock.tests2.UsageTest.defaultResetToNice":486,"org.easymock.samples.ExampleTest.voteAgainstRemovals":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":430,"org.easymock.tests.UsageVarargTest.differentLength":341,"org.easymock.tests2.CallbackTest.callback":411,"org.easymock.tests2.UsageConstraintsTest.equals":441,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":52,"org.easymock.tests.UsageTest.openCallCountByLastCall":323,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":515,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":172,"org.easymock.tests.UsageCallCountTest.tooFewCalls":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":332,"org.easymock.tests.UsageThrowableTest.throwCheckedException":308,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":506,"org.easymock.tests.MockingTest.testStrictClassMocking":25,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":176,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":435,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":94,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":379,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":493,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":501,"org.easymock.tests.ObjectMethodsTest.testHashCode":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":513,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":540,"org.easymock.tests2.NameTest.nameForNiceMock":418,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":233,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":535,"org.easymock.tests2.DependencyTest.testInterfaceMocking":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":512,"org.easymock.samples.ExampleTest.addDocument":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":81,"org.easymock.tests2.DelegateToTest.testStubDelegate":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":86,"org.easymock.tests2.AnswerTest.stubAnswer":500,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":143,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":240,"org.easymock.tests.UsageVarargTest.varargLongAccepted":343,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":355,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":138,"org.easymock.tests.UsageExpectAndReturnTest.floatType":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":60,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":463,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":222,"org.easymock.tests.UsageThrowableTest.noUpperLimit":305,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":204,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":90,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":192,"org.easymock.tests2.SerializationTest.test":245,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":545,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":121,"org.easymock.tests2.UsageConstraintsTest.testSame":209,"org.easymock.samples.SupportTest.addDocument":401,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":492,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":525,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":71,"org.easymock.tests.GenericTest.testPackageScope":12,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":462,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":327,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":523,"org.easymock.tests2.NameTest.nameForMock":416,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":132,"org.easymock.tests2.UsageStrictMockTest.differentMethods":423,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":241,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":53,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":124,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":283,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":296,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":295,"org.easymock.tests2.MockedExceptionTest.testRealException":495,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":267,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":257,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":359,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":171,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":381,"org.easymock.tests2.NameTest.nameForStrictMock":417,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":102,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":48,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":91,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":503,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":35,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":223,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":100,"org.easymock.tests2.UsageStrictMockTest.range":253,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":529,"org.easymock.tests2.UsageConstraintsTest.lessThan":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":519,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":75,"org.easymock.tests2.CaptureTest.testCaptureRightOne":197,"org.easymock.tests2.UsageConstraintsTest.testOr":210,"org.easymock.tests.UsageRangeTest.combination":292,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":46,"org.easymock.tests.UsageTest.wrongArguments":248,"org.easymock.tests2.MockBuilderTest.testWithConstructor":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":72,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":347,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":37,"org.easymock.tests.UsageVarargTest.varargShortAccepted":342,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":160,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":543,"org.easymock.tests2.UsageConstraintsTest.cmpTo":215,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":498,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":533,"org.easymock.tests2.CompareToTest.testLessThan":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":349,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":485,"org.easymock.tests2.CaptureTest.testCaptureFromStub":198,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":371,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":101,"org.easymock.tests.UsageTest.unexpectedCallWithArray":247,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":539,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":142,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":158,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":521,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":134,"org.easymock.tests2.CaptureTest.testCapture":509,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":144,"org.easymock.tests2.UsageConstraintsTest.constraints":205,"org.easymock.samples.ExampleTest.addAndChangeDocument":410,"org.easymock.tests.UsageStrictMockTest.testVerify":148,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":399,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":164,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":184,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":62,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":126,"org.easymock.tests.LimitationsTest.abstractClass":5,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":185,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":504,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":472,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":336}}]
