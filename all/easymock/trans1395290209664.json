[{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[77,78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:80","failures":[80,81,82,83,84,30,85,86,87,31,88,32,89,90,91,92,93,35,94],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[95,96,97,98,84,86],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[100,101,102,103,43,50],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[22,104,53,63,64],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[105],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[106,107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[100,101,102,103,43,50],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[110],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[14,22,46,53],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,3,127,128,129,130,131,132,133,134,135,136,137,138,139,140,4,141,142,143,144,145,146,147,79,148,149,150,151,152,20,153,154,33,155,156,107,157,158,159,160,161,162,50,51,163,164,165,166,167,168,169],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[111,113,121,3,127,129,131,132,134,143,79],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[81,170,171],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:305","failures":[80,172,173,174,175,176,177,111,112,113,114,115,118,119,120,121,123,124,81,170,108,105,178,179,180,181,125,126,3,127,128,129,130,131,132,133,135,136,137,138,139,140,4,141,142,143,144,145,146,147,79,148,149,182,183,5,184,185,6,186,187,188,189,7,190,191,192,193,8,77,9,11,194,195,196,15,16,197,17,198,199,200,201,151,95,96,18,202,203,204,152,205,20,22,23,206,207,208,25,209,210,211,26,212,213,214,27,215,216,28,29,217,30,86,31,88,89,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,156,246,41,42,247,248,47,249,250,251,48,252,253,254,107,157,158,159,160,161,162,51,53,54,255,256,257,258,62,63,64,259,109,260,67,69,70,163,164,167,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,168,169],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[80,281,172,173,174,175,282,176,283,284,177,285,286,287,288,289,111,112,113,114,115,116,117,118,119,120,121,122,123,124,81,170,171,108,105,178,179,290,180,181,125,126,3,127,128,129,130,131,132,133,135,136,137,138,139,140,4,141,142,143,144,145,146,147,79,148,149,182,183,5,184,185,6,186,187,291,188,189,7,190,191,192,193,8,77,9,10,11,12,194,195,196,13,14,15,16,197,17,198,199,200,201,82,151,292,95,96,18,202,203,204,152,205,19,293,20,21,22,23,24,206,207,208,25,209,210,211,26,212,213,214,27,215,216,294,28,295,296,297,298,29,299,300,217,301,83,30,86,87,31,88,32,89,92,153,154,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,302,239,240,241,242,243,244,33,245,303,304,305,306,307,37,308,309,310,311,155,312,313,314,315,156,316,317,318,319,320,321,41,42,43,44,247,248,45,46,47,322,323,106,324,325,249,250,251,48,253,254,326,327,328,329,107,157,158,159,160,161,162,49,330,50,51,52,53,54,55,255,331,332,256,257,258,57,58,333,334,59,60,61,62,63,64,259,109,260,68,163,164,165,166,167,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,168,169,76,76],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[220,222,236,237,317,168],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[15,335,252,253,254],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[336,337,338],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[130],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[339,340,341,342,343,344,345,346,347],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[8,195,239,41,248,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[134],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[80,86,31,88,91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[193,348],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[80,81,191,192,193,82,95,96,349,83,30,85,86,87,31,88,32,89,92,93,35,94],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":127,"org.easymock.tests2.UsageTest.argumentsOrdered":14,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":315,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":12,"org.easymock.tests2.StubTest.stubWithReturnValue":180,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":346,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":227,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":147,"org.easymock.tests2.SerializationTest.testAllMockedMethod":171,"org.easymock.tests2.DelegateToTest.testReturnException":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":313,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":246,"org.easymock.tests.MockingTest.testPartialClassMocking":249,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":101,"org.easymock.samples.SupportTest.voteForRemovals":177,"org.easymock.tests.MockClassControlTest.testToString":38,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":261,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":191,"org.easymock.tests.UsageExpectAndThrowTest.object":271,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":207,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":340,"org.easymock.tests2.DelegateToTest.testWrongClass":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":168,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":169,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":133,"org.easymock.tests2.UsageTest.wrongArguments":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":163,"org.easymock.samples.ConstructorCalledMockTest.testTax":288,"org.easymock.tests.UsageStrictMockTest.range":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":328,"org.easymock.samples.ExampleTest.answerVsDelegate":173,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":213,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":35,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":182,"org.easymock.tests2.UsageConstraintsTest.testNull":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":272,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":199,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":31,"org.easymock.tests2.CaptureTest.testPrimitive":114,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":280,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":327,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":319,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":102,"org.easymock.tests2.CaptureTest.testCaptureNone":119,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.UsageVerifyTest.twoReturns":64,"org.easymock.tests.UsageVarargTest.varargByteAccepted":310,"org.easymock.tests2.ThreadingTest.testThreadSafe":202,"org.easymock.tests.UsageTest.argumentsOrdered":46,"org.easymock.tests.UsageVarargTest.varargIntAccepted":305,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":334,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":285,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":107,"org.easymock.tests2.CaptureTest.testCapture_2617107":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":344,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":166,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":87,"org.easymock.tests2.UsageConstraintsTest.any":135,"org.easymock.tests2.StubTest.stub":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":314,"org.easymock.tests.UsageExpectAndThrowTest.longType":264,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":336,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":21,"org.easymock.tests2.SerializationTest.testClass":81,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":29,"org.easymock.tests.LimitationsTest.mockNativeMethod":245,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":237,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":94,"org.easymock.tests2.AnswerTest.answer":187,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":298,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":98,"org.easymock.tests2.CaptureTest.testAnd":111,"org.easymock.tests2.UsageTest.strictResetToDefault":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":292,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":24,"org.easymock.tests2.MockedExceptionTest.testMockedException":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":318,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":211,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":248,"org.easymock.tests2.DelegateToTest.testDelegate":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":265,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":251,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":88,"org.easymock.tests.MockingTest.testNicePartialClassMocking":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":276,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":201,"org.easymock.tests2.CompareToTest.testNotComparable":110,"org.easymock.tests2.CaptureTest.testCaptureLast":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":156,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":70,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":325,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":145,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":69,"org.easymock.tests2.CaptureTest.testCapture1_2446744":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":218,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":274,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":269,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":148,"org.easymock.tests.UsageThrowableTest.throwError":238,"org.easymock.tests.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":204,"org.easymock.tests2.MockBuilderTest.testCreateMockString":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":321,"org.easymock.tests.UsageExpectAndThrowTest.floatType":263,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":4,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":291,"org.easymock.tests.UsageVerifyTest.twoThrows":63,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":192,"org.easymock.samples.PartialClassMockTest.testGetArea":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":157,"org.easymock.samples.ExampleTest.voteAgainstRemoval":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":1,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":262,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":73,"org.easymock.tests2.UsageTest.niceToStrict":11,"org.easymock.tests2.UsageConstraintsTest.testNotNull":79,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":299,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":244,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":86,"org.easymock.tests2.UsageTest.defaultResetToNice":196,"org.easymock.tests2.MockBuilderTest.testCreateMock":32,"org.easymock.samples.ExampleTest.voteAgainstRemovals":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":233,"org.easymock.tests.UsageVarargTest.differentLength":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":99,"org.easymock.tests2.CallbackTest.callback":28,"org.easymock.tests.UsageTest.openCallCountByLastCall":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":270,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":100,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":26,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":125,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":165,"org.easymock.tests.UsageCallCountTest.tooFewCalls":58,"org.easymock.tests.UsageOverloadedMethodTest.overloading":257,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":260,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":139,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":184,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":337,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":138,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":329,"org.easymock.tests.UsageThrowableTest.throwCheckedException":241,"org.easymock.tests2.EasyMockSupportClassTest.testAll":190,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":278,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":103,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":106,"org.easymock.tests2.CaptureTest.testCaptureAll":112,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":6,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":162,"org.easymock.tests.MockNameTest.defaultName":74,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":5,"org.easymock.tests2.UsageConstraintsTest.testMatches":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":185,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":320,"org.easymock.samples.ExampleTest.voteForRemovals":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":343,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":205,"org.easymock.tests.UsageVarargTest.allKinds":155,"org.easymock.tests2.DependencyTest.testInterfaceMocking":206,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":342,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":324,"org.easymock.samples.BasicClassMockTest.testPrintContent":286,"org.easymock.samples.ExampleTest.addDocument":282,"org.easymock.tests2.DelegateToTest.testStubDelegate":105,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":243,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":19,"org.easymock.tests2.AnswerTest.stubAnswer":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":316,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":345,"org.easymock.tests2.UsageConstraintsTest.greaterThan":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":252,"org.easymock.tests.UsageVarargTest.varargLongAccepted":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":18,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":55,"org.easymock.samples.ExampleTest.voteForRemoval":174,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":236,"org.easymock.tests.UsageExpectAndReturnTest.floatType":220,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":181,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":289,"org.easymock.tests.UsageThrowableTest.noUpperLimit":302,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":142,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":332,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":126,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":116,"org.easymock.tests2.SerializationTest.test":170,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":209,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":239,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":219,"org.easymock.tests2.UsageConstraintsTest.testSame":130,"org.easymock.samples.SupportTest.addDocument":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":312,"org.easymock.tests2.CaptureTest.testCaptureFirst":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":210,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":16,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":68,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":225,"org.easymock.tests.GenericTest.testPackageScope":255,"org.easymock.tests2.UsageTest.moreThanOneArgument":9,"org.easymock.tests2.CaptureTest.testCapture2_2446744":123,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":89,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":311,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":60,"org.easymock.tests.UsageExpectAndReturnTest.longType":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":322,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":230,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":91,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":2,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":146,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":277,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":317,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":78,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":222,"org.easymock.tests.UsageCallCountTest.tooManyCalls":61,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":254,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":57,"org.easymock.tests2.MockedExceptionTest.testRealException":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":226,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":347,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":266,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":242,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":164,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":183,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":84,"org.easymock.tests2.UsageConstraintsTest.testContains":137,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":217,"org.easymock.tests2.UsageConstraintsTest.testFind":128,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":258,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":348,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":200,"org.easymock.tests.MockTypeTest.fromEasyMockClass":34,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":49,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":154,"org.easymock.tests.UsageExpectAndReturnTest.object":228,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":143,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":151,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":30,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.UsageConstraintsTest.lessThan":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":341,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":307,"org.easymock.tests.UsageTest.exactCallCountByLastCall":47,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":161,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":25,"org.easymock.tests2.CaptureTest.testCaptureRightOne":121,"org.easymock.tests2.UsageConstraintsTest.testOr":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":339,"org.easymock.tests.UsageRangeTest.combination":48,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":303,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":17,"org.easymock.tests.UsageTest.wrongArguments":44,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":109,"org.easymock.tests2.EasyMockSupportTest.testVerify":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":231,"org.easymock.tests.UsageVarargTest.varargShortAccepted":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":259,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":295,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":59,"org.easymock.tests2.UsageConstraintsTest.cmpTo":136,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":150,"org.easymock.tests.UsageVarargTest.varargCharAccepted":306,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests2.UsageTest.openCallCountByLastCall":194,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":195,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":216,"org.easymock.tests2.CaptureTest.testCaptureFromStub":122,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":85,"org.easymock.tests.UsageTest.unexpectedCallWithArray":43,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":240,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":333,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":232,"org.easymock.tests2.CaptureTest.testCapture":75,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":95,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":40,"org.easymock.samples.ExampleTest.addAndChangeDocument":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":267,"org.easymock.tests.CapturesMatcherTest.test":76,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":235,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":287,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":193,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":323,"org.easymock.tests2.UsageTest.resumeIfFailure":15,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":158,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":224,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":93,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":159,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":212,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":104}}]
