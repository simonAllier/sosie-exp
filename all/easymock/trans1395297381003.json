[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[31,32,33,34,35,16,36,37,38,39,40,17,41,42,43,44,45,18,46,47,48,19,49,20,50,51,52,53,54,55,56,57,58,22,59,60,61,62,63,64,65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[66,67,68,69,70,71,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[74],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[0,2,75,76],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[77,78,79],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[1,80,3,81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,0,113,114,115,74,116,66,67,117,118,119,68,69,120,121,82,1,122,123,2,124,70,71,80,125,75,72,73,3,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,4,5,6,153,154,155,31,156,157,158,159,160,161,7,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,32,33,34,35,218,219,220,221,222,223,224,225,226,227,228,229,8,230,231,232,233,234,235,236,237,238,9,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,10,258,11,259,260,261,262,12,263,264,265,266,267,13,14,268,269,270,271,15,16,36,37,38,39,40,17,41,42,43,44,45,18,46,47,48,19,49,20,50,272,273,274,275,276,277,278,279,280,281,51,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,21,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,52,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,53,54,55,56,57,58,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,22,394,395,396,397,398,399,400,401,402,403,404,23,405,406,407,408,409,24,410,411,412,413,414,25,415,416,417,26,418,27,419,420,421,422,59,423,424,425,28,426,427,428,429,430,431,432,433,434,435,436,437,60,438,439,61,62,63,64,65,440,441,29,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,30,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,0,113,114,115,74,116,66,67,117,118,119,68,69,120,121,82,1,122,123,2,124,70,71,80,125,75,72,73,3,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,4,5,6,153,154,155,31,156,157,158,159,160,161,7,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,32,33,34,35,218,219,220,221,222,223,224,225,226,227,228,229,8,230,231,232,233,234,235,236,237,238,9,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,10,258,11,259,260,261,262,12,263,264,265,266,267,13,14,268,269,270,271,15,16,36,37,38,39,40,17,41,42,43,44,45,18,46,47,48,19,49,20,50,272,273,274,275,276,277,278,279,280,281,51,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,21,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,52,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,53,54,55,56,57,58,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,22,394,395,396,397,398,399,400,401,402,403,404,23,405,406,407,408,409,24,410,411,412,413,414,25,415,416,417,26,418,27,419,420,421,422,59,423,424,425,28,426,427,428,429,430,431,432,433,434,435,436,437,60,438,439,61,62,63,64,65,440,441,29,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,30,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[244],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[476],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[457,493,494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[126,127,128,130,132,133,134,137,218,219,220,222,224,225,226,229,485,490],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[140,142,143,9,495,496,497,498,308,310,311,324,52,325,28,29],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[499],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[102,104,106,500,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[0,114,76],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[114,115,117,118,68,70,262,263,269],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[501,502,157,307,308,503,504,381,442,443,444,445,446,447,448],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[472,476],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[142,239,245,246,307,310,52,325,505,425,28,442,443,446,447],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[96,102,103,110,112,0,113,114,115,116,66,67,117,118,119,69,120,121,82,1,122,123,2,124,70,71,80,75,72,73,3,138,139,140,141,142,143,144,145,146,147,148,151,4,5,6,153,154,155,31,156,158,159,160,7,162,163,164,165,166,167,170,173,175,180,181,182,183,210,211,215,216,32,33,34,35,8,237,238,9,239,240,241,242,243,244,245,246,247,248,249,252,255,256,257,10,11,259,260,261,262,12,263,264,265,266,267,13,14,268,269,270,271,15,16,36,37,38,39,40,17,41,42,43,44,45,18,46,47,48,19,49,20,50,274,281,51,305,306,307,308,309,310,311,312,313,317,318,320,324,52,325,333,53,54,55,56,57,58,341,342,344,345,346,347,348,349,350,351,352,353,357,358,359,360,369,370,371,372,373,374,375,376,377,378,379,393,22,394,395,396,397,398,400,401,402,403,404,23,405,406,407,408,409,24,410,411,412,413,414,25,415,416,417,26,418,27,419,424,28,426,427,428,430,431,433,434,435,436,437,60,438,439,61,62,63,64,65,441,29,442,443,444,445,446,447,448,462,465,473,474,477,478,479,480,481,482,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[332],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,0,113,114,115,74,116,66,67,117,118,119,68,69,120,121,82,1,122,123,2,124,70,71,80,125,75,72,73,3,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,4,5,6,153,154,155,31,156,157,158,159,160,161,7,164,179,180,181,182,183,214,217,32,33,34,35,218,219,220,221,222,223,224,225,226,227,228,229,8,235,236,237,238,9,239,240,241,242,243,244,245,246,247,248,252,253,254,255,256,257,10,258,11,260,262,12,263,264,265,266,267,13,14,268,269,270,271,15,16,36,37,38,39,40,17,41,42,43,44,45,18,46,47,48,19,49,20,50,276,277,278,279,280,281,51,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,21,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,319,321,322,324,52,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,53,54,55,56,57,58,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,364,365,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,22,394,395,396,397,398,400,401,402,403,404,23,405,406,407,408,409,24,410,411,412,413,414,25,415,416,417,26,418,27,419,420,421,422,59,423,424,425,28,426,427,428,429,430,431,432,433,434,435,436,437,60,438,439,61,62,63,64,65,440,441,29,442,443,444,445,446,447,448,449,450,451,461,462,463,477,478,479,480,481,482,483,30,485,488,489,490],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[457,493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":115,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":441,"org.easymock.tests2.UsageTest.argumentsOrdered":246,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":292,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":241,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":485,"org.easymock.tests2.DelegateToTest.testReturnException":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":54,"org.easymock.tests.MockingTest.testPartialClassMocking":317,"org.easymock.tests.MockClassControlTest.testToString":466,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":179,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":194,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":16,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":495,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":152,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":400,"org.easymock.tests2.UsageTest.wrongArguments":239,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":346,"org.easymock.samples.ExampleTest.answerVsDelegate":478,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":366,"org.easymock.tests2.UsageConstraintsTest.testNull":66,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":165,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":471,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":92,"org.easymock.tests2.CaptureTest.testPrimitive":264,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":404,"org.easymock.tests.UsageTest.moreThanOneArgument":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":50,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":371,"org.easymock.tests.UsageTest.argumentsOrdered":447,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":276,"org.easymock.tests.UsageVarargTest.varargIntAccepted":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":394,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":228,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":232,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":398,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests.ReplayStateInvalidUsageTest.times":337,"org.easymock.tests2.DependencyTest.testClassMocking":149,"org.easymock.tests2.AnswerTest.answer":252,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":148,"org.easymock.tests2.CaptureTest.testAnd":262,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":363,"org.easymock.tests2.UsageTest.strictResetToDefault":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":87,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":359,"org.easymock.tests2.DelegateToTest.testDelegate":7,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":48,"org.easymock.tests.LimitationsTest.mockFinalMethod":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":379,"org.easymock.tests2.DependencyTest.testClassMockingSupport":150,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":461,"org.easymock.tests2.CaptureTest.testCapture1_2446744":265,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":146,"org.easymock.tests.UsageThrowableTest.throwError":60,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":331,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":365,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":399,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":208,"org.easymock.samples.PartialClassMockTest.testGetArea":484,"org.easymock.tests.MockingTest.testInterfaceMocking":319,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":332,"org.easymock.tests2.CompareToTest.testLessOrEqual":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":395,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":387,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":385,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":195,"org.easymock.tests2.UsageTest.niceToStrict":240,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":282,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":102,"org.easymock.tests2.MockBuilderTest.testCreateMock":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":203,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":134,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":43,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":88,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":451,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":344,"org.easymock.tests.UsageOverloadedMethodTest.overloading":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":1,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":414,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":392,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":493,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":82,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":268,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":429,"org.easymock.tests.MockClassControlTest.testEquals":470,"org.easymock.tests2.EasyMockSupportClassTest.testAll":187,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":474,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":49,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":499,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":147,"org.easymock.tests2.CaptureTest.testCaptureAll":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":377,"org.easymock.tests.MockNameTest.defaultName":343,"org.easymock.tests2.UsageConstraintsTest.testMatches":122,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":372,"org.easymock.samples.ExampleTest.voteForRemovals":482,"org.easymock.tests.UsageVarargTest.allKinds":437,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":324,"org.easymock.samples.BasicClassMockTest.testPrintContent":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":378,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":64,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":225,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":459,"org.easymock.tests2.UsageConstraintsTest.greaterThan":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":358,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":176,"org.easymock.samples.ExampleTest.voteForRemoval":479,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":460,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":177,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":5,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":367,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":168,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":237,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":374,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":85,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":53,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":157,"org.easymock.tests2.CaptureTest.testCaptureFirst":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":86,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":248,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":410,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests2.UsageTest.moreThanOneArgument":9,"org.easymock.tests2.CaptureTest.testCapture2_2446744":271,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":299,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":436,"org.easymock.tests.GenericTest.testBridgedEquals":476,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":355,"org.easymock.tests.UsageExpectAndReturnTest.longType":407,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":375,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":20,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":440,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":125,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":19,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":390,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":369,"org.easymock.tests.UsageCallCountTest.tooManyCalls":356,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":204,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":136,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":63,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":210,"org.easymock.tests.MockingTest.testNiceClassMocking":323,"org.easymock.tests.MockingTest.testClassMocking":315,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":349,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":34,"org.easymock.tests2.UsageConstraintsTest.testFind":116,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":22,"org.easymock.tests.MockTypeTest.fromEasyMockClass":364,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":11,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":305,"org.easymock.tests.UsageExpectAndReturnTest.object":413,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":91,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":431,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":383,"org.easymock.tests.UsageTest.exactCallCountByLastCall":448,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":277,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":250,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":26,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":422,"org.easymock.tests.MockClassControlTest.testHashCode":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":219,"org.easymock.tests2.EasyMockSupportTest.testVerify":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":197,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":450,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":420,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":145,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":156,"org.easymock.tests.UsageVarargTest.varargCharAccepted":430,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":452,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":304,"org.easymock.tests2.UsageTest.openCallCountByLastCall":242,"org.easymock.tests.DefaultClassInstantiatorTest.object":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":78,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":449,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":381,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":198,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":129,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":218,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":468,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":418,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":389,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":206,"org.easymock.tests2.UsageTest.resumeIfFailure":247,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":361,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":56,"org.easymock.tests2.StubTest.stubWithReturnValue":31,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":412,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":75,"org.easymock.tests2.SerializationTest.testAllMockedMethod":261,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":21,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":489,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":18,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":303,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":253,"org.easymock.tests.UsageExpectAndThrowTest.object":44,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":328,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":71,"org.easymock.tests2.DelegateToTest.testWrongClass":160,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":341,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":342,"org.easymock.samples.ConstructorCalledMockTest.testTax":491,"org.easymock.tests.UsageStrictMockTest.range":310,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":235,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":90,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":45,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":104,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":184,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":345,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":388,"org.easymock.tests2.CaptureTest.testCaptureNone":14,"org.easymock.tests.UsageUnorderedTest.message":28,"org.easymock.tests.UsageVerifyTest.twoReturns":325,"org.easymock.tests.UsageVarargTest.varargByteAccepted":435,"org.easymock.tests2.ThreadingTest.testThreadSafe":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":201,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":353,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":486,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":384,"org.easymock.tests2.CaptureTest.testCapture_2617107":263,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":301,"org.easymock.tests2.UsageConstraintsTest.any":69,"org.easymock.tests2.StubTest.stub":155,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":391,"org.easymock.tests.UsageExpectAndThrowTest.longType":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":302,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":457,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":335,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests2.SerializationTest.testClass":259,"org.easymock.tests.LimitationsTest.mockNativeMethod":274,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":475,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":419,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":128,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":144,"org.easymock.tests2.NameTest.nameForMocksControl":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":130,"org.easymock.tests2.MockedExceptionTest.testMockedException":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":189,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":445,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":39,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":258,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":320,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":106,"org.easymock.tests.MockingTest.testNicePartialClassMocking":318,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":167,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":126,"org.easymock.tests2.CaptureTest.testCaptureLast":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":462,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":118,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":216,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":80,"org.easymock.tests.MockingTest.testTwoMocks":316,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":42,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":245,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":73,"org.easymock.samples.ExampleTest.removeNonExistingDocument":483,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":133,"org.easymock.tests.UsageStrictMockTest.differentMethods":311,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":220,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":455,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":6,"org.easymock.tests2.MockBuilderTest.testCreateMockString":112,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":191,"org.easymock.tests.UsageExpectAndThrowTest.floatType":37,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":255,"org.easymock.tests.UsageVerifyTest.twoThrows":52,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":251,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":200,"org.easymock.samples.ExampleTest.voteAgainstRemoval":480,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":293,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":175,"org.easymock.tests.LimitationsTest.privateConstructor":273,"org.easymock.tests2.UsageConstraintsTest.testNotNull":72,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":65,"org.easymock.tests2.UsageTest.defaultResetToNice":244,"org.easymock.samples.ExampleTest.voteAgainstRemovals":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":294,"org.easymock.tests.UsageVarargTest.differentLength":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":127,"org.easymock.tests2.CallbackTest.callback":8,"org.easymock.tests2.UsageConstraintsTest.equals":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":171,"org.easymock.tests.UsageTest.openCallCountByLastCall":444,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":402,"org.easymock.tests.UsageCallCountTest.tooFewCalls":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":347,"org.easymock.tests.UsageThrowableTest.throwCheckedException":62,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":314,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":51,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":132,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":211,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":214,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":257,"org.easymock.tests.ObjectMethodsTest.testHashCode":382,"org.easymock.tests2.NameTest.nameForNiceMock":182,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":154,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.samples.ExampleTest.addDocument":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":202,"org.easymock.tests2.DelegateToTest.testStubDelegate":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":207,"org.easymock.tests2.AnswerTest.stubAnswer":256,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":308,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":107,"org.easymock.tests.UsageVarargTest.varargLongAccepted":434,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":291,"org.easymock.tests.UsageExpectAndReturnTest.floatType":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":27,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":249,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":492,"org.easymock.tests.UsageThrowableTest.noUpperLimit":438,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":423,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":227,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":113,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":230,"org.easymock.tests2.SerializationTest.test":260,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":266,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":454,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":405,"org.easymock.tests2.UsageConstraintsTest.testSame":67,"org.easymock.samples.SupportTest.addDocument":488,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":213,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":192,"org.easymock.tests.GenericTest.testPackageScope":473,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":226,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":321,"org.easymock.tests2.NameTest.nameForMock":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":25,"org.easymock.tests2.UsageStrictMockTest.differentMethods":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":111,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":408,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":47,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":380,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":360,"org.easymock.tests2.MockedExceptionTest.testRealException":35,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":368,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":296,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":401,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":340,"org.easymock.tests2.NameTest.nameForStrictMock":181,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":101,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":79,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":234,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":456,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":70,"org.easymock.tests.ErrorMessageTest.testGetters":497,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":98,"org.easymock.tests2.UsageStrictMockTest.range":142,"org.easymock.tests2.UsageConstraintsTest.lessThan":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":222,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":196,"org.easymock.tests2.CaptureTest.testCaptureRightOne":269,"org.easymock.tests2.UsageConstraintsTest.testOr":117,"org.easymock.tests.UsageRangeTest.combination":357,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":163,"org.easymock.tests.UsageTest.wrongArguments":443,"org.easymock.tests2.MockBuilderTest.testWithConstructor":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":193,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":409,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":283,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":458,"org.easymock.tests.UsageVarargTest.varargShortAccepted":433,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":354,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":254,"org.easymock.tests2.CompareToTest.testLessThan":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":285,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":243,"org.easymock.tests2.CaptureTest.testCaptureFromStub":270,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":330,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":99,"org.easymock.tests.UsageTest.unexpectedCallWithArray":442,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":307,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":416,"org.easymock.tests2.UsageConstraintsTest.constraints":114,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":309,"org.easymock.samples.ExampleTest.addAndChangeDocument":30,"org.easymock.tests.UsageStrictMockTest.testVerify":313,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":490,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":376,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":24,"org.easymock.tests.LimitationsTest.abstractClass":272,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":397,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":498,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":89}}]
