[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[5,6,7,17,18,19,12,13,14,15,20,21,22,16,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[24,25,26,27,28,29],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[30,31],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"position":"org.easymock.internal.RecordState:163","failures":[33,34],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.ConstructorArgs:50","failures":[71,72,73,74,75,76,77,78,79,80,43,81,82,83,84,85,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[86,87,88,89,90,91,92,93,70,94,95,96,97,83,98,84,99,100,101,102,103,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[69,105,106,107],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,20,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,16,172],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Any:36","failures":[117,121,139,145,146,151,155,20,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[124],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[173,174,175],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[176],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,20,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,16,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[177,71,71,72,72,178,179,73,86,87,88,180,181,89,90,91,92,93,182,70,183,184,185,186,152,94,187,188,95,189,190,97,83,191,98,84,192,47,50,60,66,69,106,193,194,195,196,197,198,199,200,201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[202,0,203,204,205,206,207,2,208,4,155,17,209,173,174,8,210,9,18,19,11,12,20,211,21,22,16,172,23,212],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[25,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:70","failures":[17,209,23,212],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[113,117,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[69,105,106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[213],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[74,80,214,215,216,217,218],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[177,71,72,219,220,221,222,223,224,225,226,227,178,179,228,229,230,73,74,231,232,233,234,235,236,108,237,109,110,111,112,113,238,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,239,240,241,242,86,78,87,88,79,243,180,181,89,80,90,244,43,91,92,82,93,138,139,140,141,142,143,144,145,146,147,148,149,150,151,182,70,245,183,184,185,186,246,152,247,248,94,187,188,95,249,96,250,251,252,153,253,254,255,189,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,4,5,271,272,273,274,275,6,7,276,277,278,279,280,281,282,154,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,190,97,83,191,310,311,98,84,85,312,313,314,315,316,317,318,319,320,321,322,323,324,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,325,326,327,328,33,34,329,330,155,331,17,209,332,69,105,106,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,193,194,195,379,196,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,99,400,401,402,403,100,404,405,406,407,408,409,410,411,412,173,174,213,413,414,415,416,417,418,11,12,13,419,420,14,15,421,197,422,423,424,425,426,427,428,429,430,431,432,24,25,26,27,433,28,434,29,20,435,436,437,156,157,438,439,440,441,442,443,444,445,446,447,198,199,200,32,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,175,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,158,485,486,101,102,103,487,488,489,490,491,201,492,159,160,161,162,163,493,494,495,496,164,165,166,167,168,497,498,499,500,501,502,503,504,104,505,506,507,508,169,509,211,21,22,510,511,512,513,514,515,516,517,518,170,171,519,520,16,172,521,23,212,522,523,524,525,526],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[177,219,221,222,224,230,73,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,87,180,89,90,92,138,139,141,142,145,146,147,148,150,151,182,70,245,183,184,185,152,187,188,95,250,251,252,153,253,189,262,269,270,4,271,273,274,275,276,277,280,281,288,297,309,190,97,83,191,311,98,84,312,313,314,315,316,317,318,319,320,321,322,323,47,50,60,66,325,33,155,17,209,69,105,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,194,195,196,411,414,415,416,417,418,11,419,420,421,156,439,441,442,443,444,445,446,198,200,448,449,450,201,159,160,163,164,165,166,167,168,211,22,170,171,172,23,212],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":418,"org.easymock.tests2.UsageTest.argumentsOrdered":7,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":461,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":272,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":227,"org.easymock.tests2.DelegateToTest.testReturnException":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":506,"org.easymock.tests.MockingTest.testPartialClassMocking":194,"org.easymock.tests.MockClassControlTest.testToString":101,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":232,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":54,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":333,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":214,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":159,"org.easymock.tests2.UsageTest.wrongArguments":5,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":495,"org.easymock.samples.ExampleTest.answerVsDelegate":220,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":100,"org.easymock.tests2.UsageConstraintsTest.testNull":115,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":381,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":183,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":489,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":321,"org.easymock.tests2.CaptureTest.testPrimitive":141,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":163,"org.easymock.tests.UsageTest.moreThanOneArgument":11,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":352,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":397,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":422,"org.easymock.tests.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageVarargTest.varargIntAccepted":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":466,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":267,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":303,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":453,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":205,"org.easymock.tests.ReplayStateInvalidUsageTest.times":391,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests2.DependencyTest.testClassMocking":278,"org.easymock.tests2.AnswerTest.answer":325,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":242,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":401,"org.easymock.tests2.CaptureTest.testAnd":138,"org.easymock.tests2.UsageTest.strictResetToDefault":270,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":396,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":316,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":426,"org.easymock.tests2.DelegateToTest.testDelegate":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":348,"org.easymock.tests.LimitationsTest.mockFinalMethod":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":431,"org.easymock.tests2.DependencyTest.testClassMockingSupport":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":173,"org.easymock.tests2.CaptureTest.testCapture1_2446744":142,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":240,"org.easymock.tests.UsageThrowableTest.throwError":439,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":385,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":403,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":268,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":399,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":68,"org.easymock.samples.PartialClassMockTest.testGetArea":177,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":386,"org.easymock.tests.MockingTest.testInterfaceMocking":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":525,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":55,"org.easymock.tests2.UsageTest.niceToStrict":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":42,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":180,"org.easymock.tests2.MockBuilderTest.testCreateMock":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":63,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":291,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":342,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":317,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":400,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":437,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":510,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":493,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":39,"org.easymock.tests.UsageOverloadedMethodTest.overloading":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":65,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":409,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":125,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":368,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":124,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":30,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":147,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":477,"org.easymock.tests.MockClassControlTest.testEquals":488,"org.easymock.tests2.EasyMockSupportClassTest.testAll":47,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":199,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":350,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":429,"org.easymock.tests2.CaptureTest.testCaptureAll":139,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":241,"org.easymock.tests.MockNameTest.defaultName":438,"org.easymock.tests2.UsageConstraintsTest.testMatches":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":398,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":383,"org.easymock.samples.ExampleTest.voteForRemovals":224,"org.easymock.tests.UsageVarargTest.allKinds":158,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":430,"org.easymock.samples.BasicClassMockTest.testPrintContent":179,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":445,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":509,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":264,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":299,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":434,"org.easymock.tests2.UsageConstraintsTest.greaterThan":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":48,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":415,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":95,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":29,"org.easymock.samples.ExampleTest.voteForRemoval":221,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":249,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":251,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":186,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":197,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":269,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":314,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":505,"org.easymock.tests2.CaptureTest.testCaptureFirst":151,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":315,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":412,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":364,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests2.CaptureTest.testCapture2_2446744":150,"org.easymock.tests2.UsageTest.moreThanOneArgument":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":484,"org.easymock.tests.GenericTest.testBridgedEquals":32,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":517,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":37,"org.easymock.tests.UsageExpectAndReturnTest.longType":360,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":427,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":312,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":351,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":413,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":133,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":395,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":354,"org.easymock.tests.UsageCallCountTest.tooManyCalls":518,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":210,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":365,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":444,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testNiceClassMocking":382,"org.easymock.tests.MockingTest.testClassMocking":378,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":511,"org.easymock.tests2.UsageConstraintsTest.testContains":123,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":189,"org.easymock.tests2.UsageConstraintsTest.testFind":114,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":450,"org.easymock.tests.MockTypeTest.fromEasyMockClass":402,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":519,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":109,"org.easymock.tests.UsageExpectAndReturnTest.object":367,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":292,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":320,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":479,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":215,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":503,"org.easymock.tests.UsageTest.exactCallCountByLastCall":421,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":41,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":497,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":423,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":74,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":474,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":408,"org.easymock.tests.MockClassControlTest.testHashCode":487,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":258,"org.easymock.tests2.EasyMockSupportTest.testVerify":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":57,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":204,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":424,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":436,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":406,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":239,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":154,"org.easymock.tests.UsageVarargTest.varargCharAccepted":478,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":432,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":473,"org.easymock.tests2.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":35,"org.easymock.tests.DefaultClassInstantiatorTest.object":24,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":435,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":501,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":58,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":257,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":187,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":339,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":374,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":353,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":66,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":206,"org.easymock.tests2.UsageTest.resumeIfFailure":276,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":99,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":508,"org.easymock.tests2.StubTest.stubWithReturnValue":309,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":80,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":366,"org.easymock.tests2.SerializationTest.testAllMockedMethod":106,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":175,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.samples.SupportTest.voteForRemovals":230,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":345,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":107,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":472,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":326,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":499,"org.easymock.tests.UsageExpectAndThrowTest.object":343,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":131,"org.easymock.tests2.DelegateToTest.testWrongClass":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":306,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":190,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":38,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":344,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":89,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":44,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":494,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":526,"org.easymock.tests2.CaptureTest.testCaptureNone":146,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.UsageVerifyTest.twoReturns":22,"org.easymock.tests.UsageVarargTest.varargByteAccepted":483,"org.easymock.tests2.ThreadingTest.testThreadSafe":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":61,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":515,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":504,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":178,"org.easymock.tests2.CaptureTest.testCapture_2617107":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":162,"org.easymock.tests2.UsageConstraintsTest.any":121,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":390,"org.easymock.tests2.StubTest.stub":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndThrowTest.longType":336,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":433,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":389,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":331,"org.easymock.tests2.SerializationTest.testClass":69,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":262,"org.easymock.tests.LimitationsTest.mockNativeMethod":201,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":285,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":332,"org.easymock.tests2.NameTest.nameForMocksControl":236,"org.easymock.tests2.MockedExceptionTest.testMockedException":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":49,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":420,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":196,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":237,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":337,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":182,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":90,"org.easymock.tests.MockingTest.testNicePartialClassMocking":195,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":185,"org.easymock.tests2.CompareToTest.testCompareEqual":176,"org.easymock.tests2.CaptureTest.testCaptureLast":145,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":283,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":118,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":132,"org.easymock.tests.MockingTest.testTwoMocks":193,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":357,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":341,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":136,"org.easymock.samples.ExampleTest.removeNonExistingDocument":225,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":387,"org.easymock.tests.UsageStrictMockTest.differentMethods":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":290,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":259,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":26,"org.easymock.tests2.ConstraintsToStringTest.andToString":207,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":252,"org.easymock.tests2.MockBuilderTest.testCreateMockString":93,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":51,"org.easymock.tests.UsageExpectAndThrowTest.floatType":335,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":46,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":328,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":231,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":60,"org.easymock.samples.ExampleTest.voteAgainstRemoval":222,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":524,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":188,"org.easymock.tests.LimitationsTest.privateConstructor":491,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":76,"org.easymock.tests2.UsageConstraintsTest.testNotNull":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":446,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":254,"org.easymock.tests2.UsageTest.defaultResetToNice":275,"org.easymock.samples.ExampleTest.voteAgainstRemovals":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":372,"org.easymock.tests.UsageVarargTest.differentLength":480,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":284,"org.easymock.tests2.CallbackTest.callback":282,"org.easymock.tests2.UsageConstraintsTest.equals":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":247,"org.easymock.tests.UsageTest.openCallCountByLastCall":419,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":161,"org.easymock.tests.UsageCallCountTest.tooFewCalls":513,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":496,"org.easymock.tests.UsageThrowableTest.throwCheckedException":443,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":9,"org.easymock.tests.MockingTest.testStrictClassMocking":377,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":157,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":98,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":289,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":392,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":311,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":34,"org.easymock.tests.ObjectMethodsTest.testHashCode":502,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":217,"org.easymock.tests2.NameTest.nameForNiceMock":235,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":253,"org.easymock.tests2.DependencyTest.testInterfaceMocking":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":216,"org.easymock.samples.ExampleTest.addDocument":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":67,"org.easymock.tests2.DelegateToTest.testStubDelegate":297,"org.easymock.tests2.AnswerTest.stubAnswer":33,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":172,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":244,"org.easymock.tests.UsageVarargTest.varargLongAccepted":482,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.floatType":359,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":375,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":73,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":72,"org.easymock.tests2.ConstraintsToStringTest.orToString":202,"org.easymock.tests.UsageThrowableTest.noUpperLimit":440,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":266,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":111,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":301,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":143,"org.easymock.tests2.SerializationTest.test":105,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":31,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":25,"org.easymock.tests2.UsageConstraintsTest.testSame":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":358,"org.easymock.samples.SupportTest.addDocument":229,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":310,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":52,"org.easymock.tests.GenericTest.testPackageScope":198,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":265,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":380,"org.easymock.tests2.NameTest.nameForMock":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":369,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":82,"org.easymock.tests2.UsageStrictMockTest.differentMethods":209,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":361,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":347,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":500,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":417,"org.easymock.tests2.MockedExceptionTest.testRealException":256,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":307,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":464,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":155,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":394,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":160,"org.easymock.tests2.NameTest.nameForStrictMock":234,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":243,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":36,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":305,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":130,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":27,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":87,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":313,"org.easymock.tests2.CaptureTest.testCaptureRightOne":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":56,"org.easymock.tests2.UsageConstraintsTest.testOr":117,"org.easymock.tests.UsageRangeTest.combination":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":70,"org.easymock.tests.UsageTest.wrongArguments":13,"org.easymock.tests2.MockBuilderTest.testWithConstructor":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":53,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":486,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":370,"org.easymock.tests.UsageVarargTest.varargShortAccepted":481,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":28,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":516,"org.easymock.tests2.UsageConstraintsTest.cmpTo":122,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":454,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests2.CaptureTest.testCaptureFromStub":149,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":384,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":88,"org.easymock.tests.UsageTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":514,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":81,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":371,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":521,"org.easymock.tests2.UsageConstraintsTest.constraints":112,"org.easymock.samples.ExampleTest.addAndChangeDocument":226,"org.easymock.tests2.ConstraintsToStringTest.notToString":203,"org.easymock.tests.UsageStrictMockTest.testVerify":523,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":228,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":520,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":428,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":166,"org.easymock.tests.LimitationsTest.abstractClass":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":363,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":318}}]
