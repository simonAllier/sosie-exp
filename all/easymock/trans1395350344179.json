[{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"key"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,74,121,75,76,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,62,155,63,64,65,66,67,68,156,69,71,72,157,73,158,159,160,161,162,163,164,165,166,167,168,2,5,6,7,8,11,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,13,14,17,18,19,20,22,23,24,186,187,77,78,188,189,190,191,192,79,80,193,194,25,26,27,195,196,28,29,30,31,197,32,33,34,198,35,39,42,52,58,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,85,86,219,87,88,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,89,90,91,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,92,267,93,268,269,94,95,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,96,320,321,322,323,324,325,326,327,328,329,330,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[75,78,79,80,85,87,90,91,332,267,93,94,95,96,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[106,106,107,107,109,113,114,162,163,165,166,167,168,2,5,6,7,8,10,11,13,14,15,17,18,19,20,22,23,24,27,28,29,30,31,32,33,34,35,39,42,52,58,210,211,333,1,334,252,253,254,335,336,337,258,338,339,340,341,342,343,344,345,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[346,347,348,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[90,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[106,106,107,107,109,113,114,350,351,352,353,354,355,162,163,165,166,167,168,356,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,0,210,211,333,1,357,358,359,360,361,362,363,364,365,334,252,253,254,366,336,337,367,368,258,369,338,339,340,341,342,343,344,345,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"classMockingDisabled","key":"classMockingDisabled"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[186,191,25,26,27,195,205,241,242,243,244,245,246,90,251,257,266,269,290,291,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,326,327,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[99,100,101,102,103,104,370,105,106,106,107,107,108,109,110,111,112,113,114,115,116,117,118,119,120,74,121,75,76,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,371,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,62,155,63,64,65,66,67,68,156,69,71,72,157,73,158,372,373,159,160,161,374,162,163,164,165,166,167,168,2,5,6,7,8,11,169,170,375,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,13,14,17,18,19,20,22,23,24,186,187,77,78,188,189,190,191,192,79,80,193,194,25,26,27,195,196,28,29,30,31,197,32,33,34,198,35,39,42,52,58,81,82,83,84,376,199,200,201,377,202,203,204,205,206,207,208,209,210,211,333,212,213,214,215,216,357,217,218,85,86,219,87,88,220,378,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,379,248,249,346,89,90,91,250,251,380,381,382,383,334,252,253,254,347,348,349,255,256,257,384,385,386,258,387,388,259,260,261,262,263,264,265,389,390,391,392,393,394,395,396,397,398,399,400,338,339,340,341,342,343,344,345,401,402,403,266,92,267,93,268,269,94,95,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,404,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,96,320,321,322,323,324,325,326,327,405,406,407,408,409,410,411,412,328,413,329,330,414,415,331],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[416],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[34,198,35,417],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[418,419,85,420,421,267],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[99,100,101,102,103,104,370,105,106,106,107,107,108,109,110,111,112,113,114,115,116,117,118,119,120,74,121,75,76,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,62,155,63,64,65,66,67,68,156,69,71,72,157,73,158,159,160,161,374,162,163,164,165,166,167,168,2,5,6,7,8,11,169,170,375,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,13,14,17,18,19,20,22,23,24,186,187,77,78,188,189,190,191,192,79,80,193,194,25,26,27,195,196,28,29,30,31,197,32,33,34,198,35,39,42,52,58,81,82,83,84,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,357,217,218,85,86,219,87,88,220,378,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,379,248,249,89,90,91,250,251,381,252,253,254,255,256,257,384,385,386,258,387,388,259,260,261,262,263,264,265,389,390,391,392,393,394,395,396,397,398,399,400,338,339,340,341,342,343,344,345,266,92,267,93,268,269,94,95,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,96,320,321,322,323,324,325,326,327,328,413,329,330,415,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[99,100,101,102,104,105,109,112,119,120,74,121,75,76,122,128,129,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,63,64,65,66,67,68,156,69,71,157,73,160,161,163,166,6,7,8,173,174,175,176,178,179,182,183,184,14,17,23,187,188,189,79,80,200,202,203,205,217,218,85,86,219,87,88,220,378,245,247,90,250,256,260,262,265,94,95,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,288,289,290,292,293,294,96,320,321,323,324,325,326,327],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[422],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[141],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[423],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[130,131,133,135,136,371,147,152,62,63,71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[147],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[372,160,161],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[34,198,35,417],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":131,"org.easymock.tests2.UsageTest.argumentsOrdered":80,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":266,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":183,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":189,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":110,"org.easymock.tests2.DelegateToTest.testReturnException":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":242,"org.easymock.tests.MockingTest.testPartialClassMocking":252,"org.easymock.tests.MockClassControlTest.testToString":340,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":346,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":46,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":300,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":116,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":137,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":208,"org.easymock.samples.ExampleTest.answerVsDelegate":100,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":337,"org.easymock.tests2.UsageConstraintsTest.testNull":133,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":182,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":345,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":292,"org.easymock.tests.UsageTest.moreThanOneArgument":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":319,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":214,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":405,"org.easymock.tests.UsageTest.argumentsOrdered":95,"org.easymock.tests.UsageVarargTest.varargIntAccepted":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":282,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":13,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":354,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":286,"org.easymock.tests.ReplayStateInvalidUsageTest.times":397,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests2.DependencyTest.testClassMocking":350,"org.easymock.tests2.AnswerTest.answer":158,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":371,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":126,"org.easymock.tests2.CaptureTest.testAnd":62,"org.easymock.tests2.UsageTest.strictResetToDefault":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":5,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":248,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":409,"org.easymock.tests2.DelegateToTest.testDelegate":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":315,"org.easymock.tests.LimitationsTest.mockFinalMethod":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":299,"org.easymock.tests2.DependencyTest.testClassMockingSupport":351,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":380,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":124,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":391,"org.easymock.tests.UsageThrowableTest.throwError":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":60,"org.easymock.samples.PartialClassMockTest.testGetArea":109,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":348,"org.easymock.tests2.UsageTest.niceToStrict":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":301,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":335,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":423,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":17,"org.easymock.tests2.MockBuilderTest.testCreateMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":55,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":418,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":309,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":178,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":412,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":206,"org.easymock.tests.UsageOverloadedMethodTest.overloading":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":57,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":142,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":232,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":255,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":141,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":97,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":69,"org.easymock.tests2.EasyMockSupportClassTest.testAll":39,"org.easymock.tests.MockClassControlTest.testEquals":344,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":211,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":317,"org.easymock.tests2.CaptureTest.testCaptureAll":155,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":297,"org.easymock.tests2.UsageConstraintsTest.testMatches":143,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":215,"org.easymock.samples.ExampleTest.voteForRemovals":104,"org.easymock.tests.UsageVarargTest.allKinds":281,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":89,"org.easymock.samples.BasicClassMockTest.testPrintContent":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":298,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":326,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":246,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":377,"org.easymock.tests2.UsageConstraintsTest.greaterThan":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":379,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":8,"org.easymock.samples.ExampleTest.voteForRemoval":101,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":363,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":170,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":168,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":287,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":175,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":241,"org.easymock.tests2.CaptureTest.testCaptureFirst":73,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":176,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":228,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.CaptureTest.testCapture2_2446744":157,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":23,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":280,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":264,"org.easymock.tests.UsageExpectAndReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":295,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":318,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":404,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":316,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":212,"org.easymock.tests.UsageCallCountTest.tooManyCalls":265,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":305,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":325,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":29,"org.easymock.tests.MockingTest.testNiceClassMocking":366,"org.easymock.tests.MockingTest.testClassMocking":365,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":388,"org.easymock.tests2.UsageConstraintsTest.testContains":140,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":27,"org.easymock.tests2.UsageConstraintsTest.testFind":132,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":257,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":118,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":217,"org.easymock.tests.UsageExpectAndReturnTest.object":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":2,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":181,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":275,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":386,"org.easymock.tests.UsageTest.exactCallCountByLastCall":270,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":250,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":406,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":237,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":271,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":329,"org.easymock.tests.MockClassControlTest.testHashCode":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":49,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":407,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":411,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":328,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":123,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":374,"org.easymock.tests.UsageVarargTest.varargCharAccepted":274,"org.easymock.tests2.CaptureTest.testCaptureMultiple":61,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":120,"org.easymock.tests2.UsageTest.openCallCountByLastCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":184,"org.easymock.tests.DefaultClassInstantiatorTest.object":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":410,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":384,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":6,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":306,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":58,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":341,"org.easymock.tests2.UsageTest.resumeIfFailure":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":336,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":244,"org.easymock.tests2.StubTest.stubWithReturnValue":205,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":151,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":230,"org.easymock.tests2.SerializationTest.testAllMockedMethod":35,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":382,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":419,"org.easymock.samples.SupportTest.voteForRemovals":112,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":312,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":417,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":383,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":372,"org.easymock.tests.UsageExpectAndThrowTest.object":310,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":148,"org.easymock.tests2.DelegateToTest.testWrongClass":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":293,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":294,"org.easymock.samples.ConstructorCalledMockTest.testTax":106,"org.easymock.tests.UsageStrictMockTest.range":87,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":311,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":19,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":36,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":207,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":420,"org.easymock.tests2.CaptureTest.testCaptureNone":156,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":349,"org.easymock.tests.UsageUnorderedTest.message":96,"org.easymock.tests.UsageVerifyTest.twoReturns":91,"org.easymock.tests.UsageVarargTest.varargByteAccepted":279,"org.easymock.tests2.ThreadingTest.testThreadSafe":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":53,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":262,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":113,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":291,"org.easymock.tests2.UsageConstraintsTest.any":138,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":396,"org.easymock.tests2.StubTest.stub":204,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":243,"org.easymock.tests.UsageExpectAndThrowTest.longType":303,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":395,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":121,"org.easymock.tests2.SerializationTest.testClass":34,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests.LimitationsTest.mockNativeMethod":258,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":240,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":333,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":122,"org.easymock.tests2.NameTest.nameForMocksControl":84,"org.easymock.tests2.MockedExceptionTest.testMockedException":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":41,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":269,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":416,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":304,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":20,"org.easymock.tests.MockingTest.testNicePartialClassMocking":253,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":167,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":381,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":149,"org.easymock.tests.MockingTest.testTwoMocks":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":308,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":153,"org.easymock.samples.ExampleTest.removeNonExistingDocument":370,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":393,"org.easymock.tests.UsageStrictMockTest.differentMethods":88,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":359,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":375,"org.easymock.tests2.MockBuilderTest.testCreateMockString":24,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":43,"org.easymock.tests.UsageExpectAndThrowTest.floatType":302,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":38,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":159,"org.easymock.tests.UsageVerifyTest.twoThrows":90,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":52,"org.easymock.samples.ExampleTest.voteAgainstRemoval":102,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":7,"org.easymock.tests.LimitationsTest.privateConstructor":368,"org.easymock.tests2.UsageConstraintsTest.testNotNull":152,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":327,"org.easymock.tests2.UsageTest.defaultResetToNice":192,"org.easymock.samples.ExampleTest.voteAgainstRemovals":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":236,"org.easymock.tests.UsageVarargTest.differentLength":276,"org.easymock.tests2.CallbackTest.callback":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":3,"org.easymock.tests.UsageTest.openCallCountByLastCall":268,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":290,"org.easymock.tests.UsageCallCountTest.tooFewCalls":260,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":209,"org.easymock.tests.UsageThrowableTest.throwCheckedException":324,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":421,"org.easymock.tests.MockingTest.testStrictClassMocking":364,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":32,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":251,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":30,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":197,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":161,"org.easymock.tests.ObjectMethodsTest.testHashCode":385,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests2.NameTest.nameForNiceMock":83,"org.easymock.tests2.DependencyTest.testInterfaceMocking":115,"org.easymock.samples.ExampleTest.addDocument":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.DelegateToTest.testStubDelegate":200,"org.easymock.tests2.AnswerTest.stubAnswer":160,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":86,"org.easymock.tests.UsageVarargTest.varargLongAccepted":278,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":220,"org.easymock.tests.UsageExpectAndReturnTest.floatType":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":107,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":414,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":146,"org.easymock.tests.UsageThrowableTest.noUpperLimit":321,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":129,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":352,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests2.SerializationTest.test":198,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":358,"org.easymock.tests2.UsageConstraintsTest.testSame":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":222,"org.easymock.samples.SupportTest.addDocument":111,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":44,"org.easymock.tests.GenericTest.testPackageScope":210,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":408,"org.easymock.tests2.NameTest.nameForMock":81,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":233,"org.easymock.tests2.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":4,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":249,"org.easymock.tests2.MockedExceptionTest.testRealException":195,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":74,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":289,"org.easymock.tests2.NameTest.nameForStrictMock":82,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":16,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":355,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":147,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":14,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":154,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":98,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":48,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.UsageConstraintsTest.testOr":135,"org.easymock.tests.UsageRangeTest.combination":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":163,"org.easymock.tests.UsageTest.wrongArguments":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":45,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":234,"org.easymock.tests.UsageVarargTest.varargShortAccepted":277,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":362,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":263,"org.easymock.tests2.UsageConstraintsTest.cmpTo":139,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":373,"org.easymock.tests2.CompareToTest.testLessThan":422,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":390,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":15,"org.easymock.tests.UsageTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":85,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":235,"org.easymock.tests2.CaptureTest.testCapture":70,"org.easymock.tests2.UsageConstraintsTest.constraints":130,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":219,"org.easymock.samples.ExampleTest.addAndChangeDocument":105,"org.easymock.tests.UsageStrictMockTest.testVerify":378,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":108,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":296,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":284,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":227,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":179,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":272}}]
