[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:119","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[93],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[94,28,30,95,96,97,98,99,100,83,85,101,102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[103],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[93],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[104,105,106,107,108,109,110,111,112],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:81","sourceCode":"org.easymock.internal.Results.getMainInterval()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[113,114,115,116,117,118],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[59,60,65,70,78,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[105,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1039","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[94,28,29,30,96,97,98,119,120,121,122,123,100,83,84,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[124,125,7,126,127,8,9,128,10,11,129,12,130,131,132,133,134,0,1,2,135,136,137,138,13,14,15,16,17,18,139,19,140,20,21,22,23,24,141,142,143,144,145,146,147,148,149,150,151,152,153,25,154,155,156,157,158,159,160,161,26,162,27,163,164,165,166,94,167,168,169,170,171,172,173,174,175,176,177,178,104,105,179,180,181,106,107,182,183,184,185,186,187,188,189,190,191,109,192,4,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,28,213,29,30,95,31,32,33,34,35,36,37,38,39,40,41,214,215,42,43,216,44,45,217,46,218,110,219,111,220,221,222,223,224,225,226,112,227,228,229,230,47,48,49,50,51,52,53,54,55,231,232,233,234,235,236,56,57,58,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,96,97,98,59,60,61,62,63,64,252,253,65,66,254,67,68,69,255,70,71,72,73,74,256,257,258,99,259,260,75,261,262,263,264,123,77,78,265,100,117,266,267,268,269,270,271,79,272,273,274,275,276,277,278,279,280,80,281,282,283,284,285,286,287,81,288,103,289,290,118,83,291,84,85,101,292,86,87,88,89,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:168","sourceCode":"org.easymock.internal.matchers.Captures<?>.validateCapture()","type":"CtInvocationImpl"},"failures":[110,219,111,220,221,222,223,224,226,112,227,228,229],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[124,132,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[156,165,171,235,97,258,263,265,268,282,367,368,369,314,316,317,318,319,320,321,370,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[124,125,7,126,127,9,128,10,11,129,12,131,132,0,1,14,17,21,23,24,143,144,145,151,152,153,154,155,156,157,162,27,163,164,165,166,94,168,169,170,171,175,176,105,180,106,107,195,198,199,200,201,202,203,204,206,207,208,209,212,28,213,29,30,95,214,43,44,45,110,219,224,225,112,229,230,47,48,49,50,51,231,232,233,234,235,236,241,242,243,244,245,247,248,249,250,251,96,97,98,59,60,61,62,63,64,252,253,65,66,254,67,68,69,255,70,71,72,73,74,256,257,258,75,261,262,263,264,123,77,78,265,100,267,268,271,80,281,282,288,290,83,291,84,85,101,86,87,88,89,293,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,345],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[103,5,371,372,6,373],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[139,374,147,39,215,216],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[186],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:557","failures":[7,8,9,128,10,11,12,131,133,133,134,134,0,1,13,14,15,16,17,18,19,20,21,22,23,24,141,142,143,375,376,144,145,146,147,148,149,150,151,152,153,25,154,155,156,157,26,377,162,27,163,378,164,165,166,94,168,170,171,172,175,176,177,178,104,105,179,180,181,106,107,182,183,184,185,186,187,188,189,190,191,109,192,4,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,28,29,30,31,32,33,34,35,36,37,38,39,40,41,214,42,43,44,45,46,110,219,220,221,224,225,226,112,227,228,229,230,47,48,49,50,51,52,53,54,55,231,232,233,234,235,236,56,57,58,96,97,98,59,60,61,62,63,64,252,253,65,66,254,67,68,69,255,70,71,72,73,74,379,380,381,382,383,256,257,258,99,260,75,261,262,263,264,76,123,77,78,265,100,267,268,271,79,274,80,281,282,81,82,83,84,85,86,87,88,89,293,384,90,385,307,386,91,92,387,388,389,367,368,369,314,315,316,317,318,319,320,321,390,391,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,392,345,346],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[393,394,395,396,397,398,399],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[377,27,400],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[401],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[168],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[124,125,7,126,127,8,9,128,10,11,129,12,131,132,133,133,134,134,0,1,2,13,14,15,16,17,18,19,140,20,21,22,23,24,141,142,143,375,376,144,145,146,147,148,149,150,151,152,153,25,154,155,156,157,158,159,160,161,26,377,162,27,163,378,164,165,166,94,167,168,169,170,171,172,173,174,175,176,177,178,104,105,179,180,181,106,107,182,108,183,184,185,186,187,188,189,190,191,109,192,4,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,28,213,29,30,95,31,32,33,34,35,36,37,38,39,40,41,214,215,42,43,44,45,46,110,219,111,220,221,222,223,224,225,226,112,227,228,229,230,47,48,49,50,51,52,53,54,55,231,232,233,234,235,236,402,56,57,58,237,241,242,243,244,245,246,247,248,249,250,251,96,97,98,59,60,61,62,63,64,252,253,65,66,254,67,68,69,255,70,71,72,73,74,379,380,381,382,383,256,403,257,258,404,99,259,260,75,261,262,263,264,76,123,77,78,265,100,117,266,267,268,269,270,271,79,272,274,275,276,277,279,280,80,281,282,81,288,82,289,290,118,83,291,84,85,101,292,86,87,88,89,293,90,386,91,92,387,388,389,367,368,369,314,315,316,317,318,319,320,321,390,391,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,405,392,345,346],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[147,148,149,150,156,165,171,231,232,233,234,235,236,97,262,263,265,268,282,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[406,110,111,220,221,222,223,224,226,407,112,227,229],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[124,125,7,126,127,8,9,128,10,11,129,12,130,131,132,133,133,134,134,0,1,2,135,136,137,138,13,14,15,16,17,18,139,19,408,409,140,20,21,22,410,23,24,141,411,142,143,375,376,144,145,146,147,148,149,150,151,152,153,25,154,155,156,412,413,414,415,416,347,348,349,417,350,157,351,352,353,354,355,356,418,26,393,377,162,27,163,378,164,165,166,94,167,168,169,170,171,172,173,174,175,176,177,178,104,105,419,179,180,181,106,107,182,108,183,184,185,186,187,188,189,190,191,109,192,4,193,194,195,196,197,198,199,200,202,203,205,207,208,209,210,211,212,28,213,29,30,95,33,34,35,36,420,38,421,39,422,423,424,425,426,427,40,428,429,41,430,431,357,358,359,432,360,214,361,362,363,364,365,366,42,433,43,216,44,434,217,110,219,111,220,221,222,223,224,225,226,112,227,228,229,230,47,48,49,50,51,52,53,54,55,231,232,233,234,235,236,435,436,402,56,57,437,58,438,439,440,237,238,239,240,241,242,243,441,244,245,246,247,248,249,250,251,96,97,98,59,60,61,62,63,64,252,253,65,66,254,67,68,69,255,70,71,72,73,74,442,379,380,381,382,383,256,403,257,258,404,99,259,260,75,261,262,263,264,76,123,77,78,265,100,117,266,267,268,269,270,271,443,444,79,445,272,273,274,275,276,277,278,279,280,80,281,282,283,284,285,286,287,93,81,288,82,446,103,5,371,372,447,6,373,289,290,118,83,291,84,85,101,292,86,87,88,89,293,384,90,385,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,386,91,92,387,388,389,367,368,369,314,315,316,317,318,319,320,321,448,449,450,370,451,452,453,454,455,456,400,457,458,459,460,461,390,462,463,464,465,466,391,467,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,468,469,470,471,342,343,344,472,473,405,392,102,345,346],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[474,475,476],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":105,"org.easymock.tests2.UsageTest.argumentsOrdered":174,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":265,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":400,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":169,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":124,"org.easymock.tests2.DelegateToTest.testReturnException":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":232,"org.easymock.tests.MockingTest.testPartialClassMocking":56,"org.easymock.tests.MockClassControlTest.testToString":296,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":418,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":374,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":322,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":119,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":395,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":182,"org.easymock.tests2.UsageTest.wrongArguments":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":75,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":239,"org.easymock.samples.ExampleTest.answerVsDelegate":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":469,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":439,"org.easymock.tests2.UsageConstraintsTest.testNull":180,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":16,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":207,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":301,"org.easymock.tests2.CaptureTest.testPrimitive":220,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":264,"org.easymock.tests.UsageTest.moreThanOneArgument":100,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":341,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":88,"org.easymock.tests.UsageTest.argumentsOrdered":270,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":379,"org.easymock.tests.UsageVarargTest.varargIntAccepted":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":399,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":215,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":355,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":51,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":214,"org.easymock.tests.ReplayStateInvalidUsageTest.times":310,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":401,"org.easymock.tests2.AnswerTest.answer":143,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":462,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":138,"org.easymock.tests2.CaptureTest.testAnd":110,"org.easymock.tests2.UsageTest.strictResetToDefault":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":87,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":202,"org.easymock.tests2.DelegateToTest.testDelegate":164,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":383,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":337,"org.easymock.tests.LimitationsTest.mockFinalMethod":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":405,"org.easymock.tests2.CaptureTest.testCapture1_2446744":221,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":136,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":304,"org.easymock.tests.UsageThrowableTest.throwError":314,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":431,"org.easymock.samples.PartialClassMockTest.testGetArea":8,"org.easymock.tests.MockingTest.testInterfaceMocking":437,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":91,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":473,"org.easymock.tests2.UsageTest.niceToStrict":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":323,"org.easymock.tests2.ThreadingTest.testChangeDefault":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":43,"org.easymock.tests2.MockBuilderTest.testCreateMock":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":331,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":203,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":237,"org.easymock.tests.UsageOverloadedMethodTest.overloading":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":187,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":258,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":67,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":80,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":186,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":226,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":441,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.MockClassControlTest.testEquals":300,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":137,"org.easymock.tests2.CaptureTest.testCaptureAll":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":285,"org.easymock.tests.MockNameTest.defaultName":442,"org.easymock.tests2.UsageConstraintsTest.testMatches":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":89,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":302,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests.UsageVarargTest.allKinds":251,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":96,"org.easymock.samples.BasicClassMockTest.testPrintContent":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":320,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":352,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":378,"org.easymock.tests2.UsageConstraintsTest.greaterThan":190,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":53,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":22,"org.easymock.samples.ExampleTest.voteForRemoval":10,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":410,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":152,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":139,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":260,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":200,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":231,"org.easymock.tests2.CaptureTest.testCaptureFirst":229,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":201,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":176,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":253,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":25,"org.easymock.tests2.UsageTest.moreThanOneArgument":94,"org.easymock.tests2.CaptureTest.testCapture2_2446744":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":463,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":46,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":250,"org.easymock.tests.GenericTest.testBridgedEquals":446,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":279,"org.easymock.tests.UsageExpectAndReturnTest.longType":62,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":283,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":340,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":76,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":193,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":86,"org.easymock.tests.UsageCallCountTest.tooManyCalls":280,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":274,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":319,"org.easymock.tests.MockingTest.testNiceClassMocking":440,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":32,"org.easymock.tests.MockingTest.testClassMocking":436,"org.easymock.tests2.UsageConstraintsTest.testContains":185,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":273,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":149,"org.easymock.tests2.UsageConstraintsTest.testFind":179,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":282,"org.easymock.tests.MockTypeTest.fromEasyMockClass":468,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":142,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":289,"org.easymock.tests.UsageExpectAndReturnTest.object":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":396,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":245,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":344,"org.easymock.tests.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":393,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":71,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":257,"org.easymock.tests.MockClassControlTest.testHashCode":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":348,"org.easymock.tests2.EasyMockSupportTest.testVerify":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":425,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":381,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":135,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":412,"org.easymock.tests.UsageVarargTest.varargCharAccepted":244,"org.easymock.tests2.CaptureTest.testCaptureMultiple":406,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastCall":170,"org.easymock.tests.DefaultClassInstantiatorTest.object":103,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":209,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":367,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":426,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":317,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":432,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":347,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":20,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":72,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":297,"org.easymock.tests2.UsageTest.resumeIfFailure":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":234,"org.easymock.tests2.StubTest.stubWithReturnValue":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":394,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":66,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":194,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":390,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":114,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":417,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":334,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":391,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":375,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":385,"org.easymock.tests.UsageExpectAndThrowTest.object":332,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":192,"org.easymock.tests2.DelegateToTest.testWrongClass":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":78,"org.easymock.samples.ConstructorCalledMockTest.testTax":133,"org.easymock.tests.UsageStrictMockTest.range":84,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":415,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":333,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":420,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":269,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":115,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":92,"org.easymock.tests2.CaptureTest.testCaptureNone":225,"org.easymock.tests.UsageUnorderedTest.message":123,"org.easymock.tests.UsageVerifyTest.twoReturns":98,"org.easymock.tests.UsageVarargTest.varargByteAccepted":249,"org.easymock.tests2.ThreadingTest.testThreadSafe":151,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":277,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":472,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":126,"org.easymock.tests2.CaptureTest.testCapture_2617107":111,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":263,"org.easymock.tests2.UsageConstraintsTest.any":183,"org.easymock.tests2.StubTest.stub":155,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":233,"org.easymock.tests.UsageExpectAndThrowTest.longType":325,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":447,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":308,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":213,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":157,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":79,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":74,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":359,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":95,"org.easymock.tests2.NameTest.nameForMocksControl":161,"org.easymock.tests2.MockedExceptionTest.testMockedException":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":421,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":268,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":411,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":326,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":13,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":57,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":18,"org.easymock.tests2.CaptureTest.testCaptureLast":224,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":357,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":392,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":107,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":4,"org.easymock.tests.MockingTest.testTwoMocks":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":330,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":173,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":196,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":476,"org.easymock.samples.ExampleTest.removeNonExistingDocument":130,"org.easymock.tests.UsageStrictMockTest.differentMethods":85,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":349,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":371,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":153,"org.easymock.tests2.MockBuilderTest.testCreateMockString":218,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":294,"org.easymock.tests.UsageExpectAndThrowTest.floatType":324,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":189,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":144,"org.easymock.tests.UsageVerifyTest.twoThrows":97,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":40,"org.easymock.samples.ExampleTest.voteAgainstRemoval":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":386,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":21,"org.easymock.tests.LimitationsTest.privateConstructor":444,"org.easymock.tests2.UsageConstraintsTest.testNotNull":195,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":321,"org.easymock.tests2.UsageTest.defaultResetToNice":172,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":70,"org.easymock.tests.UsageVarargTest.differentLength":246,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":358,"org.easymock.tests2.CallbackTest.callback":230,"org.easymock.tests2.UsageConstraintsTest.equals":419,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":408,"org.easymock.tests.UsageTest.openCallCountByLastCall":267,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":262,"org.easymock.tests.UsageCallCountTest.tooFewCalls":275,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":240,"org.easymock.tests.UsageThrowableTest.throwCheckedException":318,"org.easymock.tests.MockingTest.testStrictClassMocking":435,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":116,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":346,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":35,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":146,"org.easymock.tests.ObjectMethodsTest.testHashCode":343,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":398,"org.easymock.tests2.NameTest.nameForNiceMock":160,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":154,"org.easymock.tests2.DependencyTest.testInterfaceMocking":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":397,"org.easymock.samples.ExampleTest.addDocument":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.DelegateToTest.testStubDelegate":27,"org.easymock.tests2.AnswerTest.stubAnswer":145,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":83,"org.easymock.tests.UsageVarargTest.varargLongAccepted":248,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.floatType":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":26,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":134,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":404,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":191,"org.easymock.tests.UsageThrowableTest.noUpperLimit":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":354,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":178,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":413,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":222,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":5,"org.easymock.tests2.UsageConstraintsTest.testSame":181,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":60,"org.easymock.samples.SupportTest.addDocument":125,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":422,"org.easymock.tests.GenericTest.testPackageScope":81,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":353,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":438,"org.easymock.tests2.NameTest.nameForMock":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":68,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":409,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":336,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":471,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":55,"org.easymock.tests2.MockedExceptionTest.testRealException":150,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":459,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":261,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":313,"org.easymock.tests2.NameTest.nameForStrictMock":159,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":433,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":414,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":120,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":109,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":372,"org.easymock.tests.ErrorMessageTest.testGetters":121,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.UsageConstraintsTest.lessThan":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":424,"org.easymock.tests2.CaptureTest.testCaptureRightOne":112,"org.easymock.tests2.UsageConstraintsTest.testOr":106,"org.easymock.tests.UsageRangeTest.combination":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":14,"org.easymock.tests.UsageTest.wrongArguments":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":423,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":69,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":6,"org.easymock.tests.UsageVarargTest.varargShortAccepted":247,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":278,"org.easymock.tests2.UsageConstraintsTest.cmpTo":184,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":370,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":171,"org.easymock.tests2.CaptureTest.testCaptureFromStub":227,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":303,"org.easymock.tests.UsageTest.unexpectedCallWithArray":117,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":118,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":255,"org.easymock.tests2.CaptureTest.testCapture":407,"org.easymock.tests2.UsageConstraintsTest.constraints":104,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.samples.ExampleTest.addAndChangeDocument":131,"org.easymock.tests.UsageStrictMockTest.testVerify":292,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":132,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":284,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":49,"org.easymock.tests.LimitationsTest.abstractClass":443,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":252,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":50,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":204,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":242}}]
