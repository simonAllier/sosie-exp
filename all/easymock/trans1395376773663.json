[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,0,26,27,28,29,30,31,1,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,2,101,102,103,104,105,106,3,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[47,48,244,271,272],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[484],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[70,72,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,0,26,27,28,29,30,31,1,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,2,101,102,103,104,105,106,3,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,182,183,184,185,187,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[140,146,158],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:124","sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"position":"org.easymock.internal.RecordState:108","failures":[136,198,205,245,258,260,261,262,263,264,265,297,356,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,401,405,475,480],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[255,256,354,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[316,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[140,145,148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[152,268,417],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[56,60,185,194,292,486,304,437,438,439],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[47,201,207,208,245,246,487,488,268,271,359,380,477,478,481,482],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[40,41,50,489,490,491,492,493,186,189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[149,390],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[121],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":140,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":475,"org.easymock.tests2.UsageTest.argumentsOrdered":208,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":457,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":203,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":16,"org.easymock.tests2.DelegateToTest.testReturnException":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":294,"org.easymock.tests.MockingTest.testPartialClassMocking":428,"org.easymock.tests.MockClassControlTest.testToString":437,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":166,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":360,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":398,"org.easymock.tests2.UsageTest.wrongArguments":201,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":242,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":304,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":433,"org.easymock.tests2.UsageConstraintsTest.testNull":143,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":80,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":131,"org.easymock.tests2.CaptureTest.testPrimitive":66,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":402,"org.easymock.tests.UsageTest.moreThanOneArgument":476,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":379,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":422,"org.easymock.tests.UsageTest.argumentsOrdered":482,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":385,"org.easymock.tests.UsageVarargTest.varargIntAccepted":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":247,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":109,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":251,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":30,"org.easymock.tests.ReplayStateInvalidUsageTest.times":349,"org.easymock.tests2.DependencyTest.testClassMocking":36,"org.easymock.tests2.AnswerTest.answer":171,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":464,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":115,"org.easymock.tests2.CaptureTest.testAnd":63,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":301,"org.easymock.tests2.UsageTest.strictResetToDefault":199,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":421,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":126,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":389,"org.easymock.tests2.DelegateToTest.testDelegate":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":375,"org.easymock.tests.LimitationsTest.mockFinalMethod":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":397,"org.easymock.tests2.DependencyTest.testClassMockingSupport":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":255,"org.easymock.tests2.CaptureTest.testCapture1_2446744":67,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":84,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":113,"org.easymock.tests.UsageThrowableTest.throwError":258,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":343,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":303,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":486,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":235,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.MockingTest.testInterfaceMocking":430,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":248,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":238,"org.easymock.tests2.UsageTest.niceToStrict":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":222,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":183,"org.easymock.tests2.MockBuilderTest.testCreateMock":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":369,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":127,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":446,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":240,"org.easymock.tests.UsageOverloadedMethodTest.overloading":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":153,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":356,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":403,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":484,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":152,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":72,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":409,"org.easymock.tests.MockClassControlTest.testEquals":441,"org.easymock.tests2.EasyMockSupportClassTest.testAll":214,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":114,"org.easymock.tests2.CaptureTest.testCaptureAll":64,"org.easymock.tests.MockNameTest.defaultName":392,"org.easymock.tests2.UsageConstraintsTest.testMatches":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":423,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":341,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":417,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":396,"org.easymock.samples.BasicClassMockTest.testPrintContent":19,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":264,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":43,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":120,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":493,"org.easymock.tests2.UsageConstraintsTest.greaterThan":156,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":215,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":472,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":91,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":286,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":22,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":92,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":83,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":443,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":198,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":124,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":293,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":116,"org.easymock.tests2.CaptureTest.testCaptureFirst":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":125,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":328,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":24,"org.easymock.tests2.CaptureTest.testCapture2_2446744":75,"org.easymock.tests2.UsageTest.moreThanOneArgument":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":465,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":191,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":416,"org.easymock.tests.GenericTest.testBridgedEquals":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":314,"org.easymock.tests.UsageExpectAndReturnTest.longType":324,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":393,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":378,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":161,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":420,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":276,"org.easymock.tests.UsageCallCountTest.tooManyCalls":315,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":329,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":263,"org.easymock.tests.MockingTest.testNiceClassMocking":434,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":55,"org.easymock.tests.MockingTest.testClassMocking":426,"org.easymock.tests2.UsageConstraintsTest.testContains":151,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":308,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":99,"org.easymock.tests2.UsageConstraintsTest.testFind":142,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":405,"org.easymock.tests.MockTypeTest.fromEasyMockClass":302,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":96,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":266,"org.easymock.tests.UsageExpectAndReturnTest.object":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":490,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":411,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":290,"org.easymock.tests.UsageTest.exactCallCountByLastCall":483,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":386,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":41,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":406,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":337,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":355,"org.easymock.tests.MockClassControlTest.testHashCode":440,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":101,"org.easymock.tests2.EasyMockSupportTest.testVerify":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":224,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":387,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":445,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":112,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":111,"org.easymock.tests.UsageVarargTest.varargCharAccepted":410,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":278,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":470,"org.easymock.tests2.UsageTest.openCallCountByLastCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":133,"org.easymock.tests.DefaultClassInstantiatorTest.object":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":444,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":288,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":367,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":261,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":28,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":366,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":275,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":233,"org.easymock.tests2.UsageTest.resumeIfFailure":209,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":296,"org.easymock.tests2.StubTest.stubWithReturnValue":136,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":330,"org.easymock.tests2.SerializationTest.testAllMockedMethod":52,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":463,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":103,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":372,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":469,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":172,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":254,"org.easymock.tests.UsageExpectAndThrowTest.object":370,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":159,"org.easymock.tests2.DelegateToTest.testWrongClass":119,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":418,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":419,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests.UsageStrictMockTest.range":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":196,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":54,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":371,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":185,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":211,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":241,"org.easymock.tests2.CaptureTest.testCaptureNone":71,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":239,"org.easymock.tests.UsageUnorderedTest.message":380,"org.easymock.tests.UsageVerifyTest.twoReturns":246,"org.easymock.tests.UsageVarargTest.varargByteAccepted":415,"org.easymock.tests2.ThreadingTest.testThreadSafe":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":228,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":312,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":18,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":65,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":401,"org.easymock.tests2.UsageConstraintsTest.any":149,"org.easymock.tests2.StubTest.stub":135,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":348,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":295,"org.easymock.tests.UsageExpectAndThrowTest.longType":363,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":283,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":347,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests2.SerializationTest.testClass":50,"org.easymock.tests.LimitationsTest.mockNativeMethod":383,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":27,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":49,"org.easymock.tests2.NameTest.nameForMocksControl":170,"org.easymock.tests2.MockedExceptionTest.testMockedException":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":216,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":480,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":431,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":364,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":77,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":187,"org.easymock.tests.MockingTest.testNicePartialClassMocking":429,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":0,"org.easymock.tests2.CaptureTest.testCaptureLast":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":256,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":61,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":160,"org.easymock.tests.MockingTest.testTwoMocks":427,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":321,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":368,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":207,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":164,"org.easymock.samples.ExampleTest.removeNonExistingDocument":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":1,"org.easymock.tests.UsageStrictMockTest.differentMethods":272,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":102,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":281,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":23,"org.easymock.tests2.MockBuilderTest.testCreateMockString":193,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":218,"org.easymock.tests.UsageExpectAndThrowTest.floatType":362,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":213,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":42,"org.easymock.tests.UsageVerifyTest.twoThrows":245,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":227,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":237,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":90,"org.easymock.tests.LimitationsTest.privateConstructor":382,"org.easymock.tests2.UsageConstraintsTest.testNotNull":163,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":265,"org.easymock.tests2.UsageTest.defaultResetToNice":206,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":336,"org.easymock.tests.UsageVarargTest.differentLength":412,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":26,"org.easymock.tests2.CallbackTest.callback":53,"org.easymock.tests2.UsageConstraintsTest.equals":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":86,"org.easymock.tests.UsageTest.openCallCountByLastCall":479,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":400,"org.easymock.tests.UsageCallCountTest.tooFewCalls":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":243,"org.easymock.tests.UsageThrowableTest.throwCheckedException":262,"org.easymock.tests.MockingTest.testStrictClassMocking":425,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":391,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":31,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":56,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":350,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":59,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":176,"org.easymock.tests.ObjectMethodsTest.testHashCode":289,"org.easymock.tests2.NameTest.nameForNiceMock":169,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":25,"org.easymock.tests2.DependencyTest.testInterfaceMocking":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":491,"org.easymock.samples.ExampleTest.addDocument":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":229,"org.easymock.tests2.DelegateToTest.testStubDelegate":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":234,"org.easymock.tests2.AnswerTest.stubAnswer":175,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":269,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":188,"org.easymock.tests.UsageVarargTest.varargLongAccepted":414,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.floatType":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":40,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":108,"org.easymock.tests.UsageThrowableTest.noUpperLimit":259,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":138,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":194,"org.easymock.tests2.SerializationTest.test":51,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":68,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":280,"org.easymock.tests2.UsageConstraintsTest.testSame":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":322,"org.easymock.samples.SupportTest.addDocument":4,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":58,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":219,"org.easymock.tests.GenericTest.testPackageScope":317,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":107,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":432,"org.easymock.tests2.NameTest.nameForMock":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":333,"org.easymock.tests2.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":87,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":374,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":474,"org.easymock.tests2.MockedExceptionTest.testRealException":100,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":197,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":460,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":399,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":352,"org.easymock.tests2.NameTest.nameForStrictMock":168,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":182,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":81,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":195,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":158,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":282,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":179,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":123,"org.easymock.tests2.CaptureTest.testCaptureRightOne":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":223,"org.easymock.tests2.UsageConstraintsTest.testOr":145,"org.easymock.tests.UsageRangeTest.combination":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":78,"org.easymock.tests.UsageTest.wrongArguments":478,"org.easymock.tests2.MockBuilderTest.testWithConstructor":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":220,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":334,"org.easymock.tests.UsageVarargTest.varargShortAccepted":413,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":284,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":313,"org.easymock.tests2.UsageConstraintsTest.cmpTo":150,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":450,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":205,"org.easymock.tests2.CaptureTest.testCaptureFromStub":74,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":342,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":180,"org.easymock.tests.UsageTest.unexpectedCallWithArray":477,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":268,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":335,"org.easymock.tests2.CaptureTest.testCapture":485,"org.easymock.tests2.UsageConstraintsTest.constraints":139,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":270,"org.easymock.samples.ExampleTest.addAndChangeDocument":13,"org.easymock.tests.UsageStrictMockTest.testVerify":274,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":20,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":394,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":327,"org.easymock.tests.LimitationsTest.abstractClass":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":250,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":128}}]
