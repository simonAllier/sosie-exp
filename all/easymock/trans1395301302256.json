[{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,175,176,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"actualTypeArgument","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[0,1,2,324,325,3,326,327,328,329,330,331,4,5,6,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,332,333,334,335,336,337,338,339,340,341,72,73,75,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,342,343,344,127,128,129,130,131,132,345,346,347,348,349,350,351,352,353,354,355,356,357,133,134,135,136,137,138,139,140,141,142,143,144,358,153,154,155,156,157,158,159,160,161,359,162,163,164,165,166,167,360,169,170,171,172,361,173,362,174,363,364,365,177,180,199,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,244,245,246,247,248,249,250,251,252,253,254,255,256,366,367,257,258,259,260,261,262,263,264,265,266,368,369,370,371,267,268,372,373,374,269,270,271,272,273,274,275,276,277,278,279,280,375,376,377,378,379,380,381,382,383,281,282,384,385,386,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,387,318,388,319,320,321,322,323],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[42,130,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[221],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[390,391],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:252","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[392],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[219,393],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[64,66,69,70,127,394,395,396,153,154,155,162,163,165,166,246,247,253,254,376,377,378,379,319,321,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[213,219,231,393],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[182,221,249],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[397,77,78,79,80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[398,304,305,306,307,308,309,310,311,313,314,315,316,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[399,400,74,401,397,77,78,80,402,403,123,124,125,126,404,345,390,405,406,407,391,408,145,409,146,147,148,149,150,151,152,168,175,176,410,411,178,179,181,182,183,184,185,412,186,187,188,189,413,190,414,191,415,416,417,418,419,420,421,422,195,196,197,198,200,201,423,424,425,284,285,286],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[426,232,233,423],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[206,212,304,306,314],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[427],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"shouldFillInStackTrace"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[307],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[397,80],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[207,208],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,324,325,3,326,327,328,329,330,331,4,5,6,7,428,429,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,430,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,332,333,334,431,335,336,337,338,339,340,341,72,432,73,433,399,400,74,401,75,76,397,77,78,79,80,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,81,450,451,452,453,454,82,455,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,402,403,123,124,125,342,126,343,344,404,127,128,129,130,131,132,456,345,390,405,406,407,391,457,408,346,347,348,349,350,351,352,353,354,355,356,357,133,134,135,136,137,138,139,140,141,142,143,144,358,145,409,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,359,162,163,164,165,166,167,360,168,169,170,171,172,361,173,362,174,175,176,363,364,365,177,410,411,178,179,180,181,182,183,184,458,185,459,412,186,187,188,189,413,190,414,460,461,191,462,415,192,416,417,463,464,418,465,392,419,466,193,420,421,467,468,422,194,469,470,195,196,197,198,471,199,200,201,472,202,473,203,204,205,206,207,474,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,423,234,475,235,236,389,476,237,238,239,477,240,478,479,241,242,480,243,244,245,246,247,248,249,250,251,252,253,254,255,256,424,481,482,483,425,366,367,257,258,259,260,261,262,263,264,265,266,368,369,370,484,371,267,268,372,373,485,486,374,269,270,271,272,273,274,275,276,277,278,279,280,375,487,376,377,378,379,380,381,382,488,383,281,282,384,385,489,490,386,283,491,492,284,285,286,287,288,289,290,291,292,293,294,295,493,494,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,387,318,388,319,320,321,322,323],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[474],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[495,496,65,162,497,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[496,499,500,64,127,143,144,153,154,155,163,165,166,246,501,497,502,503,504,505,319,321,322],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[218],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[495,496,65,162,497,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[426,232,233,423],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[432,433,351,292],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[304,306,307,308,309,310,311,313,506,314,315,317],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[507,508,509,510,511,512],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[7,10,79,168,184,232,234,513,235,236,237,238,239,240,241,242,514,515,243],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[64,127,394,395,516,396,153,154,155,163,165,166,246,319,321,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[347,357],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[54,74,124,125,126,168,178,180,181,183,191,192,193,194,195,196,197,198,199,200,201,235,237,239,240,242,283,292,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[426,232,233,423],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[38,39,40,41,42,43,76,130,284,285,286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[72,209,227,292],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[517,518,519,393,520],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":207,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.UsageTest.argumentsOrdered":254,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":444,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":249,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":363,"org.easymock.tests2.DelegateToTest.testReturnException":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":39,"org.easymock.tests.MockingTest.testPartialClassMocking":124,"org.easymock.tests.MockClassControlTest.testToString":146,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":487,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":83,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":192,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":394,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":297,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":128,"org.easymock.tests2.UsageTest.wrongArguments":247,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":36,"org.easymock.samples.ExampleTest.answerVsDelegate":170,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":10,"org.easymock.tests2.UsageConstraintsTest.testNull":209,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":344,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":181,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":278,"org.easymock.tests2.CaptureTest.testPrimitive":307,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":102,"org.easymock.tests.UsageTest.moreThanOneArgument":64,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":139,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":156,"org.easymock.tests.UsageTest.argumentsOrdered":70,"org.easymock.tests.UsageVarargTest.varargIntAccepted":334,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":53,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":482,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":57,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests.ReplayStateInvalidUsageTest.times":354,"org.easymock.tests2.DependencyTest.testClassMocking":493,"org.easymock.tests2.AnswerTest.answer":257,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":450,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":266,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":429,"org.easymock.tests2.CaptureTest.testAnd":304,"org.easymock.tests2.UsageTest.strictResetToDefault":245,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":273,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":160,"org.easymock.tests2.DelegateToTest.testDelegate":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":98,"org.easymock.tests.LimitationsTest.mockFinalMethod":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":62,"org.easymock.tests2.DependencyTest.testClassMockingSupport":494,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":143,"org.easymock.tests2.CaptureTest.testCapture1_2446744":308,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":264,"org.easymock.tests.UsageThrowableTest.throwError":26,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":348,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":9,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":430,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":141,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":470,"org.easymock.samples.PartialClassMockTest.testGetArea":168,"org.easymock.tests.MockingTest.testInterfaceMocking":342,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":349,"org.easymock.tests2.CompareToTest.testLessOrEqual":520,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":54,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":418,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":84,"org.easymock.tests2.UsageTest.niceToStrict":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":237,"org.easymock.tests2.MockBuilderTest.testCreateMock":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":467,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":385,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":92,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":274,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":34,"org.easymock.tests.UsageOverloadedMethodTest.overloading":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":422,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":47,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":114,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":16,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":218,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":313,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":431,"org.easymock.tests2.EasyMockSupportClassTest.testAll":191,"org.easymock.tests.MockClassControlTest.testEquals":150,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":265,"org.easymock.tests2.CaptureTest.testCaptureAll":305,"org.easymock.tests.MockNameTest.defaultName":25,"org.easymock.tests2.UsageConstraintsTest.testMatches":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":140,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":346,"org.easymock.samples.ExampleTest.voteForRemovals":173,"org.easymock.tests.UsageVarargTest.allKinds":72,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":153,"org.easymock.samples.BasicClassMockTest.testPrintContent":411,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":61,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":32,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":43,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":372,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":457,"org.easymock.tests2.UsageConstraintsTest.greaterThan":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":134,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":189,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":408,"org.easymock.samples.ExampleTest.voteForRemoval":171,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":413,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":290,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":514,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":11,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":184,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":152,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":244,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":271,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":38,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":298,"org.easymock.tests2.CaptureTest.testCaptureFirst":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":272,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":256,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":110,"org.easymock.tests2.UsageTest.moreThanOneArgument":246,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":292,"org.easymock.tests2.CaptureTest.testCapture2_2446744":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":451,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":242,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":341,"org.easymock.tests.GenericTest.testBridgedEquals":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":330,"org.easymock.tests.UsageExpectAndReturnTest.longType":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":58,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":269,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":515,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":101,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":142,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":227,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":5,"org.easymock.tests.UsageCallCountTest.tooManyCalls":331,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":88,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":31,"org.easymock.tests.MockingTest.testNiceClassMocking":404,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":196,"org.easymock.tests.MockingTest.testClassMocking":403,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":513,"org.easymock.tests2.UsageConstraintsTest.testContains":217,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":325,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":286,"org.easymock.tests2.UsageConstraintsTest.testFind":208,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":18,"org.easymock.tests.MockTypeTest.fromEasyMockClass":8,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":161,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":203,"org.easymock.tests.UsageExpectAndReturnTest.object":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":489,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":277,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":336,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":22,"org.easymock.tests.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":119,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":46,"org.easymock.tests.MockClassControlTest.testHashCode":149,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":369,"org.easymock.tests2.EasyMockSupportTest.testVerify":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":392,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":158,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":44,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":263,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":387,"org.easymock.tests.UsageVarargTest.varargCharAccepted":335,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":456,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastCall":250,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":280,"org.easymock.tests.DefaultClassInstantiatorTest.object":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":0,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":20,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":419,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":488,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":368,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":187,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":148,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":89,"org.easymock.tests.CapturesMatcherTest.test":398,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":120,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":4,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":503,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":194,"org.easymock.tests2.UsageTest.resumeIfFailure":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":7,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":41,"org.easymock.tests2.StubTest.stubWithReturnValue":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":477,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":228,"org.easymock.tests2.SerializationTest.testAllMockedMethod":423,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":81,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":177,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":397,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":484,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":95,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":426,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":82,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":258,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":433,"org.easymock.tests.UsageExpectAndThrowTest.object":93,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":225,"org.easymock.tests2.DelegateToTest.testWrongClass":301,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":51,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":52,"org.easymock.samples.ConstructorCalledMockTest.testTax":175,"org.easymock.tests.UsageStrictMockTest.range":165,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":366,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":195,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":414,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":35,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":495,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":15,"org.easymock.tests2.CaptureTest.testCaptureNone":312,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":508,"org.easymock.tests.UsageUnorderedTest.message":127,"org.easymock.tests.UsageVerifyTest.twoReturns":155,"org.easymock.tests.UsageVarargTest.varargByteAccepted":340,"org.easymock.tests2.ThreadingTest.testThreadSafe":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":420,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":328,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":410,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":23,"org.easymock.tests2.CaptureTest.testCapture_2617107":306,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":131,"org.easymock.tests2.UsageConstraintsTest.any":215,"org.easymock.tests2.StubTest.stub":294,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":353,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":40,"org.easymock.tests.UsageExpectAndThrowTest.longType":86,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":407,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":352,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":320,"org.easymock.tests2.SerializationTest.testClass":232,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":267,"org.easymock.tests.LimitationsTest.mockNativeMethod":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":122,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":79,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":382,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":323,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":509,"org.easymock.tests2.NameTest.nameForMocksControl":379,"org.easymock.tests2.MockedExceptionTest.testMockedException":285,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":415,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":473,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":87,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":178,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":240,"org.easymock.tests.MockingTest.testNicePartialClassMocking":125,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":183,"org.easymock.tests2.CompareToTest.testCompareEqual":519,"org.easymock.tests2.CaptureTest.testCaptureLast":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":380,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":144,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":201,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":212,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":226,"org.easymock.tests.MockingTest.testTwoMocks":123,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":472,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":91,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":253,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":230,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":512,"org.easymock.samples.ExampleTest.removeNonExistingDocument":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":384,"org.easymock.tests.UsageStrictMockTest.differentMethods":166,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":370,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":511,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":405,"org.easymock.tests2.ConstraintsToStringTest.andToString":504,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":291,"org.easymock.tests2.MockBuilderTest.testCreateMockString":243,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":416,"org.easymock.tests.UsageExpectAndThrowTest.floatType":85,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":492,"org.easymock.tests.UsageVerifyTest.twoThrows":154,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":193,"org.easymock.samples.ExampleTest.voteAgainstRemoval":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":13,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":188,"org.easymock.tests.LimitationsTest.privateConstructor":400,"org.easymock.tests2.UsageConstraintsTest.testNotNull":229,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":33,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":284,"org.easymock.tests2.UsageTest.defaultResetToNice":252,"org.easymock.samples.ExampleTest.voteAgainstRemovals":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":118,"org.easymock.tests.UsageVarargTest.differentLength":337,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":381,"org.easymock.tests2.CallbackTest.callback":288,"org.easymock.tests2.UsageConstraintsTest.equals":474,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":459,"org.easymock.tests.UsageTest.openCallCountByLastCall":67,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":130,"org.easymock.tests.UsageCallCountTest.tooFewCalls":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":37,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":510,"org.easymock.tests.UsageThrowableTest.throwCheckedException":30,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":402,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":76,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":200,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":282,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":199,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":262,"org.easymock.tests2.CompareToTest.testGreateOrEqual":393,"org.easymock.tests.ObjectMethodsTest.testHashCode":21,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":293,"org.easymock.tests2.NameTest.nameForNiceMock":378,"org.easymock.tests2.DependencyTest.testInterfaceMocking":296,"org.easymock.samples.ExampleTest.addDocument":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests2.DelegateToTest.testStubDelegate":300,"org.easymock.tests2.AnswerTest.stubAnswer":261,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":163,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":478,"org.easymock.tests.UsageVarargTest.varargLongAccepted":339,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":121,"org.easymock.tests.UsageExpectAndReturnTest.floatType":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":283,"org.easymock.tests2.ConstraintsToStringTest.orToString":501,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":485,"org.easymock.tests.UsageThrowableTest.noUpperLimit":27,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":48,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":223,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":205,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":424,"org.easymock.tests2.SerializationTest.test":233,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":309,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":104,"org.easymock.tests2.UsageConstraintsTest.testSame":210,"org.easymock.samples.SupportTest.addDocument":365,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":471,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":417,"org.easymock.tests.GenericTest.testPackageScope":77,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":373,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":343,"org.easymock.tests2.NameTest.nameForMock":376,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":480,"org.easymock.tests2.UsageStrictMockTest.differentMethods":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":412,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":107,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":97,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":19,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":136,"org.easymock.tests2.MockedExceptionTest.testRealException":287,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":367,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":447,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":129,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":357,"org.easymock.tests2.NameTest.nameForStrictMock":377,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":476,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":182,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":425,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":406,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":395,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":224,"org.easymock.tests.ErrorMessageTest.testGetters":516,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":235,"org.easymock.tests2.UsageStrictMockTest.range":321,"org.easymock.tests2.UsageConstraintsTest.lessThan":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":465,"org.easymock.tests2.CaptureTest.testCaptureRightOne":314,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":507,"org.easymock.tests2.UsageConstraintsTest.testOr":211,"org.easymock.tests.UsageRangeTest.combination":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":179,"org.easymock.tests.UsageTest.wrongArguments":66,"org.easymock.tests2.MockBuilderTest.testWithConstructor":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":463,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":409,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":116,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":391,"org.easymock.tests.UsageVarargTest.varargShortAccepted":338,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":329,"org.easymock.tests2.UsageConstraintsTest.cmpTo":216,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":259,"org.easymock.tests2.CompareToTest.testLessThan":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":251,"org.easymock.tests2.CaptureTest.testCaptureFromStub":315,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":347,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":236,"org.easymock.tests.UsageTest.unexpectedCallWithArray":65,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":162,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":117,"org.easymock.tests2.CaptureTest.testCapture":506,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.tests2.UsageConstraintsTest.constraints":206,"org.easymock.samples.ExampleTest.addAndChangeDocument":174,"org.easymock.tests2.ConstraintsToStringTest.notToString":502,"org.easymock.tests.UsageStrictMockTest.testVerify":360,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":364,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":359,"org.easymock.tests2.CompareToTest.testGreateThan":518,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":59,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":55,"org.easymock.tests.LimitationsTest.abstractClass":399,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":109,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":56,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":275,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":333}}]
