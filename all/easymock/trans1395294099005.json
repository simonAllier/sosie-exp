[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[32,33,34,35,36,37],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[38,38,39,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,62,63,64,65,66,5,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[38,38,39,39,94,95,96,97,98,99,100,40,41,6,7,42,101,102,103,43,104,44,45,46,47,48,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,4,121,122,123,124,125,126,127,128,129,93,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,51,53,55,56,58,61,0,190,62,63,64,66,67,68,69,70,71,72,73,191,74,75,192,193,13,3,194,195,196,79,25,197,198,80,199,200,201,202,203,204,205,206,207,208,209,210,81,82,83,84,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,86,87,88,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,89,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,92,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,37,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[94,95,96,97,98,99,100,40,41,6,7,101,102,103,104,44,45,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,4,121,122,123,124,125,126,127,128,129,93,130,131,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,61,0,190,62,63,64,66,69,70,73,191,192,193,13,25,197,198,80,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,353,354,233,235,236,355,356,86,87,357,238,239,240,241,242,243,244,245,246,247,248,249,250,89,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,297,298,299,300,301,302,303,304,92,305,307,308,311,312,313,314,315,321,322,323,37,324,325,326,327,328,329,330,331,332,333,334,335,337,338,341,342,343,344,345,347,348,349,350,351,352],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[139,141,142,143,144,145,146,148,358,149,150,152],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[359,139,140,141,142,143,144,145,146,148,358,149,150,151,152,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[361,362,363],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[364,365,366],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[38,38,39,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,62,63,64,65,66,5,67,68,69,70,71,72,73,74,75,76,77,78,367,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[368,86,87,88,357],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[204,289,290,326,369],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[32,33,34,35,36,37],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[38,38,39,39,40,41,42,43,44,45,46,47,48,49,51,53,54,55,56,57,58,60,61,0,62,63,64,65,66,5,67,68,69,70,71,72,73,74,75,79,80,81,82,83,84,85,86,87,88,89,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[95,103,133,138,305],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[139,141,142,143,144,145,148,358,149],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[368],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[166,202,205,206,370,258,288,289,290,310,324,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[94,95,96,97,98,99,371,100,103,43,104,44,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,4,121,122,123,124,125,126,127,128,129,93,130,131,132,133,136,137,138,372,373,374,375,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,49,51,53,54,57,58,60,61,0,190,62,63,64,65,66,5,67,68,69,71,72,74,75,192,3,194,195,196,79,197,198,80,199,200,201,202,203,204,205,206,207,208,376,377,378,379,209,210,380,82,83,84,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,381,382,354,233,234,235,236,383,85,384,385,386,387,355,356,86,87,238,239,240,241,242,243,244,245,246,247,248,249,250,89,388,389,390,391,392,393,394,395,396,397,398,399,252,253,254,255,256,257,258,36,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,297,298,299,300,301,302,303,304,92,305,306,307,308,310,400,311,312,313,314,315,401,402,403,404,405,321,322,323,37,324,325,326,327,328,329,330,331,332,333,334,335,341,342,343,344,345,346,406,347,348,349,350,407,351,352],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[364,365,366],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[118,209],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:280","failures":[95,158,159,160,161,162,163,307],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[38,39,94,95,96,97,98,99,371,100,40,41,6,7,42,101,102,103,43,104,44,408,409,410,411,412,413,414,45,415,416,46,417,418,419,420,421,422,423,424,425,47,426,427,428,429,430,48,431,432,105,433,106,107,108,109,110,434,111,112,113,114,115,116,117,118,119,120,4,121,122,123,124,125,126,127,128,129,93,130,131,132,133,134,135,136,137,138,372,373,374,375,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,49,51,52,435,53,54,55,56,436,57,58,60,61,0,190,62,63,64,65,437,66,438,439,5,67,68,69,440,1,70,71,72,73,191,74,75,441,442,192,193,8,9,10,11,12,13,14,15,16,17,18,19,2,3,194,195,196,79,443,20,21,22,23,24,25,26,27,28,29,30,31,197,198,80,199,200,201,202,203,204,205,206,207,208,376,377,378,379,444,209,210,380,445,446,447,364,448,449,450,451,81,82,83,452,84,453,454,455,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,370,353,381,382,354,456,457,233,234,235,236,383,85,384,385,386,387,355,356,368,86,87,88,357,458,237,459,238,239,240,460,241,242,243,244,245,246,247,248,249,250,251,89,388,389,390,391,392,393,394,395,396,397,398,399,252,253,254,255,256,257,258,36,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,90,461,462,91,463,464,294,295,296,297,298,299,300,301,302,303,304,465,466,92,467,305,306,307,308,309,310,400,311,312,313,314,315,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,316,484,485,486,487,488,317,489,401,402,403,404,405,318,319,320,321,322,323,37,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,406,347,348,349,350,407,351,352],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[490,491,492,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[94,95,96,97,98,99,371,100,103,43,104,44,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,4,121,122,123,124,125,126,127,128,129,93,130,131,132,133,136,137,138,372,373,374,375,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,49,51,53,54,57,58,60,61,0,190,62,63,64,65,66,5,67,68,69,71,72,74,75,192,3,194,195,196,79,197,198,80,199,200,201,202,203,204,205,206,207,208,376,377,378,379,209,210,380,82,83,84,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,381,382,354,233,234,235,236,383,85,384,385,386,387,355,356,86,87,238,239,240,241,242,243,244,245,246,247,248,249,250,89,388,389,390,391,392,393,394,395,396,397,398,399,252,253,254,255,256,257,258,36,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,297,298,299,300,301,302,303,304,92,305,306,307,308,310,400,311,312,313,314,315,401,402,403,404,405,321,322,323,37,324,325,326,327,328,329,330,331,332,333,334,335,341,342,343,344,345,346,406,347,348,349,350,407,351,352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[43,104,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[38,38,39,39,42,43,46,47,48,49,51,52,435,53,55,56,493,436,58,60,65,438,67,68,1,79,443,197,368,88,90,91],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[43,104,44,494],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[103,109,123,155,164,167,168,169,173,174,175,176,178,182,183,186,51,57,58,60,0,67,69,200,203,204,205,233,243,257,36,259,262,263,264,289,290,321,322,37,325,326,327,407,351,352],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[38,38,39,39,40,41,42,43,44,408,409,412,413,414,45,415,416,46,417,418,419,420,421,422,423,424,425,47,426,427,428,429,430,48,431,432,495,49,50,51,52,435,53,54,55,56,436,57,58,496,59,60,61,0,62,63,64,65,66,438,439,5,67,68,69,440,1,70,71,72,73,74,75,497,76,498,77,78,367,79,443,197,198,80,380,445,446,447,364,448,449,450,451,81,82,83,84,455,457,383,85,384,385,386,387,355,356,368,86,87,88,357,89,90,91,465,466,92,467],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[389,399],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[499],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.Range:36","failures":[38,39,94,95,96,97,98,99,371,100,40,41,6,7,42,101,102,103,43,104,44,408,500,501,502,409,410,411,412,413,414,45,415,416,46,417,418,419,420,421,422,423,424,425,47,426,427,428,429,430,48,431,432,105,433,106,107,108,109,110,434,111,112,113,114,115,116,117,118,119,120,4,121,122,123,124,125,126,127,128,129,93,130,131,132,133,134,135,136,137,138,372,373,374,375,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,503,49,504,51,52,505,435,53,54,55,506,56,493,436,57,58,507,60,61,0,190,62,63,64,65,437,66,438,439,5,67,68,69,440,1,70,71,72,73,508,191,74,75,509,441,442,192,193,8,9,10,11,12,13,14,15,16,17,18,19,2,3,194,195,196,79,443,510,20,21,22,23,24,25,26,27,28,29,30,31,197,198,80,199,200,201,202,203,204,205,206,207,208,376,377,378,379,444,209,210,511,380,445,446,447,364,448,512,449,450,451,81,82,83,452,84,453,454,455,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,370,353,381,382,354,456,457,233,234,235,236,383,85,384,385,386,387,355,356,368,86,87,88,357,458,237,459,238,239,240,460,241,242,243,244,245,246,247,248,249,250,513,251,89,388,389,390,391,392,393,394,395,396,397,398,399,252,253,254,255,256,257,258,36,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,90,514,515,461,462,91,463,464,294,295,296,297,298,299,300,301,302,303,304,465,466,92,467,305,306,307,308,309,310,400,311,312,313,314,315,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,316,484,485,486,487,488,317,489,401,402,403,404,405,318,319,320,321,322,323,37,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,406,347,348,349,350,407,351,352],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[159,161,162,163,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"delegateTo","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[204,289,290,326,369],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests2.UsageTest.argumentsOrdered":174,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":257,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":478,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":169,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":7,"org.easymock.tests2.DelegateToTest.testReturnException":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":331,"org.easymock.tests.MockingTest.testPartialClassMocking":82,"org.easymock.tests.MockClassControlTest.testToString":384,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":2,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":420,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":265,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":116,"org.easymock.tests2.UsageTest.wrongArguments":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":252,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":378,"org.easymock.samples.ExampleTest.answerVsDelegate":95,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":91,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":454,"org.easymock.tests2.UsageConstraintsTest.testNull":112,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":62,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":186,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":356,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":497,"org.easymock.tests2.CaptureTest.testPrimitive":142,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":256,"org.easymock.tests.UsageTest.moreThanOneArgument":258,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":284,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":343,"org.easymock.tests.UsageTest.argumentsOrdered":263,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":336,"org.easymock.tests.UsageVarargTest.varargIntAccepted":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":311,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":501,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":30,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":315,"org.easymock.tests.ReplayStateInvalidUsageTest.times":396,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":13,"org.easymock.tests2.DependencyTest.testClassMocking":441,"org.easymock.tests2.AnswerTest.answer":133,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":484,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":375,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":515,"org.easymock.tests2.CaptureTest.testAnd":139,"org.easymock.tests2.UsageTest.strictResetToDefault":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":505,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":5,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":235,"org.easymock.tests2.DelegateToTest.testDelegate":163,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":280,"org.easymock.tests.LimitationsTest.mockFinalMethod":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":405,"org.easymock.tests2.DependencyTest.testClassMockingSupport":442,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":231,"org.easymock.tests2.CaptureTest.testCapture1_2446744":143,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":437,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":373,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":390,"org.easymock.tests.UsageThrowableTest.throwError":297,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":462,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":513,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":432,"org.easymock.samples.PartialClassMockTest.testGetArea":42,"org.easymock.tests.MockingTest.testInterfaceMocking":452,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":312,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":292,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":421,"org.easymock.tests2.UsageTest.niceToStrict":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":361,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":53,"org.easymock.tests2.MockBuilderTest.testCreateMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":428,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":16,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":274,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":182,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":514,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":376,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":490,"org.easymock.tests.UsageOverloadedMethodTest.overloading":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":425,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":121,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":222,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":285,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":4,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":365,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":148,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":460,"org.easymock.tests2.EasyMockSupportClassTest.testAll":45,"org.easymock.tests.MockClassControlTest.testEquals":355,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":282,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":403,"org.easymock.tests2.CaptureTest.testCaptureAll":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":374,"org.easymock.tests.MockNameTest.defaultName":444,"org.easymock.tests2.UsageConstraintsTest.testMatches":122,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":344,"org.easymock.samples.ExampleTest.voteForRemovals":99,"org.easymock.tests.UsageVarargTest.allKinds":248,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":404,"org.easymock.samples.BasicClassMockTest.testPrintContent":41,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":303,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":200,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":335,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":512,"org.easymock.tests2.UsageConstraintsTest.greaterThan":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":234,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":69,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":449,"org.easymock.samples.ExampleTest.voteForRemoval":96,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":440,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":154,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":496,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":502,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":89,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":179,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":330,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":158,"org.easymock.tests2.CaptureTest.testCaptureFirst":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":180,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":176,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":400,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":218,"org.easymock.tests2.UsageTest.moreThanOneArgument":166,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":156,"org.easymock.tests2.CaptureTest.testCapture2_2446744":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":485,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":58,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":247,"org.easymock.tests.GenericTest.testBridgedEquals":357,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":491,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":351,"org.easymock.tests.UsageExpectAndReturnTest.longType":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":401,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":177,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":283,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":129,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":341,"org.easymock.tests.UsageCallCountTest.tooManyCalls":352,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":18,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":302,"org.easymock.tests.MockingTest.testNiceClassMocking":455,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":71,"org.easymock.tests.MockingTest.testClassMocking":451,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":406,"org.easymock.tests2.UsageConstraintsTest.testContains":120,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":50,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":80,"org.easymock.tests2.UsageConstraintsTest.testFind":111,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":287,"org.easymock.tests.MockTypeTest.fromEasyMockClass":461,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":106,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":322,"org.easymock.tests.UsageExpectAndReturnTest.object":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":185,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":242,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":354,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":492,"org.easymock.tests.UsageTest.exactCallCountByLastCall":264,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":443,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":227,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":307,"org.easymock.tests.MockClassControlTest.testHashCode":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":21,"org.easymock.tests2.EasyMockSupportTest.testVerify":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":423,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":305,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":372,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":503,"org.easymock.tests.UsageVarargTest.varargCharAccepted":241,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":511,"org.easymock.tests2.CaptureTest.testCaptureMultiple":359,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":489,"org.easymock.tests2.UsageTest.openCallCountByLastCall":170,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":362,"org.easymock.tests.DefaultClassInstantiatorTest.object":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":318,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":424,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":300,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":367,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":11,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":20,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":271,"org.easymock.tests.CapturesMatcherTest.test":360,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":228,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":294,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":48,"org.easymock.tests2.UsageTest.resumeIfFailure":175,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":90,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":333,"org.easymock.tests2.StubTest.stubWithReturnValue":208,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":506,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":220,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":316,"org.easymock.samples.SupportTest.voteForRemovals":102,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":33,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":277,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":494,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":317,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":134,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":459,"org.easymock.tests.UsageExpectAndThrowTest.object":275,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":127,"org.easymock.tests2.DelegateToTest.testWrongClass":161,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":249,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":250,"org.easymock.samples.ConstructorCalledMockTest.testTax":38,"org.easymock.tests.UsageStrictMockTest.range":326,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":410,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":184,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":276,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":412,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":398,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":377,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":34,"org.easymock.tests2.CaptureTest.testCaptureNone":147,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":293,"org.easymock.tests.UsageUnorderedTest.message":321,"org.easymock.tests.UsageVerifyTest.twoReturns":290,"org.easymock.tests.UsageVarargTest.varargByteAccepted":246,"org.easymock.tests2.ThreadingTest.testThreadSafe":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":426,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":350,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":456,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":40,"org.easymock.tests2.CaptureTest.testCapture_2617107":141,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":487,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":255,"org.easymock.tests2.UsageConstraintsTest.any":118,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":395,"org.easymock.tests2.StubTest.stub":207,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageExpectAndThrowTest.longType":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":364,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":394,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":203,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":25,"org.easymock.tests.LimitationsTest.mockNativeMethod":92,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":10,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":78,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":206,"org.easymock.tests2.NameTest.nameForMocksControl":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":12,"org.easymock.tests2.MockedExceptionTest.testMockedException":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":416,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":433,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":269,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":56,"org.easymock.tests.MockingTest.testNicePartialClassMocking":83,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":64,"org.easymock.tests2.CaptureTest.testCaptureLast":146,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":232,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":75,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":128,"org.easymock.tests.MockingTest.testTwoMocks":81,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":509,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":273,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":173,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":131,"org.easymock.samples.ExampleTest.removeNonExistingDocument":371,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":15,"org.easymock.tests.UsageStrictMockTest.differentMethods":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":22,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":446,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":155,"org.easymock.tests2.MockBuilderTest.testCreateMockString":60,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":417,"org.easymock.tests.UsageExpectAndThrowTest.floatType":267,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":510,"org.easymock.tests.UsageVerifyTest.twoThrows":289,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":47,"org.easymock.samples.ExampleTest.voteAgainstRemoval":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":291,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":68,"org.easymock.tests.LimitationsTest.privateConstructor":466,"org.easymock.tests2.UsageConstraintsTest.testNotNull":130,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":304,"org.easymock.tests2.UsageTest.defaultResetToNice":172,"org.easymock.samples.ExampleTest.voteAgainstRemovals":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":9,"org.easymock.tests.UsageVarargTest.differentLength":243,"org.easymock.tests2.CallbackTest.callback":103,"org.easymock.tests2.UsageConstraintsTest.equals":434,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":438,"org.easymock.tests.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":499,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":254,"org.easymock.tests.UsageCallCountTest.tooFewCalls":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":379,"org.easymock.tests.UsageThrowableTest.throwCheckedException":301,"org.easymock.tests.MockingTest.testStrictClassMocking":450,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":35,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":72,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":397,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":191,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":138,"org.easymock.tests.ObjectMethodsTest.testHashCode":382,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":157,"org.easymock.tests2.NameTest.nameForNiceMock":195,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.samples.ExampleTest.addDocument":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":431,"org.easymock.tests2.DelegateToTest.testStubDelegate":160,"org.easymock.tests2.AnswerTest.stubAnswer":137,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":324,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":493,"org.easymock.tests.UsageVarargTest.varargLongAccepted":245,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndReturnTest.floatType":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":229,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":79,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":39,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":29,"org.easymock.tests.UsageThrowableTest.noUpperLimit":298,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":108,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":408,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":144,"org.easymock.tests2.SerializationTest.test":104,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":366,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":445,"org.easymock.tests2.UsageConstraintsTest.testSame":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":212,"org.easymock.samples.SupportTest.addDocument":101,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":508,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":418,"org.easymock.tests.GenericTest.testPackageScope":86,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":28,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":453,"org.easymock.tests2.NameTest.nameForMock":3,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":223,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":507,"org.easymock.tests2.UsageStrictMockTest.differentMethods":205,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":439,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":215,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":279,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":236,"org.easymock.tests2.MockedExceptionTest.testRealException":199,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":481,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":202,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":253,"org.easymock.tests2.NameTest.nameForStrictMock":194,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":435,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":363,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":409,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":447,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":126,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":51,"org.easymock.tests2.UsageStrictMockTest.range":204,"org.easymock.tests2.UsageConstraintsTest.lessThan":132,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":24,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":422,"org.easymock.tests2.CaptureTest.testCaptureRightOne":149,"org.easymock.tests2.UsageConstraintsTest.testOr":114,"org.easymock.tests.UsageRangeTest.combination":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageTest.wrongArguments":259,"org.easymock.tests2.MockBuilderTest.testWithConstructor":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":419,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":224,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":448,"org.easymock.tests.UsageVarargTest.varargShortAccepted":244,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":407,"org.easymock.tests2.UsageConstraintsTest.cmpTo":119,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":171,"org.easymock.tests2.CaptureTest.testCaptureFromStub":150,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":389,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":52,"org.easymock.tests.UsageTest.unexpectedCallWithArray":36,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":225,"org.easymock.tests2.CaptureTest.testCapture":358,"org.easymock.tests2.UsageConstraintsTest.constraints":109,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.samples.ExampleTest.addAndChangeDocument":100,"org.easymock.tests.UsageStrictMockTest.testVerify":329,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":6,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":402,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":77,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":313,"org.easymock.tests.LimitationsTest.abstractClass":465,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":217,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":183,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":239,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":369}}]
