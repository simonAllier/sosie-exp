[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,1,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:178","failures":[37],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"defaultValue","methodName":"defaultValue"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[108,109,174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[175,176,177,178,68,179,180,181,182,183,184,139,185,186,187,188,189],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[190,191],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[2,192,193,3,194,4,5,195,6,196,197,198,199,200,201,202,7,8,203,204,205,206,207,208,209,210,211,212,9,10,11,12,213,13,14,15,16,17,18,214,19,20,21,22,23,24,25,26,27,28,29,30,215,31,32,33,1,216,217,218,219,220,221,34,222,223,224,35,225,36,226,37,227,228,229,38,230,231,39,40,232,41,42,233,234,43,44,45,46,235,47,48,49,50,51,52,53,54,236,237,55,238,239,240,56,57,58,241,242,59,60,61,62,63,243,244,64,245,246,247,248,249,250,65,251,252,253,254,255,256,66,67,68,179,69,257,70,71,72,180,181,73,74,258,259,75,76,260,261,262,263,264,265,266,77,267,268,269,270,271,272,172,273,78,274,275,276,277,278,279,280,281,282,283,284,79,80,81,82,83,285,84,85,86,286,87,88,89,90,91,92,93,94,95,96,97,98,287,288,289,290,99,291,292,100,293,294,295,296,297,298,299,300,301,101,302,303,304,305,306,102,307,308,103,309,310,311,104,312,313,314,105,315,106,107,316,108,109,174,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,341,342,343,130,131,344,132,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,133,378,379,380,381,382,134,135,136,137,138,139,185,186,140,141,187,188,142,383,384,385,386,387,388,389,390,391,392,393,394,395,190,396,397,398,191,399,400,401,402,403,404,143,405,406,144,407,145,146,147,148,149,150,408,151,409,152,410,153,154,155,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,156,457,157,158,458,459,159,460,461,462,463,160,161,162,163,164,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,165,479,166,480,481,482,483,484,485,486,487,488,167,168,489,490,189,169,491,170,171,492,493,494,495,496],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[356,423,427],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[179,180,181,106,378,497,185,186,187,188,401,479,166,189,170],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[11,12,14,16,17,214,28,32,39,232,46],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[273,274,275,276,375],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"delegateTo","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[243,244,64,245,79,337,338,339,358,405,418,458,473,474,475,476,477,478],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:83","failures":[498],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[210,212,260,311,424],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[175,177,206,182,183,134,185,186,140,141,187,188,142,383,189,169],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[374,377,379,380],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[210,212,260,311,424],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[0,500,501,502,503],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[504,505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[408,410],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":12,"org.easymock.tests2.UsageTest.argumentsOrdered":181,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":421,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":257,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":198,"org.easymock.tests2.DelegateToTest.testReturnException":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":474,"org.easymock.tests.MockingTest.testPartialClassMocking":130,"org.easymock.tests.MockClassControlTest.testToString":449,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":205,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":296,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":317,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":76,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":18,"org.easymock.tests2.UsageTest.wrongArguments":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":157,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":462,"org.easymock.samples.ExampleTest.answerVsDelegate":194,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":370,"org.easymock.tests2.UsageConstraintsTest.testNull":14,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":346,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":52,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":454,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":96,"org.easymock.tests2.CaptureTest.testPrimitive":41,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":159,"org.easymock.tests.UsageTest.moreThanOneArgument":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":336,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":362,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":384,"org.easymock.tests.UsageTest.argumentsOrdered":188,"org.easymock.tests.UsageVarargTest.varargIntAccepted":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":426,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":160,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":255,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":279,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":164,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":77,"org.easymock.tests.ReplayStateInvalidUsageTest.times":356,"org.easymock.tests2.DependencyTest.testClassMocking":258,"org.easymock.tests2.AnswerTest.answer":103,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":428,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":219,"org.easymock.tests2.CaptureTest.testAnd":39,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":367,"org.easymock.tests2.UsageTest.strictResetToDefault":67,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":91,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":388,"org.easymock.tests2.DelegateToTest.testDelegate":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":332,"org.easymock.tests.LimitationsTest.mockFinalMethod":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":477,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":393,"org.easymock.tests2.DependencyTest.testClassMockingSupport":259,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":379,"org.easymock.tests2.CaptureTest.testCapture1_2446744":42,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":217,"org.easymock.tests.UsageThrowableTest.throwError":144,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":350,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":369,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":256,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":308,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.MockingTest.testInterfaceMocking":344,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":351,"org.easymock.tests2.CompareToTest.testLessOrEqual":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":161,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":495,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":472,"org.easymock.tests2.UsageTest.niceToStrict":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":35,"org.easymock.tests2.MockBuilderTest.testCreateMock":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":304,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":269,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":326,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":92,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":404,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":460,"org.easymock.tests.UsageOverloadedMethodTest.overloading":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":306,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":23,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":376,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":121,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":22,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":45,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":438,"org.easymock.tests.MockClassControlTest.testEquals":453,"org.easymock.tests2.EasyMockSupportClassTest.testAll":99,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":409,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":176,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":391,"org.easymock.tests2.CaptureTest.testCaptureAll":40,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":218,"org.easymock.tests.MockNameTest.defaultName":406,"org.easymock.tests2.UsageConstraintsTest.testMatches":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":363,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests.UsageVarargTest.allKinds":446,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":392,"org.easymock.samples.BasicClassMockTest.testPrintContent":200,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":149,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":478,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":252,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":275,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":399,"org.easymock.tests2.UsageConstraintsTest.greaterThan":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":135,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":58,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":400,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":60,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":371,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":236,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":383,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":89,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":473,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":172,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":90,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":74,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":47,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":62,"org.easymock.tests2.UsageTest.moreThanOneArgument":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":429,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":38,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":445,"org.easymock.tests.GenericTest.testBridgedEquals":410,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":499,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":487,"org.easymock.tests.UsageExpectAndReturnTest.longType":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":389,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":87,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":505,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":335,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":215,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":382,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":488,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":148,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":81,"org.easymock.tests.MockingTest.testNiceClassMocking":347,"org.easymock.tests.MockingTest.testClassMocking":342,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":504,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":481,"org.easymock.tests2.UsageConstraintsTest.testContains":21,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":13,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":155,"org.easymock.tests.MockTypeTest.fromEasyMockClass":368,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":489,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":212,"org.easymock.tests.UsageExpectAndReturnTest.object":120,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":95,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":440,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":470,"org.easymock.tests.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":385,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":184,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":203,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":435,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":375,"org.easymock.tests.MockClassControlTest.testHashCode":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":247,"org.easymock.tests2.EasyMockSupportTest.testVerify":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":299,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":386,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":403,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":216,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":261,"org.easymock.tests.UsageVarargTest.varargCharAccepted":439,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":394,"org.easymock.tests2.CaptureTest.testCaptureMultiple":498,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":434,"org.easymock.tests2.UsageTest.openCallCountByLastCall":70,"org.easymock.tests.DefaultClassInstantiatorTest.object":395,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":98,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":402,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":468,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":300,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":265,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":246,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":451,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":323,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":127,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":337,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":102,"org.easymock.tests2.UsageTest.resumeIfFailure":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":476,"org.easymock.tests2.StubTest.stubWithReturnValue":79,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":226,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":31,"org.easymock.tests2.SerializationTest.testAllMockedMethod":174,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":427,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":177,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":408,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":249,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":329,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":433,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":309,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":466,"org.easymock.tests.UsageExpectAndThrowTest.object":327,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":29,"org.easymock.tests2.DelegateToTest.testWrongClass":274,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":167,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":168,"org.easymock.tests.UsageStrictMockTest.range":170,"org.easymock.samples.ConstructorCalledMockTest.testTax":192,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":282,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":328,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":36,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":288,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":461,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":496,"org.easymock.tests2.CaptureTest.testCaptureNone":44,"org.easymock.tests.UsageUnorderedTest.message":401,"org.easymock.tests.UsageVerifyTest.twoReturns":166,"org.easymock.tests.UsageVarargTest.varargByteAccepted":444,"org.easymock.tests2.ThreadingTest.testThreadSafe":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":302,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":485,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":471,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":199,"org.easymock.tests2.CaptureTest.testCapture_2617107":232,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":178,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":381,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":431,"org.easymock.tests2.UsageConstraintsTest.any":19,"org.easymock.tests2.StubTest.stub":284,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndThrowTest.longType":320,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":398,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":354,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":315,"org.easymock.tests2.SerializationTest.testClass":108,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":65,"org.easymock.tests.LimitationsTest.mockNativeMethod":156,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":129,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":264,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":316,"org.easymock.tests2.NameTest.nameForMocksControl":209,"org.easymock.tests2.MockedExceptionTest.testMockedException":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":292,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":132,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":321,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":37,"org.easymock.tests.MockingTest.testNicePartialClassMocking":131,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":54,"org.easymock.tests2.CompareToTest.testCompareEqual":501,"org.easymock.tests2.CaptureTest.testCaptureLast":43,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":262,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":380,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":17,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":86,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":30,"org.easymock.tests.MockingTest.testTwoMocks":343,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":286,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":325,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.samples.ExampleTest.removeNonExistingDocument":196,"org.easymock.tests.UsageStrictMockTest.differentMethods":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":268,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":248,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":396,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":61,"org.easymock.tests2.MockBuilderTest.testCreateMockString":231,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":293,"org.easymock.tests.UsageExpectAndThrowTest.floatType":319,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":290,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":311,"org.easymock.tests.UsageVerifyTest.twoThrows":479,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":204,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":101,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":422,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":57,"org.easymock.tests.LimitationsTest.privateConstructor":456,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":150,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":243,"org.easymock.tests2.UsageTest.defaultResetToNice":72,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":125,"org.easymock.tests.UsageVarargTest.differentLength":441,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":263,"org.easymock.tests2.CallbackTest.callback":260,"org.easymock.tests2.UsageConstraintsTest.equals":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":238,"org.easymock.tests.UsageTest.openCallCountByLastCall":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":458,"org.easymock.tests.UsageCallCountTest.tooFewCalls":483,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":463,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":173,"org.easymock.tests.UsageThrowableTest.throwCheckedException":147,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":183,"org.easymock.tests.MockingTest.testStrictClassMocking":341,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":405,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":85,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":267,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":84,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":312,"org.easymock.tests2.CompareToTest.testGreateOrEqual":502,"org.easymock.tests.ObjectMethodsTest.testHashCode":469,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":63,"org.easymock.tests2.NameTest.nameForNiceMock":208,"org.easymock.tests2.DependencyTest.testInterfaceMocking":75,"org.easymock.samples.ExampleTest.addDocument":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":303,"org.easymock.tests2.DelegateToTest.testStubDelegate":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":307,"org.easymock.tests2.AnswerTest.stubAnswer":104,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":169,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":227,"org.easymock.tests.UsageVarargTest.varargLongAccepted":443,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":128,"org.easymock.tests.UsageExpectAndReturnTest.floatType":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":8,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":193,"org.easymock.tests.UsageThrowableTest.noUpperLimit":407,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":254,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":277,"org.easymock.tests2.SerializationTest.test":109,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":233,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":111,"org.easymock.tests2.UsageConstraintsTest.testSame":15,"org.easymock.samples.SupportTest.addDocument":202,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":285,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":294,"org.easymock.tests.GenericTest.testPackageScope":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":253,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":345,"org.easymock.tests2.NameTest.nameForMock":206,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":122,"org.easymock.tests2.UsageStrictMockTest.differentMethods":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":114,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":331,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":467,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":137,"org.easymock.tests2.MockedExceptionTest.testRealException":245,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":424,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":158,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":359,"org.easymock.tests2.NameTest.nameForStrictMock":207,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":224,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":210,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":53,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":281,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":397,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":28,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":34,"org.easymock.tests2.UsageStrictMockTest.range":106,"org.easymock.tests2.UsageConstraintsTest.lessThan":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":88,"org.easymock.tests2.CaptureTest.testCaptureRightOne":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":298,"org.easymock.tests2.UsageConstraintsTest.testOr":16,"org.easymock.tests.UsageRangeTest.combination":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageTest.wrongArguments":186,"org.easymock.tests2.MockBuilderTest.testWithConstructor":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":295,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":123,"org.easymock.tests.UsageVarargTest.varargShortAccepted":442,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":191,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":486,"org.easymock.tests2.UsageConstraintsTest.cmpTo":20,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":310,"org.easymock.tests2.CompareToTest.testLessThan":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":414,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":71,"org.easymock.tests2.CaptureTest.testCaptureFromStub":235,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":349,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":222,"org.easymock.tests.UsageTest.unexpectedCallWithArray":185,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":124,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":491,"org.easymock.tests2.UsageConstraintsTest.constraints":11,"org.easymock.samples.ExampleTest.addAndChangeDocument":197,"org.easymock.tests.UsageStrictMockTest.testVerify":493,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":201,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":490,"org.easymock.tests2.CompareToTest.testGreateThan":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":390,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":162,"org.easymock.tests.LimitationsTest.abstractClass":455,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":163,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":93}}]
