[{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[42,43,82,83,84,85,44,86,45,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,75,76,77,78,87,79,88,89,90,91,80,92,81],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:266","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,83,84,135,136,137,138,139,140,141,142,143,144,145,146,147,96,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[36,163,109,164],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,36,163,109,110,111,192,112,113,114,193,115,117,194,195,118,38,196,197,198,199,200,201,202,0,203,1,2,204,42,205,3,206,207,208,209,43,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,124,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,133,273,274,134,275,276,277,82,83,84,85,278,44,40,41,279,280,281,282,283,284,285,286,287,288,289,290,135,136,291,292,293,294,295,296,297,298,86,299,300,301,302,303,304,305,45,13,306,307,308,309,310,145,146,147,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,311,71,72,73,74,75,76,312,313,314,315,316,317,16,318,17,18,319,320,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,77,19,341,342,343,78,344,345,346,20,347,348,349,350,351,87,79,352,161,88,89,90,91,80,92,353,354,355,356,357,358,359,360,361,362,363,81,24,25,26,364,365,366,367,368,369,370,371,372,373,374,375,376],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[377,215,232,238],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0,215,216,219,220,221,222,227,229,230,232,233,239,240,241,44,298,306,307,308,309,310,16,350,351,352,364,365],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[27,28,172,29,378,30,176,32,178,36,37,195,120,38,39,379,244,245,40,40,41,41,280,95,380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[165],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[31,37,40,40,41,41],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[234],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,36,163,109,110,111,192,112,113,114,193,115,117,194,195,118,38,196,197,198,199,200,201,202,0,203,1,2,204,42,205,3,206,207,208,209,43,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,124,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,133,273,274,134,275,276,277,82,83,84,85,278,44,40,41,279,280,281,282,283,284,285,286,287,288,289,290,135,136,291,292,293,294,295,296,297,298,86,299,300,301,302,303,304,305,45,13,306,307,308,309,310,145,146,147,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,311,71,72,73,74,75,76,312,313,314,315,316,317,16,318,17,18,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,77,19,341,342,343,78,344,345,346,20,347,348,349,350,351,87,79,352,161,88,89,90,91,80,92,353,354,355,356,357,358,359,360,361,362,363,81,24,25,26,364,365,366,367,368,369,370,371,372,373,374,375,376],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[217,223,227,234],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[94,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[165,167,168,169,172,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,36,163,110,111,192,112,113,114,193,115,117,194,195,118,38,196,197,198,199,200,201,0,203,1,2,42,205,3,206,207,208,209,43,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,382,244,245,246,247,248,249,250,251,252,253,254,255,257,258,261,262,263,264,265,266,267,268,269,270,271,272,133,273,274,134,275,276,277,84,44,40,41,280,283,284,285,286,287,289,298,86,299,300,301,302,303,304,305,45,13,306,307,308,309,310,146,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,312,313,314,315,317,16,318,17,18,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,77,19,341,342,343,78,344,345,346,20,347,348,349,350,351,87,79,352,161,88,89,90,91,80,92,353,354,355,356,357,358,359,361,362,363,81,24,25,26,364,365],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[383],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":218,"org.easymock.tests2.UsageTest.argumentsOrdered":212,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":91,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":208,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":29,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":330,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":279,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":238,"org.easymock.tests2.SerializationTest.testAllMockedMethod":109,"org.easymock.tests2.DelegateToTest.testReturnException":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":89,"org.easymock.tests.MockingTest.testPartialClassMocking":312,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":35,"org.easymock.samples.SupportTest.voteForRemovals":283,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":95,"org.easymock.tests.MockClassControlTest.testToString":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":120,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":164,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":50,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":93,"org.easymock.tests.UsageExpectAndThrowTest.object":60,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":248,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":235,"org.easymock.tests2.DelegateToTest.testWrongClass":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":364,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":365,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":350,"org.easymock.tests2.UsageTest.wrongArguments":206,"org.easymock.tests.UsageStrictMockTest.range":17,"org.easymock.samples.ConstructorCalledMockTest.testTax":40,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":355,"org.easymock.samples.ExampleTest.answerVsDelegate":285,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":133,"org.easymock.tests2.UsageConstraintsTest.testNull":220,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":112,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":174,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":188,"org.easymock.tests2.CaptureTest.testPrimitive":257,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":352,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":344,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":69,"org.easymock.tests.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":354,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":301,"org.easymock.tests2.CaptureTest.testCaptureNone":262,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.UsageVerifyTest.twoReturns":26,"org.easymock.tests.UsageVarargTest.varargByteAccepted":374,"org.easymock.tests2.ThreadingTest.testThreadSafe":249,"org.easymock.tests.UsageTest.argumentsOrdered":345,"org.easymock.tests.UsageVarargTest.varargIntAccepted":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":130,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":294,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":135,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":306,"org.easymock.tests2.CaptureTest.testCapture_2617107":256,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests2.UsageConstraintsTest.any":225,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":173,"org.easymock.tests2.StubTest.stub":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":90,"org.easymock.tests.UsageExpectAndThrowTest.longType":53,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":156,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":203,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":272,"org.easymock.tests.LimitationsTest.mockNativeMethod":161,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":380,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":340,"org.easymock.tests2.AnswerTest.answer":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":271,"org.easymock.tests2.CaptureTest.testAnd":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":104,"org.easymock.tests2.UsageTest.strictResetToDefault":205,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":117,"org.easymock.tests2.MockedExceptionTest.testMockedException":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":183,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":78,"org.easymock.tests2.DelegateToTest.testDelegate":200,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":382,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":314,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":54,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":175,"org.easymock.tests.MockingTest.testNicePartialClassMocking":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":65,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":114,"org.easymock.tests.LimitationsTest.mockFinalMethod":162,"org.easymock.tests2.CaptureTest.testCaptureLast":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":15,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":277,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":361,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":236,"org.easymock.tests.MockingTest.testTwoMocks":150,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":14,"org.easymock.tests2.CaptureTest.testCapture1_2446744":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":269,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":58,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":211,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":240,"org.easymock.tests.UsageThrowableTest.throwError":70,"org.easymock.tests.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":106,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":98,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":154,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":251,"org.easymock.tests2.ConstraintsToStringTest.andToString":8,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":102,"org.easymock.tests2.MockBuilderTest.testCreateMockString":178,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":303,"org.easymock.tests.UsageExpectAndThrowTest.floatType":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":126,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":231,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":166,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":379,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":10,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":245,"org.easymock.samples.PartialClassMockTest.testGetArea":280,"org.easymock.tests2.CompareToTest.testLessOrEqual":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":307,"org.easymock.samples.ExampleTest.voteAgainstRemoval":287,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":195,"org.easymock.tests2.UsageTest.niceToStrict":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":128,"org.easymock.tests.LimitationsTest.privateConstructor":160,"org.easymock.tests2.UsageConstraintsTest.testNotNull":239,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":76,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":172,"org.easymock.tests2.UsageTest.defaultResetToNice":210,"org.easymock.tests2.MockBuilderTest.testCreateMock":176,"org.easymock.samples.ExampleTest.voteAgainstRemovals":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":336,"org.easymock.tests.UsageVarargTest.differentLength":371,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":103,"org.easymock.tests2.CallbackTest.callback":169,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":37,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":107,"org.easymock.tests.UsageTest.openCallCountByLastCall":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":59,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":353,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":87,"org.easymock.tests.UsageCallCountTest.tooFewCalls":292,"org.easymock.tests.UsageOverloadedMethodTest.overloading":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":229,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":45,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":362,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":134,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":228,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":356,"org.easymock.tests.UsageThrowableTest.throwCheckedException":73,"org.easymock.tests2.EasyMockSupportClassTest.testAll":124,"org.easymock.tests.MockClassControlTest.testEquals":143,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":147,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":67,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":21,"org.easymock.tests.MockingTest.testStrictClassMocking":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":270,"org.easymock.tests2.CaptureTest.testCaptureAll":255,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":276,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":86,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":274,"org.easymock.tests2.UsageConstraintsTest.testMatches":230,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":275,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":302,"org.easymock.samples.ExampleTest.voteForRemovals":289,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":253,"org.easymock.tests.UsageVarargTest.allKinds":376,"org.easymock.tests2.DependencyTest.testInterfaceMocking":247,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":360,"org.easymock.samples.BasicClassMockTest.testPrintContent":136,"org.easymock.samples.ExampleTest.addDocument":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":131,"org.easymock.tests2.DelegateToTest.testStubDelegate":198,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":75,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests2.AnswerTest.stubAnswer":167,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests2.UsageConstraintsTest.greaterThan":232,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":378,"org.easymock.tests.UsageVarargTest.varargLongAccepted":373,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":118,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":319,"org.easymock.samples.ExampleTest.voteForRemoval":286,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":158,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":250,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":339,"org.easymock.tests.UsageExpectAndReturnTest.floatType":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":38,"org.easymock.tests2.ConstraintsToStringTest.orToString":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":41,"org.easymock.tests.UsageThrowableTest.noUpperLimit":311,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":233,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":216,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":145,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":121,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":259,"org.easymock.tests2.SerializationTest.test":163,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":30,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":181,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":322,"org.easymock.tests2.UsageConstraintsTest.testSame":221,"org.easymock.samples.SupportTest.addDocument":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":88,"org.easymock.tests2.CaptureTest.testCaptureFirst":267,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":182,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":127,"org.easymock.tests.GenericTest.testPackageScope":146,"org.easymock.tests2.CaptureTest.testCapture2_2446744":266,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":252,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":177,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":101,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":375,"org.easymock.tests.GenericTest.testBridgedEquals":96,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":383,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":296,"org.easymock.tests.UsageExpectAndReturnTest.longType":324,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":357,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":333,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":68,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":66,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":325,"org.easymock.tests.UsageCallCountTest.tooManyCalls":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":64,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":349,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":291,"org.easymock.tests2.MockedExceptionTest.testRealException":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":329,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":55,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":351,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":74,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":273,"org.easymock.tests.MockingTest.testNiceClassMocking":151,"org.easymock.tests.MockingTest.testClassMocking":149,"org.easymock.tests2.UsageConstraintsTest.testContains":227,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":84,"org.easymock.tests2.UsageConstraintsTest.testFind":219,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":81,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":242,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":113,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":243,"org.easymock.tests.UsageExpectAndReturnTest.object":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":122,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":234,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":155,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":115,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":171,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":187,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":370,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":99,"org.easymock.tests.UsageTest.exactCallCountByLastCall":346,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":298,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":180,"org.easymock.tests2.CaptureTest.testCaptureRightOne":264,"org.easymock.tests2.UsageConstraintsTest.testOr":222,"org.easymock.tests.UsageRangeTest.combination":347,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":39,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":366,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":337,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":111,"org.easymock.tests.UsageTest.wrongArguments":342,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":305,"org.easymock.tests2.MockBuilderTest.testWithConstructor":27,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":97,"org.easymock.tests.MockClassControlTest.testHashCode":142,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":334,"org.easymock.tests.UsageVarargTest.varargShortAccepted":372,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":48,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":157,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":268,"org.easymock.tests2.UsageConstraintsTest.cmpTo":226,"org.easymock.tests.UsageVarargTest.varargCharAccepted":369,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":46,"org.easymock.tests2.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests.DefaultClassInstantiatorTest.object":152,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":190,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":47,"org.easymock.tests2.CaptureTest.testCaptureFromStub":265,"org.easymock.tests.UsageTest.unexpectedCallWithArray":341,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":23,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":129,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":72,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":293,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":31,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":335,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":318,"org.easymock.tests2.UsageConstraintsTest.constraints":217,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":194,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":141,"org.easymock.samples.ExampleTest.addAndChangeDocument":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":56,"org.easymock.tests2.ConstraintsToStringTest.notToString":6,"org.easymock.tests.CapturesMatcherTest.test":320,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":338,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":281,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":246,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":7,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":358,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":260,"org.easymock.tests2.UsageTest.resumeIfFailure":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":327,"org.easymock.tests.LimitationsTest.abstractClass":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":309,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":12,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":185}}]
