[{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[67,53,54,55,56,57,58,59,60,62,63,64,65,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[68,69,70,71,6,72,73,74,75,76,77,23,78],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[79,1,80,81,82,83,2,84,85,86,87,88,16,89,90,91,92,93],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[94,95,96],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[97,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[100,101,102,103,104,105,106,107,108,109,110,111,0,1,112,113,114,115,116,117,118,119,120,121,122,123,124,125,99,126,80,81,82,83,2,84,127,128,129,130,131,132,133,134,135,136,3,137,138,4,139,140,141,142,143,68,144,145,146,69,70,147,148,71,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,5,6,171,172,173,174,7,8,67,67,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,9,10,11,12,13,72,198,73,14,15,16,17,18,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,97,231,232,233,19,234,235,236,237,238,239,240,241,242,20,21,243,89,244,245,74,246,247,248,249,250,75,76,251,252,253,254,77,255,256,257,258,259,260,261,22,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,23,282,283,284,285,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,286,287,78,288,289,290,90,91,92,93,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[145,5,306,307,308,309],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[292,293,294],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[310,85],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:257","sourceCode":"final net.sf.cglib.proxy.Enhancer net.sf.cglib.proxy.Enhancer = new net.sf.cglib.proxy.Enhancer() {\n    /** \n     * Filter all private constructors but do not check that there are\n     * some left\n     */\n@java.lang.SuppressWarnings(value = \"rawtypes\")\n    @java.lang.Override\n    protected void filterConstructors(final java.lang.Class sc, final java.util.List constructors) {\n        net.sf.cglib.core.CollectionUtils.net.sf.cglib.core.CollectionUtils.filter(java.util.List, new net.sf.cglib.core.VisibilityPredicate(java.lang.Class , true));\n    }\n}","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[121,208,302,304,305],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,112,114,115,116,117,118,119,311,124,125,99,126,137,4,68,144,69,70,71,6,172,173,7,8,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,312,196,197,9,10,11,12,13,72,73,14,15,18,204,205,206,207,209,210,212,216,220,224,225,227,228,230,231,232,233,19,234,239,240,241,242,89,244,245,74,246,247,249,75,76,251,254,77,255,256,257,258,259,260,22,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,23,283,284,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,286,287,78,289,92,291,292,293,295,296,297,298,299,300,301,303,53,54,56,57,60,61,62,63,65,66],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[286,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[24,40,47,52],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[314,315,316,220,223,224,317,225,226,227,228,229,230,97,240,241,242,261,263,264,98,292],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methods":"methods","list":"candidateMethods"}},{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[53,55,56,57,58,59,62,319,63],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"value"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[123,4,145,146,147,148,5,172,320,198,73,248,252,253,283],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":28,"org.easymock.tests2.UsageTest.argumentsOrdered":253,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":83,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":250,"org.easymock.tests2.StubTest.stubWithReturnValue":89,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":219,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":49,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":184,"org.easymock.tests2.SerializationTest.testAllMockedMethod":294,"org.easymock.tests2.DelegateToTest.testReturnException":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":81,"org.easymock.tests.MockingTest.testPartialClassMocking":124,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":309,"org.easymock.samples.SupportTest.voteForRemovals":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":161,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":149,"org.easymock.tests.UsageExpectAndThrowTest.object":159,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":245,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":46,"org.easymock.tests2.DelegateToTest.testWrongClass":304,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":7,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":34,"org.easymock.tests2.UsageTest.wrongArguments":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":217,"org.easymock.tests.UsageStrictMockTest.range":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":109,"org.easymock.samples.ExampleTest.answerVsDelegate":208,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":274,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":315,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":295,"org.easymock.tests2.UsageConstraintsTest.testNull":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":258,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":160,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":276,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":227,"org.easymock.tests2.CaptureTest.testPrimitive":56,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":18,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":88,"org.easymock.tests.UsageTest.moreThanOneArgument":144,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":147,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":168,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":108,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":201,"org.easymock.tests2.CaptureTest.testCaptureNone":61,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":73,"org.easymock.tests.UsageVarargTest.varargByteAccepted":135,"org.easymock.tests2.ThreadingTest.testThreadSafe":231,"org.easymock.tests.UsageTest.argumentsOrdered":148,"org.easymock.tests.UsageVarargTest.varargIntAccepted":129,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":103,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":221,"org.easymock.tests2.CaptureTest.testCapture_2617107":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":17,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":226,"org.easymock.tests2.UsageConstraintsTest.any":36,"org.easymock.tests2.StubTest.stub":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":82,"org.easymock.tests.UsageExpectAndThrowTest.longType":152,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.tests2.SerializationTest.testClass":292,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":291,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":287,"org.easymock.tests.LimitationsTest.mockNativeMethod":126,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":194,"org.easymock.tests2.AnswerTest.answer":78,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":238,"org.easymock.tests2.CaptureTest.testAnd":53,"org.easymock.tests2.UsageTest.strictResetToDefault":246,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":262,"org.easymock.tests2.MockedExceptionTest.testMockedException":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":196,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests2.DelegateToTest.testDelegate":305,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":153,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":255,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":228,"org.easymock.tests.MockingTest.testNicePartialClassMocking":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":164,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":260,"org.easymock.tests2.CaptureTest.testCaptureLast":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":2,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":301,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":143,"org.easymock.tests2.CaptureTest.testCapture1_2446744":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":236,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":157,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":252,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":51,"org.easymock.tests.UsageThrowableTest.throwError":112,"org.easymock.tests.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":233,"org.easymock.tests2.MockBuilderTest.testCreateMockString":97,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":203,"org.easymock.tests.UsageExpectAndThrowTest.floatType":151,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":42,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":288,"org.easymock.tests.UsageVerifyTest.twoThrows":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":241,"org.easymock.samples.PartialClassMockTest.testGetArea":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":10,"org.easymock.samples.ExampleTest.voteAgainstRemoval":210,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":264,"org.easymock.tests2.UsageTest.niceToStrict":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":150,"org.easymock.tests2.UsageConstraintsTest.testNotNull":50,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":119,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":225,"org.easymock.tests2.UsageTest.defaultResetToNice":251,"org.easymock.tests2.MockBuilderTest.testCreateMock":229,"org.easymock.samples.ExampleTest.voteAgainstRemovals":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":190,"org.easymock.tests.UsageVarargTest.differentLength":132,"org.easymock.tests2.CallbackTest.callback":266,"org.easymock.tests.UsageTest.openCallCountByLastCall":69,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":158,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":272,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":107,"org.easymock.tests.UsageCallCountTest.tooFewCalls":101,"org.easymock.tests.UsageOverloadedMethodTest.overloading":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":40,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":298,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":186,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":39,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":110,"org.easymock.tests.UsageThrowableTest.throwCheckedException":116,"org.easymock.tests2.EasyMockSupportClassTest.testAll":239,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":138,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":237,"org.easymock.tests2.CaptureTest.testCaptureAll":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":141,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":300,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":297,"org.easymock.tests2.UsageConstraintsTest.testMatches":41,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":299,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":202,"org.easymock.tests.ObjectMethodsTest.testHashCode":94,"org.easymock.samples.ExampleTest.voteForRemovals":212,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":234,"org.easymock.tests.UsageVarargTest.allKinds":3,"org.easymock.tests2.DependencyTest.testInterfaceMocking":244,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":72,"org.easymock.samples.BasicClassMockTest.testPrintContent":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":142,"org.easymock.samples.ExampleTest.addDocument":211,"org.easymock.tests2.DelegateToTest.testStubDelegate":303,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":118,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests2.AnswerTest.stubAnswer":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":84,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.UsageConstraintsTest.greaterThan":43,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":312,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":265,"org.easymock.tests.UsageVarargTest.varargLongAccepted":134,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.samples.ExampleTest.voteForRemoval":209,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":232,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":193,"org.easymock.tests.UsageExpectAndReturnTest.floatType":177,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":261,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":218,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":44,"org.easymock.tests.UsageThrowableTest.noUpperLimit":113,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":26,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":111,"org.easymock.tests2.SerializationTest.test":293,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":269,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":114,"org.easymock.tests2.UsageConstraintsTest.testSame":31,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":176,"org.easymock.samples.SupportTest.addDocument":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":80,"org.easymock.tests2.CaptureTest.testCaptureFirst":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":270,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":77,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":182,"org.easymock.tests.GenericTest.testPackageScope":137,"org.easymock.tests2.UsageTest.moreThanOneArgument":247,"org.easymock.tests2.CaptureTest.testCapture2_2446744":65,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":230,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":136,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":105,"org.easymock.tests.UsageExpectAndReturnTest.longType":178,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":187,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":48,"org.easymock.tests2.UsageStrictMockTest.differentMethods":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":199,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":179,"org.easymock.tests.UsageCallCountTest.tooManyCalls":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":197,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":100,"org.easymock.tests2.MockedExceptionTest.testRealException":93,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":183,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":117,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":296,"org.easymock.tests2.UsageConstraintsTest.testContains":38,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":92,"org.easymock.tests2.UsageConstraintsTest.testFind":29,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":206,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":259,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":21,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":169,"org.easymock.tests.UsageExpectAndReturnTest.object":185,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":224,"org.easymock.tests2.UsageStrictMockTest.range":283,"org.easymock.tests2.UsageConstraintsTest.lessThan":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":275,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":131,"org.easymock.tests.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":268,"org.easymock.tests2.CaptureTest.testCaptureRightOne":63,"org.easymock.tests2.UsageConstraintsTest.testOr":32,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":313,"org.easymock.tests.UsageRangeTest.combination":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":256,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":127,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":191,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":121,"org.easymock.tests.UsageTest.wrongArguments":146,"org.easymock.tests.MockClassControlTest.testHashCode":96,"org.easymock.tests2.EasyMockSupportTest.testVerify":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":188,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":120,"org.easymock.tests.UsageVarargTest.varargShortAccepted":133,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":235,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":104,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":24,"org.easymock.tests2.UsageConstraintsTest.cmpTo":37,"org.easymock.tests.UsageVarargTest.varargCharAccepted":130,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":318,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests2.UsageTest.openCallCountByLastCall":75,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":76,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":310,"org.easymock.tests2.CaptureTest.testCaptureFromStub":64,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":317,"org.easymock.tests.UsageTest.unexpectedCallWithArray":145,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":156,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":115,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":189,"org.easymock.tests2.CaptureTest.testCapture":319,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":263,"org.easymock.tests2.UsageConstraintsTest.constraints":27,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.samples.ExampleTest.addAndChangeDocument":213,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":155,"org.easymock.tests.CapturesMatcherTest.test":67,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":85,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":242,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":140,"org.easymock.tests2.UsageTest.resumeIfFailure":254,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":11,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":181,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":273,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":128}}]
