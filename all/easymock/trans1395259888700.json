[{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[7,8],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[9,10,11,12,13,14,15,16,17,18],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[19,20,21,21,22,22,23,24,25,26,27,28,29,7,30,10,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,16,17,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,18,88,89,8,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","name":"name","proxyFactory":"org.easymock.internal.MocksControl.interfaceProxyFactory"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[19,20,34,37,40,41,45,46,47,48,49,50,51,54,56,57,60,61,62,63,66,68,70,71,74,77,80,81,84,88,91,92,94,95,96,97,98,99,100,101,102,103,104,105,109,112,113,114,115,116,117,118,119,120,121,122,123],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[144,145,146],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[100,147,148],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:189","failures":[149,24,29,7,30,32,33,150,151,152,153,154,155,156,157,158,124,159,160,161,162,52,57,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,3,182,183,184,185,186,187,188,189,4,190,191,192],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[193,194],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[195,151,196,44,45,46,197,198,199,200,201,202,203,204,205,181,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[18,233,88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[234,235,236,237,238,239],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[9,11,12,13,15,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[241,242,243,244,245,246,247,149,248,249,250,251,252,253,254,255,256,257,258,150,259,260,261,262,263,264],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[265],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[165,166,191,192],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[18,233,88,266],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[25,31,32,33,267,151,152,153,154,156,157,268,158,124,269,48,58,60,163,164,165,166,270,169,271,272,181,3,182,183,184,185,273,274,275,276,186,187,277,188,278,279,189,4,190,191,192,280,281],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[18,233,88,266],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[152,156,157,165,3,182,183,184,287,186,187,188,4,191,280,281],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[132],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[288,53,289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":125,"org.easymock.tests2.UsageTest.argumentsOrdered":157,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":146,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":154,"org.easymock.tests2.StubTest.stubWithReturnValue":195,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":242,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":237,"org.easymock.tests2.SerializationTest.testAllMockedMethod":88,"org.easymock.tests2.DelegateToTest.testReturnException":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":201,"org.easymock.tests.MockingTest.testPartialClassMocking":106,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":90,"org.easymock.tests.MockClassControlTest.testToString":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":257,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":73,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":212,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":69,"org.easymock.tests.UsageExpectAndThrowTest.object":222,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":135,"org.easymock.tests2.DelegateToTest.testWrongClass":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":11,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":131,"org.easymock.tests2.UsageTest.wrongArguments":152,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":253,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests.UsageStrictMockTest.range":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":179,"org.easymock.samples.ExampleTest.answerVsDelegate":282,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":170,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":34,"org.easymock.tests2.UsageConstraintsTest.testNull":127,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":272,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":7,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":123,"org.easymock.tests2.CaptureTest.testPrimitive":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":63,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":178,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":5,"org.easymock.tests.UsageUnorderedTest.message":188,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":278,"org.easymock.tests.UsageVerifyTest.twoReturns":187,"org.easymock.tests.UsageTest.argumentsOrdered":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":80,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests2.CaptureTest.testCapture_2617107":140,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":263,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":199,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":29,"org.easymock.tests2.UsageConstraintsTest.any":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":234,"org.easymock.tests.UsageExpectAndThrowTest.longType":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":202,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":100,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests.LimitationsTest.mockNativeMethod":114,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests2.DependencyTest.testClassMocking":42,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":132,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":162,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":245,"org.easymock.tests2.CaptureTest.testAnd":138,"org.easymock.tests2.UsageTest.strictResetToDefault":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":247,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":168,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":206,"org.easymock.tests2.DelegateToTest.testDelegate":285,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":216,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":108,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":30,"org.easymock.tests.MockingTest.testNicePartialClassMocking":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":227,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":51,"org.easymock.tests.LimitationsTest.mockFinalMethod":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":204,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":39,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":176,"org.easymock.tests2.DependencyTest.testClassMockingSupport":43,"org.easymock.tests.MockingTest.testTwoMocks":105,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":160,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":156,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":137,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":249,"org.easymock.tests.UsageStrictMockTest.differentMethods":192,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":256,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":98,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":279,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":264,"org.easymock.tests2.MockBuilderTest.testCreateMockString":33,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":116,"org.easymock.tests.UsageExpectAndThrowTest.floatType":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":70,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":65,"org.easymock.tests.UsageVerifyTest.twoThrows":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":79,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":74,"org.easymock.tests2.UsageTest.niceToStrict":153,"org.easymock.tests.LimitationsTest.privateConstructor":113,"org.easymock.tests2.ThreadingTest.testChangeDefault":288,"org.easymock.tests2.UsageConstraintsTest.testNotNull":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":209,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":28,"org.easymock.tests2.MockBuilderTest.testCreateMock":31,"org.easymock.tests2.UsageTest.defaultResetToNice":155,"org.easymock.tests.UsageVarargTest.differentLength":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":82,"org.easymock.tests2.CallbackTest.callback":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":55,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":221,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":78,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":37,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":180,"org.easymock.tests2.EasyMockSupportClassTest.testAll":66,"org.easymock.tests.MockClassControlTest.testEquals":122,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":6,"org.easymock.tests.MockingTest.testStrictClassMocking":103,"org.easymock.tests2.CaptureTest.testCaptureAll":139,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":232,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":248,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":13,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":86,"org.easymock.tests2.DelegateToTest.testStubDelegate":145,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":208,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":205,"org.easymock.tests2.UsageConstraintsTest.greaterThan":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":67,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":60,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":102,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":52,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":16,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":262,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":95,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":40,"org.easymock.tests2.SerializationTest.test":233,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":10,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":148,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":167,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":207,"org.easymock.tests2.UsageConstraintsTest.testSame":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":200,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":158,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":71,"org.easymock.tests.GenericTest.testPackageScope":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":32,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":261,"org.easymock.tests.GenericTest.testBridgedEquals":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":274,"org.easymock.tests.UsageExpectAndReturnTest.longType":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":230,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":166,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":56,"org.easymock.tests.UsageCallCountTest.tooManyCalls":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":226,"org.easymock.tests2.MockedExceptionTest.testRealException":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":217,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":111,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":35,"org.easymock.tests.MockingTest.testNiceClassMocking":109,"org.easymock.tests.MockingTest.testClassMocking":104,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":126,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":210,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":27,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":50,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":41,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":99,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":54,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":251,"org.easymock.tests2.UsageStrictMockTest.range":165,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":258,"org.easymock.tests.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":270,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":75,"org.easymock.tests2.CaptureTest.testCaptureRightOne":142,"org.easymock.tests2.UsageConstraintsTest.testOr":129,"org.easymock.tests.UsageRangeTest.combination":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":48,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":286,"org.easymock.tests.UsageTest.wrongArguments":182,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":255,"org.easymock.tests.MockClassControlTest.testHashCode":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":72,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":76,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":101,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":280,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":159,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests.DefaultClassInstantiatorTest.object":96,"org.easymock.tests2.CaptureTest.testCaptureFromStub":143,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":110,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":26,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":281,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":77,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":246,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":254,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":58,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":120,"org.easymock.tests2.UsageConstraintsTest.constraints":124,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":218,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":239,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":85,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":119,"org.easymock.tests2.CompareToTest.testGreateThan":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":173,"org.easymock.tests2.UsageTest.resumeIfFailure":268,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":89,"org.easymock.tests.LimitationsTest.abstractClass":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":271}}]
