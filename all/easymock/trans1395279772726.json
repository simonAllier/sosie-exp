[{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[15,16,17,0,18,19,20,21,22,23,24,25,26,27,28,1,29,30,2,3,31,32,33,34,35,36,37,4,38,5,39,40,41,42,43,44,6,7,8,45,46,47,9,10,11,12,48,14,49],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[50,51,16,52,53,17,0,18,54,55,56,57,58,59,27,60,61,62,63,64,65,66,1,30,2,3,67,68,69,70,71,72,73,74,33,75,35,76,77,78,79,37,80,4,81,38,5,39,82,83,84,85,86,87,88,89,90,41,42,10,11,12,14,91,92,93,94,95,96,49,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[117,118,119,120,50,121,15,122,123,124,125,51,16,52,53,17,0,18,54,126,127,128,129,130,19,131,132,133,134,135,136,137,138,139,22,140,141,142,143,144,145,146,56,147,148,116,149,150,23,151,152,153,154,155,58,156,157,158,159,160,161,24,162,59,163,25,26,164,165,27,60,61,62,166,167,168,169,170,171,172,173,174,175,176,63,64,65,66,177,178,179,180,28,181,182,1,29,30,183,184,185,2,3,31,32,186,67,68,187,188,69,70,71,72,189,190,191,192,73,74,193,194,195,196,197,198,199,200,201,202,203,204,75,205,206,207,35,36,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,76,229,230,231,77,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,78,79,248,249,250,251,37,80,4,81,38,5,39,82,83,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,86,269,87,88,89,90,43,270,271,272,273,7,8,274,275,276,277,278,279,280,281,282,283,284,285,47,286,9,10,287,288,11,12,48,289,14,92,93,94,95,96,97,98,99,100,101,102,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,103,104,105,106,309,107,108,109,310,110,111,112,113,114,115,311,311,312,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[313,314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[116,101],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[124,125,51,315],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[50,121,15,123,124,125,51,52,53,17,0,18,54,126,127,128,129,130,19,131,132,133,134,135,137,138,139,22,140,141,142,143,144,145,146,56,147,148,116,149,150,23,151,152,153,154,155,57,58,156,157,158,159,166,167,168,169,170,171,172,173,174,175,176,28,181,182,1,29,30,183,184,2,3,31,32,186,67,68,187,188,69,70,71,72,189,190,191,192,73,193,194,197,198,199,200,201,202,75,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,76,316,229,230,231,77,232,233,234,235,236,237,238,239,240,317,241,242,243,244,245,246,247,78,79,248,249,250,251,80,4,81,38,5,39,82,257,258,259,260,261,262,263,87,88,89,90,41,42,43,271,272,273,7,8,274,275,276,277,278,279,282,47,286,10,287,288,11,12,48,318,319,320,289,14,92,93,94,95,96,97,98,99,100,101,102,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,103,109,310,110,111,112,113,114],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.Capture:82","failures":[186,68,187,188,69,70,71,189,321,190,191,73],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[322,323,324,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[124,125,51],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[117,118,119,120,50,121,15,326,327,328,329,330,122,331,332,333,334,335,336,123,337,338,124,125,51,16,52,53,17,0,18,54,339,126,127,128,340,129,130,19,131,132,133,134,341,342,135,343,344,136,20,137,21,345,346,347,348,349,350,351,352,353,138,139,22,140,354,141,142,143,144,145,146,55,56,147,148,116,149,150,23,151,152,153,154,155,57,58,156,157,158,355,356,159,160,161,24,162,59,163,25,26,164,165,27,60,61,62,166,357,167,168,169,170,171,172,173,313,314,174,175,176,358,63,64,65,66,359,360,361,177,362,363,178,364,365,366,367,368,369,370,371,372,179,373,374,375,376,377,180,378,379,28,181,182,1,29,30,183,184,185,2,3,31,32,186,67,68,187,188,69,70,71,72,189,190,191,192,73,74,193,194,195,380,196,197,198,381,199,200,201,202,382,383,384,385,386,203,387,388,389,390,391,392,393,204,394,33,395,396,397,75,205,206,398,207,399,400,34,35,401,36,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,402,228,76,403,404,316,229,230,231,77,232,233,234,235,236,237,238,239,405,406,407,408,409,410,411,412,413,414,415,416,417,240,418,419,317,420,241,242,243,244,245,421,422,423,246,247,78,79,248,424,425,426,249,250,427,251,428,429,430,37,80,4,81,38,5,39,82,83,431,84,85,432,433,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,434,268,435,436,437,438,439,440,86,269,87,88,89,90,40,41,42,441,442,443,43,270,271,272,444,273,7,8,274,275,276,277,278,279,445,280,446,281,282,447,283,448,449,284,450,285,46,451,452,453,454,455,456,47,286,9,10,287,288,11,12,48,318,457,319,320,458,289,13,459,460,461,462,463,464,465,466,467,14,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,91,493,494,92,93,94,495,95,96,49,97,98,99,100,101,102,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,103,104,105,106,309,107,108,109,310,110,111,112,113,496,114,115,311,312],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[497],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[75,206,207,498,309],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[340,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[124,125,51],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[461,465],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[138,151,58,502],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[0,1,2,3,4,5,44,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[123,337,124,503,504,505,359,360,361,177,362,363,178,364,365,366,367,368,369,370,371,372,179,373,374,375,376,377,180,378,379,194,198,381,394,396,398,400,506,401,311,312],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[211,217,224,225,242,256,261,275,494,292,298,305,306],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[404],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,14],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[124,125,51,315],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[53,138,139,141,142,143,144,148,149,150,151,152,156,157,158,191,238,241,242,243,244,245,246,247,248,81,257,258,259,260,261,262,263,311,311,312,312],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[53,135,138,139,22,140,141,142,143,144,145,146,55,56,147,148,116,149,150,23,151,152,153,154,155,57,58,156,157,158,166,167,171,186,67,68,187,188,69,70,71,72,189,190,191,192,73,238,239,246,247,78,79,248,4,81,257,258,259,260,261,262,263,278,14,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[324],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"defaultValue","properties":"properties","key":"defaultValue"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[499,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[345,170],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[507,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[426],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[117,118,119,120,50,121,15,122,123,124,125,51,16,52,53,17,0,18,54,126,127,128,129,130,19,131,132,133,134,341,135,136,20,137,21,138,139,22,140,141,142,143,144,145,146,56,147,148,116,149,150,23,151,152,153,154,155,57,58,156,157,158,159,160,161,24,162,59,163,25,26,164,165,27,60,61,62,166,167,168,169,170,171,172,173,174,175,176,63,64,65,66,177,178,179,180,28,181,182,1,29,30,183,184,185,2,3,31,32,186,67,68,187,188,69,70,71,72,189,190,191,192,73,74,193,194,195,196,197,198,199,200,201,202,203,204,33,75,205,206,207,34,35,36,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,76,316,229,230,231,77,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,78,79,248,249,250,251,37,80,4,81,38,5,39,82,83,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,434,268,435,436,437,438,439,440,86,269,87,88,89,90,40,41,42,43,270,271,272,273,7,8,274,275,276,277,278,279,445,280,446,281,282,447,283,448,449,284,450,285,452,453,454,47,286,9,10,287,288,11,12,48,318,319,320,289,13,460,14,92,93,94,95,96,49,97,98,99,100,101,102,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,103,104,105,106,309,107,108,109,310,110,111,112,113,496,114,115,311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[123,337,124,503,504,359,360,361,177,362,363,178,364,365,366,367,368,369,370,371,372,179,373,374,375,376,377,180,378,379,194,198,381,394,396,398,400,506,401,311,312],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[313,314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[19,346,358,63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":140,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":479,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":30,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":106,"org.easymock.tests2.DelegateToTest.testReturnException":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":275,"org.easymock.tests.MockingTest.testPartialClassMocking":249,"org.easymock.tests.MockClassControlTest.testToString":435,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":358,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":102,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":160,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":146,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":246,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":266,"org.easymock.samples.ExampleTest.answerVsDelegate":310,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":410,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":429,"org.easymock.tests2.UsageConstraintsTest.testNull":142,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":132,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":27,"org.easymock.tests2.CaptureTest.testPrimitive":187,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":248,"org.easymock.tests.UsageTest.moreThanOneArgument":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":308,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":243,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":431,"org.easymock.tests.UsageTest.argumentsOrdered":12,"org.easymock.tests.UsageVarargTest.varargIntAccepted":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":484,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":257,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":335,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":349,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":261,"org.easymock.tests.ReplayStateInvalidUsageTest.times":449,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests2.DependencyTest.testClassMocking":355,"org.easymock.tests2.AnswerTest.answer":173,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":486,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":120,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":407,"org.easymock.tests2.CaptureTest.testAnd":186,"org.easymock.tests2.UsageTest.strictResetToDefault":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":396,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":271,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":433,"org.easymock.tests2.DelegateToTest.testDelegate":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":304,"org.easymock.tests.LimitationsTest.mockFinalMethod":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":256,"org.easymock.tests2.DependencyTest.testClassMockingSupport":356,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":419,"org.easymock.tests2.CaptureTest.testCapture1_2446744":188,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":118,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":446,"org.easymock.tests.UsageThrowableTest.throwError":231,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":409,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":46,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":245,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":379,"org.easymock.samples.PartialClassMockTest.testGetArea":309,"org.easymock.tests.MockingTest.testInterfaceMocking":427,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":281,"org.easymock.tests2.CompareToTest.testLessOrEqual":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":493,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":456,"org.easymock.tests2.UsageTest.niceToStrict":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":368,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":75,"org.easymock.tests2.MockBuilderTest.testCreateMock":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":375,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":298,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":25,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":406,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":415,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":264,"org.easymock.tests.UsageOverloadedMethodTest.overloading":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":149,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":219,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":316,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":116,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":189,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":495,"org.easymock.tests.MockClassControlTest.testEquals":439,"org.easymock.tests2.EasyMockSupportClassTest.testAll":177,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":119,"org.easymock.tests2.CaptureTest.testCaptureAll":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":254,"org.easymock.tests.MockNameTest.defaultName":468,"org.easymock.tests2.UsageConstraintsTest.testMatches":150,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":244,"org.easymock.samples.ExampleTest.voteForRemovals":113,"org.easymock.tests.UsageVarargTest.allKinds":101,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":273,"org.easymock.samples.BasicClassMockTest.testPrintContent":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":255,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":236,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":332,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":340,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":466,"org.easymock.tests2.UsageConstraintsTest.greaterThan":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":21,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":467,"org.easymock.samples.ExampleTest.voteForRemoval":110,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":345,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":411,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":341,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":103,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":28,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":162,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":274,"org.easymock.tests2.CaptureTest.testCaptureFirst":73,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":59,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":32,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":13,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":215,"org.easymock.tests2.UsageTest.moreThanOneArgument":182,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.CaptureTest.testCapture2_2446744":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":487,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":35,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":100,"org.easymock.tests.GenericTest.testBridgedEquals":404,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":41,"org.easymock.tests.UsageExpectAndReturnTest.longType":211,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":252,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":498,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":307,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":444,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":241,"org.easymock.tests.UsageCallCountTest.tooManyCalls":42,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":294,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":235,"org.easymock.tests.MockingTest.testNiceClassMocking":430,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":193,"org.easymock.tests.MockingTest.testClassMocking":425,"org.easymock.tests2.UsageConstraintsTest.testContains":148,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":269,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":201,"org.easymock.tests2.UsageConstraintsTest.testFind":141,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":230,"org.easymock.tests.MockTypeTest.fromEasyMockClass":408,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":167,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":37,"org.easymock.tests.UsageExpectAndReturnTest.object":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":165,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":96,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":454,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":505,"org.easymock.tests.UsageTest.exactCallCountByLastCall":48,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":441,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":337,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":224,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":319,"org.easymock.tests.MockClassControlTest.testHashCode":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":327,"org.easymock.tests2.EasyMockSupportTest.testVerify":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":370,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":85,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":414,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":117,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":44,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":393,"org.easymock.tests.UsageVarargTest.varargCharAccepted":95,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":459,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":492,"org.easymock.tests2.UsageTest.openCallCountByLastCall":183,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":499,"org.easymock.tests.DefaultClassInstantiatorTest.object":460,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":61,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":413,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":452,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":371,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":385,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":326,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":295,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":421,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":180,"org.easymock.tests2.UsageTest.resumeIfFailure":31,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":277,"org.easymock.tests2.StubTest.stubWithReturnValue":121,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":398,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":58,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":217,"org.easymock.tests2.SerializationTest.testAllMockedMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":485,"org.easymock.samples.SupportTest.voteForRemovals":105,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":301,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":315,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":491,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":313,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":443,"org.easymock.tests.UsageExpectAndThrowTest.object":299,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":154,"org.easymock.tests2.DelegateToTest.testWrongClass":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":262,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":263,"org.easymock.tests.UsageStrictMockTest.range":5,"org.easymock.samples.ConstructorCalledMockTest.testTax":311,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":352,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":164,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":300,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":206,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":450,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":265,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":494,"org.easymock.tests2.CaptureTest.testCaptureNone":72,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":323,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":45,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.UsageVarargTest.varargByteAccepted":99,"org.easymock.tests2.ThreadingTest.testThreadSafe":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":373,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":90,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":455,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":107,"org.easymock.tests2.CaptureTest.testCapture_2617107":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":489,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":79,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":448,"org.easymock.tests2.StubTest.stub":50,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":276,"org.easymock.tests.UsageExpectAndThrowTest.longType":292,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":464,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":283,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":17,"org.easymock.tests2.SerializationTest.testClass":124,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests.LimitationsTest.mockNativeMethod":240,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":403,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":227,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":384,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":54,"org.easymock.tests2.NameTest.nameForMocksControl":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":386,"org.easymock.tests2.MockedExceptionTest.testMockedException":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":363,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":288,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":251,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":293,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":357,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":130,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":207,"org.easymock.tests.MockingTest.testNicePartialClassMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":134,"org.easymock.tests2.CaptureTest.testCaptureLast":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":382,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":317,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":145,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":198,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":155,"org.easymock.tests.MockingTest.testTwoMocks":426,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":297,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":157,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":325,"org.easymock.samples.ExampleTest.removeNonExistingDocument":496,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests.UsageStrictMockTest.differentMethods":39,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":282,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":328,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":462,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":170,"org.easymock.tests2.MockBuilderTest.testCreateMockString":36,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":434,"org.easymock.tests.UsageExpectAndThrowTest.floatType":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":364,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":174,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":338,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":179,"org.easymock.samples.ExampleTest.voteAgainstRemoval":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":480,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":91,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":137,"org.easymock.tests.LimitationsTest.privateConstructor":417,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":504,"org.easymock.tests2.UsageConstraintsTest.testNotNull":156,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":199,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":237,"org.easymock.tests2.UsageTest.defaultResetToNice":185,"org.easymock.samples.ExampleTest.voteAgainstRemovals":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":223,"org.easymock.tests.UsageVarargTest.differentLength":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":383,"org.easymock.tests2.CallbackTest.callback":15,"org.easymock.tests2.UsageConstraintsTest.equals":354,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":343,"org.easymock.tests.UsageTest.openCallCountByLastCall":287,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":78,"org.easymock.tests.UsageCallCountTest.tooFewCalls":88,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":267,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":324,"org.easymock.tests.UsageThrowableTest.throwCheckedException":234,"org.easymock.tests.MockingTest.testStrictClassMocking":424,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":387,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":194,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":284,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":196,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":176,"org.easymock.tests.ObjectMethodsTest.testHashCode":453,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests2.NameTest.nameForNiceMock":65,"org.easymock.tests2.DependencyTest.testInterfaceMocking":159,"org.easymock.samples.ExampleTest.addDocument":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":374,"org.easymock.tests2.DelegateToTest.testStubDelegate":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.AnswerTest.stubAnswer":175,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":81,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":399,"org.easymock.tests.UsageVarargTest.varargLongAccepted":98,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":478,"org.easymock.tests.UsageExpectAndReturnTest.floatType":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":123,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":312,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":458,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":152,"org.easymock.tests.UsageThrowableTest.noUpperLimit":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":334,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":139,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":347,"org.easymock.tests2.SerializationTest.test":125,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":69,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":461,"org.easymock.tests2.UsageConstraintsTest.testSame":143,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":209,"org.easymock.samples.SupportTest.addDocument":104,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":380,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":365,"org.easymock.tests.GenericTest.testPackageScope":228,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":333,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":428,"org.easymock.tests2.NameTest.nameForMock":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":220,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":401,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":212,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":303,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":272,"org.easymock.tests2.MockedExceptionTest.testRealException":202,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":482,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":247,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":285,"org.easymock.tests2.NameTest.nameForStrictMock":64,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":397,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":500,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":133,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":351,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":507,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":463,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":153,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":24,"org.easymock.tests2.CaptureTest.testCaptureRightOne":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":369,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":322,"org.easymock.tests2.UsageConstraintsTest.testOr":144,"org.easymock.tests.UsageRangeTest.combination":43,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":10,"org.easymock.tests2.MockBuilderTest.testWithConstructor":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":366,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":470,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":221,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":465,"org.easymock.tests.UsageVarargTest.varargShortAccepted":97,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":40,"org.easymock.tests2.UsageConstraintsTest.cmpTo":147,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":184,"org.easymock.tests2.CaptureTest.testCaptureFromStub":191,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":280,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":395,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":89,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":222,"org.easymock.tests2.CaptureTest.testCapture":321,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":38,"org.easymock.tests2.UsageConstraintsTest.constraints":22,"org.easymock.samples.ExampleTest.addAndChangeDocument":114,"org.easymock.tests2.ConstraintsToStringTest.notToString":497,"org.easymock.tests.UsageStrictMockTest.testVerify":83,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":115,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":253,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":259,"org.easymock.tests.LimitationsTest.abstractClass":416,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":260,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":26,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":93}}]
