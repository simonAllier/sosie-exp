[{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[223,224],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[259,260,261,262,263],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[2,4,5,264,265,266,15,18,20,21,22,23,24,25,267,55,56,57,58,59,62,63,64,268,269,76,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,121,125,126,127,285,286,145,147,148,149,150,151,154,155,156,157,158,160,161,162,163,167,168,169,170,181,182,183,184,185,287,288,289,290,291,188,189,191,197,292,293,294,295,296,297,298,299,224,300,231,245,258],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[301],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[15,35,41,47,51,53,57,302,301,100,101,107,113,117,119,143,160,175,176,177,203,204,208,210,216,217,222,229,243,246,254,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[255,256,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[304,255,256,257],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[305],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[15,23,306,307,126,127,149],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[0,1,308,309,310,2,3,4,5,6,7,264,265,266,311,8,9,312,313,314,10,11,12,13,14,15,315,316,317,318,16,319,320,321,322,323,324,325,326,327,17,328,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,267,55,329,330,331,332,56,57,58,59,60,61,62,63,64,259,333,334,335,260,261,336,337,338,339,340,341,302,342,262,343,301,344,345,263,346,347,348,349,350,351,352,65,66,67,68,69,70,71,72,73,74,75,353,268,354,355,269,76,270,77,78,79,356,80,81,271,82,83,84,85,86,357,358,359,360,272,361,362,273,274,363,364,365,366,87,88,367,89,368,369,370,90,91,92,93,94,95,371,372,373,374,375,275,376,377,276,277,278,279,280,96,97,281,378,98,282,283,284,379,380,381,382,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,383,384,385,386,387,388,389,390,391,132,133,134,135,136,137,138,139,140,141,142,392,143,393,394,395,396,397,398,399,400,401,402,403,404,405,406,285,286,407,408,409,410,411,412,413,144,414,145,146,147,148,149,150,151,152,153,415,416,417,418,419,420,421,422,154,155,423,424,425,156,157,426,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,427,428,429,181,182,183,184,185,430,287,288,431,432,186,187,289,433,290,434,435,291,188,436,189,437,438,439,440,441,442,305,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,190,191,192,193,194,195,461,462,196,463,464,197,465,198,292,466,293,199,467,468,200,201,202,203,469,204,470,205,206,207,471,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,472,294,473,295,474,296,297,475,298,299,476,477,478,223,479,480,481,482,483,224,300,484,485,486,487,488,225,226,227,228,229,230,231,232,489,233,234,235,236,237,238,490,239,240,241,242,243,244,245,246,247,248,249,250,491,251,252,253,254,255,256,257,258],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[393,394,430,492,436,463],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[138,199,200,201,203,469,204],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[209,211,219,231,237],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[232],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[331,358,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[388,493,494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[232],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[201,202],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[222],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[234,490,248,252],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[0,1,2,4,5,6,7,265,266,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,60,61,62,63,64,333,338,302,301,344,345,65,66,67,68,69,70,71,353,354,355,76,77,78,79,80,81,271,82,83,84,85,86,357,87,88,89,94,372,373,96,97,378,382,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,137,138,139,140,141,142,143,395,396,397,398,399,400,401,285,144,414,145,146,147,148,149,150,151,152,153,422,154,155,423,425,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,173,175,176,177,178,179,180,181,182,183,184,287,186,289,290,188,440,305,452,458,190,191,192,193,194,195,196,465,198,292,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,472,294,473,295,474,296,297,475,298,299,476,477,478,224,229,230,231,232,233,234,235,236,237,238,490,239,240,241,242,243,244,245,246,247,248,249,250,491,251,252,253,254,255,256,257,258],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[309,310,351,352],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[311,8,9,312,313,326,327,17,328,65,274,364,365,366,87,88,89,370,275,278,378,98,282,283,284,379,380,381,384,385,386,387,388,389,391,393,393,394,394,395,398,399,495,415,419,422,154,155,423,156,157,171,172,173,180,427,185,496,287,288,432,186,187,289,290,435,291,188,497,189,437,438,439,440,441,442,305,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,190,191,193,194,195,461,196,463,464,197,465,198,292,466,293,255,257],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[0,9,10,11,12,13,14,15,19,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,60,61,64,66,67,68,69,70,353,354,355,77,78,79,80,81,82,83,84,85,86,90,91,92,93,94,95,96,97,382,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,127,132,133,134,135,136,137,138,139,140,141,142,143,396,397,398,399,400,401,285,144,414,146,147,148,149,150,151,152,153,158,159,160,162,163,164,165,169,170,175,176,177,179,186,289,290,191,194,198,199,200,201,205,206,207,208,209,210,216,217,219,222,472,294,473,295,474,296,297,298,299,476,477,224,232,234,236,237,252,255,256,258],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[237,238],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,264,265,266,8,9,10,11,12,13,14,15,315,316,317,318,16,319,320,321,322,323,324,325,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,353,354,355,76,270,77,78,79,80,81,271,82,83,84,85,86,272,361,362,87,88,89,90,91,92,93,94,95,96,97,378,98,282,283,284,379,380,381,382,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,384,132,133,134,135,136,137,138,139,140,141,142,392,143,393,394,395,396,397,398,399,400,401,285,144,414,145,146,147,148,149,150,151,152,153,422,154,155,423,425,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,287,186,187,289,290,291,188,189,440,305,452,458,190,191,192,193,194,195,461,196,197,465,198,292,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,472,294,473,295,474,296,297,475,298,299,476,477,478,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,491,251,252,253,254,255,256,257,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[354,138,205,207,471,208],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[20,498,499,58,500,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[15,20,23,502,58,59,62,63,270,126,127,149,161,167,168],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[15,20,21,23,24,267,55,57,58,59,62,63,272,273,276,280,281,125,126,127,285,147,149,150,420,160,161,167,168,224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[311,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[13,27,29,30,31,32,33,34,56,61,355,94,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,126,153,158,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[503,504,505],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[248],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[384,132],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[393,394,430,436,463],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[506],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[201,202],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,308,309,310,2,3,4,5,6,7,264,265,266,311,8,9,312,313,10,11,12,13,14,15,315,316,317,318,16,319,320,321,322,323,324,325,326,327,17,328,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,267,55,329,330,331,332,56,57,58,59,60,61,62,63,64,259,333,334,335,260,261,336,337,338,339,340,341,302,342,262,343,301,344,345,263,346,347,348,349,350,351,352,65,66,67,68,69,70,71,72,73,74,75,353,268,354,355,269,76,270,77,78,79,356,80,81,271,82,83,84,85,86,357,358,359,360,272,361,362,273,274,363,364,365,366,367,368,369,370,90,91,92,93,94,95,371,372,373,374,375,275,276,277,278,279,280,96,97,281,378,98,282,283,284,379,380,381,382,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,383,384,385,386,387,388,389,390,391,132,133,134,135,136,137,138,139,140,141,142,392,143,395,396,397,398,399,400,401,402,403,404,405,406,285,286,407,408,409,410,411,412,413,144,414,145,146,147,148,149,150,151,152,153,415,419,420,421,422,154,423,425,426,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,429,181,182,183,184,185,287,288,432,186,187,289,290,291,188,189,437,438,440,442,305,443,444,447,450,452,453,454,455,456,457,458,190,191,192,193,194,195,461,462,196,464,197,465,198,292,466,293,199,467,468,200,201,202,203,469,204,470,205,206,207,471,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,472,294,473,295,474,296,297,475,298,299,476,477,478,223,479,480,481,482,483,224,300,484,485,486,487,488,225,226,227,228,229,230,231,232,489,233,234,235,236,237,238,490,239,240,241,242,243,244,245,246,247,248,249,250,491,251,252,253,254,256,257,258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":232,"org.easymock.tests2.UsageTest.argumentsOrdered":168,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":340,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":163,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":396,"org.easymock.tests2.DelegateToTest.testReturnException":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":91,"org.easymock.tests.MockingTest.testPartialClassMocking":87,"org.easymock.tests.MockClassControlTest.testToString":282,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":429,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":446,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":101,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":305,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":414,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":238,"org.easymock.tests2.UsageTest.wrongArguments":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":10,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":488,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":130,"org.easymock.samples.ExampleTest.answerVsDelegate":138,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":278,"org.easymock.tests2.UsageConstraintsTest.testNull":234,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":369,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":193,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":299,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":381,"org.easymock.tests2.CaptureTest.testPrimitive":212,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":120,"org.easymock.tests.UsageTest.moreThanOneArgument":57,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":134,"org.easymock.tests.UsageTest.argumentsOrdered":63,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":66,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":185,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":417,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":410,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":70,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests.ReplayStateInvalidUsageTest.times":322,"org.easymock.tests2.DependencyTest.testClassMocking":412,"org.easymock.tests2.AnswerTest.answer":199,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":228,"org.easymock.tests2.CaptureTest.testAnd":209,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":377,"org.easymock.tests2.UsageTest.strictResetToDefault":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":431,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":123,"org.easymock.tests2.DelegateToTest.testDelegate":208,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":375,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":116,"org.easymock.tests.LimitationsTest.mockFinalMethod":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":75,"org.easymock.tests2.DependencyTest.testClassMockingSupport":413,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":267,"org.easymock.tests2.CaptureTest.testCapture1_2446744":213,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":114,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":226,"org.easymock.tests.UsageThrowableTest.throwError":27,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":317,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":277,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":411,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":460,"org.easymock.samples.PartialClassMockTest.testGetArea":395,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":318,"org.easymock.tests.MockingTest.testInterfaceMocking":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":67,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":447,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":102,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":274,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":186,"org.easymock.tests2.MockBuilderTest.testCreateMock":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":455,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":485,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":500,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":110,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":296,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":376,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":128,"org.easymock.tests.UsageOverloadedMethodTest.overloading":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":451,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":243,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":46,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":382,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":493,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":242,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":218,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":356,"org.easymock.tests2.EasyMockSupportClassTest.testAll":440,"org.easymock.tests.MockClassControlTest.testEquals":380,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":9,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":73,"org.easymock.tests2.CaptureTest.testCaptureAll":210,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":227,"org.easymock.tests.MockNameTest.defaultName":281,"org.easymock.tests2.UsageConstraintsTest.testMatches":244,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":135,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":315,"org.easymock.samples.ExampleTest.voteForRemovals":142,"org.easymock.tests.UsageVarargTest.allKinds":86,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":125,"org.easymock.samples.BasicClassMockTest.testPrintContent":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":74,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":33,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":145,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":471,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":95,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":390,"org.easymock.tests2.UsageConstraintsTest.greaterThan":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":441,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":292,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":391,"org.easymock.samples.ExampleTest.voteForRemoval":139,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":466,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":176,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":279,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":461,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":158,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":65,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":473,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":90,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":470,"org.easymock.tests2.CaptureTest.testCaptureFirst":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":295,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":42,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":178,"org.easymock.tests2.UsageTest.moreThanOneArgument":160,"org.easymock.tests2.CaptureTest.testCapture2_2446744":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":345,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":85,"org.easymock.tests.GenericTest.testBridgedEquals":313,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":265,"org.easymock.tests.UsageExpectAndReturnTest.longType":38,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":472,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":71,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":497,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":119,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":491,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.UsageCallCountTest.tooManyCalls":266,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":32,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":154,"org.easymock.tests.MockingTest.testNiceClassMocking":370,"org.easymock.tests.MockingTest.testClassMocking":365,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":496,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":3,"org.easymock.tests2.UsageConstraintsTest.testContains":241,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":173,"org.easymock.tests2.UsageConstraintsTest.testFind":233,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":100,"org.easymock.tests.MockTypeTest.fromEasyMockClass":276,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":18,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":204,"org.easymock.tests.UsageExpectAndReturnTest.object":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":298,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":81,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":362,"org.easymock.tests.UsageTest.exactCallCountByLastCall":64,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":261,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":330,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":427,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":51,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":77,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":403,"org.easymock.tests.MockClassControlTest.testHashCode":379,"org.easymock.tests2.EasyMockSupportTest.testVerify":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":449,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":373,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":309,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":225,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":223,"org.easymock.tests.UsageVarargTest.varargCharAccepted":80,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":383,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":349,"org.easymock.tests2.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":503,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":477,"org.easymock.tests.DefaultClassInstantiatorTest.object":384,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":308,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":272,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":450,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":30,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":482,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":402,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":465,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":284,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":52,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":458,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":283,"org.easymock.tests2.UsageTest.resumeIfFailure":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":275,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":93,"org.easymock.tests2.StubTest.stubWithReturnValue":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":433,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":44,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":251,"org.easymock.tests2.SerializationTest.testAllMockedMethod":257,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":301,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":501,"org.easymock.samples.SupportTest.voteForRemovals":401,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":311,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":405,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":113,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":304,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":348,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":467,"org.easymock.tests.UsageExpectAndThrowTest.object":111,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":332,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":249,"org.easymock.tests2.DelegateToTest.testWrongClass":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":96,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":97,"org.easymock.samples.ConstructorCalledMockTest.testTax":393,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":420,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":475,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":422,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":437,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":129,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":498,"org.easymock.tests2.CaptureTest.testCaptureNone":217,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":359,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests.UsageVerifyTest.twoReturns":127,"org.easymock.tests.UsageVarargTest.varargByteAccepted":84,"org.easymock.tests2.ThreadingTest.testThreadSafe":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":453,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":7,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":398,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":273,"org.easymock.tests2.CaptureTest.testCapture_2617107":211,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":346,"org.easymock.tests2.UsageConstraintsTest.any":239,"org.easymock.tests2.StubTest.stub":152,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":321,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageExpectAndThrowTest.longType":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":347,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":388,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":148,"org.easymock.tests2.SerializationTest.testClass":255,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":285,"org.easymock.tests.LimitationsTest.mockNativeMethod":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":54,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":312,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":481,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":151,"org.easymock.tests2.NameTest.nameForMocksControl":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":483,"org.easymock.tests2.MockedExceptionTest.testMockedException":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":442,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":61,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":105,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":89,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":190,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":290,"org.easymock.tests.MockingTest.testNicePartialClassMocking":88,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":195,"org.easymock.tests2.CompareToTest.testNotComparable":506,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":479,"org.easymock.tests2.CaptureTest.testCaptureLast":216,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":55,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":157,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":237,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":250,"org.easymock.tests.MockingTest.testTwoMocks":366,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":109,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":167,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":253,"org.easymock.samples.ExampleTest.removeNonExistingDocument":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":484,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":16,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":404,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":386,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":177,"org.easymock.tests2.MockBuilderTest.testCreateMockString":189,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":443,"org.easymock.tests.UsageExpectAndThrowTest.floatType":103,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":439,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":428,"org.easymock.tests.UsageVerifyTest.twoThrows":126,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":452,"org.easymock.samples.ExampleTest.voteAgainstRemoval":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":341,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":357,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":198,"org.easymock.tests.LimitationsTest.privateConstructor":327,"org.easymock.tests2.UsageConstraintsTest.testNotNull":252,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":34,"org.easymock.tests2.UsageTest.defaultResetToNice":166,"org.easymock.samples.ExampleTest.voteAgainstRemovals":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":302,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":480,"org.easymock.tests.UsageVarargTest.differentLength":271,"org.easymock.tests2.CallbackTest.callback":258,"org.easymock.tests2.UsageConstraintsTest.equals":489,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":463,"org.easymock.tests.UsageTest.openCallCountByLastCall":60,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":229,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":12,"org.easymock.tests.UsageCallCountTest.tooFewCalls":5,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":423,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":131,"org.easymock.tests.UsageThrowableTest.throwCheckedException":31,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":499,"org.easymock.tests.MockingTest.testStrictClassMocking":364,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":300,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":425,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":202,"org.easymock.tests.ObjectMethodsTest.testHashCode":361,"org.easymock.tests2.NameTest.nameForNiceMock":183,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":179,"org.easymock.tests2.DependencyTest.testInterfaceMocking":144,"org.easymock.samples.ExampleTest.addDocument":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":459,"org.easymock.tests2.DelegateToTest.testStubDelegate":206,"org.easymock.tests2.AnswerTest.stubAnswer":201,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":21,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":434,"org.easymock.tests.UsageVarargTest.varargLongAccepted":83,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":339,"org.easymock.tests.UsageExpectAndReturnTest.floatType":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":53,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":180,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":394,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":409,"org.easymock.tests.UsageThrowableTest.noUpperLimit":28,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":247,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":230,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":415,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":214,"org.easymock.tests2.SerializationTest.test":256,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":36,"org.easymock.tests2.UsageConstraintsTest.testSame":235,"org.easymock.samples.SupportTest.addDocument":400,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":424,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":444,"org.easymock.tests.GenericTest.testPackageScope":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":408,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":368,"org.easymock.tests2.NameTest.nameForMock":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":436,"org.easymock.tests2.UsageStrictMockTest.differentMethods":150,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":464,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":39,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":115,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":124,"org.easymock.tests2.MockedExceptionTest.testRealException":174,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":262,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":325,"org.easymock.tests2.NameTest.nameForStrictMock":182,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":432,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":504,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":203,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":419,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":387,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":248,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":306,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":287,"org.easymock.tests2.UsageStrictMockTest.range":149,"org.easymock.tests2.UsageConstraintsTest.lessThan":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":448,"org.easymock.tests2.CaptureTest.testCaptureRightOne":219,"org.easymock.tests2.UsageConstraintsTest.testOr":236,"org.easymock.tests.UsageRangeTest.combination":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":191,"org.easymock.tests.UsageTest.wrongArguments":59,"org.easymock.tests2.MockBuilderTest.testWithConstructor":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":445,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":333,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":389,"org.easymock.tests.UsageVarargTest.varargShortAccepted":82,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":264,"org.easymock.tests2.UsageConstraintsTest.cmpTo":240,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":335,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests2.CaptureTest.testCaptureFromStub":220,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":316,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":288,"org.easymock.tests.UsageTest.unexpectedCallWithArray":58,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":6,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":49,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":22,"org.easymock.tests2.UsageConstraintsTest.constraints":231,"org.easymock.samples.ExampleTest.addAndChangeDocument":143,"org.easymock.tests.UsageStrictMockTest.testVerify":26,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":397,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":72,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":215,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":68,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":41,"org.easymock.tests.LimitationsTest.abstractClass":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":69,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":76,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":297,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":307}}]
