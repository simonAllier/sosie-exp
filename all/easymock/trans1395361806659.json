[{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[6,7,8,9,10,11],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:61","sourceCode":"org.easymock.internal.EasyMockProperties.getClassLoader()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,14,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,13,81,82,83,84,85,86,87,88,89,90,2,91,92,3,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,0,127,128,129,1,130,131,132,133,134,135,12,136,137,138,139,6,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,7,181,182,183,184,185,186,187,188,189,190,191,192,193,194,4,5,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,16,17,438,18,19,20,21,22,23,24,14,439,440,441,442,443,444,445,446,25,26,15,447,448,27,28,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,29,30,31,32,504,505,506,507,508,509,33,34,510,511],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[1],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1495","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2000","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[373],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[61,62,63,64,66,67,80,13,81,82,83,84,85,86,87,88,89,90,91,92,107,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,1,130,131,138,139,140,141,142,143,144,145,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,179,180,7,181,182,183,184,185,186,187,188,189,192,213,214,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,261,262,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,306,308,309,323,325,326,327,328,336,358,359,360,361,362,370,371,372,373,374,375,376,377,378,379,381,382,383,384,385,386,387,388,389,390,393,399,402,403,404,405,406,407,408,409,411,412,413,414,415,416,417,418,419,420,421,422,436,437,16,17,18,19,20,21,22,23,14,439,440,441,442,443,444,445,446,25,26,15,447,448,27,28,449,457,464,467,468,469,470,471,472,473,479,487,488,489,492,494,499,500,501,503,29,30,31,32,504,505,506,507,508,509,33,34,510,511],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[68,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[82,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[512,513,30,507,508,509,510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[48,358,360,402,464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[514,515,516,517,518,519,451],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":17,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests2.UsageTest.argumentsOrdered":382,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":45,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":377,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":306,"org.easymock.tests2.DelegateToTest.testReturnException":499,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":110,"org.easymock.tests.MockingTest.testPartialClassMocking":98,"org.easymock.tests.MockClassControlTest.testToString":257,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":363,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":149,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":339,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":371,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":515,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":250,"org.easymock.tests2.UsageTest.wrongArguments":375,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":463,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":78,"org.easymock.samples.ExampleTest.answerVsDelegate":294,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":73,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":103,"org.easymock.tests2.UsageConstraintsTest.testNull":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":388,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":412,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":262,"org.easymock.tests2.CaptureTest.testPrimitive":32,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":168,"org.easymock.tests.UsageTest.moreThanOneArgument":139,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":287,"org.easymock.tests.UsageTest.argumentsOrdered":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":212,"org.easymock.tests.UsageVarargTest.varargIntAccepted":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":519,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":310,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":425,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":245,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":268,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":457,"org.easymock.tests.ReplayStateInvalidUsageTest.times":208,"org.easymock.tests2.DependencyTest.testClassMocking":368,"org.easymock.tests2.AnswerTest.answer":464,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":332,"org.easymock.tests2.CaptureTest.testAnd":29,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":70,"org.easymock.tests2.UsageTest.strictResetToDefault":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":407,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":239,"org.easymock.tests2.DelegateToTest.testDelegate":503,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":216,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":164,"org.easymock.tests.LimitationsTest.mockFinalMethod":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":135,"org.easymock.tests2.DependencyTest.testClassMockingSupport":369,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":4,"org.easymock.tests2.CaptureTest.testCapture1_2446744":504,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":330,"org.easymock.tests.UsageThrowableTest.throwError":82,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":202,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":72,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":485,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":357,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":271,"org.easymock.samples.PartialClassMockTest.testGetArea":307,"org.easymock.tests.MockingTest.testInterfaceMocking":100,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":150,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":344,"org.easymock.tests2.UsageTest.niceToStrict":376,"org.easymock.tests2.ThreadingTest.testChangeDefault":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":35,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":314,"org.easymock.tests2.MockBuilderTest.testCreateMock":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":352,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":460,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":158,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":10,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":408,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":69,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":148,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":76,"org.easymock.tests.UsageOverloadedMethodTest.overloading":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":354,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":442,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":290,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":441,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":509,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":118,"org.easymock.tests.MockClassControlTest.testEquals":261,"org.easymock.tests2.EasyMockSupportClassTest.testAll":336,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":128,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":133,"org.easymock.tests2.CaptureTest.testCaptureAll":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":331,"org.easymock.tests.MockNameTest.defaultName":199,"org.easymock.tests2.UsageConstraintsTest.testMatches":443,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":288,"org.easymock.samples.ExampleTest.voteForRemovals":298,"org.easymock.tests.UsageVarargTest.allKinds":126,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":134,"org.easymock.samples.BasicClassMockTest.testPrintContent":309,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":88,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":416,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":502,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":114,"org.easymock.tests2.UsageConstraintsTest.greaterThan":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":238,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":399,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":272,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":178,"org.easymock.samples.ExampleTest.voteForRemoval":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":400,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":325,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":391,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":264,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":80,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":372,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":405,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":109,"org.easymock.tests2.CaptureTest.testCaptureFirst":511,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":406,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":384,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":94,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.CaptureTest.testCapture2_2446744":510,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":327,"org.easymock.tests2.UsageTest.moreThanOneArgument":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":321,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":125,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":66,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":403,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":131,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":167,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":447,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":285,"org.easymock.tests.UsageCallCountTest.tooManyCalls":67,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":87,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":490,"org.easymock.tests.MockingTest.testNiceClassMocking":104,"org.easymock.tests.MockingTest.testClassMocking":96,"org.easymock.tests2.UsageConstraintsTest.testContains":440,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":60,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":472,"org.easymock.tests2.UsageConstraintsTest.testFind":18,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":292,"org.easymock.tests.MockTypeTest.fromEasyMockClass":71,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":179,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":360,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":393,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":411,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":516,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":120,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":192,"org.easymock.tests.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":40,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":169,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":451,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":91,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":475,"org.easymock.tests.MockClassControlTest.testHashCode":260,"org.easymock.tests2.EasyMockSupportTest.testVerify":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":346,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":214,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":147,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":329,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":435,"org.easymock.tests.UsageVarargTest.varargCharAccepted":119,"org.easymock.tests2.CaptureTest.testCaptureMultiple":513,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":58,"org.easymock.tests2.UsageTest.openCallCountByLastCall":378,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":414,"org.easymock.tests.DefaultClassInstantiatorTest.object":172,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":146,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":347,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":474,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":397,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":259,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":155,"org.easymock.tests.CapturesMatcherTest.test":512,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.ReplayStateInvalidCallsTest.times":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":196,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":277,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":355,"org.easymock.tests2.UsageTest.resumeIfFailure":383,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":112,"org.easymock.tests2.StubTest.stubWithReturnValue":362,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":514,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":448,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.SerializationTest.testAllMockedMethod":488,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":51,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":11,"org.easymock.samples.SupportTest.voteForRemovals":303,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":161,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":57,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":465,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":171,"org.easymock.tests.UsageExpectAndThrowTest.object":159,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":26,"org.easymock.tests2.DelegateToTest.testWrongClass":501,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":187,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":274,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":188,"org.easymock.tests.UsageStrictMockTest.range":183,"org.easymock.samples.ConstructorCalledMockTest.testTax":304,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":427,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":489,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":160,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":316,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":143,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":77,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":8,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":266,"org.easymock.tests2.CaptureTest.testCaptureNone":508,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":137,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":430,"org.easymock.tests.UsageUnorderedTest.message":130,"org.easymock.tests.UsageVerifyTest.twoReturns":248,"org.easymock.tests.UsageVarargTest.varargByteAccepted":124,"org.easymock.tests2.ThreadingTest.testThreadSafe":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":350,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":64,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":193,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":308,"org.easymock.tests2.CaptureTest.testCapture_2617107":31,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":253,"org.easymock.tests2.UsageConstraintsTest.any":14,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":207,"org.easymock.tests2.StubTest.stub":361,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":198,"org.easymock.tests.UsageExpectAndThrowTest.longType":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":56,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":176,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":206,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":419,"org.easymock.tests2.SerializationTest.testClass":486,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":479,"org.easymock.tests.LimitationsTest.mockNativeMethod":107,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":129,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":454,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":282,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":422,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":431,"org.easymock.tests2.NameTest.nameForMocksControl":367,"org.easymock.tests2.MockedExceptionTest.testMockedException":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":338,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":153,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":101,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":359,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":385,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":317,"org.easymock.tests.MockingTest.testNicePartialClassMocking":99,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":390,"org.easymock.tests2.CaptureTest.testCaptureLast":507,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":452,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":5,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":496,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":22,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":281,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":15,"org.easymock.tests.MockingTest.testTwoMocks":97,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":278,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":157,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":381,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":28,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":434,"org.easymock.samples.ExampleTest.removeNonExistingDocument":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":459,"org.easymock.tests.UsageStrictMockTest.differentMethods":184,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":204,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":476,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":433,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":174,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":326,"org.easymock.tests2.MockBuilderTest.testCreateMockString":322,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":255,"org.easymock.tests.UsageExpectAndThrowTest.floatType":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":340,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":335,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":467,"org.easymock.tests.UsageVerifyTest.twoThrows":247,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":349,"org.easymock.samples.ExampleTest.voteAgainstRemoval":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":46,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":12,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":398,"org.easymock.tests.LimitationsTest.privateConstructor":106,"org.easymock.tests2.UsageConstraintsTest.testNotNull":27,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":470,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":89,"org.easymock.tests2.UsageTest.defaultResetToNice":380,"org.easymock.samples.ExampleTest.voteAgainstRemovals":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":453,"org.easymock.tests.UsageVarargTest.differentLength":121,"org.easymock.tests2.CallbackTest.callback":402,"org.easymock.tests2.UsageConstraintsTest.equals":438,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":394,"org.easymock.tests.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":252,"org.easymock.tests.UsageCallCountTest.tooFewCalls":62,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":492,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":79,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":432,"org.easymock.tests.UsageThrowableTest.throwCheckedException":86,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":9,"org.easymock.tests.MockingTest.testStrictClassMocking":95,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":495,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":81,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":491,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":458,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":494,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":469,"org.easymock.tests.ObjectMethodsTest.testHashCode":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":518,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":280,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":328,"org.easymock.tests2.NameTest.nameForNiceMock":366,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":275,"org.easymock.tests2.DependencyTest.testInterfaceMocking":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":517,"org.easymock.samples.ExampleTest.addDocument":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":351,"org.easymock.tests2.DelegateToTest.testStubDelegate":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.AnswerTest.stubAnswer":468,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":181,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":318,"org.easymock.tests.UsageVarargTest.varargLongAccepted":123,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":44,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":450,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":483,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":446,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":3,"org.easymock.tests.UsageThrowableTest.noUpperLimit":83,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":437,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":423,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":505,"org.easymock.tests2.SerializationTest.test":487,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":173,"org.easymock.tests2.UsageConstraintsTest.testSame":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.samples.SupportTest.addDocument":302,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":493,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":265,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":341,"org.easymock.tests.GenericTest.testPackageScope":127,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":39,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":482,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":102,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":263,"org.easymock.tests2.NameTest.nameForMock":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests2.UsageStrictMockTest.differentMethods":421,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":163,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":240,"org.easymock.tests2.MockedExceptionTest.testRealException":473,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":75,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":49,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":251,"org.easymock.tests2.NameTest.nameForStrictMock":365,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":313,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":426,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":175,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":25,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":311,"org.easymock.tests2.UsageStrictMockTest.range":420,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":269,"org.easymock.tests2.UsageConstraintsTest.lessThan":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":478,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":43,"org.easymock.tests2.CaptureTest.testCaptureRightOne":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":345,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":429,"org.easymock.tests2.UsageConstraintsTest.testOr":21,"org.easymock.tests.UsageRangeTest.combination":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":386,"org.easymock.tests.UsageTest.wrongArguments":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":342,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":177,"org.easymock.tests.UsageVarargTest.varargShortAccepted":122,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":65,"org.easymock.tests2.UsageConstraintsTest.cmpTo":439,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":283,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":466,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":38,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":379,"org.easymock.tests2.CaptureTest.testCaptureFromStub":34,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":201,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":312,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":279,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":63,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.samples.ExampleTest.addAndChangeDocument":300,"org.easymock.tests.UsageStrictMockTest.testVerify":186,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":301,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":132,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":243,"org.easymock.tests.LimitationsTest.abstractClass":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":409,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":116}}]
