[{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[20,21,22,23,13,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[24,25,7,26,9,27,10,11,28,29,30,31,32,33,18,34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[48],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[50],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[51,52,53,54,55,56,57,58,59,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,0,2,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,155,156,156,157],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[81,98,108,155,156,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[20,21,22,23,13,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[174],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[175,176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[177,158,159,160,161,162,163,164,165,167,178,168,169,170,171,172],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[52,49,62,84,179],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[52,49,62,84,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,10,207,208,209,210,211,212,213,214,215,216,217,218,219],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[5,220,15],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[51,52,53,54,55,56,57,58,59,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,0,2,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,155,156,156,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:249","sourceCode":"return ","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:74","sourceCode":"return (this.org.easymock.internal.Invocation.equals(org.easymock.internal.ExpectedInvocation.org.easymock.internal.Invocation)) && ((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","type":"CtReturnImpl"},"failures":[5,25,9,221,222,27,10,11,15,33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":35,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":216,"org.easymock.tests2.UsageTest.argumentsOrdered":6,"org.easymock.tests2.StubTest.stubWithReturnValue":180,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":47,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.MockingTest.testPartialClassMocking":141,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":21,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":131,"org.easymock.tests.MockClassControlTest.testToString":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":199,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":102,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":187,"org.easymock.tests.UsageExpectAndThrowTest.object":197,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":28,"org.easymock.tests2.UsageTest.wrongArguments":4,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":45,"org.easymock.samples.ConstructorCalledMockTest.testTax":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":82,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":198,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":76,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":126,"org.easymock.tests2.CaptureTest.testPrimitive":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":92,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests.UsageTest.moreThanOneArgument":32,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":22,"org.easymock.tests2.CaptureTest.testCaptureNone":166,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageTest.argumentsOrdered":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":109,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":153,"org.easymock.tests2.CaptureTest.testCapture_2617107":160,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":218,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":90,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":75,"org.easymock.tests.UsageExpectAndThrowTest.longType":190,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":150,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":129,"org.easymock.tests2.DependencyTest.testClassMocking":68,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":134,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":50,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":43,"org.easymock.tests2.CaptureTest.testAnd":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":49,"org.easymock.tests2.MockedExceptionTest.testMockedException":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":97,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":191,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":77,"org.easymock.tests.MockingTest.testNicePartialClassMocking":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":202,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":55,"org.easymock.tests.LimitationsTest.mockFinalMethod":130,"org.easymock.tests2.CompareToTest.testNotComparable":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":41,"org.easymock.tests2.CaptureTest.testCaptureLast":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":215,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":87,"org.easymock.tests2.DependencyTest.testClassMockingSupport":69,"org.easymock.tests.MockingTest.testTwoMocks":140,"org.easymock.tests2.CaptureTest.testCapture1_2446744":162,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":5,"org.easymock.tests.UsageThrowableTest.throwError":207,"org.easymock.tests.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":38,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":148,"org.easymock.tests2.MockBuilderTest.testCreateMockString":81,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":40,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":99,"org.easymock.tests.UsageExpectAndThrowTest.floatType":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":94,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":108,"org.easymock.samples.PartialClassMockTest.testGetArea":157,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":188,"org.easymock.tests.LimitationsTest.privateConstructor":128,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":213,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":65,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":74,"org.easymock.tests2.MockBuilderTest.testCreateMock":79,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":111,"org.easymock.tests2.UsageConstraintsTest.equals":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":44,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":113,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":85,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":48,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests.UsageThrowableTest.throwCheckedException":210,"org.easymock.tests2.EasyMockSupportClassTest.testAll":95,"org.easymock.tests.MockClassControlTest.testEquals":125,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":133,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":204,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":23,"org.easymock.tests.MockingTest.testStrictClassMocking":138,"org.easymock.tests2.CaptureTest.testCaptureAll":159,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":86,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":84,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":27,"org.easymock.samples.BasicClassMockTest.testPrintContent":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":115,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":212,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":33,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":96,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":62,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":152,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":56,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":117,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":156,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":145,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":88,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":163,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":78,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":147,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":93,"org.easymock.tests2.CaptureTest.testCaptureFirst":171,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":100,"org.easymock.tests.GenericTest.testPackageScope":132,"org.easymock.tests2.UsageTest.moreThanOneArgument":24,"org.easymock.tests2.CaptureTest.testCapture2_2446744":170,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":80,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":39,"org.easymock.tests.GenericTest.testBridgedEquals":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":205,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":176,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":203,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":59,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":192,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":211,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":83,"org.easymock.tests.MockingTest.testNiceClassMocking":144,"org.easymock.tests.MockingTest.testClassMocking":139,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":175,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":67,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":219,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":73,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":54,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":91,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":29,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":149,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":173,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":57,"org.easymock.tests.ErrorMessageTest.testGetters":30,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":71,"org.easymock.tests2.UsageStrictMockTest.range":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":104,"org.easymock.tests2.CaptureTest.testCaptureRightOne":168,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":52,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":37,"org.easymock.tests.MockClassControlTest.testHashCode":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":101,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":105,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":222,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":185,"org.easymock.tests2.CaptureTest.testCaptureMultiple":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":183,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":182,"org.easymock.tests.DefaultClassInstantiatorTest.object":146,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":184,"org.easymock.tests2.CaptureTest.testCaptureFromStub":169,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":72,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":8,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":209,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":36,"org.easymock.tests2.CaptureTest.testCapture":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":60,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":193,"org.easymock.tests.CapturesMatcherTest.test":172,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":114,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":122,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":164,"org.easymock.tests.LimitationsTest.abstractClass":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":136,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":89}}]
