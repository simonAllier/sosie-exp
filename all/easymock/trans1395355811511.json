[{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[16,17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[20,21,22,23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:98","sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[26,26,27,27,28,16,17,29,30,31,32,33,34,35,36,18,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[46,47,48,49,50,51,52,53,54,26,26,27,27,55,28,56,57,58,59,24,25,60,61,62,63,64,16,65,66,0,67,1,2,68,30,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,32,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,36,166,167,168,169,41,170,171,3,172,173,174,175,176,177,178,179,180,181,182,42,43,183,184,185,186,187,8,9,10,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,11,204,12,13,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,14,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,15,310,311,312,313,314,315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[16,317,318,319,320,321,322,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[144],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[324,325,326],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,2,132,133,135,137,138,143,146,149,155,175,176,8,194,12,13,215,327,328,282,329,305,312,313],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[330],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1,2,157,158,159,160,3,172,178,179,4,5,7,8,9,10,203,11,12,13,14,15,311,314,315],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[47,48,50,51,53,28,59,24,25,60,61,62,63,64,16,0,1,2,30,69,72,73,74,75,76,77,78,79,80,82,83,86,87,88,89,91,92,93,94,95,96,97,98,99,331,32,332,105,107,113,116,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,161,163,333,36,167,168,169,170,171,3,173,175,176,177,180,181,182,42,43,183,334,335,8,10,188,189,190,191,192,336,193,195,196,197,198,199,200,11,12,13,219,45,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,247,268,269,276,277,280,337,281,282,293,294,300,301,302,338,339,340,341,342,305,306,307,308,309,15,312,313,316],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[46,47,48,49,50,51,52,53,343,54,26,27,55,28,56,57,58,59,344,24,25,60,61,345,346,347,348,349,62,350,351,352,353,354,355,356,357,63,64,16,17,65,66,0,67,1,2,68,30,69,70,358,71,72,73,74,75,359,76,77,78,360,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,361,362,99,31,363,100,331,32,332,364,33,101,365,102,103,104,105,106,366,367,368,369,370,107,371,372,373,374,375,376,377,108,109,110,111,378,112,113,114,379,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,380,135,136,137,138,139,140,381,141,142,143,144,145,146,147,148,149,150,151,152,382,153,154,155,156,383,157,158,159,160,161,384,385,162,163,164,165,333,386,387,36,166,167,168,37,38,39,169,41,388,389,390,391,392,393,170,171,3,172,173,174,175,176,177,178,179,180,181,394,395,396,182,397,398,42,399,400,401,402,403,404,405,406,407,43,408,409,410,411,412,183,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,334,335,184,185,186,187,8,9,10,188,189,190,191,192,439,336,440,20,21,441,193,194,195,196,197,198,199,200,201,202,203,11,204,12,13,205,206,442,443,444,445,446,447,448,324,449,450,451,452,453,454,455,456,207,208,209,210,211,212,457,458,459,460,461,462,463,464,213,214,215,216,217,218,465,466,467,44,219,220,45,468,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,469,241,470,242,243,471,244,472,473,245,474,246,475,22,476,477,23,247,478,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,14,479,480,268,481,482,327,328,483,484,269,270,485,271,272,273,274,275,276,277,278,279,280,337,281,282,283,284,285,486,286,287,487,288,289,290,291,292,293,294,295,296,297,298,299,488,489,490,300,301,491,302,492,493,494,495,303,496,497,498,499,500,501,304,502,503,504,505,329,506,507,508,509,510,511,512,338,513,339,514,515,516,517,518,519,520,521,340,341,522,342,305,306,307,308,309,15,310,311,312,313,314,315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[46,47,48,49,50,51,52,53,343,54,56,57,59,24,25,60,61,62,356,357,63,64,65,66,0,67,1,2,68,69,70,71,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,361,362,99,363,100,331,332,364,101,102,103,104,105,106,377,108,109,110,111,378,112,113,114,379,115,116,117,118,119,120,121,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,381,141,142,143,144,145,146,147,148,149,150,151,152,382,153,154,155,156,157,161,384,385,162,163,164,388,391,392,393,170,171,3,172,173,174,175,176,177,178,179,180,181,394,182,398,400,406,409,412,437,438,334,335,184,185,186,187,8,9,10,188,189,190,191,192,336,20,21,441,193,194,195,196,197,198,199,200,201,202,203,11,204,12,13,205,206,442,443,444,523,445,446,447,448,324,449,524,450,451,452,453,454,455,207,208,209,210,211,212,460,464,213,214,215,216,217,218,465,466,467,219,220,468,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,469,241,470,242,243,471,244,472,473,245,474,246,475,22,476,477,23,247,478,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,14,479,268,482,327,328,483,484,269,270,485,271,272,273,274,275,276,277,278,279,280,337,281,282,283,284,285,286,287,487,288,289,290,291,292,293,294,295,296,297,298,299,488,489,490,300,491,492,493,494,495,303,496,497,498,499,500,501,304,502,503,504,518,522,305,306,307,308,309,15,310,311,312,313,314,315,316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[79,81,89,133,134,136,138,139,381,150,154],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[506],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[525],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:89","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:58","sourceCode":"final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation)","type":"CtLocalVariableImpl"},"failures":[46,47,48,49,50,51,52,53,54,26,27,55,28,56,57,58,59,24,25,60,61,62,63,64,16,65,66,0,67,1,2,68,30,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,361,99,100,331,32,332,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,382,153,154,155,156,161,162,163,164,165,333,36,166,167,168,39,169,41,170,171,3,172,173,174,175,176,177,178,179,180,181,182,42,43,183,184,185,186,187,8,9,10,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,11,204,12,13,205,207,208,209,210,211,212,215,216,217,218,465,466,467,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,475,476,477,478,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,14,268,269,270,271,272,273,274,275,276,277,278,279,280,337,281,282,283,284,285,286,287,487,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,307,308,309,15,310,311,312,313,314,315,316],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[241,246],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[379,506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[26,26,27,27,28,56,57,16,30,70,72,73,74,75,77,78,526,93,94,96,97,98,361,99,100,331,32,332,105,165,527,333,386,36,166,167,168,39,169,528,41,182,42,43,183,457,462,219,220,45,268,490,300,301,302,303,304],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[177],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[60,0,79,80,81,82,83,84,85,86,87,88,89,90,91,92,99,101,102,377,131,132,133,134,135,136,137,138,139,140,381,141,142,143,144,145,146,147,148,149,150,151,152,382,153,154,155,156,188,189,190,191,192,203,11,211,14,269,270,276,277,278,279,280,292,293,294],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[529],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[150,151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[97,147],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[384,163,164,510],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[378,113,513],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":134,"org.easymock.tests2.UsageTest.argumentsOrdered":179,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":309,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":513,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":174,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":55,"org.easymock.tests2.DelegateToTest.testReturnException":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":208,"org.easymock.tests.MockingTest.testPartialClassMocking":300,"org.easymock.tests.MockClassControlTest.testToString":496,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":383,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":521,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":248,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":4,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":64,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":436,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":318,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":140,"org.easymock.tests2.UsageTest.wrongArguments":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":276,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":186,"org.easymock.samples.ExampleTest.answerVsDelegate":49,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":462,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":493,"org.easymock.tests2.UsageConstraintsTest.testNull":136,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":501,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests2.CaptureTest.testPrimitive":82,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":280,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":267,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":297,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":482,"org.easymock.tests.UsageTest.argumentsOrdered":315,"org.easymock.tests.UsageVarargTest.varargIntAccepted":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":517,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":188,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":322,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":375,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":192,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":420,"org.easymock.tests.ReplayStateInvalidUsageTest.times":473,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":529,"org.easymock.tests2.DependencyTest.testClassMocking":356,"org.easymock.tests2.AnswerTest.answer":161,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":519,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":111,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":459,"org.easymock.tests2.CaptureTest.testAnd":79,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":100,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":307,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":484,"org.easymock.tests2.DelegateToTest.testDelegate":115,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":419,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":263,"org.easymock.tests.LimitationsTest.mockFinalMethod":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":275,"org.easymock.tests2.DependencyTest.testClassMockingSupport":357,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":20,"org.easymock.tests2.CaptureTest.testCapture1_2446744":83,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":109,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":470,"org.easymock.tests.UsageThrowableTest.throwError":193,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":461,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":414,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":423,"org.easymock.samples.PartialClassMockTest.testGetArea":28,"org.easymock.tests.MockingTest.testInterfaceMocking":491,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":189,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":334,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":403,"org.easymock.tests2.UsageTest.niceToStrict":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":249,"org.easymock.tests2.ThreadingTest.testChangeDefault":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":505,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":36,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":257,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":121,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":458,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":504,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":184,"org.easymock.tests.UsageOverloadedMethodTest.overloading":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":477,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":232,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":337,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":144,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":325,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":486,"org.easymock.tests.MockClassControlTest.testEquals":500,"org.easymock.tests2.EasyMockSupportClassTest.testAll":182,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":220,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":110,"org.easymock.tests2.CaptureTest.testCaptureAll":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":273,"org.easymock.tests.MockNameTest.defaultName":485,"org.easymock.tests2.UsageConstraintsTest.testMatches":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":469,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":298,"org.easymock.samples.ExampleTest.voteForRemovals":53,"org.easymock.tests.UsageVarargTest.allKinds":292,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":8,"org.easymock.samples.BasicClassMockTest.testPrintContent":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":274,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":199,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":212,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":372,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":379,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":524,"org.easymock.tests2.UsageConstraintsTest.greaterThan":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":332,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":424,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":450,"org.easymock.samples.ExampleTest.voteForRemoval":50,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":24,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":364,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":463,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":361,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":416,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":304,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":511,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":118,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":207,"org.easymock.tests2.CaptureTest.testCaptureFirst":92,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":510,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":119,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":181,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":228,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":60,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":520,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":169,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":291,"org.easymock.tests.GenericTest.testBridgedEquals":468,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":466,"org.easymock.tests.UsageExpectAndReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":271,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":528,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":266,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":437,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":382,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":295,"org.easymock.tests.UsageCallCountTest.tooManyCalls":467,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":198,"org.easymock.tests.MockingTest.testNiceClassMocking":494,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":73,"org.easymock.tests.MockingTest.testClassMocking":489,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":527,"org.easymock.tests2.UsageConstraintsTest.testContains":143,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":214,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":105,"org.easymock.tests2.UsageConstraintsTest.testFind":135,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":282,"org.easymock.tests.MockTypeTest.fromEasyMockClass":460,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":102,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests.UsageExpectAndReturnTest.object":231,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":319,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":454,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":525,"org.easymock.tests.UsageTest.exactCallCountByLastCall":316,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":509,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":237,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":283,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":476,"org.easymock.tests.MockClassControlTest.testHashCode":499,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":367,"org.easymock.tests2.EasyMockSupportTest.testVerify":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":405,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":503,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":108,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":377,"org.easymock.tests.UsageVarargTest.varargCharAccepted":286,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":523,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageTest.openCallCountByLastCall":175,"org.easymock.tests.DefaultClassInstantiatorTest.object":445,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":502,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":366,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":498,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":422,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":254,"org.easymock.tests.ReplayStateInvalidCallsTest.times":428,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":442,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":429,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":183,"org.easymock.tests2.UsageTest.resumeIfFailure":180,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":210,"org.easymock.tests2.StubTest.stubWithReturnValue":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":18,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":230,"org.easymock.tests2.SerializationTest.testAllMockedMethod":70,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":518,"org.easymock.samples.SupportTest.voteForRemovals":47,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":260,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":522,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":384,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":440,"org.easymock.tests.UsageExpectAndThrowTest.object":258,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":151,"org.easymock.tests2.DelegateToTest.testWrongClass":114,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":426,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":293,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":294,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":392,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":259,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":167,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":185,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":418,"org.easymock.tests2.CaptureTest.testCaptureNone":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":335,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":290,"org.easymock.tests2.ThreadingTest.testThreadSafe":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":408,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":218,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":455,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":56,"org.easymock.tests2.CaptureTest.testCapture_2617107":81,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":340,"org.easymock.tests2.UsageConstraintsTest.any":141,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":472,"org.easymock.tests2.StubTest.stub":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":209,"org.easymock.tests.UsageExpectAndThrowTest.longType":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":341,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":324,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":244,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":67,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":107,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests.LimitationsTest.mockNativeMethod":268,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":240,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":347,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":434,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":68,"org.easymock.tests2.NameTest.nameForMocksControl":160,"org.easymock.tests2.MockedExceptionTest.testMockedException":104,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":398,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":252,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":302,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":365,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":168,"org.easymock.tests.MockingTest.testNicePartialClassMocking":301,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests2.CaptureTest.testCaptureLast":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":317,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":345,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":21,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":433,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":152,"org.easymock.tests.MockingTest.testTwoMocks":490,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":430,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":256,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":178,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":155,"org.easymock.samples.ExampleTest.removeNonExistingDocument":343,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":368,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":447,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":358,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":25,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":399,"org.easymock.tests.UsageExpectAndThrowTest.floatType":250,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":162,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":29,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":43,"org.easymock.samples.ExampleTest.voteAgainstRemoval":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":339,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":32,"org.easymock.tests.LimitationsTest.privateConstructor":480,"org.easymock.tests2.UsageConstraintsTest.testNotNull":154,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":103,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":200,"org.easymock.tests2.UsageTest.defaultResetToNice":177,"org.easymock.samples.ExampleTest.voteAgainstRemovals":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":514,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":236,"org.easymock.tests.UsageVarargTest.differentLength":487,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":346,"org.easymock.tests2.CallbackTest.callback":71,"org.easymock.tests2.UsageConstraintsTest.equals":380,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":31,"org.easymock.tests.UsageTest.openCallCountByLastCall":312,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":278,"org.easymock.tests.UsageCallCountTest.tooFewCalls":216,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":187,"org.easymock.tests.UsageThrowableTest.throwCheckedException":197,"org.easymock.tests.MockingTest.testStrictClassMocking":488,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":270,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":350,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":245,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":76,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":164,"org.easymock.tests.ObjectMethodsTest.testHashCode":453,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":321,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":432,"org.easymock.tests2.NameTest.nameForNiceMock":159,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":61,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":427,"org.easymock.tests2.DependencyTest.testInterfaceMocking":63,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":320,"org.easymock.samples.ExampleTest.addDocument":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.DelegateToTest.testStubDelegate":113,"org.easymock.tests2.AnswerTest.stubAnswer":163,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":37,"org.easymock.tests.UsageVarargTest.varargLongAccepted":289,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":338,"org.easymock.tests.UsageExpectAndReturnTest.floatType":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":16,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":149,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":23,"org.easymock.tests.UsageThrowableTest.noUpperLimit":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":132,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":388,"org.easymock.tests2.SerializationTest.test":69,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":84,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":326,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":446,"org.easymock.tests2.UsageConstraintsTest.testSame":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":222,"org.easymock.samples.SupportTest.addDocument":46,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":359,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":417,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":400,"org.easymock.tests.GenericTest.testPackageScope":219,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":508,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":373,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":492,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":415,"org.easymock.tests2.NameTest.nameForMock":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":40,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":262,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":308,"org.easymock.tests2.MockedExceptionTest.testRealException":106,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":516,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":393,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":515,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":277,"org.easymock.tests2.NameTest.nameForStrictMock":158,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":391,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":448,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":150,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":5,"org.easymock.tests.ErrorMessageTest.testGetters":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":333,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":421,"org.easymock.tests2.UsageConstraintsTest.lessThan":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":512,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":404,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":330,"org.easymock.tests2.UsageConstraintsTest.testOr":138,"org.easymock.tests.UsageRangeTest.combination":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":94,"org.easymock.tests.UsageTest.wrongArguments":311,"org.easymock.tests2.MockBuilderTest.testWithConstructor":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":401,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":329,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":449,"org.easymock.tests.UsageVarargTest.varargShortAccepted":288,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":465,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":435,"org.easymock.tests2.UsageConstraintsTest.cmpTo":142,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":385,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":507,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":241,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":386,"org.easymock.tests.UsageTest.unexpectedCallWithArray":310,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":431,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":203,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":217,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":235,"org.easymock.tests2.UsageConstraintsTest.constraints":133,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":204,"org.easymock.samples.ExampleTest.addAndChangeDocument":54,"org.easymock.tests.UsageStrictMockTest.testVerify":206,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":58,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":272,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":85,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":526,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":190,"org.easymock.tests.LimitationsTest.abstractClass":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":191,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":122,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":7,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":284}}]
