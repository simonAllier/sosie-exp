[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[4],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12,13,13,14,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,4,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,0,1,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.LastControl:95","failures":[68,69,71,73,74,4,85,90,102,104,112],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[303,66,83,86],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[304,75,80,92],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[6,97,99,100,101,305,211],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[46],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:85","failures":[71,4,85,90],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[5,6,7,8,9,11,12,17,19,20,21,22,23,24,25,26,27,28,29,30,32,34,35,41,42,43,44,46,48,49,50,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,98,99,101,102,103,104,105,106,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,0,1,129,133,134,136,137,139,140,142,144,145,146,147,148,149,151,153,154,155,156,157,158,163,164,165,166,170,177,178,179,180,181,182,183,187,189,190,192,193,196,197,200,201,206,209,211,212,214,216,217,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,251,252,255,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,288,289,290,301,302],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[306,5,6,7,8,307,9,10,308,309,310,311,11,20,21,22,30,312,32,33,34,35,36,41,42,43,44,46,47,48,49,53,54,55,56,61,62,63,65,69,71,73,74,90,97,98,99,101,102,103,109,110,112,115,116,117,118,119,120,121,122,124,125,126,127,0,1,129,132,133,137,139,140,145,148,154,156,157,158,313,177,178,179,180,181,182,314,187,188,189,190,191,192,193,196,197,200,202,203,204,205,206,207,209,211,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,251,253,315,316,317,318,319,320,321,322,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,293,294,295,296,297],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[323,324],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[303,83],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[325,326,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:39","sourceCode":"try {\n    com.google.dexmaker.stock.ProxyBuilder<T> com.google.dexmaker.stock.ProxyBuilder<T> = com.google.dexmaker.stock.ProxyBuilder.com.google.dexmaker.stock.ProxyBuilder.forClass(java.lang.Class<T>).handler(org.easymock.internal.AndroidClassProxyFactory.MockHandler);\n    if (org.easymock.ConstructorArgs != null) {\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n    } else {\n        try {\n            org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n            java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n            java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n            com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n        } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n        }\n    }\n    return com.google.dexmaker.stock.ProxyBuilder<T>.build();\n} catch (java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:169","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n    java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n} ","type":"CtIfImpl"},"failures":[328,329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[330,303,331,304,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"position":"org.easymock.internal.RecordState:314","failures":[168,169,299,300],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[68,69,71,73,74,4,85,90,102,104,112],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[306,5,6,7,8,307,9,10,308,309,310,311,11,20,21,22,30,312,32,33,34,35,36,41,42,43,44,46,47,48,49,53,54,55,56,61,62,63,65,69,71,73,74,90,97,98,99,101,102,103,109,110,112,115,116,117,118,119,120,121,122,124,125,126,127,0,1,129,132,133,137,139,140,145,148,154,156,157,158,313,177,178,179,180,181,182,314,187,188,189,190,191,192,193,196,197,200,202,203,204,205,206,207,209,211,212,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,251,253,315,316,317,318,319,320,321,322,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,293,294,295,296,297],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[31,33,34,35,41,42,45,46,47,51,52,53,54,68,82,117,121,122,125,136,141,142,143,145,153,155,163,179,181,182,185,186,188,189,190,192,194,195,198,199,200,334,335,336,337,338,339,340,341],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[130,133,134,342],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[102,104,105,106,107,108,109,111,343,112,113,115],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[179,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[345,346,347,348,349,350,351],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[306,5,6,7,8,307,9,352,10,308,309,310,311,11,12,13,14,15,16,17,18,19,353,354,355,356,357,358,359,20,360,328,361,362,363,364,365,366,21,22,23,24,25,26,367,27,28,29,368,369,370,371,372,373,30,374,329,375,376,377,378,31,312,32,33,34,35,36,379,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,380,381,382,383,384,385,386,387,388,389,57,390,391,58,392,393,394,395,396,397,398,399,400,59,401,402,403,404,405,60,406,407,61,62,63,64,65,66,67,68,69,408,70,71,72,73,74,75,4,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,409,93,410,411,412,94,413,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,0,1,2,129,130,131,132,133,134,135,414,136,415,416,417,137,138,139,418,140,419,420,141,142,421,143,144,145,146,147,148,149,150,422,151,423,424,152,153,154,155,425,426,156,157,158,159,160,161,162,163,164,165,166,167,168,169,427,170,313,171,428,429,430,431,432,433,434,435,436,172,173,174,175,176,177,178,179,180,181,182,437,438,305,439,440,441,342,442,443,444,445,446,447,448,449,450,183,451,452,453,454,455,184,456,185,314,186,187,188,189,190,191,457,192,193,194,195,196,197,198,199,200,458,459,201,460,202,203,204,205,206,207,208,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,315,316,479,317,318,336,319,320,321,322,254,480,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,481,482,287,288,289,483,290,484,485,486,487,488,291,489,490,491,337,338,339,492,493,494,495,496,497,498,499,500,292,501,293,294,295,296,297,298,299,300,502,503,323,504,505,506,324,507,508,341,301,302,509],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[31,33,34,41,42,45,46,47,51,52,54,68,82,117,121,122,125,145,153,155,179,181,182,185,186,188,189,192,194,195,198,199,200,335,215,336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[34,181,182,189,510],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":69,"org.easymock.tests2.UsageTest.argumentsOrdered":52,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":445,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":47,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":306,"org.easymock.tests2.DelegateToTest.testReturnException":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":203,"org.easymock.tests.MockingTest.testPartialClassMocking":288,"org.easymock.tests.MockClassControlTest.testToString":494,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":409,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":264,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":345,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":75,"org.easymock.tests2.UsageTest.wrongArguments":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":216,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":161,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":434,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":485,"org.easymock.tests2.UsageConstraintsTest.testNull":71,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":147,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests2.CaptureTest.testPrimitive":105,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":220,"org.easymock.tests.UsageTest.moreThanOneArgument":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":283,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":295,"org.easymock.tests.UsageTest.argumentsOrdered":199,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":246,"org.easymock.tests.UsageVarargTest.varargIntAccepted":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":350,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":382,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":225,"org.easymock.tests.ReplayStateInvalidUsageTest.times":475,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":20,"org.easymock.tests2.DependencyTest.testClassMocking":365,"org.easymock.tests2.AnswerTest.answer":129,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":451,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":40,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":431,"org.easymock.tests2.CaptureTest.testAnd":102,"org.easymock.tests2.UsageTest.strictResetToDefault":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":416,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":120,"org.easymock.tests2.DelegateToTest.testDelegate":101,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":279,"org.easymock.tests.LimitationsTest.mockFinalMethod":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":176,"org.easymock.tests2.DependencyTest.testClassMockingSupport":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":301,"org.easymock.tests2.CaptureTest.testCapture1_2446744":106,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":38,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":469,"org.easymock.tests.UsageThrowableTest.throwError":255,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":433,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":341,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":407,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.MockingTest.testInterfaceMocking":483,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":470,"org.easymock.tests2.CompareToTest.testLessOrEqual":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":222,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":285,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":396,"org.easymock.tests2.UsageTest.niceToStrict":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":327,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":137,"org.easymock.tests2.MockBuilderTest.testCreateMock":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":403,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":273,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":121,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":430,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":169,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":487,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":159,"org.easymock.tests.UsageOverloadedMethodTest.overloading":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":212,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":237,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":79,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":111,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":479,"org.easymock.tests.MockClassControlTest.testEquals":498,"org.easymock.tests2.EasyMockSupportClassTest.testAll":57,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":174,"org.easymock.tests2.CaptureTest.testCaptureAll":103,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":39,"org.easymock.tests.MockNameTest.defaultName":480,"org.easymock.tests2.UsageConstraintsTest.testMatches":81,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":467,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":296,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests.UsageVarargTest.allKinds":254,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":175,"org.easymock.samples.BasicClassMockTest.testPrintContent":310,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":261,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":207,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":329,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":507,"org.easymock.tests2.UsageConstraintsTest.greaterThan":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":164,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":155,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":508,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":425,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":62,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":435,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":383,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":150,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":208,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":118,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":202,"org.easymock.tests2.CaptureTest.testCaptureFirst":115,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":119,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":54,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":233,"org.easymock.tests2.CaptureTest.testCapture2_2446744":114,"org.easymock.tests2.UsageTest.moreThanOneArgument":44,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":452,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":142,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":322,"org.easymock.tests.GenericTest.testBridgedEquals":428,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":338,"org.easymock.tests.UsageExpectAndReturnTest.longType":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":172,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":282,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":88,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":299,"org.easymock.tests.UsageCallCountTest.tooManyCalls":339,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":260,"org.easymock.tests.MockingTest.testNiceClassMocking":486,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":24,"org.easymock.tests.MockingTest.testClassMocking":482,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":488,"org.easymock.tests2.UsageConstraintsTest.testContains":78,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":17,"org.easymock.tests2.UsageConstraintsTest.testFind":70,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":158,"org.easymock.tests.MockTypeTest.fromEasyMockClass":432,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":95,"org.easymock.tests.UsageExpectAndReturnTest.object":236,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":346,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":464,"org.easymock.tests.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":500,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":353,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":242,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":253,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":211,"org.easymock.tests.MockClassControlTest.testHashCode":497,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":370,"org.easymock.tests2.EasyMockSupportTest.testVerify":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":398,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":168,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":37,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":334,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":379,"org.easymock.tests.UsageVarargTest.varargCharAccepted":317,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":502,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":456,"org.easymock.tests2.UsageTest.openCallCountByLastCall":48,"org.easymock.tests.DefaultClassInstantiatorTest.object":503,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":325,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":167,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":462,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":399,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":271,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":258,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":369,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":496,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":153,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":270,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":298,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":60,"org.easymock.tests2.UsageTest.resumeIfFailure":53,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":429,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":205,"org.easymock.tests2.StubTest.stubWithReturnValue":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":418,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":235,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":183,"org.easymock.samples.SupportTest.voteForRemovals":11,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":427,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":276,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":184,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":130,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":501,"org.easymock.tests.UsageExpectAndThrowTest.object":274,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.DelegateToTest.testWrongClass":99,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":177,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":178,"org.easymock.tests.UsageStrictMockTest.range":189,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":385,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":275,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":139,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":387,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":160,"org.easymock.tests2.CaptureTest.testCaptureNone":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":286,"org.easymock.tests.UsageUnorderedTest.message":179,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":340,"org.easymock.tests.UsageVerifyTest.twoReturns":182,"org.easymock.tests.UsageVarargTest.varargByteAccepted":321,"org.easymock.tests2.ThreadingTest.testThreadSafe":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":401,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":491,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":465,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":309,"org.easymock.tests2.CaptureTest.testCapture_2617107":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":219,"org.easymock.tests2.UsageConstraintsTest.any":76,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":474,"org.easymock.tests2.StubTest.stub":55,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":204,"org.easymock.tests.UsageExpectAndThrowTest.longType":267,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":506,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":473,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":33,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":30,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":201,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":245,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":357,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":36,"org.easymock.tests2.NameTest.nameForMocksControl":412,"org.easymock.tests2.MockedExceptionTest.testMockedException":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":391,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":197,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":413,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":268,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":140,"org.easymock.tests.MockingTest.testNicePartialClassMocking":289,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":149,"org.easymock.tests2.CompareToTest.testNotComparable":333,"org.easymock.tests2.CaptureTest.testCaptureLast":109,"org.easymock.tests2.CompareToTest.testCompareEqual":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":355,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":302,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":74,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":87,"org.easymock.tests.MockingTest.testTwoMocks":287,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":272,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":51,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":91,"org.easymock.samples.ExampleTest.removeNonExistingDocument":352,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":471,"org.easymock.tests.UsageStrictMockTest.differentMethods":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":328,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":371,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":504,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":63,"org.easymock.tests2.MockBuilderTest.testCreateMockString":143,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":392,"org.easymock.tests.UsageExpectAndThrowTest.floatType":266,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":132,"org.easymock.tests.UsageVerifyTest.twoThrows":181,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":354,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":59,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":284,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":154,"org.easymock.tests.LimitationsTest.privateConstructor":459,"org.easymock.tests2.UsageConstraintsTest.testNotNull":90,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":262,"org.easymock.tests2.UsageTest.defaultResetToNice":50,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":241,"org.easymock.tests.UsageVarargTest.differentLength":336,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":356,"org.easymock.tests2.CallbackTest.callback":41,"org.easymock.tests2.UsageConstraintsTest.equals":408,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":423,"org.easymock.tests.UsageTest.openCallCountByLastCall":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":66,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":218,"org.easymock.tests.UsageCallCountTest.tooFewCalls":489,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":162,"org.easymock.tests.UsageThrowableTest.throwCheckedException":259,"org.easymock.tests.MockingTest.testStrictClassMocking":481,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":252,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":360,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":476,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":27,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":134,"org.easymock.tests.ObjectMethodsTest.testHashCode":463,"org.easymock.tests2.CompareToTest.testGreateOrEqual":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":349,"org.easymock.tests2.NameTest.nameForNiceMock":411,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":65,"org.easymock.tests2.DependencyTest.testInterfaceMocking":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":347,"org.easymock.samples.ExampleTest.addDocument":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":406,"org.easymock.tests2.DelegateToTest.testStubDelegate":98,"org.easymock.tests2.AnswerTest.stubAnswer":133,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":187,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":419,"org.easymock.tests.UsageVarargTest.varargLongAccepted":320,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.floatType":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":84,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":213,"org.easymock.tests.UsageThrowableTest.noUpperLimit":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":67,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":380,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":107,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":323,"org.easymock.tests2.UsageConstraintsTest.testSame":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":227,"org.easymock.samples.SupportTest.addDocument":311,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":367,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":393,"org.easymock.tests.GenericTest.testPackageScope":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":375,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":484,"org.easymock.tests2.NameTest.nameForMock":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":238,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":421,"org.easymock.tests2.UsageStrictMockTest.differentMethods":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":424,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":230,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":278,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":461,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":166,"org.easymock.tests2.MockedExceptionTest.testRealException":18,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":448,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":478,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":217,"org.easymock.tests2.NameTest.nameForStrictMock":410,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":417,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":326,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":384,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":505,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":85,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":344,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":136,"org.easymock.tests2.UsageStrictMockTest.range":34,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":397,"org.easymock.tests2.CaptureTest.testCaptureRightOne":112,"org.easymock.tests2.UsageConstraintsTest.testOr":73,"org.easymock.tests.UsageRangeTest.combination":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":145,"org.easymock.tests.UsageTest.wrongArguments":195,"org.easymock.tests2.MockBuilderTest.testWithConstructor":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":394,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":493,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":239,"org.easymock.tests.UsageVarargTest.varargShortAccepted":319,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":324,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":337,"org.easymock.tests2.UsageConstraintsTest.cmpTo":77,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":131,"org.easymock.tests2.CompareToTest.testLessThan":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":439,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":49,"org.easymock.tests2.CaptureTest.testCaptureFromStub":113,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":468,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":415,"org.easymock.tests.UsageTest.unexpectedCallWithArray":194,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":240,"org.easymock.tests2.CaptureTest.testCapture":343,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests2.UsageConstraintsTest.constraints":68,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests.UsageStrictMockTest.testVerify":457,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":308,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":173,"org.easymock.tests2.CompareToTest.testGreateThan":303,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":223,"org.easymock.tests.LimitationsTest.abstractClass":458,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":232,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":224,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":510,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":122,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":315}}]
