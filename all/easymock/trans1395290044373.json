[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[2,3,4,5,6],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[137,138,139,301],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[302,303,304,305,306,307,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[309,310,311,312,79,80,86,87,126,128,129,175,218,219,220,313,314,315,257,259,262,263,271,272,274,275],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[13,21,23,25,29,30,33,66,71,72,73,77,80,81,82,86,87,88,89,92,106,124,127,128,129,141,316,317,175,205,219,220,318,319,234,253,254,255,256,258,259,262,263,264,269,271,273,274,275],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[320,321,322],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[21,22,323,67,324,325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[15,17,126,128,129,271,272,274,275,326],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:44","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[104,111,116,327],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[328,329,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[331],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[302,332,333,334,335,303,304,305,336,306,307,337,137,140,308,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[339,146],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[340,309,310,311,312,7,8,9,10,341,342,343,344,345,11,346,347,348,349,350,351,12,13,14,15,16,17,18,352,19,353,354,20,21,22,23,355,356,24,25,26,27,28,29,30,31,32,33,34,35,36,1,357,358,37,38,39,40,41,42,43,44,45,46,47,48,359,360,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,361,66,362,363,364,67,68,69,302,70,365,332,71,72,366,73,367,368,369,370,371,74,372,373,374,375,376,377,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,378,94,95,96,97,98,99,379,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,380,117,118,119,120,381,121,122,123,382,124,125,126,127,128,129,130,131,383,132,384,385,386,387,388,389,390,391,392,393,133,394,395,134,396,397,398,399,400,401,402,403,404,135,405,406,407,408,409,136,410,411,137,138,139,140,308,338,141,412,142,143,144,413,145,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,328,432,433,434,435,436,437,329,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,453,454,455,167,456,331,168,169,457,458,170,171,172,173,174,459,460,461,462,463,464,465,466,467,468,469,175,176,177,178,179,470,471,472,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,473,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,474,475,476,477,478,218,219,220,221,222,223,224,225,479,480,330,481,482,483,484,485,486,0,487,488,226,227,228,229,230,231,232,233,319,234,489,235,236,490,237,491,238,239,492,493,240,241,242,243,244,245,246,247,248,494,495,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,496,497,498,265,266,499,267,500,501,502,268,269,270,271,272,273,274,275,276,326,503,504,505,506,507,508,277,278,279,280,281,509,510,2,3,4,320,5,511,6,282,283,284,285,286,287,288,289,290,512,291,292,293,294,295,296,297,298,299,300],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[77,84,219,228,256,261],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[416],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[12,13,15,16,17,18,19,354,20,21,22,23,355,356,45,46,47,65,66,362,364,67,68,69,70,71,72,73,117,118,120,122,384,388,391,392,133,395,134,396,397,398,400,401,402,403,135,405,406,407,408,409,136,139,439,440,441,442,443,444,445,446,454,455,167,456,331,168,169,457,458,459,464,496,497,498,265,266,267,502,268,510,2,3,4,320,5,6,292,293,296],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[339,146],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[331],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[469],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:163","failures":[353,361,366,294,295],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    this.java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[137,138,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[414,415,491,492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[2,3,4,5,6],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[340,309,310,311,312,7,8,9,10,341,342,343,344,345,11,346,347,348,349,350,351,12,13,14,15,16,17,18,352,19,353,354,20,21,22,23,355,356,24,25,26,27,28,29,30,31,32,33,34,35,36,1,357,358,37,38,39,40,41,42,43,44,45,46,47,48,359,360,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,362,364,67,68,69,70,332,71,72,73,367,368,369,370,371,74,372,373,374,375,376,377,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,378,94,95,96,97,98,99,379,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,383,132,384,388,389,390,391,392,393,133,394,395,134,396,397,398,399,400,401,402,403,404,135,405,406,407,408,409,136,410,411,137,138,139,140,308,141,412,142,143,144,413,145,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,328,432,433,434,435,436,437,329,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,453,454,455,167,456,331,168,169,457,458,170,171,172,173,174,459,462,463,464,465,466,467,468,469,175,176,177,178,179,470,471,472,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,473,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,474,475,476,477,478,218,219,220,221,222,223,224,225,479,480,330,481,482,483,484,485,486,0,487,488,226,227,228,229,230,231,232,233,234,489,235,236,490,237,491,238,239,492,493,240,241,242,243,244,245,246,247,248,494,495,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,496,497,498,265,266,499,267,500,501,502,268,269,270,271,272,273,274,275,276,326,503,504,505,506,507,508,277,278,279,280,281,510,2,3,4,320,5,6,282,283,284,285,286,287,288,289,290,512,291,292,293,294,294,295,295,296,297,298,299,300],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[137,138,139,301],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[352,513,514],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[93,97,379],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[51,53,54,55,56,57,58,60,339,61,62,64],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[302,332,303,304,305,336,337,137,140,308],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[106],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":93,"org.easymock.tests2.UsageTest.argumentsOrdered":87,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":256,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":427,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":82,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":300,"org.easymock.tests2.DelegateToTest.testReturnException":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":242,"org.easymock.tests.MockingTest.testPartialClassMocking":265,"org.easymock.tests.MockClassControlTest.testToString":441,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":340,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":399,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":180,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":134,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":313,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":303,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":99,"org.easymock.tests2.UsageTest.wrongArguments":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":277,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":178,"org.easymock.samples.ExampleTest.answerVsDelegate":286,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":464,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":501,"org.easymock.tests2.UsageConstraintsTest.testNull":95,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":15,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":446,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":33,"org.easymock.tests2.CaptureTest.testPrimitive":54,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":281,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":199,"org.easymock.tests.UsageTest.moreThanOneArgument":257,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":215,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":474,"org.easymock.tests.UsageTest.argumentsOrdered":263,"org.easymock.tests.UsageVarargTest.varargIntAccepted":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":170,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":307,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":386,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":350,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":174,"org.easymock.tests.ReplayStateInvalidUsageTest.times":486,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":74,"org.easymock.tests2.DependencyTest.testClassMocking":359,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":433,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":10,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":461,"org.easymock.tests2.CaptureTest.testAnd":51,"org.easymock.tests2.UsageTest.strictResetToDefault":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":235,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":478,"org.easymock.tests2.DelegateToTest.testDelegate":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":195,"org.easymock.tests.LimitationsTest.mockFinalMethod":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":225,"org.easymock.tests2.DependencyTest.testClassMockingSupport":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":414,"org.easymock.tests2.CaptureTest.testCapture1_2446744":55,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":8,"org.easymock.tests.UsageThrowableTest.throwError":226,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":330,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":463,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":319,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":411,"org.easymock.samples.PartialClassMockTest.testGetArea":296,"org.easymock.tests.MockingTest.testInterfaceMocking":499,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":468,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":400,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":181,"org.easymock.tests2.UsageTest.niceToStrict":81,"org.easymock.tests2.ThreadingTest.testChangeDefault":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":407,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":374,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":189,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":29,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":460,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":494,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":176,"org.easymock.tests.UsageOverloadedMethodTest.overloading":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":104,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":158,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":282,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":103,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":321,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":60,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":473,"org.easymock.tests.MockClassControlTest.testEquals":445,"org.easymock.tests2.EasyMockSupportClassTest.testAll":133,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":197,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":9,"org.easymock.tests2.CaptureTest.testCaptureAll":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":223,"org.easymock.tests.MockNameTest.defaultName":453,"org.easymock.tests2.UsageConstraintsTest.testMatches":105,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":479,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":216,"org.easymock.samples.ExampleTest.voteForRemovals":290,"org.easymock.tests.UsageVarargTest.allKinds":210,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":224,"org.easymock.samples.BasicClassMockTest.testPrintContent":293,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":232,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":124,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":246,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":347,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":511,"org.easymock.tests2.UsageConstraintsTest.greaterThan":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":394,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":489,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":23,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":6,"org.easymock.samples.ExampleTest.voteForRemoval":287,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":41,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":18,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":268,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":26,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":241,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":412,"org.easymock.tests2.CaptureTest.testCaptureFirst":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":27,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":89,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":154,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":43,"org.easymock.tests2.CaptureTest.testCapture2_2446744":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":72,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":209,"org.easymock.tests.GenericTest.testBridgedEquals":458,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":254,"org.easymock.tests.UsageExpectAndReturnTest.longType":150,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":221,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":198,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":490,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":112,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":504,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":213,"org.easymock.tests.UsageCallCountTest.tooManyCalls":255,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":231,"org.easymock.tests.MockingTest.testNiceClassMocking":502,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":118,"org.easymock.tests.MockingTest.testClassMocking":497,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":495,"org.easymock.tests2.UsageConstraintsTest.testContains":102,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":323,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":47,"org.easymock.tests2.UsageConstraintsTest.testFind":94,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":284,"org.easymock.tests.MockTypeTest.fromEasyMockClass":462,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":132,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests.UsageExpectAndReturnTest.object":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":32,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":304,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":450,"org.easymock.tests.UsageTest.exactCallCountByLastCall":264,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":506,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":475,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":163,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":200,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":238,"org.easymock.tests.MockClassControlTest.testHashCode":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":342,"org.easymock.tests2.EasyMockSupportTest.testVerify":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":402,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":476,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":471,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":7,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":316,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":380,"org.easymock.tests.UsageVarargTest.varargCharAccepted":203,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":509,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":438,"org.easymock.tests2.UsageTest.openCallCountByLastCall":83,"org.easymock.tests.DefaultClassInstantiatorTest.object":510,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":470,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":448,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":403,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":341,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":443,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":21,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":186,"org.easymock.tests.CapturesMatcherTest.test":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":503,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":136,"org.easymock.tests2.UsageTest.resumeIfFailure":88,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":459,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":244,"org.easymock.tests2.StubTest.stubWithReturnValue":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":156,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":113,"org.easymock.tests2.SerializationTest.testAllMockedMethod":139,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":432,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":334,"org.easymock.samples.SupportTest.voteForRemovals":299,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":192,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":301,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":329,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":357,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":508,"org.easymock.tests.UsageExpectAndThrowTest.object":190,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":110,"org.easymock.tests2.DelegateToTest.testWrongClass":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":248,"org.easymock.tests.UsageStrictMockTest.range":274,"org.easymock.samples.ConstructorCalledMockTest.testTax":294,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":389,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":31,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":117,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":69,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":391,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":469,"org.easymock.tests2.CaptureTest.testCaptureNone":59,"org.easymock.tests.UsageUnorderedTest.message":175,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":318,"org.easymock.tests.UsageVerifyTest.twoReturns":220,"org.easymock.tests.UsageVarargTest.varargByteAccepted":208,"org.easymock.tests2.ThreadingTest.testThreadSafe":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":405,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":252,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":451,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":292,"org.easymock.tests2.CaptureTest.testCapture_2617107":53,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":280,"org.easymock.tests2.UsageConstraintsTest.any":100,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":485,"org.easymock.tests2.StubTest.stub":75,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndThrowTest.longType":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":243,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":320,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":484,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":127,"org.easymock.tests2.SerializationTest.testClass":137,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":11,"org.easymock.tests.LimitationsTest.mockNativeMethod":167,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":457,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":166,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":325,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":369,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":130,"org.easymock.tests2.NameTest.nameForMocksControl":312,"org.easymock.tests2.MockedExceptionTest.testMockedException":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":395,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":184,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":267,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":12,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":70,"org.easymock.tests.MockingTest.testNicePartialClassMocking":266,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":17,"org.easymock.tests2.CaptureTest.testCaptureLast":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":335,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":367,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":415,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":123,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":98,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":111,"org.easymock.tests.MockingTest.testTwoMocks":498,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":382,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":188,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":86,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":115,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":514,"org.easymock.samples.ExampleTest.removeNonExistingDocument":512,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":482,"org.easymock.tests.UsageStrictMockTest.differentMethods":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":343,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":3,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":42,"org.easymock.tests2.MockBuilderTest.testCreateMockString":73,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":396,"org.easymock.tests.UsageExpectAndThrowTest.floatType":182,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":393,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":37,"org.easymock.tests.UsageVerifyTest.twoThrows":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":338,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":135,"org.easymock.samples.ExampleTest.voteAgainstRemoval":288,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":428,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":22,"org.easymock.tests.LimitationsTest.privateConstructor":455,"org.easymock.tests2.UsageConstraintsTest.testNotNull":114,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":233,"org.easymock.tests2.UsageTest.defaultResetToNice":85,"org.easymock.samples.ExampleTest.voteAgainstRemovals":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":429,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":162,"org.easymock.tests.UsageVarargTest.differentLength":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":368,"org.easymock.tests2.CallbackTest.callback":141,"org.easymock.tests2.UsageConstraintsTest.equals":378,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":353,"org.easymock.tests.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":279,"org.easymock.tests.UsageCallCountTest.tooFewCalls":250,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":179,"org.easymock.tests.UsageThrowableTest.throwCheckedException":230,"org.easymock.tests.MockingTest.testStrictClassMocking":496,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":372,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":0,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":121,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":39,"org.easymock.tests.ObjectMethodsTest.testHashCode":449,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":306,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":44,"org.easymock.tests2.NameTest.nameForNiceMock":311,"org.easymock.tests2.DependencyTest.testInterfaceMocking":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":305,"org.easymock.samples.ExampleTest.addDocument":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":410,"org.easymock.tests2.DelegateToTest.testStubDelegate":143,"org.easymock.tests2.AnswerTest.stubAnswer":38,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":272,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":365,"org.easymock.tests.UsageVarargTest.varargLongAccepted":207,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":165,"org.easymock.tests.UsageExpectAndReturnTest.floatType":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":140,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":295,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":492,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":108,"org.easymock.tests.UsageThrowableTest.noUpperLimit":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":384,"org.easymock.tests2.SerializationTest.test":138,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":56,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":322,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":148,"org.easymock.tests2.UsageConstraintsTest.testSame":96,"org.easymock.samples.SupportTest.addDocument":298,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":381,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":397,"org.easymock.tests.GenericTest.testPackageScope":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":348,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":500,"org.easymock.tests2.NameTest.nameForMock":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":159,"org.easymock.tests2.UsageStrictMockTest.differentMethods":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":366,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":194,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":447,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":236,"org.easymock.tests2.MockedExceptionTest.testRealException":48,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":390,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":430,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":126,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":488,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":278,"org.easymock.tests2.NameTest.nameForStrictMock":310,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":364,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":16,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":388,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":109,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":4,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":66,"org.easymock.tests2.UsageStrictMockTest.range":128,"org.easymock.tests2.UsageConstraintsTest.lessThan":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":401,"org.easymock.tests2.CaptureTest.testCaptureRightOne":61,"org.easymock.tests2.UsageConstraintsTest.testOr":97,"org.easymock.tests.UsageRangeTest.combination":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":13,"org.easymock.tests.UsageTest.wrongArguments":259,"org.easymock.tests2.MockBuilderTest.testWithConstructor":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":398,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":440,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":160,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":5,"org.easymock.tests.UsageVarargTest.varargShortAccepted":206,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":253,"org.easymock.tests2.UsageConstraintsTest.cmpTo":101,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":358,"org.easymock.tests2.CompareToTest.testLessThan":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":84,"org.easymock.tests2.CaptureTest.testCaptureFromStub":62,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":480,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":362,"org.easymock.tests.UsageTest.unexpectedCallWithArray":258,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":271,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":251,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":161,"org.easymock.tests2.CaptureTest.testCapture":339,"org.easymock.tests2.UsageConstraintsTest.constraints":92,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.samples.ExampleTest.addAndChangeDocument":291,"org.easymock.tests.UsageStrictMockTest.testVerify":326,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":297,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":222,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":172,"org.easymock.tests.LimitationsTest.abstractClass":454,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":153,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":493,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":30,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":201,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":315}}]
