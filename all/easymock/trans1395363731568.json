[{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,6,101,102,103,104,105,106,107,108,109,110,111,112,113,7,8,9,10,11,12,17,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,3,223,224,225,226,227,2,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,0,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[47,254,261,279],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[47,48,89,90,100,6,101,102,103,104,105,11,12,17,114,115,116,117,318,155,156,157,158,183,184,185,218,219,319,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,291,292,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[320,321,54,89,322,323],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[324],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[258,259,261,263,264,266,276,281,297,299,307],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:211","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[233,234,235],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[326,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[326],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,103,328,7,8,9,10,11,12,118,119,120,329,186,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[331,332],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[25,26,27,28,29,30,31,37,38,39,40,41,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,100,6,101,102,103,104,105,333,334,335,336,337,112,113,7,8,9,10,11,12,17,114,115,116,117,318,338,339,340,341,121,342,122,123,124,125,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,343,161,162,163,164,165,166,167,168,174,175,176,177,178,179,180,181,182,183,184,185,186,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,3,223,224,225,226,227,229,230,231,232,344,345,346,233,234,235,347,241,348,244,349,319,245,246,247,250,251,252,253,0,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,291,292,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,314,315,317,13,14,15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":259,"org.easymock.tests2.UsageTest.argumentsOrdered":213,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":10,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":208,"org.easymock.tests2.StubTest.stubWithReturnValue":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":280,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":76,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":24,"org.easymock.tests2.SerializationTest.testAllMockedMethod":235,"org.easymock.tests2.DelegateToTest.testReturnException":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":8,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":159,"org.easymock.tests.MockingTest.testPartialClassMocking":64,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":323,"org.easymock.samples.SupportTest.voteForRemovals":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":331,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":146,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":134,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":160,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":2,"org.easymock.tests.UsageExpectAndThrowTest.object":144,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":277,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":201,"org.easymock.tests2.DelegateToTest.testWrongClass":315,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":156,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":265,"org.easymock.tests2.UsageTest.wrongArguments":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":101,"org.easymock.tests.UsageStrictMockTest.range":92,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":336,"org.easymock.samples.ExampleTest.answerVsDelegate":26,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":245,"org.easymock.tests2.UsageConstraintsTest.testNull":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":242,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":196,"org.easymock.tests2.CaptureTest.testPrimitive":300,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":105,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":328,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests.UsageTest.moreThanOneArgument":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":153,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":335,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":286,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":176,"org.easymock.tests2.CaptureTest.testCaptureNone":305,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":98,"org.easymock.tests.UsageUnorderedTest.message":157,"org.easymock.tests.UsageVerifyTest.twoReturns":51,"org.easymock.tests.UsageVarargTest.varargByteAccepted":45,"org.easymock.tests2.ThreadingTest.testThreadSafe":252,"org.easymock.tests.UsageTest.argumentsOrdered":59,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":169,"org.easymock.tests.UsageVarargTest.varargIntAccepted":39,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":125,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":5,"org.easymock.tests2.CaptureTest.testCapture_2617107":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":17,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":104,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":348,"org.easymock.tests2.UsageConstraintsTest.any":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":324,"org.easymock.tests2.StubTest.stub":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":117,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":9,"org.easymock.tests.UsageExpectAndThrowTest.longType":137,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":219,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":296,"org.easymock.tests2.SerializationTest.testClass":233,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":311,"org.easymock.tests.LimitationsTest.mockNativeMethod":154,"org.easymock.tests2.AnswerTest.answer":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":86,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":130,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":346,"org.easymock.tests2.CaptureTest.testAnd":297,"org.easymock.tests2.UsageTest.strictResetToDefault":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":292,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":222,"org.easymock.tests2.NameTest.nameForMocksControl":226,"org.easymock.tests2.MockedExceptionTest.testMockedException":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":175,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":191,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":57,"org.easymock.tests2.DelegateToTest.testDelegate":317,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":173,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":330,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":138,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":284,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":243,"org.easymock.tests.MockingTest.testNicePartialClassMocking":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":149,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":289,"org.easymock.tests2.CaptureTest.testCaptureLast":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":62,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":264,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":341,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":278,"org.easymock.tests.MockingTest.testTwoMocks":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":61,"org.easymock.tests2.CaptureTest.testCapture1_2446744":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":142,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":212,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":282,"org.easymock.tests.UsageThrowableTest.throwError":161,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":333,"org.easymock.tests.UsageStrictMockTest.differentMethods":93,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":0,"org.easymock.tests2.MockBuilderTest.testCreateMockString":349,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":158,"org.easymock.tests.UsageExpectAndThrowTest.floatType":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":178,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":273,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":229,"org.easymock.tests.UsageVerifyTest.twoThrows":50,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":238,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":114,"org.easymock.samples.ExampleTest.voteAgainstRemoval":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":96,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":97,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":294,"org.easymock.tests2.UsageTest.niceToStrict":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":135,"org.easymock.tests2.UsageConstraintsTest.testNotNull":281,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":13,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":168,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":241,"org.easymock.tests2.UsageTest.defaultResetToNice":211,"org.easymock.samples.ExampleTest.voteAgainstRemovals":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":82,"org.easymock.tests.UsageVarargTest.differentLength":42,"org.easymock.tests2.CallbackTest.callback":202,"org.easymock.tests.UsageTest.openCallCountByLastCall":56,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":143,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":192,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":103,"org.easymock.tests.UsageCallCountTest.tooFewCalls":123,"org.easymock.tests.UsageOverloadedMethodTest.overloading":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":271,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":78,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":131,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":270,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":337,"org.easymock.tests.UsageThrowableTest.throwCheckedException":165,"org.easymock.tests2.EasyMockSupportClassTest.testAll":236,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":129,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":151,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":345,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":339,"org.easymock.tests2.CaptureTest.testCaptureAll":298,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":247,"org.easymock.tests2.UsageConstraintsTest.testMatches":272,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":249,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":231,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":177,"org.easymock.samples.ExampleTest.voteForRemovals":30,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":255,"org.easymock.tests2.NameTest.nameForNiceMock":225,"org.easymock.tests.UsageVarargTest.allKinds":47,"org.easymock.tests2.DependencyTest.testInterfaceMocking":200,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":340,"org.easymock.samples.BasicClassMockTest.testPrintContent":33,"org.easymock.samples.ExampleTest.addDocument":29,"org.easymock.tests2.DelegateToTest.testStubDelegate":314,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":167,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":216,"org.easymock.tests2.AnswerTest.stubAnswer":230,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":12,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":90,"org.easymock.tests2.UsageConstraintsTest.greaterThan":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":180,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":295,"org.easymock.tests.UsageVarargTest.varargLongAccepted":44,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":94,"org.easymock.samples.ExampleTest.voteForRemoval":27,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":85,"org.easymock.tests.UsageExpectAndReturnTest.floatType":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":275,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":111,"org.easymock.tests.UsageThrowableTest.noUpperLimit":162,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":257,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":113,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":302,"org.easymock.tests2.SerializationTest.test":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":189,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":163,"org.easymock.tests2.UsageConstraintsTest.testSame":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":68,"org.easymock.samples.SupportTest.addDocument":21,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":7,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":312,"org.easymock.tests2.CaptureTest.testCaptureFirst":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":190,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":74,"org.easymock.tests.GenericTest.testPackageScope":128,"org.easymock.tests2.CaptureTest.testCapture2_2446744":309,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":254,"org.easymock.tests2.UsageTest.moreThanOneArgument":205,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":172,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":244,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":46,"org.easymock.tests.GenericTest.testBridgedEquals":332,"org.easymock.tests2.NameTest.nameForMock":223,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":126,"org.easymock.tests.UsageExpectAndReturnTest.longType":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":318,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":79,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":152,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":279,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":48,"org.easymock.tests2.UsageStrictMockTest.differentMethods":221,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":71,"org.easymock.tests.UsageCallCountTest.tooManyCalls":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":182,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":122,"org.easymock.tests2.MockedExceptionTest.testRealException":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":75,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":218,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":166,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":246,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":342,"org.easymock.tests2.UsageConstraintsTest.testContains":269,"org.easymock.tests2.NameTest.nameForStrictMock":224,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":15,"org.easymock.tests2.UsageConstraintsTest.testFind":260,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":133,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":183,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":288,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":87,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":184,"org.easymock.tests.UsageExpectAndReturnTest.object":77,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":291,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":240,"org.easymock.tests2.UsageStrictMockTest.range":220,"org.easymock.tests2.UsageConstraintsTest.lessThan":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":195,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":41,"org.easymock.tests.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":100,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":188,"org.easymock.tests2.CaptureTest.testCaptureRightOne":307,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":170,"org.easymock.tests2.UsageConstraintsTest.testOr":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageRangeTest.combination":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":285,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":83,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":37,"org.easymock.tests.UsageTest.wrongArguments":55,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":109,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":80,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":35,"org.easymock.tests.UsageVarargTest.varargShortAccepted":43,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":107,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":232,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":319,"org.easymock.tests2.UsageConstraintsTest.cmpTo":268,"org.easymock.tests.UsageVarargTest.varargCharAccepted":40,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":228,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":217,"org.easymock.tests2.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":198,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":34,"org.easymock.tests2.CaptureTest.testCaptureFromStub":308,"org.easymock.tests.UsageTest.unexpectedCallWithArray":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":141,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":164,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":124,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":81,"org.easymock.tests2.CaptureTest.testCapture":327,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":293,"org.easymock.tests2.UsageConstraintsTest.constraints":258,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":91,"org.easymock.samples.ExampleTest.addAndChangeDocument":31,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":140,"org.easymock.tests.CapturesMatcherTest.test":326,"org.easymock.tests.UsageStrictMockTest.testVerify":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":118,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":239,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":338,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":303,"org.easymock.tests2.UsageTest.resumeIfFailure":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":115,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":73,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":193,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":38}}]
