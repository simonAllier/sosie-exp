[{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[1,7,9,10,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[11,12,13,259],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[65],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[6,10,15,17,18,27,28,32,35,36,37,41,44,45,47,48,50,51,55,56,57,58,59,61,62,63,64,69,70,71,72,74,75,81,82,106,107,108,109,132,152,153,156,158,159,160,161,163,164,165,166,168,169,170,171,190,191,195,196,199,200,206,210,212,213,214,215,216,217,218,221,223,224,225,226,228,229,230,231,233,234,235,236,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.Invocation:189","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[140,219,221,235,236,256],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:318","failures":[131,134],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:117","failures":[1,17,18,101,102,104,106,260],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[27,33,39,40,261,262,187,190,197,198,201,202,210,244,245],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[27,33,39,40,261,262,187,190,197,198,201,202,210,244,245],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[263,264,265,266,267,268,269],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[62,76,80],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[272,273],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"symbol","methodName":"symbol"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[78],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return this.org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[0,1,2,3,5,6,274,275,276,276,277,277,278,7,8,9,279,10,11,12,14,280,281,15,16,17,18,23,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,282,283,284,285,286,85,287,288,289,87,88,290,89,90,91,92,291,97,98,292,293,99,100,101,294,295,102,103,104,105,106,107,108,109,110,111,296,297,298,299,300,301,302,303,304,305,306,307,112,113,114,115,116,117,118,308,120,309,260,258,310,121,270,311,312,122,123,124,125,126,131,132,133,134,135,136,137,138,271,313,314,315,139,316,317,318,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,319,320,321,322,323,324,183,325,185,187,188,189,190,191,326,195,196,197,198,199,200,201,202,203,206,327,328,329,210,330,211,212,331,332,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,251,252,253,254,255,256,257,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"control":"control","args":"args","proxy":"proxy","method":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[73,116],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[283,286,87,308,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[108,109,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:54","failures":[11,336,337,338,339,340,341,342,343,344,282,345,346,283,347,348,349,350,351,352,353,354,355,284,356,357,358,359,360,285,361,362,363,364,365],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,366,367,274,368,275,369,276,276,277,277,370,7,8,9,10,11,12,13,14,280,281,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,282,283,284,285,84,85,86,287,288,87,88,290,89,90,91,92,93,94,95,96,291,97,98,292,293,99,100,101,102,103,104,105,106,107,108,109,110,111,296,297,298,299,300,301,302,303,304,305,306,307,371,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,372,373,194,374,335,375,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[376,67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[113,119],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[377,378],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[379,263,264,265,266,267,380,105],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[381,57,74,79],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[382,383,384,385,187,197],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":60,"org.easymock.tests2.UsageTest.argumentsOrdered":40,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":306,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":35,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":370,"org.easymock.tests2.DelegateToTest.testReturnException":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":147,"org.easymock.tests.MockingTest.testPartialClassMocking":253,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":333,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":152,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":283,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":263,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":66,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":122,"org.easymock.tests2.UsageTest.wrongArguments":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":129,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests2.UsageConstraintsTest.testNull":62,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":305,"org.easymock.tests2.CaptureTest.testPrimitive":46,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":171,"org.easymock.tests.UsageTest.moreThanOneArgument":196,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":142,"org.easymock.tests.UsageTest.argumentsOrdered":202,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":320,"org.easymock.tests.UsageVarargTest.varargIntAccepted":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":267,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":241,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests2.AnswerTest.answer":101,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":22,"org.easymock.tests2.CaptureTest.testAnd":43,"org.easymock.tests2.UsageTest.strictResetToDefault":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":300,"org.easymock.tests2.DelegateToTest.testDelegate":10,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":324,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":250,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":315,"org.easymock.tests2.CaptureTest.testCapture1_2446744":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":20,"org.easymock.tests.UsageThrowableTest.throwError":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":362,"org.easymock.samples.PartialClassMockTest.testGetArea":274,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":373,"org.easymock.tests2.CompareToTest.testLessOrEqual":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":238,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":153,"org.easymock.tests2.UsageTest.niceToStrict":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":341,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":85,"org.easymock.tests2.MockBuilderTest.testCreateMock":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":161,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":382,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":301,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":127,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":338,"org.easymock.tests.UsageOverloadedMethodTest.overloading":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":360,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":71,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":330,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":70,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":272,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":52,"org.easymock.tests2.EasyMockSupportClassTest.testAll":282,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":184,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":169,"org.easymock.tests2.CaptureTest.testCaptureAll":44,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":248,"org.easymock.tests2.UsageConstraintsTest.testMatches":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":143,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":181,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":249,"org.easymock.samples.BasicClassMockTest.testPrintContent":367,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":151,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":279,"org.easymock.tests2.UsageConstraintsTest.greaterThan":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":214,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":309,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":108,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":145,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":298,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":146,"org.easymock.tests2.CaptureTest.testCaptureFirst":56,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":299,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":42,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":110,"org.easymock.tests2.UsageTest.moreThanOneArgument":32,"org.easymock.tests2.CaptureTest.testCapture2_2446744":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":87,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":180,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":336,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":246,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":296,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":170,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":140,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":311,"org.easymock.tests.UsageCallCountTest.tooManyCalls":329,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests2.UsageConstraintsTest.testContains":69,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":205,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":91,"org.easymock.tests2.UsageConstraintsTest.testFind":61,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":212,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":18,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":304,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":264,"org.easymock.tests.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":340,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":251,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":269,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":258,"org.easymock.tests2.EasyMockSupportTest.testVerify":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":322,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":19,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":83,"org.easymock.tests.UsageVarargTest.varargCharAccepted":175,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":24,"org.easymock.tests2.UsageTest.openCallCountByLastCall":36,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":307,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":364,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":271,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":134,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":308,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":285,"org.easymock.tests2.UsageTest.resumeIfFailure":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":149,"org.easymock.tests2.StubTest.stubWithReturnValue":16,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":268,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":79,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.SerializationTest.testAllMockedMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":331,"org.easymock.samples.SupportTest.voteForRemovals":275,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":164,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":259,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":332,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":294,"org.easymock.tests.UsageExpectAndThrowTest.object":162,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":77,"org.easymock.tests2.DelegateToTest.testWrongClass":9,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":256,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":257,"org.easymock.tests.UsageStrictMockTest.range":190,"org.easymock.samples.ConstructorCalledMockTest.testTax":276,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":303,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":291,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":287,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":128,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":384,"org.easymock.tests2.CaptureTest.testCaptureNone":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":318,"org.easymock.tests.UsageUnorderedTest.message":210,"org.easymock.tests.UsageVerifyTest.twoReturns":245,"org.easymock.tests.UsageVarargTest.varargByteAccepted":179,"org.easymock.tests2.ThreadingTest.testThreadSafe":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":356,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":209,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":366,"org.easymock.tests2.CaptureTest.testCapture_2617107":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":125,"org.easymock.tests2.UsageConstraintsTest.any":67,"org.easymock.tests2.StubTest.stub":15,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":312,"org.easymock.tests.UsageExpectAndThrowTest.longType":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":148,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":374,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":26,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests.LimitationsTest.mockNativeMethod":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":325,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":29,"org.easymock.tests2.NameTest.nameForMocksControl":96,"org.easymock.tests2.MockedExceptionTest.testMockedException":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":346,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":156,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":255,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":288,"org.easymock.tests.MockingTest.testNicePartialClassMocking":254,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.CaptureTest.testCaptureLast":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":65,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":160,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":81,"org.easymock.tests.UsageStrictMockTest.differentMethods":191,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":194,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":109,"org.easymock.tests2.MockBuilderTest.testCreateMockString":88,"org.easymock.tests.UsageExpectAndThrowTest.floatType":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":102,"org.easymock.tests.UsageVerifyTest.twoThrows":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":284,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":316,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":120,"org.easymock.tests2.UsageConstraintsTest.testNotNull":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":89,"org.easymock.tests2.UsageTest.defaultResetToNice":38,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests.UsageVarargTest.differentLength":319,"org.easymock.tests2.CallbackTest.callback":106,"org.easymock.tests.UsageTest.openCallCountByLastCall":199,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":124,"org.easymock.tests.UsageCallCountTest.tooFewCalls":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":130,"org.easymock.tests.UsageThrowableTest.throwCheckedException":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":252,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":335,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":293,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":266,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":111,"org.easymock.tests2.NameTest.nameForNiceMock":95,"org.easymock.tests2.DependencyTest.testInterfaceMocking":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":265,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.AnswerTest.stubAnswer":103,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":188,"org.easymock.tests.UsageVarargTest.varargLongAccepted":178,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":192,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":105,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":277,"org.easymock.tests.UsageThrowableTest.noUpperLimit":132,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":75,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":58,"org.easymock.tests2.SerializationTest.test":12,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":48,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":273,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":377,"org.easymock.tests2.UsageConstraintsTest.testSame":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.samples.SupportTest.addDocument":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":183,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":323,"org.easymock.tests2.NameTest.nameForMock":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":216,"org.easymock.tests2.MockedExceptionTest.testRealException":92,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":123,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":375,"org.easymock.tests2.NameTest.nameForStrictMock":94,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":17,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":365,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":76,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":286,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":82,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":297,"org.easymock.tests2.CaptureTest.testCaptureRightOne":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.UsageConstraintsTest.testOr":64,"org.easymock.tests.UsageRangeTest.combination":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":113,"org.easymock.tests.UsageTest.wrongArguments":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests.UsageVarargTest.varargShortAccepted":177,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":378,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":327,"org.easymock.tests2.UsageConstraintsTest.cmpTo":68,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":295,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":37,"org.easymock.tests2.CaptureTest.testCaptureFromStub":54,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":372,"org.easymock.tests.UsageTest.unexpectedCallWithArray":197,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":187,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":189,"org.easymock.tests2.UsageConstraintsTest.constraints":59,"org.easymock.samples.ExampleTest.addAndChangeDocument":6,"org.easymock.tests.UsageStrictMockTest.testVerify":193,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":369,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":247,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":239,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":240,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":302}}]
