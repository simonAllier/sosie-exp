[{"transplant":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[7,8,9,10,1,11,2,12,13,3,14,15,16,4,5,17,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"failures":[18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[21,22,20,23,24,25,19],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[26,27,28,24],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[18,21,0,22,33,34,20,35,23,36,37,38,24,39,25,40,41,42,19,43],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,58,59,59,60,61,62,63,64,7,8,65,66,67,68,69,9,10,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,26,95,27,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,18,21,117,0,22,33,34,20,35,23,36,118,119,120,121,122,123,124,125,37,38,126,28,127,24,39,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,25,40,41,42,143,144,145,146,147,148,19,43,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,13,3,14,238,239,15,16,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,29,30,363,364,365,366,367,368,369,370,371,372,373,6,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,31,32,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,448,449,450,451,452,453,61,62,63,64,7,8,65,66,67,68,69,9,10,70,71,72,73,74,75,454,455,76,456,77,78,457,79,80,458,459,81,82,83,84,85,460,86,461,462,87,88,89,90,91,92,93,94,26,95,27,96,97,98,99,100,101,463,102,103,464,104,465,105,106,107,108,109,110,111,112,113,114,115,116,18,21,117,0,22,33,34,20,35,23,36,118,119,120,121,122,123,124,125,37,38,126,28,127,24,39,128,129,130,131,132,133,134,135,136,466,467,468,469,137,138,139,140,141,142,25,40,41,42,143,144,145,146,147,148,19,43,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,470,471,168,169,472,170,171,473,474,475,172,476,173,174,175,176,477,478,177,178,479,480,481,482,179,180,181,483,484,182,183,184,185,186,187,188,189,190,191,485,192,193,194,195,196,197,198,199,486,200,201,202,203,204,205,206,207,208,209,210,211,212,487,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,237,13,3,14,238,239,15,16,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,510,511,512,359,513,360,514,361,362,29,30,363,364,365,366,367,368,369,370,371,372,373,6,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,31,32,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[58,58,59,59,61,62,455,456,458,84,89,90,96,168,473,177,186,193,195,198],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[45,110,112,113,114,269,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[55,56,57,58,58,59,59,61,515,516,76,78,85,88,93,96,98,470,471,168,169,171,473,475,517,172,476,174,175,176,477,178,479,518,480,185,186,188,189,190,191,192,195,196,197,198,217,220,249,250,251,253,260,261,262,510,360,441],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[8,9,10,133,3,14,15,16,246,519,6,376,386,388,389],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[66,10,463,106,107,21,20,35,36,120,37,38,126,127,19,186,197,235,16,246,323,324,326,327,328,329,330,388],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[44,46,47,49,53,57,61,76,78,85,88,111,131,133,134,470,471,168,169,170,171,473,172,174,176,477,479,179,180,185,186,187,188,189,190,192,196,197,198,215,220,227,241,250,251,253,257,258,291,292,293,294,295,296,299,300,302,303,304,306,307,308,309,310,331,332,333,334,374,376,377,403,404,405,406,407,408,409,410,411,414,416],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:381","sourceCode":"while (java.lang.Class<?> != null) {\n    for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n        final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n        if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n            java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[62,520,521,522,523,524,525],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[91,92,93,94,243,337,397,398,399,400,401,402],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[18,21,22,34,20,23,37,24,25,41,19],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[58,59,526,527,193],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[45,110,112,113,114,269,382],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[45,26,27,137,139,140,142,155,280,380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[528],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[529,530],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":21,"org.easymock.tests2.UsageTest.argumentsOrdered":10,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":237,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":277,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":66,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":54,"org.easymock.tests2.DelegateToTest.testReturnException":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":398,"org.easymock.tests.MockingTest.testPartialClassMocking":250,"org.easymock.tests.MockClassControlTest.testToString":442,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":136,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":339,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":180,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":509,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":520,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":35,"org.easymock.tests2.UsageTest.wrongArguments":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":241,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":224,"org.easymock.samples.ExampleTest.answerVsDelegate":45,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":360,"org.easymock.tests2.UsageConstraintsTest.testNull":22,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":188,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":447,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests2.CaptureTest.testPrimitive":42,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":245,"org.easymock.tests.UsageTest.moreThanOneArgument":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":358,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":333,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":417,"org.easymock.tests.UsageTest.argumentsOrdered":16,"org.easymock.tests.UsageVarargTest.varargIntAccepted":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":403,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":524,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":166,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":407,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":493,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests.ReplayStateInvalidUsageTest.times":319,"org.easymock.tests2.DependencyTest.testClassMocking":481,"org.easymock.tests2.AnswerTest.answer":137,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":154,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":512,"org.easymock.tests2.CaptureTest.testAnd":25,"org.easymock.tests2.UsageTest.strictResetToDefault":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":102,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":421,"org.easymock.tests2.DelegateToTest.testDelegate":114,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":492,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":354,"org.easymock.tests.LimitationsTest.mockFinalMethod":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":233,"org.easymock.tests2.DependencyTest.testClassMockingSupport":482,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":264,"org.easymock.tests2.CaptureTest.testCapture1_2446744":143,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":485,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":152,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":313,"org.easymock.tests.UsageThrowableTest.throwError":323,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":513,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":90,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":496,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.MockingTest.testInterfaceMocking":252,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":404,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":459,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":439,"org.easymock.tests2.UsageTest.niceToStrict":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":340,"org.easymock.tests2.ThreadingTest.testChangeDefault":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":267,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":174,"org.easymock.tests2.MockBuilderTest.testCreateMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":461,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":208,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":348,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":103,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":511,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":222,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":87,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":121,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":383,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":302,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":120,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":148,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":425,"org.easymock.tests.MockClassControlTest.testEquals":446,"org.easymock.tests2.EasyMockSupportClassTest.testAll":76,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":261,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":356,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":515,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":153,"org.easymock.tests2.CaptureTest.testCaptureAll":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":231,"org.easymock.tests.MockNameTest.defaultName":338,"org.easymock.tests2.UsageConstraintsTest.testMatches":122,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":311,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":334,"org.easymock.samples.ExampleTest.voteForRemovals":49,"org.easymock.tests.UsageVarargTest.allKinds":433,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":387,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":232,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":329,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":163,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":113,"org.easymock.tests2.UsageConstraintsTest.greaterThan":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":409,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":198,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":497,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":396,"org.easymock.samples.ExampleTest.voteForRemoval":46,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":199,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":213,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":514,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":191,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":489,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":217,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":101,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":397,"org.easymock.tests2.CaptureTest.testCaptureFirst":150,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":463,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":298,"org.easymock.tests2.CaptureTest.testCapture2_2446744":149,"org.easymock.tests2.UsageTest.moreThanOneArgument":7,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":215,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":285,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":432,"org.easymock.tests.GenericTest.testBridgedEquals":263,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":370,"org.easymock.tests.UsageExpectAndReturnTest.longType":294,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":229,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":518,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":357,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":416,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":28,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":331,"org.easymock.tests.UsageCallCountTest.tooManyCalls":371,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":328,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":471,"org.easymock.tests.MockingTest.testNiceClassMocking":256,"org.easymock.tests.MockingTest.testClassMocking":248,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":517,"org.easymock.tests2.UsageConstraintsTest.testContains":119,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":93,"org.easymock.tests2.UsageConstraintsTest.testFind":0,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":236,"org.easymock.tests.MockTypeTest.fromEasyMockClass":359,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":27,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":372,"org.easymock.tests.UsageExpectAndReturnTest.object":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":209,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":528,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":465,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":521,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":427,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":437,"org.easymock.tests.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":272,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":418,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":226,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":17,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":62,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":422,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":307,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":382,"org.easymock.tests.MockClassControlTest.testHashCode":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":157,"org.easymock.tests2.EasyMockSupportTest.testVerify":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":82,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":29,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":151,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":72,"org.easymock.tests.UsageVarargTest.varargCharAccepted":426,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":290,"org.easymock.tests2.UsageTest.openCallCountByLastCall":67,"org.easymock.tests.DefaultClassInstantiatorTest.object":390,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":362,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":435,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":346,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":203,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":156,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":495,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":444,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":345,"org.easymock.tests.CapturesMatcherTest.test":530,"org.easymock.tests.ReplayStateInvalidCallsTest.times":501,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":412,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":502,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":88,"org.easymock.tests2.UsageTest.resumeIfFailure":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":510,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":400,"org.easymock.tests2.StubTest.stubWithReturnValue":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":525,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":127,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":300,"org.easymock.tests2.SerializationTest.testAllMockedMethod":98,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":283,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.samples.SupportTest.voteForRemovals":53,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":159,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":351,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":289,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":138,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":228,"org.easymock.tests.UsageExpectAndThrowTest.object":349,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":38,"org.easymock.tests2.DelegateToTest.testWrongClass":112,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":499,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":257,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":258,"org.easymock.samples.ConstructorCalledMockTest.testTax":58,"org.easymock.tests.UsageStrictMockTest.range":376,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":183,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":104,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":350,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":176,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":223,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":415,"org.easymock.tests2.CaptureTest.testCaptureNone":147,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":449,"org.easymock.tests.UsageUnorderedTest.message":246,"org.easymock.tests.UsageVerifyTest.twoReturns":389,"org.easymock.tests.UsageVarargTest.varargByteAccepted":431,"org.easymock.tests2.ThreadingTest.testThreadSafe":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":460,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":368,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":438,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":41,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":287,"org.easymock.tests2.UsageConstraintsTest.any":36,"org.easymock.tests2.StubTest.stub":73,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":288,"org.easymock.tests.UsageExpectAndThrowTest.longType":342,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":394,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":317,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":132,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":161,"org.easymock.tests2.SerializationTest.testClass":96,"org.easymock.tests.LimitationsTest.mockNativeMethod":220,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":310,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":202,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":507,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":135,"org.easymock.tests2.NameTest.nameForMocksControl":469,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":450,"org.easymock.tests2.MockedExceptionTest.testMockedException":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":77,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":239,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":95,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":343,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":477,"org.easymock.tests.MockingTest.testNicePartialClassMocking":251,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":190,"org.easymock.tests2.CaptureTest.testCaptureLast":146,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":200,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":265,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":506,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":473,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":20,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":126,"org.easymock.tests.MockingTest.testTwoMocks":249,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":503,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":474,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":347,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":39,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":453,"org.easymock.samples.ExampleTest.removeNonExistingDocument":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":207,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":315,"org.easymock.tests.UsageStrictMockTest.differentMethods":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":158,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":452,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":392,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":214,"org.easymock.tests2.MockBuilderTest.testCreateMockString":480,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":457,"org.easymock.tests.UsageExpectAndThrowTest.floatType":341,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":140,"org.easymock.tests.UsageVerifyTest.twoThrows":388,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":85,"org.easymock.samples.ExampleTest.voteAgainstRemoval":47,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":278,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":197,"org.easymock.tests.LimitationsTest.privateConstructor":219,"org.easymock.tests2.UsageConstraintsTest.testNotNull":24,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":330,"org.easymock.tests2.UsageTest.defaultResetToNice":69,"org.easymock.samples.ExampleTest.voteAgainstRemovals":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":306,"org.easymock.tests.UsageVarargTest.differentLength":428,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":201,"org.easymock.tests2.CallbackTest.callback":155,"org.easymock.tests2.UsageConstraintsTest.equals":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":193,"org.easymock.tests.UsageTest.openCallCountByLastCall":238,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":243,"org.easymock.tests.UsageCallCountTest.tooFewCalls":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":169,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":225,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":451,"org.easymock.tests.UsageThrowableTest.throwCheckedException":327,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests.MockingTest.testStrictClassMocking":247,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":337,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":206,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":320,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":170,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":142,"org.easymock.tests.ObjectMethodsTest.testHashCode":436,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":523,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":505,"org.easymock.tests2.NameTest.nameForNiceMock":468,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":216,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":500,"org.easymock.tests2.DependencyTest.testInterfaceMocking":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":522,"org.easymock.samples.ExampleTest.addDocument":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":86,"org.easymock.tests2.DelegateToTest.testStubDelegate":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.AnswerTest.stubAnswer":141,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":374,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":478,"org.easymock.tests.UsageVarargTest.varargLongAccepted":430,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":276,"org.easymock.tests.UsageExpectAndReturnTest.floatType":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":59,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":165,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":125,"org.easymock.tests.UsageThrowableTest.noUpperLimit":324,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":116,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":181,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":144,"org.easymock.tests2.SerializationTest.test":97,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":391,"org.easymock.tests2.UsageConstraintsTest.testSame":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":292,"org.easymock.samples.SupportTest.addDocument":52,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":472,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":490,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":79,"org.easymock.tests.GenericTest.testPackageScope":260,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":271,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":164,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":254,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":488,"org.easymock.tests2.NameTest.nameForMock":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":527,"org.easymock.tests2.UsageStrictMockTest.differentMethods":134,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":353,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":411,"org.easymock.tests2.MockedExceptionTest.testRealException":94,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":361,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":242,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":322,"org.easymock.tests2.NameTest.nameForStrictMock":467,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":173,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":26,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":182,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":393,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":37,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":172,"org.easymock.tests2.UsageStrictMockTest.range":133,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":494,"org.easymock.tests2.UsageConstraintsTest.lessThan":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":160,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":275,"org.easymock.tests2.CaptureTest.testCaptureRightOne":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":81,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":448,"org.easymock.tests2.UsageConstraintsTest.testOr":34,"org.easymock.tests.UsageRangeTest.combination":408,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":186,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests2.MockBuilderTest.testWithConstructor":526,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":80,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":304,"org.easymock.tests.UsageVarargTest.varargShortAccepted":429,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":395,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":369,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":508,"org.easymock.tests2.UsageConstraintsTest.cmpTo":118,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":139,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":270,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests2.CaptureTest.testCaptureFromStub":43,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":312,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":476,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":504,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":305,"org.easymock.tests2.CaptureTest.testCapture":529,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":375,"org.easymock.samples.ExampleTest.addAndChangeDocument":51,"org.easymock.tests.UsageStrictMockTest.testVerify":379,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":60,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":373,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":230,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":516,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":405,"org.easymock.tests.LimitationsTest.abstractClass":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":406,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":464,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":423}}]
