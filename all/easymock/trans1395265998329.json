[{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,0,66,1,2,4,5,6,67,7,9,11,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[18,19,21,23,24,217,35,39,0,1,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[218,219,220,221,222,223,224,225,226,227,228,229,206,207,230],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[231,232,233,234,235,236,237],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[238,239,240,241],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[231,242,243,45,244,232,233,234,245,235,246,75,237],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[45,46,47,247],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[248,249,250,251,252],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[253],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[254,255,256,257,258,259,260,261,262,263,264,265,266,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,267,38,39,40,41,42,268,43,44,269,270,271,272,273,45,46,47,48,274,49,50,51,52,275,53,54,276,55,277,56,57,58,59,60,61,278,279,62,63,64,280,65,0,66,1,2,3,4,5,6,67,7,9,10,281,11,68,282,69,70,71,72,73,74,75,283,76,77,284,218,78,79,285,286,287,288,289,290,80,81,219,82,83,291,292,84,220,221,85,293,86,87,88,89,294,90,91,92,295,93,94,296,297,95,96,298,299,251,252,300,301,302,303,304,97,98,99,100,101,102,103,305,104,105,306,307,308,309,310,106,107,108,109,110,311,311,312,111,112,113,114,115,116,117,313,118,119,120,121,122,123,124,125,127,128,129,314,130,131,315,316,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,157,158,159,317,318,319,160,161,162,223,163,164,165,166,167,320,168,224,169,321,225,170,171,173,322,174,226,227,323,324,228,229,325,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,326,327,328,230],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[329,330,331],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[30,332],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[45,46,47,247],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[33,334],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[231,242,45,232,233,234,245,246,75,237],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[335,88,89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[336],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[254,255,256,257,258,259,260,262,263,264,265,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,269,270,45,46,48,274,49,50,51,52,53,55,60,61,278,279,62,64,0,66,2,3,6,67,7,9,281,11,68,282,70,75,77,218,78,285,286,287,288,289,290,80,81,82,291,292,85,293,86,88,294,295,93,94,296,297,95,96,301,304,97,99,100,102,305,105,306,307,308,309,310,106,107,108,109,110,337,312,111,112,123,338,125,127,128,129,130,131,132,160,161,162,339,340,341,342,343,344,345,346,169,225,170,322,174,323,324,325,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,213,214,215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[254,255,256,257,258,259,260,262,263,264,265,266,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,267,38,39,40,41,46,47,48,274,49,50,51,52,53,277,60,61,278,279,62,63,64,280,65,0,66,1,2,3,4,5,6,67,7,9,10,281,11,68,282,69,70,71,72,73,74,283,76,77,284,218,78,79,285,289,290,80,81,219,82,83,291,292,220,221,85,293,86,87,88,89,294,90,91,92,295,296,297,298,299,300,302,303,304,97,98,99,100,101,102,103,305,104,105,306,307,308,309,310,106,107,108,109,110,312,111,112,113,114,115,116,117,313,118,119,120,121,122,123,124,347,125,127,128,129,314,130,131,315,316,132,348,349,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,350,351,156,157,158,159,318,319,160,161,352,353,162,223,163,320,168,224,169,321,225,170,171,172,173,322,174,227,323,324,228,229,325,175,176,177,178,179,180,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,326,327,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[88,89],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[8,311],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[70,71,72,73,74,290,292,105,309,310,112,314,315,316,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,322,324,175,176,177,178,179,180,328],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[254,255,256,257,258,259,260,262,263,264,265,266,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,267,38,39,40,41,46,47,48,274,49,50,51,52,53,277,60,61,278,279,62,63,64,280,65,0,66,1,2,3,4,5,6,67,7,9,10,281,11,68,282,69,70,71,72,73,74,283,76,77,284,218,78,79,285,289,290,80,81,219,82,83,291,292,220,221,85,293,86,87,88,89,294,90,91,92,295,296,297,298,299,300,302,303,304,97,98,99,100,101,102,103,305,104,105,306,307,308,309,310,106,107,108,109,110,312,111,112,113,114,115,116,117,313,118,119,120,121,122,123,124,347,125,127,128,129,314,130,131,315,316,132,348,349,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,350,351,156,157,158,159,318,319,160,161,352,353,162,223,163,320,168,224,169,321,225,170,171,172,173,322,174,227,323,324,228,229,325,175,176,177,178,179,180,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,326,327,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[354],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[231,232,233,234,235,236,237],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[223,355],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[274,50,52,54,277,77,218,78,224,169,225,170,172,226],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[356,12,13,14,15,254,255,256,257,258,259,260,261,262,263,264,265,266,16,17,18,19,357,20,21,22,23,24,25,217,26,27,28,29,30,31,32,33,34,35,36,37,267,38,39,40,41,42,248,268,358,359,360,43,44,269,231,270,361,242,271,272,249,273,45,46,47,48,274,49,50,51,52,275,362,53,250,363,54,276,55,277,364,365,56,57,58,59,60,61,278,279,62,366,63,64,280,367,65,0,66,1,2,3,4,5,6,67,7,9,10,281,11,368,369,370,371,372,373,374,375,376,377,68,282,69,70,71,72,73,74,75,237,378,283,76,77,284,218,78,79,379,380,381,285,382,383,286,384,385,386,387,388,389,390,391,392,287,393,394,395,396,397,288,398,399,400,401,402,403,404,289,405,406,407,408,409,410,290,80,81,219,82,83,291,292,84,220,221,85,293,86,335,411,87,88,89,412,413,414,415,416,294,417,418,419,420,421,422,90,423,91,92,295,93,94,296,424,297,95,96,425,298,299,251,252,300,301,302,303,304,97,98,99,100,101,102,426,103,305,104,105,306,307,308,309,310,106,107,108,109,110,427,337,428,429,312,111,112,113,114,115,430,116,117,313,118,119,120,121,122,354,123,124,338,347,431,125,126,127,128,129,314,130,131,315,316,132,348,432,433,349,434,435,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,436,153,437,438,439,440,350,351,154,155,156,157,158,159,317,318,319,441,442,443,444,445,446,447,448,160,161,449,352,353,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,162,466,339,340,341,467,468,469,470,471,472,473,474,475,342,476,343,477,478,479,480,481,482,483,484,344,345,485,346,486,238,239,223,163,164,165,166,167,320,168,224,169,321,225,170,171,172,173,322,174,226,227,323,324,228,229,325,487,240,241,175,176,177,178,179,180,181,182,183,184,488,489,490,491,492,493,494,495,496,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,497,498,499,205,206,207,208,209,210,211,212,500,501,502,503,213,214,504,215,505,506,507,326,508,327,328,509,216,230],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":19,"org.easymock.tests2.UsageTest.argumentsOrdered":221,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":322,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":476,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":83,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":300,"org.easymock.tests2.DelegateToTest.testReturnException":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":176,"org.easymock.tests.MockingTest.testPartialClassMocking":213,"org.easymock.tests.MockClassControlTest.testToString":437,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":356,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":387,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":133,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":286,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":282,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":130,"org.easymock.tests2.UsageTest.wrongArguments":219,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":410,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":183,"org.easymock.samples.ExampleTest.answerVsDelegate":98,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":446,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":506,"org.easymock.tests2.UsageConstraintsTest.testNull":21,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":50,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":263,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":351,"org.easymock.tests2.CaptureTest.testPrimitive":2,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":132,"org.easymock.tests.UsageTest.moreThanOneArgument":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":152,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":210,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":449,"org.easymock.tests.UsageTest.argumentsOrdered":229,"org.easymock.tests.UsageVarargTest.varargIntAccepted":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":106,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":236,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":370,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":110,"org.easymock.tests.ReplayStateInvalidUsageTest.times":460,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":289,"org.easymock.tests2.DependencyTest.testClassMocking":376,"org.easymock.tests2.AnswerTest.answer":86,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":482,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":59,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":443,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":258,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":451,"org.easymock.tests2.DelegateToTest.testDelegate":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":148,"org.easymock.tests.LimitationsTest.mockFinalMethod":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":167,"org.easymock.tests2.DependencyTest.testClassMockingSupport":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":497,"org.easymock.tests2.CaptureTest.testCapture1_2446744":3,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":57,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":454,"org.easymock.tests.UsageThrowableTest.throwError":305,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":445,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":431,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":399,"org.easymock.samples.PartialClassMockTest.testGetArea":301,"org.easymock.tests.MockingTest.testInterfaceMocking":504,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":455,"org.easymock.tests2.CompareToTest.testLessOrEqual":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":107,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":340,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":134,"org.easymock.tests2.UsageTest.niceToStrict":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":329,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":43,"org.easymock.tests2.MockBuilderTest.testCreateMock":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":395,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":407,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":142,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":259,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":442,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":239,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":181,"org.easymock.tests.UsageOverloadedMethodTest.overloading":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":30,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":196,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":312,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":29,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":7,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":430,"org.easymock.tests2.EasyMockSupportClassTest.testAll":285,"org.easymock.tests.MockClassControlTest.testEquals":350,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":124,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":58,"org.easymock.tests2.CaptureTest.testCaptureAll":66,"org.easymock.tests.MockNameTest.defaultName":500,"org.easymock.tests2.UsageConstraintsTest.testMatches":31,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":211,"org.easymock.samples.ExampleTest.voteForRemovals":102,"org.easymock.tests.UsageVarargTest.allKinds":122,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":166,"org.easymock.samples.BasicClassMockTest.testPrintContent":299,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":309,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":180,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":367,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":495,"org.easymock.tests2.UsageConstraintsTest.greaterThan":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":126,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":277,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":496,"org.easymock.samples.ExampleTest.voteForRemoval":99,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":61,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":364,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":275,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":173,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":290,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":256,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":175,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":257,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":293,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":192,"org.easymock.tests2.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":279,"org.easymock.tests2.CaptureTest.testCapture2_2446744":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":483,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":272,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":121,"org.easymock.tests.GenericTest.testBridgedEquals":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":318,"org.easymock.tests.UsageExpectAndReturnTest.longType":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":163,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":151,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":429,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":267,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":240,"org.easymock.tests.UsageCallCountTest.tooManyCalls":319,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":308,"org.easymock.tests.MockingTest.testNiceClassMocking":507,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":93,"org.easymock.tests.MockingTest.testClassMocking":502,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":155,"org.easymock.tests2.UsageConstraintsTest.testContains":28,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":73,"org.easymock.tests2.UsageConstraintsTest.testFind":20,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":112,"org.easymock.tests.MockTypeTest.fromEasyMockClass":444,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":91,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":320,"org.easymock.tests.UsageExpectAndReturnTest.object":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":262,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":233,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":349,"org.easymock.tests.UsageTest.exactCallCountByLastCall":325,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":352,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":237,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":113,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":327,"org.easymock.tests.MockClassControlTest.testHashCode":440,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":413,"org.easymock.tests2.EasyMockSupportTest.testVerify":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":390,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":56,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":375,"org.easymock.tests.UsageVarargTest.varargCharAccepted":116,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":488,"org.easymock.tests2.CaptureTest.testCaptureMultiple":333,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":346,"org.easymock.tests2.UsageTest.openCallCountByLastCall":291,"org.easymock.tests.DefaultClassInstantiatorTest.object":489,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":265,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":486,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":432,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":391,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":140,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":412,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":276,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":139,"org.easymock.tests.CapturesMatcherTest.test":311,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":487,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":288,"org.easymock.tests2.UsageTest.resumeIfFailure":85,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":178,"org.easymock.tests2.StubTest.stubWithReturnValue":70,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":231,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":38,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":194,"org.easymock.tests2.SerializationTest.testAllMockedMethod":47,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":481,"org.easymock.samples.SupportTest.voteForRemovals":304,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":354,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":145,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":247,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":485,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":335,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":428,"org.easymock.tests.UsageExpectAndThrowTest.object":143,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":36,"org.easymock.tests2.DelegateToTest.testWrongClass":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":160,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":161,"org.easymock.tests.UsageStrictMockTest.range":225,"org.easymock.samples.ConstructorCalledMockTest.testTax":251,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":373,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":269,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":462,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":182,"org.easymock.tests2.CaptureTest.testCaptureNone":67,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":341,"org.easymock.tests.UsageUnorderedTest.message":223,"org.easymock.tests.UsageVerifyTest.twoReturns":207,"org.easymock.tests.UsageVarargTest.varargByteAccepted":120,"org.easymock.tests2.ThreadingTest.testThreadSafe":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":393,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":159,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":434,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":298,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":499,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":344,"org.easymock.tests2.UsageConstraintsTest.any":26,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":459,"org.easymock.tests2.StubTest.stub":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":177,"org.easymock.tests.UsageExpectAndThrowTest.longType":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":345,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":493,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":458,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":294,"org.easymock.tests.LimitationsTest.mockNativeMethod":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":204,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":402,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":79,"org.easymock.tests2.NameTest.nameForMocksControl":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":404,"org.easymock.tests2.MockedExceptionTest.testMockedException":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":383,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":324,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":423,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":137,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":215,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":48,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":270,"org.easymock.tests.MockingTest.testNicePartialClassMocking":214,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":400,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":244,"org.easymock.tests2.CompareToTest.testCompareEqual":253,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":498,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":96,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":24,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":37,"org.easymock.tests.MockingTest.testTwoMocks":503,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":141,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":220,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":40,"org.easymock.samples.ExampleTest.removeNonExistingDocument":426,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":406,"org.easymock.tests.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":414,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":491,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":278,"org.easymock.tests2.MockBuilderTest.testCreateMockString":273,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":384,"org.easymock.tests.UsageExpectAndThrowTest.floatType":135,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":87,"org.easymock.tests.UsageVerifyTest.twoThrows":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":378,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":287,"org.easymock.samples.ExampleTest.voteAgainstRemoval":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":343,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":55,"org.easymock.tests.LimitationsTest.privateConstructor":465,"org.easymock.tests2.UsageConstraintsTest.testNotNull":39,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":310,"org.easymock.tests2.UsageTest.defaultResetToNice":84,"org.easymock.samples.ExampleTest.voteAgainstRemovals":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":401,"org.easymock.tests.UsageVarargTest.differentLength":313,"org.easymock.tests2.CallbackTest.callback":92,"org.easymock.tests2.UsageConstraintsTest.equals":357,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":250,"org.easymock.tests.UsageTest.openCallCountByLastCall":323,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":315,"org.easymock.tests.UsageCallCountTest.tooFewCalls":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":184,"org.easymock.tests.UsageThrowableTest.throwCheckedException":307,"org.easymock.tests.MockingTest.testStrictClassMocking":501,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":95,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":405,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":94,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":461,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":297,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":89,"org.easymock.tests.ObjectMethodsTest.testHashCode":433,"org.easymock.tests2.CompareToTest.testGreateOrEqual":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":235,"org.easymock.tests2.NameTest.nameForNiceMock":14,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":62,"org.easymock.tests2.DependencyTest.testInterfaceMocking":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":234,"org.easymock.samples.ExampleTest.addDocument":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.DelegateToTest.testStubDelegate":64,"org.easymock.tests2.AnswerTest.stubAnswer":88,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":169,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":361,"org.easymock.tests.UsageVarargTest.varargLongAccepted":119,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":342,"org.easymock.tests.UsageExpectAndReturnTest.floatType":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":75,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":252,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":509,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":420,"org.easymock.tests.UsageThrowableTest.noUpperLimit":104,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":34,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":368,"org.easymock.tests2.SerializationTest.test":46,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":186,"org.easymock.tests2.UsageConstraintsTest.testSame":22,"org.easymock.samples.SupportTest.addDocument":303,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":424,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":385,"org.easymock.tests.GenericTest.testPackageScope":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":419,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":505,"org.easymock.tests2.NameTest.nameForMock":12,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":197,"org.easymock.tests2.UsageStrictMockTest.differentMethods":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":249,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":189,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":147,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":348,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":128,"org.easymock.tests2.MockedExceptionTest.testRealException":74,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":374,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":478,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":77,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":131,"org.easymock.tests2.NameTest.nameForStrictMock":13,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":90,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":51,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":372,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":492,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":35,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":355,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":268,"org.easymock.tests2.UsageStrictMockTest.range":218,"org.easymock.tests2.UsageConstraintsTest.lessThan":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":245,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":389,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":23,"org.easymock.tests.UsageRangeTest.combination":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":274,"org.easymock.tests.UsageTest.wrongArguments":227,"org.easymock.tests2.MockBuilderTest.testWithConstructor":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":386,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":198,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":494,"org.easymock.tests.UsageVarargTest.varargShortAccepted":118,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":317,"org.easymock.tests2.UsageConstraintsTest.cmpTo":27,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":470,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":292,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":453,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":358,"org.easymock.tests.UsageTest.unexpectedCallWithArray":226,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":224,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":158,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":199,"org.easymock.tests2.CaptureTest.testCapture":8,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":321,"org.easymock.samples.ExampleTest.addAndChangeDocument":103,"org.easymock.tests.UsageStrictMockTest.testVerify":172,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":302,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":164,"org.easymock.tests2.CompareToTest.testGreateThan":334,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":108,"org.easymock.tests.LimitationsTest.abstractClass":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":109,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":260}}]
