[{"position":"org.easymock.internal.Range:83","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[56,0,2,3,57,19,20,23,24,58,33,34,36,37,39,40,41,59,60,61,62,63,64,44,65,45,48,49,66,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,56,88,89,90,91,92,93,0,1,2,3,94,95,96,97,98,99,100,101,102,103,57,104,105,106,107,108,109,110,111,112,113,114,115,4,116,117,118,119,120,5,121,122,123,124,125,6,126,127,128,129,130,131,132,7,133,134,135,8,9,136,10,11,12,13,14,137,138,139,140,15,16,141,142,143,17,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,18,191,19,20,192,193,21,22,194,23,24,195,25,196,197,198,199,200,201,202,203,204,58,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,26,27,28,29,235,236,30,237,238,239,31,240,32,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,33,34,35,36,37,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,38,292,293,294,295,296,297,298,299,39,40,41,300,301,59,60,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,42,339,61,340,341,62,342,343,63,344,345,346,64,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,43,44,65,45,46,47,48,49,50,383,384,385,386,387,388,389,390,391,392,393,51,394,395,396,397,398,399,66,400,401,52,402,403,53,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,54,431,432,55,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[141,17,144,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[123],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[68,236,237,238,239,448],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[453,454,33,455,456,65],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[260,457,458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[164],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:173","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError(java.lang.StringBuilder.toString()))","type":"CtThrowImpl"},"failures":[0,3,94,19,26,27,28,29,34,37,266,39,40,41,351,353,354,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[82,83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[112,118],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[194],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:42","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n} else {\n    try {\n        org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n        java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n    } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,3,94,19,34,37,266,39,40,41,302,44,451],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:70","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[152,161,180,185,196,222],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[114,23,48],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[67,68,69,70,71,72,74,84,89,91,93,0,3,94,95,96,97,98,110,111,112,113,115,4,116,117,118,119,5,121,122,123,124,125,6,126,127,128,129,130,132,7,133,134,135,8,9,136,11,12,13,14,137,138,15,16,143,17,144,146,148,149,150,151,154,156,158,459,162,163,166,180,184,185,191,19,192,193,194,195,196,197,198,199,212,460,461,462,463,216,217,26,27,28,29,236,30,239,31,240,32,241,242,243,244,246,247,250,251,252,253,254,265,34,37,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,38,292,293,294,295,296,39,40,41,300,302,464,465,466,338,42,349,351,352,353,354,355,356,373,44,383,384,385,387,388,390,391,392,393,51,394,395,396,397,398,400,401,52,53,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,55,451],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[467],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[468,469,470],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","type":"type","this":"this"}},{"position":"org.easymock.internal.LastControl:48","failures":[67,68,69,70,72,74,471,471,472,472,76,79,84,85,89,91,0,2,3,57,110,111,112,113,115,4,116,117,118,119,5,121,122,123,124,125,6,126,127,128,129,130,132,7,133,134,135,8,136,10,13,14,137,138,139,140,15,16,141,142,143,17,144,146,147,148,149,150,151,154,157,158,159,459,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,181,184,186,187,189,18,191,19,192,21,22,194,195,25,196,197,198,199,58,211,212,460,213,214,461,462,463,216,220,222,227,233,235,236,30,237,238,239,31,240,32,246,248,250,251,252,253,254,34,36,37,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,38,292,293,294,295,296,298,39,40,41,300,301,60,319,325,464,465,466,334,335,336,337,338,42,349,353,380,381,382,43,44,46,47,50,394,395,396,397,398,399,400,401,52,402,403,53,404,405,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,54,431,432,55,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,451],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[463,216,217,473],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests2.UsageTest.argumentsOrdered":24,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":313,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":193,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":77,"org.easymock.tests2.DelegateToTest.testReturnException":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":289,"org.easymock.tests.MockingTest.testPartialClassMocking":464,"org.easymock.tests.MockClassControlTest.testToString":374,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":234,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":411,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":222,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":85,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":401,"org.easymock.tests2.UsageTest.wrongArguments":20,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":243,"org.easymock.samples.ExampleTest.answerVsDelegate":68,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":345,"org.easymock.tests2.UsageConstraintsTest.testNull":4,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":332,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":149,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":176,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":379,"org.easymock.tests2.CaptureTest.testPrimitive":136,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":430,"org.easymock.tests.UsageTest.moreThanOneArgument":44,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":252,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":438,"org.easymock.tests.UsageTest.argumentsOrdered":49,"org.easymock.tests.UsageVarargTest.varargIntAccepted":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":394,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":209,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":398,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":57,"org.easymock.tests.ReplayStateInvalidUsageTest.times":368,"org.easymock.tests2.DependencyTest.testClassMocking":82,"org.easymock.tests2.AnswerTest.answer":16,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":98,"org.easymock.tests2.CaptureTest.testAnd":135,"org.easymock.tests2.UsageTest.strictResetToDefault":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":171,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":295,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":442,"org.easymock.tests2.DelegateToTest.testDelegate":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":426,"org.easymock.tests.LimitationsTest.mockFinalMethod":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":410,"org.easymock.tests2.DependencyTest.testClassMockingSupport":83,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":59,"org.easymock.tests2.CaptureTest.testCapture1_2446744":10,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":153,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":96,"org.easymock.tests.UsageThrowableTest.throwError":431,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":362,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":344,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":254,"org.easymock.samples.PartialClassMockTest.testGetArea":76,"org.easymock.tests.MockingTest.testInterfaceMocking":330,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":395,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":335,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":412,"org.easymock.tests2.UsageTest.niceToStrict":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":225,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":303,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":184,"org.easymock.tests2.MockBuilderTest.testCreateMock":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":106,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":453,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":420,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":172,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":445,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":241,"org.easymock.tests.UsageOverloadedMethodTest.overloading":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":232,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":449,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":279,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":337,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":457,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":123,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":137,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":386,"org.easymock.tests2.EasyMockSupportClassTest.testAll":220,"org.easymock.tests.MockClassControlTest.testEquals":378,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":428,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":408,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":97,"org.easymock.tests2.CaptureTest.testCaptureAll":8,"org.easymock.tests.MockNameTest.defaultName":66,"org.easymock.tests2.UsageConstraintsTest.testMatches":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":253,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":360,"org.easymock.samples.ExampleTest.voteForRemovals":72,"org.easymock.tests.UsageVarargTest.allKinds":51,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":409,"org.easymock.samples.BasicClassMockTest.testPrintContent":81,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":436,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":206,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":292,"org.easymock.tests2.UsageConstraintsTest.greaterThan":126,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":294,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":159,"org.easymock.samples.ExampleTest.voteForRemoval":69,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":263,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":163,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":160,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":346,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":152,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":400,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":169,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":288,"org.easymock.tests2.CaptureTest.testCaptureFirst":15,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":170,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":25,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":452,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":275,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":165,"org.easymock.tests2.CaptureTest.testCapture2_2446744":140,"org.easymock.tests2.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":321,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":393,"org.easymock.tests.GenericTest.testBridgedEquals":249,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":358,"org.easymock.tests.UsageExpectAndReturnTest.longType":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":406,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":429,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":399,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":381,"org.easymock.tests.UsageCallCountTest.tooManyCalls":359,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":416,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":435,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":212,"org.easymock.tests.MockingTest.testNiceClassMocking":333,"org.easymock.tests.MockingTest.testClassMocking":328,"org.easymock.tests2.UsageConstraintsTest.testContains":122,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":352,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":198,"org.easymock.tests2.UsageConstraintsTest.testFind":115,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":42,"org.easymock.tests.MockTypeTest.fromEasyMockClass":63,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":91,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests.UsageExpectAndReturnTest.object":278,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":175,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":388,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":341,"org.easymock.tests.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":439,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":297,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":284,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":383,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":448,"org.easymock.tests.ResultTest.createThrowResultToString":470,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":201,"org.easymock.tests.MockClassControlTest.testHashCode":377,"org.easymock.tests2.EasyMockSupportTest.testVerify":179,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":440,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":446,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":444,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":95,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":145,"org.easymock.tests.UsageVarargTest.varargCharAccepted":387,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":255,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":326,"org.easymock.tests2.UsageTest.openCallCountByLastCall":21,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":178,"org.easymock.tests.DefaultClassInstantiatorTest.object":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":443,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":61,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":102,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":200,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":157,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":376,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":417,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":233,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":375,"org.easymock.tests2.UsageTest.resumeIfFailure":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":291,"org.easymock.tests2.StubTest.stubWithReturnValue":32,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":277,"org.easymock.tests2.SerializationTest.testAllMockedMethod":217,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":319,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":454,"org.easymock.samples.SupportTest.voteForRemovals":79,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":423,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":473,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":325,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":141,"org.easymock.tests.UsageExpectAndThrowTest.object":421,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":299,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.DelegateToTest.testWrongClass":237,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":404,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":405,"org.easymock.samples.ConstructorCalledMockTest.testTax":471,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":56,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":422,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":186,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":218,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":242,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":455,"org.easymock.tests2.CaptureTest.testCaptureNone":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":336,"org.easymock.tests.UsageUnorderedTest.message":54,"org.easymock.tests.UsageVerifyTest.twoReturns":41,"org.easymock.tests.UsageVarargTest.varargByteAccepted":392,"org.easymock.tests2.ThreadingTest.testThreadSafe":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":228,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":356,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":62,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":80,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":302,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":323,"org.easymock.tests2.UsageConstraintsTest.any":5,"org.easymock.tests2.StubTest.stub":240,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":367,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":382,"org.easymock.tests.UsageExpectAndThrowTest.longType":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":324,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":260,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":366,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":1,"org.easymock.tests2.SerializationTest.testClass":463,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests.LimitationsTest.mockNativeMethod":349,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":287,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":101,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":94,"org.easymock.tests2.NameTest.nameForMocksControl":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":103,"org.easymock.tests2.MockedExceptionTest.testMockedException":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":221,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":47,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":466,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":415,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":90,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":187,"org.easymock.tests.MockingTest.testNicePartialClassMocking":465,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":99,"org.easymock.tests2.CaptureTest.testCaptureLast":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":60,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":462,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":118,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":329,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":419,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":133,"org.easymock.samples.ExampleTest.removeNonExistingDocument":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":105,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":202,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":258,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":164,"org.easymock.tests2.MockBuilderTest.testCreateMockString":190,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":372,"org.easymock.tests.UsageExpectAndThrowTest.floatType":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":223,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":6,"org.easymock.tests.ResultTest.createReturnResultToString":469,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":143,"org.easymock.tests.UsageVerifyTest.twoThrows":40,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":227,"org.easymock.tests.ResultTest.createDelegateResultToString":468,"org.easymock.samples.ExampleTest.voteAgainstRemoval":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":314,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":334,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":158,"org.easymock.tests.LimitationsTest.privateConstructor":348,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":437,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":196,"org.easymock.tests2.UsageTest.defaultResetToNice":194,"org.easymock.samples.ExampleTest.voteAgainstRemovals":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":315,"org.easymock.tests.UsageVarargTest.differentLength":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":100,"org.easymock.tests2.CallbackTest.callback":31,"org.easymock.tests2.UsageConstraintsTest.equals":114,"org.easymock.tests.UsageTest.openCallCountByLastCall":46,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":402,"org.easymock.tests.UsageCallCountTest.tooFewCalls":354,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":244,"org.easymock.tests.UsageThrowableTest.throwCheckedException":434,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":456,"org.easymock.tests.MockingTest.testStrictClassMocking":327,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":461,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":301,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":460,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":104,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":369,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":214,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":144,"org.easymock.tests.ObjectMethodsTest.testHashCode":340,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":166,"org.easymock.tests2.NameTest.nameForNiceMock":28,"org.easymock.tests2.DependencyTest.testInterfaceMocking":84,"org.easymock.samples.ExampleTest.addDocument":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":229,"org.easymock.tests2.DelegateToTest.testStubDelegate":30,"org.easymock.tests2.AnswerTest.stubAnswer":17,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests.UsageVarargTest.varargLongAccepted":391,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":312,"org.easymock.tests.UsageExpectAndReturnTest.floatType":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":459,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":472,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests.UsageThrowableTest.noUpperLimit":432,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":208,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":111,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":86,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":11,"org.easymock.tests2.SerializationTest.test":216,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":458,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":257,"org.easymock.tests2.UsageConstraintsTest.testSame":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":269,"org.easymock.samples.SupportTest.addDocument":78,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":224,"org.easymock.tests.GenericTest.testPackageScope":246,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":207,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":331,"org.easymock.tests2.NameTest.nameForMock":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":280,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":425,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":339,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":296,"org.easymock.tests2.MockedExceptionTest.testRealException":199,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":316,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":52,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":371,"org.easymock.tests2.NameTest.nameForStrictMock":27,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":89,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":150,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":87,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":128,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":259,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":181,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":311,"org.easymock.tests2.CaptureTest.testCaptureRightOne":138,"org.easymock.tests2.UsageConstraintsTest.testOr":117,"org.easymock.tests.UsageRangeTest.combination":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":147,"org.easymock.tests.UsageTest.wrongArguments":45,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":373,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":304,"org.easymock.tests.UsageVarargTest.varargShortAccepted":390,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":261,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":357,"org.easymock.tests2.UsageConstraintsTest.cmpTo":121,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":306,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":22,"org.easymock.tests2.CaptureTest.testCaptureFromStub":139,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":361,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":182,"org.easymock.tests.UsageTest.unexpectedCallWithArray":65,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":355,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":282,"org.easymock.tests2.UsageConstraintsTest.constraints":112,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.samples.ExampleTest.addAndChangeDocument":74,"org.easymock.tests.UsageStrictMockTest.testVerify":267,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":75,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":407,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":274,"org.easymock.tests.LimitationsTest.abstractClass":347,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":397,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":173}}]
