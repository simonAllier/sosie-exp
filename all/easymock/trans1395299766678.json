[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[24,25,25,26,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[54,55,56,57,58,24,27,59,29,30,31,60,4,5,6,61,62,63,64,65,66,67,35,38,39,40,43,68,69,70,71,72,73,74,75,76,47,48,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,17,18,19,106,107,108,109,110,111,112,113,114],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[27,28,115,116,117,118,119,33,120,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[54,121,55,56,57,122,58,24,25,25,26,26,27,123,124,0,1,125,126,127,128,129,2,3,130,131,132,133,59,29,30,31,32,134,135,136,137,138,33,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,60,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,4,186,5,6,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,61,62,63,64,65,66,67,34,35,38,214,39,40,215,43,44,68,69,70,71,72,73,74,75,45,76,216,47,48,77,217,218,219,220,78,221,222,79,223,224,225,226,227,228,229,230,231,232,233,234,235,236,11,237,12,238,239,13,14,240,80,241,242,243,244,15,245,81,82,83,84,85,246,51,247,248,249,250,86,87,88,89,90,91,251,252,92,93,253,94,95,96,254,97,98,99,100,101,255,256,257,258,259,260,261,262,102,103,104,105,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,16,17,291,18,19,292,293,294,295,296,297,20,298,21,22,23,299,300,301,302,303,304,106,107,108,109,110,111,112,113,114,305,306,307,308,309,310,311,312,313,314,315,316,317],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[54,121,55,56,318,57,122,319,58,320,321,322,323,123,124,0,125,126,127,128,130,131,132,133,33,139,140,141,142,143,144,145,146,148,149,150,151,153,60,154,156,160,162,164,165,182,324,4,186,5,6,187,188,191,192,194,195,201,202,204,207,212,213,38,39,40,68,69,71,74,48,217,218,219,220,221,233,234,235,236,11,238,239,240,80,241,242,243,244,15,84,85,325,86,87,88,89,90,91,251,252,92,93,253,94,95,96,254,97,98,99,100,101,255,256,257,258,259,260,261,262,102,103,104,105,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,326,17,291,18,19,292,293,295,296,21,22,23,299,300,301,302,303,304,106,107,108,109,110,327,328,329,330,331,332,333,334,335,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[132,243,336],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[337],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[320,323,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[287,288,306,307],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[35,43,47,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[28,115,116,117,354,355,33,120,42],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"o"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[152,155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[356],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[357,358,359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[360,354,355],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[177],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[361],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:80","failures":[24,33,34,362,35,36,38,214,39,40,215,43,363,44,45,51,52,53],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[40,52],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[249],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[159,160,162,164,165,167,177,182,194,196,204],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[364,365,237,366,367,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[25,25,26,26,157,158,161,162,163,164,170,172,173,175,176,182,183,184,4,205,80,241,244,84,85,102,103,104,105,263,264,17,106,107,108,109,110],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[249],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[5,15,18,22,23,368,369],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[126,174,175,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[159,166,172,184,370],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":160,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":236,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":302,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":126,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":120,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":320,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":181,"org.easymock.tests2.DelegateToTest.testReturnException":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":300,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":249,"org.easymock.tests.MockingTest.testPartialClassMocking":81,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":365,"org.easymock.samples.SupportTest.voteForRemovals":58,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":50,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":278,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":266,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":250,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":29,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":189,"org.easymock.tests.UsageExpectAndThrowTest.object":276,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":69,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":115,"org.easymock.tests2.DelegateToTest.testWrongClass":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":84,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":85,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":80,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":353,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.samples.ConstructorCalledMockTest.testTax":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":225,"org.easymock.samples.ExampleTest.answerVsDelegate":121,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":147,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":53,"org.easymock.tests2.UsageConstraintsTest.testNull":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":277,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":39,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":149,"org.easymock.tests2.CaptureTest.testPrimitive":197,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":285,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests.UsageTest.moreThanOneArgument":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":224,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":72,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":104,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":310,"org.easymock.tests2.CaptureTest.testCaptureNone":202,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests.UsageVerifyTest.twoReturns":23,"org.easymock.tests.UsageVarargTest.varargByteAccepted":334,"org.easymock.tests2.ThreadingTest.testThreadSafe":218,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":312,"org.easymock.tests.UsageTest.argumentsOrdered":14,"org.easymock.tests.UsageVarargTest.varargIntAccepted":329,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":355,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":243,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":214,"org.easymock.tests2.UsageConstraintsTest.any":168,"org.easymock.tests2.StubTest.stub":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":301,"org.easymock.tests.UsageExpectAndThrowTest.longType":269,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":357,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":213,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests.LimitationsTest.mockNativeMethod":79,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":101,"org.easymock.tests2.AnswerTest.answer":188,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":348,"org.easymock.tests2.CaptureTest.testAnd":194,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":216,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":187,"org.easymock.tests2.NameTest.nameForMocksControl":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":349,"org.easymock.tests2.MockedExceptionTest.testMockedException":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":144,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":239,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":316,"org.easymock.tests2.DelegateToTest.testDelegate":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":270,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":83,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":70,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":40,"org.easymock.tests.MockingTest.testNicePartialClassMocking":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":281,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":346,"org.easymock.tests2.CaptureTest.testCaptureLast":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":303,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":248,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":232,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":179,"org.easymock.tests.MockingTest.testTwoMocks":245,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":247,"org.easymock.tests2.CaptureTest.testCapture1_2446744":198,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":274,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":209,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":183,"org.easymock.tests.UsageThrowableTest.throwError":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":351,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":220,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":345,"org.easymock.tests2.MockBuilderTest.testCreateMockString":44,"org.easymock.tests.UsageExpectAndThrowTest.floatType":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":263,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":174,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":191,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.samples.PartialClassMockTest.testGetArea":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":107,"org.easymock.samples.ExampleTest.voteAgainstRemoval":56,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":309,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":308,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":267,"org.easymock.tests2.UsageTest.niceToStrict":125,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":337,"org.easymock.tests2.UsageConstraintsTest.testNotNull":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":262,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":32,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":38,"org.easymock.tests2.MockBuilderTest.testCreateMock":215,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.samples.ExampleTest.voteAgainstRemovals":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":97,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":347,"org.easymock.tests2.CallbackTest.callback":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":352,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":46,"org.easymock.tests.UsageTest.openCallCountByLastCall":238,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":275,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":145,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":157,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":223,"org.easymock.tests.UsageOverloadedMethodTest.overloading":234,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":296,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":172,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":64,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":358,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":171,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":226,"org.easymock.tests.UsageThrowableTest.throwCheckedException":259,"org.easymock.tests2.EasyMockSupportClassTest.testAll":59,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":325,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":367,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":210,"org.easymock.tests2.CaptureTest.testCaptureAll":195,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":265,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":350,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":63,"org.easymock.tests2.UsageConstraintsTest.testMatches":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":65,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":193,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":105,"org.easymock.tests2.CompareToTest.testGreateOrEqual":370,"org.easymock.samples.ExampleTest.voteForRemovals":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":354,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":221,"org.easymock.tests2.NameTest.nameForNiceMock":9,"org.easymock.tests.UsageVarargTest.allKinds":317,"org.easymock.tests2.DependencyTest.testInterfaceMocking":68,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":117,"org.easymock.samples.BasicClassMockTest.testPrintContent":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":231,"org.easymock.samples.ExampleTest.addDocument":318,"org.easymock.tests2.DelegateToTest.testStubDelegate":60,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":261,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":185,"org.easymock.tests2.AnswerTest.stubAnswer":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":304,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":155,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":119,"org.easymock.tests2.UsageConstraintsTest.greaterThan":175,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":41,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":112,"org.easymock.tests.UsageVarargTest.varargLongAccepted":333,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":77,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":292,"org.easymock.samples.ExampleTest.voteForRemoval":55,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":219,"org.easymock.tests.UsageExpectAndReturnTest.floatType":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":26,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests.UsageThrowableTest.noUpperLimit":256,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":176,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":222,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":158,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":199,"org.easymock.tests2.SerializationTest.test":139,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":42,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":142,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":87,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.samples.SupportTest.addDocument":319,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":299,"org.easymock.tests2.CaptureTest.testCaptureFirst":207,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":143,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":252,"org.easymock.tests.GenericTest.testPackageScope":246,"org.easymock.tests2.CaptureTest.testCapture2_2446744":206,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":78,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":315,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":344,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":335,"org.easymock.tests2.NameTest.nameForMock":7,"org.easymock.tests.UsageExpectAndReturnTest.longType":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":228,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":140,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":363,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":95,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":311,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":180,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":282,"org.easymock.tests2.UsageStrictMockTest.differentMethods":6,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":280,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":114,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":289,"org.easymock.tests2.MockedExceptionTest.testRealException":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":271,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":241,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":62,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":362,"org.easymock.tests2.NameTest.nameForStrictMock":8,"org.easymock.tests2.UsageConstraintsTest.testContains":170,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":135,"org.easymock.tests2.UsageConstraintsTest.testFind":161,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":235,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":37,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":74,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":138,"org.easymock.tests.UsageExpectAndReturnTest.object":253,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":368,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":76,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":35,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.UsageConstraintsTest.lessThan":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":148,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":331,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":341,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":361,"org.easymock.tests.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":118,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":141,"org.easymock.tests2.CaptureTest.testCaptureRightOne":204,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":313,"org.easymock.tests2.UsageConstraintsTest.testOr":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":28,"org.easymock.tests.UsageRangeTest.combination":111,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":327,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":71,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":98,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":295,"org.easymock.tests.UsageTest.wrongArguments":12,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":96,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":314,"org.easymock.tests.UsageVarargTest.varargShortAccepted":332,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":208,"org.easymock.tests2.UsageConstraintsTest.cmpTo":169,"org.easymock.tests.UsageVarargTest.varargCharAccepted":330,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":190,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":324,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":286,"org.easymock.tests2.CaptureTest.testCaptureFromStub":205,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":36,"org.easymock.tests.UsageTest.unexpectedCallWithArray":237,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":258,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":254,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":47,"org.easymock.tests2.UsageConstraintsTest.constraints":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":272,"org.easymock.samples.ExampleTest.addAndChangeDocument":122,"org.easymock.tests.CapturesMatcherTest.test":356,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":99,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":323,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":31,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":229,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":200,"org.easymock.tests2.UsageTest.resumeIfFailure":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":108,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":251,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":52,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":20,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":109,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":369,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":146}}]
