[{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"name","key":"name"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[24,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[42,43,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[58,59,4,60,61,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[63,64,15,65,66,67,68,69,70,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[72,73,74],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,0,97,98,99,26,100,27,101,102,103,104,105,106,28,107,24,29,108,109,30,110,20,31,111,112,32,33,113,34,114,115,35,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,21,137,41,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,1,168,22,169,170,171,2,3,172,173,47,174,175,176,177,178,179,180,181,15,16,17,182,183,184,185,186,187,188,189,190,73,191,192,193,194,49,195,196,197,198,4,199,200,5,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,54,224,225,226,227,228,6,7,25,56,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,10,245,246,11,12,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,57,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,13,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,81,306,306,307,307,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,0,97,98,308,99,26,100,27,101,102,103,104,105,106,28,107,24,29,108,109,30,110,20,31,111,112,32,33,113,34,114,115,35,116,117,118,119,120,121,122,123,124,125,126,309,127,128,129,310,311,130,131,132,133,134,135,136,21,137,41,312,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,313,160,161,162,163,164,165,166,167,1,168,22,169,170,171,2,3,172,173,45,46,47,48,174,175,176,177,178,179,180,181,15,16,17,182,183,184,185,186,187,188,189,72,190,73,191,314,192,193,194,49,195,196,315,316,317,318,319,320,197,198,4,199,200,5,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,50,51,52,53,54,55,224,225,226,227,321,228,6,7,25,56,42,43,44,322,323,229,230,231,324,325,326,232,233,234,327,235,236,237,238,239,240,241,242,328,329,330,243,244,10,245,246,11,12,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,331,264,265,266,57,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,13,292,293,294,295,296,297,298,299,332,300,301,333,334,335,336,337,302,338,303,304,339,305,14],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,81,89,91,92,93,94,95,96,0,97,98,308,340,341,342,26,100,27,101,102,103,104,105,106,28,24,29,108,109,30,110,20,31,111,112,32,33,34,114,115,35,116,117,118,119,120,121,122,123,124,125,126,309,127,128,129,130,131,132,343,133,134,135,136,21,137,41,312,139,141,142,143,144,145,146,313,161,344,164,345,165,166,167,1,168,22,169,170,171,2,3,172,173,45,46,47,48,176,177,180,181,15,16,17,186,187,188,189,190,73,191,192,193,194,49,346,347,348,349,195,196,316,317,318,319,320,197,198,4,199,200,5,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,50,51,52,53,54,55,224,225,226,227,228,6,7,25,56,43,229,230,231,233,234,235,236,350,237,238,239,240,351,352,243,244,9,10,245,246,11,12,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,266,57,267,268,269,270,271,353,354,355,356,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,13,292,293,294,295,296,297,298,299,305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[106,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[306,307,357,358,359,360,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[332],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,81,89,91,92,93,94,95,96,0,97,98,308,340,341,342,26,100,27,101,102,103,104,105,106,28,24,29,108,109,30,110,20,31,111,112,32,33,34,114,115,35,116,117,118,119,120,121,122,123,124,125,126,309,127,128,129,130,131,132,343,133,134,135,136,21,137,41,312,139,141,142,143,144,145,146,313,161,344,164,345,165,166,167,1,168,22,169,170,171,2,3,172,173,45,46,47,48,176,177,180,181,15,16,17,186,187,188,189,190,73,191,192,193,194,49,346,347,348,349,195,196,316,317,318,319,320,197,198,4,199,200,5,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,50,51,52,53,54,55,224,225,226,227,228,6,7,25,56,43,229,230,231,233,234,235,236,350,237,238,239,240,351,352,243,244,9,10,245,246,11,12,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,266,57,267,268,269,270,271,353,354,355,356,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,13,292,293,294,295,296,297,298,299,305],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[75,76,77,78,79,80,362,81,306,307,82,83,84,85,86,87,88,363,364,89,90,365,366,367,368,369,370,371,91,372,92,93,94,95,96,0,97,98,308,340,341,342,373,374,375,376,377,99,378,379,380,381,382,383,26,100,27,101,384,102,103,104,105,106,28,107,24,29,108,109,30,110,20,31,111,112,32,33,113,34,114,115,35,116,117,118,119,120,121,122,123,124,125,126,309,127,128,129,310,311,130,131,132,343,133,134,135,136,21,137,385,386,41,357,387,312,138,139,140,388,389,141,63,390,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,313,358,160,391,392,393,161,344,162,64,163,394,395,396,164,361,345,165,166,167,1,168,22,169,170,171,2,3,172,173,45,46,47,48,397,398,399,400,401,174,402,403,404,405,406,407,175,176,177,178,408,179,180,181,409,15,16,17,410,411,412,182,413,414,183,415,416,417,418,419,420,421,422,423,184,424,425,426,427,428,185,429,430,19,186,187,188,189,72,190,73,191,314,192,193,194,49,346,347,348,349,431,195,196,315,432,316,317,318,319,320,433,434,435,436,437,438,439,440,441,197,198,4,199,200,5,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,50,51,52,53,54,55,224,225,226,227,442,321,443,228,6,7,25,56,42,43,444,445,446,447,448,449,450,451,452,453,454,74,455,456,457,458,459,44,460,461,462,463,464,322,465,466,467,323,229,230,468,231,469,470,471,324,325,326,472,232,233,234,473,327,474,475,476,477,478,479,480,481,482,483,484,485,486,487,235,488,236,350,237,238,239,240,489,241,242,490,491,492,493,351,494,23,495,496,497,498,499,500,352,501,502,503,504,505,506,328,329,330,243,244,9,10,245,246,11,12,247,248,249,250,507,251,252,253,254,255,256,257,258,259,260,261,262,263,331,508,264,265,266,57,267,268,269,270,271,353,354,355,356,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,13,292,293,294,295,296,297,298,299,332,300,301,333,334,335,336,337,302,338,303,304,339,305,14],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[27,118,126],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[75,76,77,78,79,80,362,81,306,307,82,83,84,85,86,87,88,363,364,89,90,365,369,370,371,91,372,92,93,94,95,96,0,97,98,308,340,341,342,373,374,375,376,377,99,378,379,380,381,382,383,26,100,27,101,384,102,103,104,105,106,28,107,24,29,108,109,30,110,20,31,111,112,32,33,113,34,114,115,35,116,117,118,119,120,121,122,123,124,125,126,309,127,128,129,310,311,130,131,132,343,133,134,135,136,21,137,385,386,41,357,387,312,138,139,140,388,389,141,63,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,313,160,391,393,161,344,162,163,394,395,396,164,345,165,166,167,1,168,22,169,170,171,2,3,172,173,45,46,47,48,397,398,399,400,401,174,402,403,404,405,406,407,175,176,177,178,408,179,180,181,409,15,16,17,410,411,412,182,413,414,183,415,416,417,418,419,420,421,422,423,184,424,425,426,427,428,185,429,430,19,186,187,188,189,72,190,73,191,314,192,193,194,49,346,347,348,349,431,195,196,315,432,316,317,318,319,320,434,435,436,437,438,439,441,197,198,4,199,200,5,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,50,51,52,53,54,55,224,225,226,227,442,321,443,228,6,7,25,56,42,43,444,445,446,447,448,449,450,451,452,453,454,74,455,456,457,458,459,44,460,461,462,463,464,322,465,466,467,323,229,230,468,231,469,470,471,324,325,326,232,233,234,473,327,474,475,476,477,478,479,480,481,482,483,484,485,486,487,235,488,236,350,237,238,239,240,489,241,242,490,491,492,493,351,494,23,495,496,497,498,499,500,352,501,502,503,504,505,506,328,329,330,243,244,9,10,245,246,11,12,247,248,249,250,507,251,252,253,254,255,256,257,258,259,260,261,262,263,331,508,264,265,266,57,267,268,269,270,271,353,354,355,356,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,13,292,293,294,295,296,297,298,299,332,300,301,333,334,335,336,337,302,338,303,304,339,305,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[438,509,510],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[409],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[409],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[0,101,31,134,135,139,141,149,153,156,161,164,1,168,2,3,45,194,4,5,225,6,7,232,241,8,490,244,9,10,11,12,248,254,13,292,14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[82,84,373,374,375,376,377,99,378,379,380,381,382,383,397,398,399,400,401,174,402,403,404,405,406,407],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":101,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":243,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":74,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":22,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":84,"org.easymock.tests2.DelegateToTest.testReturnException":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":51,"org.easymock.tests.MockingTest.testPartialClassMocking":229,"org.easymock.tests.MockClassControlTest.testToString":501,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":19,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":418,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":183,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":272,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":66,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":28,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":265,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":348,"org.easymock.samples.ExampleTest.answerVsDelegate":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":483,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":470,"org.easymock.tests2.UsageConstraintsTest.testNull":103,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":136,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":506,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":156,"org.easymock.tests2.CaptureTest.testPrimitive":119,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":268,"org.easymock.tests.UsageTest.moreThanOneArgument":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":291,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":318,"org.easymock.tests.UsageTest.argumentsOrdered":12,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":332,"org.easymock.tests.UsageVarargTest.varargIntAccepted":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":70,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":367,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":263,"org.easymock.tests.ReplayStateInvalidUsageTest.times":496,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.DependencyTest.testClassMocking":363,"org.easymock.tests2.AnswerTest.answer":129,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":460,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":342,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":480,"org.easymock.tests2.CaptureTest.testAnd":116,"org.easymock.tests2.UsageTest.strictResetToDefault":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":226,"org.easymock.tests2.DelegateToTest.testDelegate":192,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":287,"org.easymock.tests.LimitationsTest.mockFinalMethod":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":356,"org.easymock.tests2.DependencyTest.testClassMockingSupport":364,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":42,"org.easymock.tests2.CaptureTest.testCapture1_2446744":120,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":340,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":492,"org.easymock.tests.UsageThrowableTest.throwError":292,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":482,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":472,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":430,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":493,"org.easymock.tests.MockingTest.testInterfaceMocking":468,"org.easymock.tests2.CompareToTest.testLessOrEqual":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":260,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":325,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":419,"org.easymock.tests2.UsageTest.niceToStrict":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":161,"org.easymock.tests2.MockBuilderTest.testCreateMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":426,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":380,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":281,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":152,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":479,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":337,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":236,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":346,"org.easymock.tests.UsageOverloadedMethodTest.overloading":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":30,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":232,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":509,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":109,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":125,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":507,"org.easymock.tests.MockClassControlTest.testEquals":505,"org.easymock.tests2.EasyMockSupportClassTest.testAll":182,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":196,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":289,"org.easymock.tests2.CaptureTest.testCaptureAll":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":341,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":354,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":360,"org.easymock.tests.MockNameTest.defaultName":508,"org.easymock.tests2.UsageConstraintsTest.testMatches":110,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":490,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":319,"org.easymock.samples.ExampleTest.voteForRemovals":80,"org.easymock.tests.UsageVarargTest.allKinds":258,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":228,"org.easymock.samples.BasicClassMockTest.testPrintContent":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":355,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":298,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":55,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":314,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":440,"org.easymock.tests2.UsageConstraintsTest.greaterThan":31,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":413,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":140,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":441,"org.easymock.samples.ExampleTest.voteForRemoval":77,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":388,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":143,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":385,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":165,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":264,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":149,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":50,"org.easymock.tests2.CaptureTest.testCaptureFirst":128,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":150,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":173,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":211,"org.easymock.tests2.UsageTest.moreThanOneArgument":167,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":145,"org.easymock.tests2.CaptureTest.testCapture2_2446744":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":164,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":257,"org.easymock.tests.GenericTest.testBridgedEquals":432,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":241,"org.easymock.tests.UsageExpectAndReturnTest.longType":207,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":271,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":290,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":113,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":316,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":329,"org.easymock.tests.UsageCallCountTest.tooManyCalls":242,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":427,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":297,"org.easymock.tests.MockingTest.testNiceClassMocking":471,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":176,"org.easymock.tests.MockingTest.testClassMocking":467,"org.easymock.tests2.UsageConstraintsTest.testContains":108,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":350,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":47,"org.easymock.tests2.UsageConstraintsTest.testFind":102,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":234,"org.easymock.tests.MockTypeTest.fromEasyMockClass":481,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":92,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":197,"org.easymock.tests.UsageExpectAndReturnTest.object":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":67,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":252,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":475,"org.easymock.tests.UsageTest.exactCallCountByLastCall":247,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":63,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":220,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":248,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":303,"org.easymock.tests.MockClassControlTest.testHashCode":504,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":398,"org.easymock.tests2.EasyMockSupportTest.testVerify":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":421,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":308,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":343,"org.easymock.tests.UsageVarargTest.varargCharAccepted":251,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":433,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":465,"org.easymock.tests2.UsageTest.openCallCountByLastCall":169,"org.easymock.tests.DefaultClassInstantiatorTest.object":434,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":158,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":335,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":327,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":422,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":397,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":503,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":278,"org.easymock.tests.CapturesMatcherTest.test":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":328,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":185,"org.easymock.tests2.UsageTest.resumeIfFailure":172,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":478,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":53,"org.easymock.tests2.StubTest.stubWithReturnValue":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":213,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":44,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":59,"org.easymock.samples.SupportTest.voteForRemovals":86,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":284,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":322,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":310,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":443,"org.easymock.tests.UsageExpectAndThrowTest.object":282,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":32,"org.easymock.tests2.DelegateToTest.testWrongClass":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":270,"org.easymock.tests.UsageStrictMockTest.range":5,"org.easymock.samples.ConstructorCalledMockTest.testTax":306,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":370,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":154,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":283,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":162,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":410,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":347,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":60,"org.easymock.tests2.CaptureTest.testCaptureNone":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":326,"org.easymock.tests.UsageUnorderedTest.message":13,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":256,"org.easymock.tests2.ThreadingTest.testThreadSafe":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":424,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":240,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":476,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":87,"org.easymock.tests2.CaptureTest.testCapture_2617107":118,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":267,"org.easymock.tests2.UsageConstraintsTest.any":24,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":495,"org.easymock.tests2.StubTest.stub":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":52,"org.easymock.tests.UsageExpectAndThrowTest.longType":275,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":438,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":23,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":96,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests.LimitationsTest.mockNativeMethod":235,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":223,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":315,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":375,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":98,"org.easymock.tests2.NameTest.nameForMocksControl":189,"org.easymock.tests2.MockedExceptionTest.testMockedException":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":414,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":246,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":276,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":133,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":163,"org.easymock.tests.MockingTest.testNicePartialClassMocking":230,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":137,"org.easymock.tests2.CaptureTest.testCaptureLast":123,"org.easymock.tests2.CompareToTest.testCompareEqual":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":373,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":43,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":181,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":106,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":33,"org.easymock.tests.MockingTest.testTwoMocks":323,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":280,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":115,"org.easymock.samples.ExampleTest.removeNonExistingDocument":362,"org.easymock.tests.UsageStrictMockTest.differentMethods":201,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":399,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":436,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":144,"org.easymock.tests2.MockBuilderTest.testCreateMockString":345,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":415,"org.easymock.tests.UsageExpectAndThrowTest.floatType":274,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":390,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":184,"org.easymock.samples.ExampleTest.voteAgainstRemoval":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":324,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":139,"org.easymock.tests.LimitationsTest.privateConstructor":487,"org.easymock.tests2.UsageConstraintsTest.testNotNull":114,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":299,"org.easymock.tests2.UsageTest.defaultResetToNice":171,"org.easymock.samples.ExampleTest.voteAgainstRemovals":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":219,"org.easymock.tests.UsageVarargTest.differentLength":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":374,"org.easymock.tests2.CallbackTest.callback":193,"org.easymock.tests2.UsageConstraintsTest.equals":384,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":357,"org.easymock.tests.UsageTest.openCallCountByLastCall":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":57,"org.easymock.tests.UsageCallCountTest.tooFewCalls":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":349,"org.easymock.tests.UsageThrowableTest.throwCheckedException":296,"org.easymock.tests.MockingTest.testStrictClassMocking":466,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":61,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":180,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":56,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":497,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":179,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":132,"org.easymock.tests.ObjectMethodsTest.testHashCode":474,"org.easymock.tests2.CompareToTest.testGreateOrEqual":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":69,"org.easymock.tests2.NameTest.nameForNiceMock":188,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":146,"org.easymock.tests2.DependencyTest.testInterfaceMocking":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":68,"org.easymock.samples.ExampleTest.addDocument":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.DelegateToTest.testStubDelegate":73,"org.easymock.tests2.AnswerTest.stubAnswer":131,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":199,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":394,"org.easymock.tests.UsageVarargTest.varargLongAccepted":255,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndReturnTest.floatType":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":141,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":405,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":111,"org.easymock.tests.UsageThrowableTest.noUpperLimit":293,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":100,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":365,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":121,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":510,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":435,"org.easymock.tests2.UsageConstraintsTest.testSame":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":205,"org.easymock.samples.SupportTest.addDocument":85,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":408,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":416,"org.easymock.tests.GenericTest.testPackageScope":195,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":404,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":469,"org.easymock.tests2.NameTest.nameForMock":186,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests2.UsageStrictMockTest.differentMethods":97,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":387,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":286,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":227,"org.easymock.tests2.MockedExceptionTest.testRealException":48,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":457,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":95,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":499,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":266,"org.easymock.tests2.NameTest.nameForStrictMock":187,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":393,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":437,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":160,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":420,"org.easymock.tests2.CaptureTest.testCaptureRightOne":126,"org.easymock.tests2.UsageConstraintsTest.testOr":105,"org.easymock.tests.UsageRangeTest.combination":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":134,"org.easymock.tests.UsageTest.wrongArguments":10,"org.easymock.tests2.MockBuilderTest.testWithConstructor":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":417,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":439,"org.easymock.tests.UsageVarargTest.varargShortAccepted":254,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":489,"org.easymock.tests2.UsageConstraintsTest.cmpTo":29,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":311,"org.easymock.tests2.CompareToTest.testLessThan":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":448,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":170,"org.easymock.tests2.CaptureTest.testCaptureFromStub":309,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":491,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":391,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":239,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":359,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests2.UsageConstraintsTest.constraints":27,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":200,"org.easymock.samples.ExampleTest.addAndChangeDocument":81,"org.easymock.tests.UsageStrictMockTest.testVerify":203,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":82,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests2.CompareToTest.testGreateThan":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":353,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":261,"org.easymock.tests.LimitationsTest.abstractClass":486,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":262,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":153,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":249}}]
