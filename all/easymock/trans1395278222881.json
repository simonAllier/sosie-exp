[{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:61","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,13,15,16,18,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:92","failures":[6,7,9,10,52,53,12,14,17],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[26,27,55,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[56,57,58,59,24,60,61,25,7,8,10,62,63,64,65,53,66,67,55,68,11,13,14,69,70,71,15,16,72,17,18,35,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,19,110,20,21,111,112,113,114,115,116,117,118,119,120,51,121,122,123,124,125,126,127,128,129,130],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[25,74,79,82,83,84,88,149,150,92,96,97,151,152,153,154,155,156,100,121,125,126],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[36,157,0,158,159,160,161,94,96,97,3,162,163,99,164,42,165,114,166,51,123,125,126],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[167,168,169,170,171,172,173,174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[175,176,41,177,178,179],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"key"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[56,181,57,58,182,59,183,24,184,185,186,61,25,187,188,189,26,190,27,28,191,6,7,192,193,8,194,9,10,62,52,63,195,196,64,29,197,65,30,198,53,66,67,55,68,11,199,31,200,201,202,203,204,205,206,207,208,209,12,13,14,69,210,70,71,15,16,72,17,211,212,18,32,33,34,213,214,215,216,217,218,219,35,220,73,36,221,74,75,222,223,224,76,77,225,226,78,79,80,81,227,82,83,228,229,84,85,86,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,92,93,94,95,96,97,98,269,270,271,272,273,274,275,276,277,154,278,155,37,279,175,280,176,281,38,282,283,284,285,286,39,287,288,289,40,290,41,177,99,164,291,292,293,294,295,296,297,100,298,299,300,301,302,303,101,102,103,304,104,105,305,106,107,108,109,19,178,306,307,308,309,310,311,312,313,314,315,316,317,318,319,110,20,21,22,320,321,42,4,322,323,324,111,112,325,43,326,327,328,329,330,44,331,332,333,334,335,45,336,337,338,46,339,47,340,341,113,48,165,114,166,342,343,344,345,346,347,348,349,350,351,115,352,353,116,117,118,119,120,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,49,378,379,380,50,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,51,121,122,5,123,124,125,126,127,396,397,398,399,400,401,402,403,404,405,406,407,179,408,409,410,411,412,413,414,128,415,129,416,417,130],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[56,181,57,58,182,59,24,25,418,187,419,26,27,28,191,6,7,193,8,194,9,10,62,63,195,196,64,29,197,65,30,198,53,66,67,68,11,199,31,200,203,204,205,206,207,208,209,12,13,14,69,70,71,15,16,72,17,18,32,33,214,216,217,35,73,36,74,75,224,225,420,87,421,422,232,423,90,424,425,149,91,426,144,427,145,234,249,250,251,252,174,265,266,267,268,93,94,97,98,269,270,271,272,273,274,276,152,153,428,37,279,175,280,176,281,38,282,283,284,285,286,39,287,288,289,40,290,41,177,291,100,298,299,300,429,430,431,101,102,103,104,105,106,107,108,109,19,178,306,432,110,20,320,42,43,326,327,328,329,330,44,331,332,333,334,335,45,336,337,338,46,339,47,340,113,48,165,114,166,352,353,433,359,361,362,363,364,365,388,389,390,391,392,122,123,126,127,396,397,398,399,400,401,402,179,408,409,410,411,412,413,414,128,415,129],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[65,55,13,14,210,70,71,15,16,18],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[133,134,135,136,137,138,418,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,148],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[36,157,0,158,461,462,159,160,1,161,94,96,97,2,463,3,162,163,99,164,42,4,165,114,166,51,5,123,125,126],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[56,57,58,182,59,24,464,465,184,185,186,61,419,55,13,14,70,71,15,16,18,75,81,84,85,86,230,87,93,95,96,97,98,269,431,101,102,103,104,105,106,107,108,109,19,432,21,352,51,122,124,125,126,127,414,128,415,129,417,130],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[466],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[29,67,31,467],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[429],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[468,469,56,181,57,58,182,59,183,24,464,465,184,185,60,186,61,25,418,187,419,470,471,472,473,474,188,189,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,26,190,27,28,191,6,7,192,193,8,194,9,10,62,52,63,195,196,64,29,197,65,30,198,53,66,67,55,68,11,199,31,200,201,202,203,204,205,206,207,208,209,12,13,14,69,210,70,71,15,16,72,17,211,212,18,32,33,34,213,214,215,216,217,218,219,35,220,73,36,221,74,75,222,223,224,76,77,225,226,78,79,80,81,227,82,83,228,229,84,85,86,230,231,420,139,475,476,140,477,87,421,478,141,479,54,459,480,88,143,481,422,89,232,423,90,424,482,483,425,484,485,149,486,91,487,488,489,490,426,144,491,150,233,427,145,146,492,493,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,174,147,494,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,92,93,94,95,96,97,98,269,270,271,272,273,274,275,276,277,495,496,497,498,499,500,501,502,503,504,151,505,152,153,154,428,278,155,156,37,279,175,280,176,281,38,282,283,284,285,286,39,287,288,289,40,290,41,177,99,164,291,292,293,294,295,296,297,100,298,299,300,506,429,507,508,509,510,511,512,466,430,431,513,514,301,302,303,101,102,103,304,104,105,305,106,107,108,109,19,178,306,515,307,432,308,309,310,311,312,313,314,315,316,317,318,319,110,20,21,22,320,321,42,4,322,323,324,111,112,325,43,326,327,328,329,330,44,331,332,333,334,335,45,336,337,338,46,339,47,340,341,113,48,165,114,166,342,343,344,516,517,518,345,346,519,347,348,349,350,351,115,352,353,116,117,118,119,120,520,521,433,522,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,49,378,379,380,50,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,51,121,122,5,123,124,125,126,127,396,397,398,399,400,401,402,403,404,405,406,407,179,408,409,410,411,412,413,414,128,415,129,416,417,130],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[181,60,25,26,27,28,191,6,7,193,8,194,9,10,62,63,196,64,29,197,65,30,198,53,66,67,68,11,199,31,204,205,13,69,210,15,16,72,17,18,32,33,217,35,73,36,74,222,223,225,78,79,80,82,83,84,86,87,90,91,94,96,97,270,276,37,279,176,38,282,283,284,286,39,287,288,40,290,41,177,100,298,299,300,178,306,110,20,320,321,42,323,324,43,326,329,44,331,332,333,335,45,336,337,46,339,47,340,113,48,165,114,115,116,117,118,119,120,361,362,363,364,365,123,125,126,401],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[418,187,419,523],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[6,7,8,9,10,52,53,11,12,14,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[497,498,499,501,503],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[12,14,69,210,70,71,15,72,524,17,211,18],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[12,14,69,210,70,71,15,72,524,17,211,18],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[461,462,463],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[418,187,419,523],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[221,76,77,96,163,4,322,111,112,114,166,360,51,5,125],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests2.UsageTest.argumentsOrdered":77,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":321,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":376,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":75,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":185,"org.easymock.tests2.DelegateToTest.testReturnException":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":398,"org.easymock.tests.MockingTest.testPartialClassMocking":152,"org.easymock.tests.MockClassControlTest.testToString":507,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":248,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":444,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":440,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":43,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":168,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageTest.wrongArguments":221,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":273,"org.easymock.samples.ExampleTest.answerVsDelegate":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":519,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":155,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":423,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":512,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":84,"org.easymock.tests2.CaptureTest.testPrimitive":69,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":320,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":340,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":409,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":403,"org.easymock.tests.UsageTest.argumentsOrdered":112,"org.easymock.tests.UsageVarargTest.varargIntAccepted":103,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":361,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":420,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":172,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":263,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":365,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":462,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":241,"org.easymock.tests.ReplayStateInvalidUsageTest.times":316,"org.easymock.tests2.DependencyTest.testClassMocking":492,"org.easymock.tests2.AnswerTest.answer":200,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":381,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":209,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":518,"org.easymock.tests2.CaptureTest.testAnd":12,"org.easymock.tests2.UsageTest.strictResetToDefault":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":149,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":299,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":407,"org.easymock.tests2.DelegateToTest.testDelegate":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":338,"org.easymock.tests.LimitationsTest.mockFinalMethod":522,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":392,"org.easymock.tests2.DependencyTest.testClassMockingSupport":493,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":99,"org.easymock.tests2.CaptureTest.testCapture1_2446744":210,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":483,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":207,"org.easymock.tests.UsageThrowableTest.throwError":115,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":310,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":346,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":515,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":411,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":458,"org.easymock.samples.PartialClassMockTest.testGetArea":60,"org.easymock.tests.MockingTest.testInterfaceMocking":154,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":362,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":445,"org.easymock.tests2.UsageTest.niceToStrict":74,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":326,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":87,"org.easymock.tests2.MockBuilderTest.testCreateMock":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":453,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":244,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":333,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":82,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":517,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":395,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":412,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":271,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":135,"org.easymock.tests.UsageOverloadedMethodTest.overloading":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":29,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":286,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":341,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":64,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":72,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":304,"org.easymock.tests.MockClassControlTest.testEquals":511,"org.easymock.tests2.EasyMockSupportClassTest.testAll":437,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":431,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":390,"org.easymock.tests2.CaptureTest.testCaptureAll":13,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":208,"org.easymock.tests.MockNameTest.defaultName":275,"org.easymock.tests2.UsageConstraintsTest.testMatches":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":410,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":308,"org.easymock.samples.ExampleTest.voteForRemovals":59,"org.easymock.tests.UsageVarargTest.allKinds":19,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":165,"org.easymock.samples.BasicClassMockTest.testPrintContent":465,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":391,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":119,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":402,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":260,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":502,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":173,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":298,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":487,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":503,"org.easymock.samples.ExampleTest.voteForRemoval":57,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":488,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":33,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":473,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":482,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":432,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":220,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":80,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":397,"org.easymock.tests2.CaptureTest.testCaptureFirst":18,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":81,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":226,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":282,"org.easymock.tests2.UsageTest.moreThanOneArgument":36,"org.easymock.tests2.CaptureTest.testCapture2_2446744":212,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":213,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":382,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":109,"org.easymock.tests.GenericTest.testBridgedEquals":514,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":136,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":417,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":133,"org.easymock.tests.UsageExpectAndReturnTest.longType":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":388,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":47,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":55,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":350,"org.easymock.tests.UsageCallCountTest.tooManyCalls":130,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":463,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":454,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":330,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":118,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":426,"org.easymock.tests.MockingTest.testNiceClassMocking":156,"org.easymock.tests.MockingTest.testClassMocking":151,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":413,"org.easymock.tests2.UsageConstraintsTest.testContains":196,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":267,"org.easymock.tests2.UsageConstraintsTest.testFind":193,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":48,"org.easymock.tests.MockTypeTest.fromEasyMockClass":345,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":121,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":27,"org.easymock.tests.UsageExpectAndReturnTest.object":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":425,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":229,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":169,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":105,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":295,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":137,"org.easymock.tests.UsageTest.exactCallCountByLastCall":325,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":404,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":147,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":40,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":356,"org.easymock.tests.MockClassControlTest.testHashCode":510,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":254,"org.easymock.tests2.EasyMockSupportTest.testVerify":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":447,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":461,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":405,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":394,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":206,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":231,"org.easymock.tests.UsageVarargTest.varargCharAccepted":104,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":495,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":387,"org.easymock.tests2.UsageTest.openCallCountByLastCall":222,"org.easymock.tests.DefaultClassInstantiatorTest.object":496,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":460,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":86,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":393,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":293,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":448,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":239,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":253,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":509,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":486,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":290,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":349,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":456,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":159,"org.easymock.tests2.UsageTest.resumeIfFailure":225,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":516,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":400,"org.easymock.tests2.StubTest.stubWithReturnValue":270,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":284,"org.easymock.tests2.SerializationTest.testAllMockedMethod":419,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":50,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":61,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":45,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":523,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":386,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":201,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":303,"org.easymock.tests.UsageExpectAndThrowTest.object":334,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":66,"org.easymock.tests2.DelegateToTest.testWrongClass":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":306,"org.easymock.samples.ConstructorCalledMockTest.testTax":468,"org.easymock.tests.UsageStrictMockTest.range":125,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":188,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":228,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":490,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":335,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":434,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":272,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests2.CaptureTest.testCaptureNone":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":344,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.UsageVerifyTest.twoReturns":166,"org.easymock.tests.UsageVarargTest.varargByteAccepted":108,"org.easymock.tests2.ThreadingTest.testThreadSafe":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":451,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":129,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":464,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":296,"org.easymock.tests2.CaptureTest.testCapture_2617107":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":22,"org.easymock.tests2.UsageConstraintsTest.any":63,"org.easymock.tests2.StubTest.stub":269,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndThrowTest.longType":328,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":500,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":314,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":95,"org.easymock.tests2.SerializationTest.testClass":418,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":258,"org.easymock.tests.LimitationsTest.mockNativeMethod":433,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":513,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":177,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":238,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":98,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":180,"org.easymock.tests2.NameTest.nameForMocksControl":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":240,"org.easymock.tests2.MockedExceptionTest.testMockedException":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":439,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":324,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":428,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":190,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":329,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":422,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":479,"org.easymock.tests.MockingTest.testNicePartialClassMocking":153,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":167,"org.easymock.tests2.CaptureTest.testCaptureLast":15,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":236,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":164,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":145,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":67,"org.easymock.tests.MockingTest.testTwoMocks":505,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":332,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":76,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":199,"org.easymock.samples.ExampleTest.removeNonExistingDocument":183,"org.easymock.tests.UsageStrictMockTest.differentMethods":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":243,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":255,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":498,"org.easymock.tests2.ConstraintsToStringTest.andToString":160,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":34,"org.easymock.tests2.MockBuilderTest.testCreateMockString":481,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":441,"org.easymock.tests.UsageExpectAndThrowTest.floatType":327,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":436,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":494,"org.easymock.tests.UsageVerifyTest.twoThrows":114,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":450,"org.easymock.samples.ExampleTest.voteAgainstRemoval":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.LimitationsTest.privateConstructor":521,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":132,"org.easymock.tests2.UsageConstraintsTest.testNotNull":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":120,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":265,"org.easymock.tests2.UsageTest.defaultResetToNice":224,"org.easymock.samples.ExampleTest.voteAgainstRemovals":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":237,"org.easymock.tests.UsageVarargTest.differentLength":305,"org.easymock.tests2.CallbackTest.callback":25,"org.easymock.tests2.UsageConstraintsTest.equals":192,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":484,"org.easymock.tests.UsageTest.openCallCountByLastCall":323,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":21,"org.easymock.tests.UsageCallCountTest.tooFewCalls":128,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":491,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":274,"org.easymock.tests.UsageThrowableTest.throwCheckedException":117,"org.easymock.tests.MockingTest.testStrictClassMocking":504,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":427,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":277,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":242,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":233,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":205,"org.easymock.tests.ObjectMethodsTest.testHashCode":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":171,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":214,"org.easymock.tests2.NameTest.nameForNiceMock":251,"org.easymock.tests2.DependencyTest.testInterfaceMocking":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":170,"org.easymock.samples.ExampleTest.addDocument":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":457,"org.easymock.tests2.DelegateToTest.testStubDelegate":217,"org.easymock.tests2.AnswerTest.stubAnswer":204,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":123,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":54,"org.easymock.tests.UsageVarargTest.varargLongAccepted":107,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":375,"org.easymock.tests.UsageExpectAndReturnTest.floatType":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":174,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":469,"org.easymock.tests2.ConstraintsToStringTest.orToString":157,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":198,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":262,"org.easymock.tests.UsageThrowableTest.noUpperLimit":352,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":191,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":470,"org.easymock.tests2.SerializationTest.test":187,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":70,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":497,"org.easymock.tests2.UsageConstraintsTest.testSame":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":279,"org.easymock.samples.SupportTest.addDocument":186,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":150,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":442,"org.easymock.tests.GenericTest.testPackageScope":430,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":261,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":278,"org.easymock.tests2.NameTest.nameForMock":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":143,"org.easymock.tests2.UsageStrictMockTest.differentMethods":97,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":485,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":176,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":337,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":292,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":300,"org.easymock.tests2.MockedExceptionTest.testRealException":268,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":162,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":378,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":319,"org.easymock.tests2.NameTest.nameForStrictMock":250,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":477,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":148,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":26,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":90,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":474,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":499,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":475,"org.easymock.tests2.UsageStrictMockTest.range":96,"org.easymock.tests2.UsageConstraintsTest.lessThan":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":446,"org.easymock.tests2.CaptureTest.testCaptureRightOne":17,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":89,"org.easymock.tests.UsageTest.wrongArguments":322,"org.easymock.tests2.MockBuilderTest.testWithConstructor":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":443,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":429,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":367,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":501,"org.easymock.tests.UsageVarargTest.varargShortAccepted":106,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":416,"org.easymock.tests2.UsageConstraintsTest.cmpTo":195,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":202,"org.easymock.tests2.CompareToTest.testLessThan":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":223,"org.easymock.tests2.CaptureTest.testCaptureFromStub":211,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":309,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":476,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":415,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":288,"org.easymock.tests2.CaptureTest.testCapture":524,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":124,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.samples.ExampleTest.addAndChangeDocument":24,"org.easymock.tests2.ConstraintsToStringTest.notToString":158,"org.easymock.tests.UsageStrictMockTest.testVerify":396,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":184,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":389,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":363,"org.easymock.tests.LimitationsTest.abstractClass":520,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":38,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":364,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":83}}]
