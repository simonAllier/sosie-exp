[{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:324","failures":[1,2,3],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[4,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,1,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[49,50],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[51,52],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[53,54,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[57,58],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[60,61,62,63,36,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:122","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(java.lang.Object.getClass()) ? new org.easymock.internal.JavaProxyFactory() : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[65,66,67,68],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:624","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[69,70,71,72,73,51,74,75,76,77,78,79,80,81,82,83,84,52,85,86,87,88,89,90,91,92],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))","type":"CtReturnImpl"},"failures":[93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[66,94],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[96,96,97,97,98,99,100,4,6,101,102,103,104,105,106,25,107,108,109,110,111,26,27,112,28,113,56,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,15,132,133,134,135,136,137,138,139,140,141,142,143,144],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[102,105,109,117,145,146],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[147,148,115],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[60,61,62,63,36,43],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[149,150,151,152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"failureDictionary":{"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":76,"org.easymock.tests2.UsageConstraintsTest.testMatches":93,"org.easymock.tests2.UsageTest.argumentsOrdered":22,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":17,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":148,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":8,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":67,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":70,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":61,"org.easymock.samples.BasicClassMockTest.testPrintContent":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":145,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":7,"org.easymock.tests2.AnswerTest.stubAnswer":57,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":14,"org.easymock.tests2.UsageConstraintsTest.greaterThan":66,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests2.UsageTest.wrongArguments":20,"org.easymock.samples.ConstructorCalledMockTest.testTax":96,"org.easymock.tests.UsageStrictMockTest.range":44,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":50,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":97,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":143,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":123,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":90,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":141,"org.easymock.tests2.UsageConstraintsTest.testNull":149,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":114,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":110,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":24,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":9,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":62,"org.easymock.tests.UsageUnorderedTest.message":42,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":41,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":34,"org.easymock.tests.GenericTest.testPackageScope":138,"org.easymock.tests.UsageVerifyTest.twoReturns":40,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":27,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":89,"org.easymock.tests.UsageTest.argumentsOrdered":39,"org.easymock.tests.GenericTest.testBridgedEquals":95,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":98,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":47,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":105,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":91,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":109,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":18,"org.easymock.tests.UsageCallCountTest.tooManyCalls":48,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":86,"org.easymock.tests.LimitationsTest.mockNativeMethod":144,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":75,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":140,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":150,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":3,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":124,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":106,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":136,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":132,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":111,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":116,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":0,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":71,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":128,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":118,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests.MockingTest.testTwoMocks":133,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":85,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":13,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":77,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":84,"org.easymock.tests.UsageRangeTest.combination":33,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":16,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":56,"org.easymock.tests.UsageTest.wrongArguments":37,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":35,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":92,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":83,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":137,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":147,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":19,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":46,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":103,"org.easymock.samples.PartialClassMockTest.testGetArea":100,"org.easymock.tests2.CompareToTest.testLessOrEqual":68,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":121,"org.easymock.tests2.UsageConstraintsTest.testNotNull":152,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":146,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":54,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":53,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":108,"org.easymock.tests2.MockBuilderTest.testCreateMock":26,"org.easymock.tests2.UsageTest.defaultResetToNice":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":72,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":107,"org.easymock.tests.UsageTest.unexpectedCallWithArray":36,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":32,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":78,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":60,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":51,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":126,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":104,"org.easymock.tests.UsageThrowableTest.throwCheckedException":2,"org.easymock.tests2.CompareToTest.testGreateThan":94,"org.easymock.tests2.EasyMockSupportClassTest.testAll":101,"org.easymock.tests2.UsageTest.resumeIfFailure":23,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":130,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":142,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":139,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":63,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":129}}]
