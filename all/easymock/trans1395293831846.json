[{"position":"org.easymock.internal.RecordState:85","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,170,171,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"threadSafe"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[23,26,328,107,108,111,112,150,157,158,221,292,298,299],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[172,173,329,330,331,332,333,334,335,336,337,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"targetField"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[205,314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[339],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:169","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n    java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n} ","type":"CtIfImpl"},"failures":[330,331,340,341,332,333,335,336,342,343,337,338],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[344],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[345,346,339],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[23,24,26,27,106,108,111,112,148,150,156,157,158,213,214,215,216,219,221,222,291,292,298,299],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,88,89,91,92,93,94,95,96,103,105,110,147,157,212,289,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[23,132,247],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[24,44,45,48,97,347,348,349,350,351,352,133,151,152,153,154,155,160,161,162,163,164,165,166,170,170,171,171,196,212,219,234,235,238,239,240,241,246,248,249,251,252,253,258,259,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[353,137],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[354,286,287,288],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[355],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[170,171,224,356,357,358,359,230,360,361,231,362,363,364,365,366,367,368,369,370,232,371,372,373,374,375,233,376,377,286,306,310,378,379,380,381,382,383,384,385,386],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[195],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[353,137],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[234,236,251,257,387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[203,250],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[244],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[388,389,134,172,173,200,207,210,390,391,213,214,215,216,329,330,331,340,229,392,341,332,333,362,366,371,334,335,336,342,272,393,343,337,338,276,279,281,304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[185,187,195,236,237,239,241,242,394,253,258],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,170,171,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,395,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[396,185,186,187,188,189,190,191,192,194,195,196,197,198],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[136],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":237,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":105,"org.easymock.tests2.UsageTest.argumentsOrdered":299,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":393,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":294,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":173,"org.easymock.tests2.DelegateToTest.testReturnException":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":100,"org.easymock.tests.MockingTest.testPartialClassMocking":114,"org.easymock.tests.MockClassControlTest.testToString":80,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":49,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":231,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":266,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":44,"org.easymock.tests2.UsageTest.wrongArguments":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":119,"org.easymock.samples.ExampleTest.answerVsDelegate":177,"org.easymock.tests2.UsageConstraintsTest.testNull":239,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":202,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":85,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":282,"org.easymock.tests2.CaptureTest.testPrimitive":188,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":48,"org.easymock.tests.UsageTest.moreThanOneArgument":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":68,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":153,"org.easymock.tests.UsageTest.argumentsOrdered":112,"org.easymock.tests.UsageVarargTest.varargIntAccepted":124,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":162,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":311,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":166,"org.easymock.tests.ReplayStateInvalidUsageTest.times":141,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":229,"org.easymock.tests2.AnswerTest.answer":324,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":394,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":228,"org.easymock.tests2.CaptureTest.testAnd":185,"org.easymock.tests2.UsageTest.strictResetToDefault":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":380,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":277,"org.easymock.tests2.DelegateToTest.testDelegate":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":43,"org.easymock.tests2.CaptureTest.testCapture1_2446744":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":62,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":226,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":135,"org.easymock.tests.UsageThrowableTest.throwError":89,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":388,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":155,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":377,"org.easymock.samples.PartialClassMockTest.testGetArea":167,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":136,"org.easymock.tests2.CompareToTest.testLessOrEqual":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":50,"org.easymock.tests2.UsageTest.niceToStrict":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":366,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":313,"org.easymock.tests2.MockBuilderTest.testCreateMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":58,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":278,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":117,"org.easymock.tests.UsageOverloadedMethodTest.overloading":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":375,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":12,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":86,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":247,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":194,"org.easymock.tests.MockClassControlTest.testEquals":84,"org.easymock.tests2.EasyMockSupportClassTest.testAll":230,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":66,"org.easymock.tests2.CaptureTest.testCaptureAll":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":227,"org.easymock.tests2.UsageConstraintsTest.testMatches":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":154,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":133,"org.easymock.samples.ExampleTest.voteForRemovals":181,"org.easymock.tests.UsageVarargTest.allKinds":132,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":156,"org.easymock.samples.BasicClassMockTest.testPrintContent":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":42,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":95,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":343,"org.easymock.tests2.UsageConstraintsTest.greaterThan":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":72,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":210,"org.easymock.samples.ExampleTest.voteForRemoval":178,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":268,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":205,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":159,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":289,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":275,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":99,"org.easymock.tests2.CaptureTest.testCaptureFirst":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":276,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":301,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":8,"org.easymock.tests2.CaptureTest.testCapture2_2446744":197,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":270,"org.easymock.tests2.UsageTest.moreThanOneArgument":291,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":318,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":131,"org.easymock.tests.GenericTest.testBridgedEquals":355,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":37,"org.easymock.tests.UsageExpectAndReturnTest.longType":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":39,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":67,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":256,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":151,"org.easymock.tests.UsageCallCountTest.tooManyCalls":38,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":9,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":305,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":31,"org.easymock.tests2.UsageConstraintsTest.testContains":246,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":322,"org.easymock.tests2.UsageConstraintsTest.testFind":238,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":88,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":21,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":303,"org.easymock.tests.UsageExpectAndReturnTest.object":11,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":281,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":126,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":77,"org.easymock.tests.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":356,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":17,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":146,"org.easymock.tests.MockClassControlTest.testHashCode":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":335,"org.easymock.tests2.EasyMockSupportTest.testVerify":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":225,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":395,"org.easymock.tests.UsageVarargTest.varargCharAccepted":125,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":218,"org.easymock.tests2.UsageTest.openCallCountByLastCall":295,"org.easymock.tests.DefaultClassInstantiatorTest.object":121,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":345,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":75,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":369,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":334,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":55,"org.easymock.tests.CapturesMatcherTest.test":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":18,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":233,"org.easymock.tests2.UsageTest.resumeIfFailure":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":102,"org.easymock.tests2.StubTest.stubWithReturnValue":212,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":381,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":10,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":257,"org.easymock.tests2.SerializationTest.testAllMockedMethod":288,"org.easymock.samples.SupportTest.voteForRemovals":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":61,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":354,"org.easymock.tests.UsageExpectAndThrowTest.object":59,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":254,"org.easymock.tests2.DelegateToTest.testWrongClass":263,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":160,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":161,"org.easymock.samples.ConstructorCalledMockTest.testTax":170,"org.easymock.tests.UsageStrictMockTest.range":26,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":304,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":315,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":143,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":118,"org.easymock.tests2.CaptureTest.testCaptureNone":193,"org.easymock.tests.UsageUnorderedTest.message":150,"org.easymock.tests.UsageVerifyTest.twoReturns":158,"org.easymock.tests.UsageVarargTest.varargByteAccepted":130,"org.easymock.tests2.ThreadingTest.testThreadSafe":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":371,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":35,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":168,"org.easymock.tests2.CaptureTest.testCapture_2617107":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":47,"org.easymock.tests2.UsageConstraintsTest.any":244,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":140,"org.easymock.tests2.StubTest.stub":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":101,"org.easymock.tests.UsageExpectAndThrowTest.longType":52,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":139,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":220,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":272,"org.easymock.tests2.SerializationTest.testClass":286,"org.easymock.tests.LimitationsTest.mockNativeMethod":0,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":20,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":331,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":223,"org.easymock.tests2.NameTest.nameForMocksControl":216,"org.easymock.tests2.MockedExceptionTest.testMockedException":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":361,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":110,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":53,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":316,"org.easymock.tests.MockingTest.testNicePartialClassMocking":115,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":204,"org.easymock.tests2.CaptureTest.testCaptureLast":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":329,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":353,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":242,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":310,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":255,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":378,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":1,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":57,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":298,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":259,"org.easymock.samples.ExampleTest.removeNonExistingDocument":182,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":137,"org.easymock.tests.UsageStrictMockTest.differentMethods":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":341,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":336,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":269,"org.easymock.tests2.MockBuilderTest.testCreateMockString":319,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":78,"org.easymock.tests.UsageExpectAndThrowTest.floatType":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":362,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":325,"org.easymock.tests.UsageVerifyTest.twoThrows":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":232,"org.easymock.samples.ExampleTest.voteAgainstRemoval":179,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":209,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":386,"org.easymock.tests2.UsageConstraintsTest.testNotNull":258,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":320,"org.easymock.tests2.UsageTest.defaultResetToNice":297,"org.easymock.samples.ExampleTest.voteAgainstRemovals":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":16,"org.easymock.tests.UsageVarargTest.differentLength":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":330,"org.easymock.tests2.CallbackTest.callback":184,"org.easymock.tests.UsageTest.openCallCountByLastCall":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":46,"org.easymock.tests.UsageCallCountTest.tooFewCalls":33,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":120,"org.easymock.tests.UsageThrowableTest.throwCheckedException":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":98,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":392,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":306,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":142,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":308,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":327,"org.easymock.tests.ObjectMethodsTest.testHashCode":76,"org.easymock.tests2.NameTest.nameForNiceMock":215,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":271,"org.easymock.tests2.DependencyTest.testInterfaceMocking":265,"org.easymock.samples.ExampleTest.addDocument":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":372,"org.easymock.tests2.DelegateToTest.testStubDelegate":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.AnswerTest.stubAnswer":326,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests.UsageVarargTest.varargLongAccepted":129,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":28,"org.easymock.tests.UsageExpectAndReturnTest.floatType":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":224,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":171,"org.easymock.tests.UsageThrowableTest.noUpperLimit":90,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":252,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":235,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":190,"org.easymock.tests2.SerializationTest.test":287,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":2,"org.easymock.tests2.UsageConstraintsTest.testSame":240,"org.easymock.samples.SupportTest.addDocument":174,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":363,"org.easymock.tests.GenericTest.testPackageScope":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":337,"org.easymock.tests2.NameTest.nameForMock":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":13,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":384,"org.easymock.tests2.UsageStrictMockTest.differentMethods":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":5,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":74,"org.easymock.tests2.MockedExceptionTest.testRealException":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":219,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":45,"org.easymock.tests2.NameTest.nameForStrictMock":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":346,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":203,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":253,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":312,"org.easymock.tests2.UsageStrictMockTest.range":221,"org.easymock.tests2.UsageConstraintsTest.lessThan":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":274,"org.easymock.tests2.CaptureTest.testCaptureRightOne":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":367,"org.easymock.tests2.UsageConstraintsTest.testOr":241,"org.easymock.tests.UsageRangeTest.combination":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":200,"org.easymock.tests.UsageTest.wrongArguments":108,"org.easymock.tests2.MockBuilderTest.testWithConstructor":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":364,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":6,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":14,"org.easymock.tests.UsageVarargTest.varargShortAccepted":128,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":36,"org.easymock.tests2.UsageConstraintsTest.cmpTo":245,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":296,"org.easymock.tests2.CaptureTest.testCaptureFromStub":196,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":134,"org.easymock.tests.UsageTest.unexpectedCallWithArray":107,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":34,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":383,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":15,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":25,"org.easymock.tests2.UsageConstraintsTest.constraints":236,"org.easymock.samples.ExampleTest.addAndChangeDocument":183,"org.easymock.tests.UsageStrictMockTest.testVerify":29,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":172,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":40,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":165,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":279}}]
