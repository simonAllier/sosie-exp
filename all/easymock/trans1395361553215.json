[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,1,2,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,4,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[201,193],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[202,47,48,53,203,54,55,204,56,57,205,59,60,61,62,63,87,88,89,102,103,128,206,156,157,158,159,160,161,162,163,164,165,207,166,167,168,4,169,170,171,172,173,174,175,176,208,177,178,179,180,209,186,187,188,189,190,191,192,201,210,193,194,211,212,213],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[158,159,161,163,164,207,174,178,186,188,194],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[30,34,35,37,40,50,51,70,74,75,77,80,214,215,216,217,130,131],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[218,218,219,219,6,220,221,222,223,224,23,24,25,225,226,227,228,229,86,230,231,232,233,234,235,236,237,238,133,1,3,239,138,139,140,240,241,242,141,243,142,143,244,144,245,145,146,147,148,150,151,181,246,183,247,184,248,209,249,250,251,252,253,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[120],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[12,18,19,50,51,254,65,255,256,97,98,99,122,123,130,131,157,158,160,162,163,168,170,173,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[5,6,7,9,10,11,12,14,15,16,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,203,54,55,57,257,58,59,60,61,62,63,258,226,259,64,65,86,87,88,89,90,91,92,93,94,95,96,99,260,100,101,104,105,261,106,107,108,109,262,263,110,264,111,112,113,114,116,117,118,120,122,123,265,266,126,128,130,131,133,134,136,1,2,239,138,139,140,241,141,142,143,144,145,146,147,148,149,150,151,152,267,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,4,169,170,171,172,173,174,175,176,208,177,178,179,180,181,246,182,183,247,184,209,250,251,252,185,186,187,188,189,190,201,210,193,194,212,213,195,197,200],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[12,13,14,16,17,20,21,47,48,50,51,89,118,119,124,125,128,130,131,269,270,271,272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[265,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[28,30,44,45,87,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.LastControl:92","failures":[158,159,163,164,207,174,186,188,194],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[275,276,277,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:879","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[279,280,281,282,283],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[284,285],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[5,6,7,9,10,11,12,14,15,16,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,50,51,53,54,55,57,58,59,60,61,62,63,226,259,64,65,86,87,88,90,91,92,93,94,95,96,99,260,100,101,104,105,261,106,107,108,109,262,263,110,264,111,112,113,114,116,117,118,120,122,123,265,266,126,128,130,131,133,134,136,1,2,239,138,139,140,241,141,142,143,144,145,146,147,148,149,150,151,152,267,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,4,169,170,171,172,173,174,175,176,177,178,179,180,181,246,182,183,247,184,209,250,251,252,185,186,187,189,190,201,210,193,194,212,213,195,197,200],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[257,286,287,288,289,290,291,292,268,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[318,319,320,321,322,323,324],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[325,326,327,147,328,246,249,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":159,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":15,"org.easymock.tests2.UsageTest.argumentsOrdered":125,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":111,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":121,"org.easymock.tests2.StubTest.stubWithReturnValue":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":35,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":177,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests2.DelegateToTest.testReturnException":196,"org.easymock.tests.MockingTest.testPartialClassMocking":23,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests.MockClassControlTest.testToString":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":78,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":66,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":138,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":317,"org.easymock.tests.UsageExpectAndThrowTest.object":76,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":114,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":175,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":320,"org.easymock.tests2.DelegateToTest.testWrongClass":198,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":306,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":87,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":88,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":54,"org.easymock.tests2.UsageTest.wrongArguments":119,"org.easymock.samples.ConstructorCalledMockTest.testTax":218,"org.easymock.tests.UsageStrictMockTest.range":50,"org.easymock.samples.ExampleTest.answerVsDelegate":8,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":263,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":223,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":145,"org.easymock.tests2.UsageConstraintsTest.testNull":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":264,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":237,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":142,"org.easymock.tests2.CaptureTest.testPrimitive":189,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":57,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":85,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests.UsageTest.moreThanOneArgument":16,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":182,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":298,"org.easymock.tests2.CaptureTest.testCaptureNone":210,"org.easymock.tests.UsageUnorderedTest.message":89,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests2.ThreadingTest.testThreadSafe":152,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":215,"org.easymock.tests.UsageTest.argumentsOrdered":21,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":59,"org.easymock.tests2.CaptureTest.testCapture_2617107":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":324,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":281,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":56,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":243,"org.easymock.tests2.UsageConstraintsTest.any":166,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":282,"org.easymock.tests.UsageExpectAndThrowTest.longType":69,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":300,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":290,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":129,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":185,"org.easymock.tests.ReplayStateInvalidUsageTest.times":292,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests.LimitationsTest.mockNativeMethod":86,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":45,"org.easymock.tests2.AnswerTest.answer":134,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":207,"org.easymock.tests2.CaptureTest.testAnd":186,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":314,"org.easymock.tests2.UsageTest.strictResetToDefault":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":249,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":132,"org.easymock.tests2.NameTest.nameForMocksControl":272,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":108,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":19,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":217,"org.easymock.tests2.DelegateToTest.testDelegate":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":70,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":25,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":181,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":299,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":143,"org.easymock.tests.MockingTest.testNicePartialClassMocking":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":81,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":184,"org.easymock.tests2.CaptureTest.testCaptureLast":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":205,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":313,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":151,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":164,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":176,"org.easymock.tests.MockingTest.testTwoMocks":224,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":310,"org.easymock.tests2.CaptureTest.testCapture1_2446744":190,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":74,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":124,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":179,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":287,"org.easymock.tests.UsageThrowableTest.throwError":90,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":289,"org.easymock.tests.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":153,"org.easymock.tests2.MockBuilderTest.testCreateMockString":245,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":230,"org.easymock.tests.UsageExpectAndThrowTest.floatType":68,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":171,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":135,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":327,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":139,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":60,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":280,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":251,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":67,"org.easymock.tests2.UsageTest.niceToStrict":120,"org.easymock.tests2.UsageConstraintsTest.testNotNull":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":96,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":141,"org.easymock.tests2.UsageTest.defaultResetToNice":265,"org.easymock.tests2.MockBuilderTest.testCreateMock":244,"org.easymock.samples.ExampleTest.voteAgainstRemovals":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":41,"org.easymock.tests2.CallbackTest.callback":115,"org.easymock.tests.UsageTest.openCallCountByLastCall":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":75,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":156,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":276,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":204,"org.easymock.tests.UsageOverloadedMethodTest.overloading":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":325,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":169,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":37,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":148,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":4,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":193,"org.easymock.tests.UsageThrowableTest.throwCheckedException":93,"org.easymock.tests2.EasyMockSupportClassTest.testAll":239,"org.easymock.tests.MockClassControlTest.testEquals":236,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":227,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":83,"org.easymock.tests2.CaptureTest.testCaptureAll":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":203,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":150,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":147,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":268,"org.easymock.tests2.UsageConstraintsTest.testMatches":170,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":149,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":137,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":257,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":323,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":312,"org.easymock.tests2.NameTest.nameForNiceMock":271,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":155,"org.easymock.tests.UsageVarargTest.allKinds":202,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":307,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":12,"org.easymock.tests2.DependencyTest.testInterfaceMocking":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":322,"org.easymock.samples.BasicClassMockTest.testPrintContent":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":326,"org.easymock.tests2.DelegateToTest.testStubDelegate":197,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":95,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":127,"org.easymock.tests2.AnswerTest.stubAnswer":136,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":48,"org.easymock.tests2.UsageConstraintsTest.greaterThan":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":260,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":252,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":304,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":279,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":267,"org.easymock.tests.UsageExpectAndReturnTest.floatType":28,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":44,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":248,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":133,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":296,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":219,"org.easymock.tests.UsageThrowableTest.noUpperLimit":256,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":173,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":225,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":157,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":106,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":27,"org.easymock.tests2.UsageConstraintsTest.testSame":162,"org.easymock.tests2.CaptureTest.testCaptureFirst":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":107,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":297,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":126,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":33,"org.easymock.tests.GenericTest.testPackageScope":226,"org.easymock.tests2.CaptureTest.testCapture2_2446744":212,"org.easymock.tests2.UsageTest.moreThanOneArgument":118,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":154,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":216,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":144,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":295,"org.easymock.tests.GenericTest.testBridgedEquals":229,"org.easymock.tests2.NameTest.nameForMock":269,"org.easymock.tests.UsageExpectAndReturnTest.longType":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":258,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":38,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":82,"org.easymock.tests2.UsageStrictMockTest.differentMethods":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":274,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":80,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":101,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":71,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":128,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":294,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":55,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":146,"org.easymock.tests2.NameTest.nameForStrictMock":270,"org.easymock.tests2.UsageConstraintsTest.testContains":168,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":200,"org.easymock.tests2.UsageConstraintsTest.testFind":160,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":102,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":247,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":103,"org.easymock.tests.UsageExpectAndReturnTest.object":36,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":209,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":241,"org.easymock.tests2.UsageStrictMockTest.range":130,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":301,"org.easymock.tests2.UsageConstraintsTest.lessThan":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":321,"org.easymock.tests.UsageTest.exactCallCountByLastCall":22,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":53,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":214,"org.easymock.tests2.CaptureTest.testCaptureRightOne":194,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":97,"org.easymock.tests2.UsageConstraintsTest.testOr":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":318,"org.easymock.tests.UsageRangeTest.combination":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":246,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":42,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests.MockClassControlTest.testHashCode":235,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":39,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":98,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":275,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":315,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":206,"org.easymock.tests2.UsageConstraintsTest.cmpTo":167,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":283,"org.easymock.tests2.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":112,"org.easymock.tests2.CaptureTest.testCaptureFromStub":211,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":286,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":242,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":311,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":40,"org.easymock.tests2.CaptureTest.testCapture":285,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":302,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":250,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":234,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.UsageConstraintsTest.constraints":158,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":72,"org.easymock.tests.CapturesMatcherTest.test":284,"org.easymock.tests.ReplayStateInvalidCallsTest.times":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":43,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":309,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":140,"org.easymock.tests2.UsageTest.resumeIfFailure":266,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":62,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":262}}]
