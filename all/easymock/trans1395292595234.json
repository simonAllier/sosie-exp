[{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[0,105,106,107,108,109,110,111,112,113,114,115,1,1,2,2,3,4,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,5,6,7,8,9,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,10,11,12,13,14,15,16,17,177,178,179,180,181,182,183,184,185,186,187,188,18,19,20,21,22,23,24,25,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,26,205,206,27,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,28,29,30,31,32,240,33,241,242,34,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,35,36,37,38,324,325,326,39,40,327,41,42,43,44,328,45,46,47,48,49,50,51,52,53,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,54,55,348,56,349,57,58,59,60,61,350,62,63,64,65,351,66,67,68,69,70,71,72,352,353,354,73,74,75,355,356,357,358,359,360,361,76,362,77,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,78,79,80,81,388,82,83,389,390,391,392,393,394,395,396,397,398,399,84,86,87,89,90,91,92,94,95,96,97,99,100,101,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[476,477,478,479,480,93,103],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[49,50,481,482,90],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[49,50,482,90],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[379,435],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[448],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[106,356,359,360,473,474,475],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,105,106,107,108,109,110,112,113,114,115,1,1,2,2,3,4,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,6,7,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,10,177,178,179,180,181,182,183,184,185,19,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,229,231,232,233,234,235,236,237,238,239,31,32,33,267,268,269,270,271,272,277,278,279,280,281,282,283,291,293,294,296,299,301,302,303,304,305,306,310,311,312,314,315,317,318,319,320,321,322,323,37,325,39,40,327,41,42,43,45,48,50,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,56,58,66,72,354,73,74,75,355,356,359,360,361,76,362,77,363,364,365,366,367,368,369,370,371,372,373,374,375,381,78,79,80,81,388,82,83,390,391,392,393,395,396,397,399,84,90,91,92,94,97,99,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,428,429,430,431,437,444,445,446,447,449,450,451,452,453,454,456,457,458,459,460,461,462,463,464,465,466,467,469,470,471,472,483,473,475,102],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[12,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[450,455,465,470],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjenesisClassInstantiator:26","sourceCode":"return org.objenesis.ObjenesisHelper.org.objenesis.ObjenesisHelper.newInstance(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[459],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[484,76,362,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[0,105,106,107,108,109,110,111,112,113,114,115,1,2,3,4,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,5,6,7,8,9,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,10,485,11,12,13,14,15,16,486,17,487,177,178,179,180,181,182,183,184,185,186,187,188,18,19,20,21,22,23,24,25,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,26,488,489,205,206,27,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,28,29,30,31,32,240,33,241,242,34,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,35,36,37,38,324,325,326,39,40,327,41,42,43,44,328,45,46,47,48,49,50,51,52,53,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,54,55,348,56,349,57,58,59,60,61,350,62,63,64,65,351,66,67,68,69,70,71,72,352,353,354,73,74,75,355,356,357,358,359,360,361,76,362,77,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,78,79,80,81,490,388,82,83,491,389,390,391,392,393,394,395,396,397,398,399,84,85,86,87,88,89,90,91,92,93,94,492,95,96,97,98,99,100,493,494,495,101,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,483,473,474,475,102,103,104],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"position":"org.easymock.Capture:134","failures":[496],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[186],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[497,498,499,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,348,56,349,57,58,59,60,61,350,62,63,64,65,351,66,67,68,69,70,71,72,352,353,73,74,75,76,77,78,79,80,81,82,83,84,86,87,89,90,91,92,94,95,96,97,99,100,493,494,101,426,427,102,103],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[447,453,465],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[501,502,211,233,503,504],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[106,226,395,397,398,399],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[106,226,395,397,399],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[44,91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[462],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":447,"org.easymock.tests2.UsageTest.argumentsOrdered":412,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":373,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":253,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":407,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":116,"org.easymock.tests2.DelegateToTest.testReturnException":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests.MockingTest.testPartialClassMocking":31,"org.easymock.tests.MockClassControlTest.testToString":20,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":389,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":117,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":58,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":429,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":476,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":454,"org.easymock.tests2.UsageTest.wrongArguments":405,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":197,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":179,"org.easymock.samples.ExampleTest.answerVsDelegate":106,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":27,"org.easymock.tests2.UsageConstraintsTest.testNull":450,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":242,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":41,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":25,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":372,"org.easymock.tests2.CaptureTest.testPrimitive":332,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":201,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":136,"org.easymock.tests.UsageTest.moreThanOneArgument":210,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":281,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":172,"org.easymock.tests.UsageTest.argumentsOrdered":216,"org.easymock.tests.UsageVarargTest.varargIntAccepted":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":480,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":442,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":306,"org.easymock.tests.ReplayStateInvalidUsageTest.times":298,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":381,"org.easymock.tests2.DependencyTest.testClassMocking":426,"org.easymock.tests2.AnswerTest.answer":356,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":425,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":489,"org.easymock.tests2.CaptureTest.testAnd":329,"org.easymock.tests2.UsageTest.strictResetToDefault":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":280,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":367,"org.easymock.tests2.DelegateToTest.testDelegate":399,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":132,"org.easymock.tests.LimitationsTest.mockFinalMethod":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":185,"org.easymock.tests2.DependencyTest.testClassMockingSupport":427,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":324,"org.easymock.tests2.CaptureTest.testCapture1_2446744":333,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":328,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":423,"org.easymock.tests.UsageThrowableTest.throwError":189,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":292,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":206,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":487,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":353,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":240,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":303,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":138,"org.easymock.tests2.UsageTest.niceToStrict":406,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":62,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":243,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":90,"org.easymock.tests2.MockBuilderTest.testCreateMock":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":69,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":384,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":126,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":368,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":488,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":177,"org.easymock.tests.UsageOverloadedMethodTest.overloading":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":460,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":156,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":276,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":459,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":338,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":313,"org.easymock.tests.MockClassControlTest.testEquals":24,"org.easymock.tests2.EasyMockSupportClassTest.testAll":56,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":7,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":424,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":183,"org.easymock.tests2.CaptureTest.testCaptureAll":330,"org.easymock.tests.MockNameTest.defaultName":143,"org.easymock.tests2.UsageConstraintsTest.testMatches":461,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":282,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":290,"org.easymock.samples.ExampleTest.voteForRemovals":110,"org.easymock.tests.UsageVarargTest.allKinds":321,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":184,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":195,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":439,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":223,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":486,"org.easymock.tests2.UsageConstraintsTest.greaterThan":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":166,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":51,"org.easymock.samples.ExampleTest.voteForRemoval":107,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":17,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":52,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":344,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":207,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":495,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":44,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":402,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":10,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":365,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":394,"org.easymock.tests2.CaptureTest.testCaptureFirst":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":366,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":414,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":152,"org.easymock.tests2.UsageTest.moreThanOneArgument":404,"org.easymock.tests2.CaptureTest.testCapture2_2446744":341,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":346,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":261,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":320,"org.easymock.tests.GenericTest.testBridgedEquals":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":274,"org.easymock.tests.UsageExpectAndReturnTest.longType":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":181,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":363,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":135,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":468,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":171,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":133,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":187,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":279,"org.easymock.tests.UsageCallCountTest.tooManyCalls":275,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":194,"org.easymock.tests.MockingTest.testNiceClassMocking":34,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":79,"org.easymock.tests.MockingTest.testClassMocking":29,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":482,"org.easymock.tests2.UsageConstraintsTest.testContains":458,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":268,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":75,"org.easymock.tests2.UsageConstraintsTest.testFind":449,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":278,"org.easymock.tests.MockTypeTest.fromEasyMockClass":205,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":475,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests.UsageExpectAndReturnTest.object":155,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":371,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":477,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":315,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":287,"org.easymock.tests.UsageTest.exactCallCountByLastCall":217,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":248,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":173,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":161,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":310,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":226,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":433,"org.easymock.tests.MockClassControlTest.testHashCode":23,"org.easymock.tests2.EasyMockSupportTest.testVerify":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":64,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":174,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":422,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":483,"org.easymock.tests.UsageVarargTest.varargCharAccepted":314,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":485,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":266,"org.easymock.tests2.UsageTest.openCallCountByLastCall":408,"org.easymock.tests.DefaultClassInstantiatorTest.object":11,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":374,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":307,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":432,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":22,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":123,"org.easymock.tests.CapturesMatcherTest.test":496,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":162,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":186,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":72,"org.easymock.tests2.UsageTest.resumeIfFailure":413,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":493,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests2.StubTest.stubWithReturnValue":431,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":469,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":154,"org.easymock.tests2.SerializationTest.testAllMockedMethod":77,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":259,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":114,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":435,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":129,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":484,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":265,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":357,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":142,"org.easymock.tests.UsageExpectAndThrowTest.object":127,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":466,"org.easymock.tests2.DelegateToTest.testWrongClass":397,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":322,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":323,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":236,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":400,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":78,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":128,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":54,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":215,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":178,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":501,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":139,"org.easymock.tests2.CaptureTest.testCaptureNone":337,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":498,"org.easymock.tests.UsageUnorderedTest.message":144,"org.easymock.tests.UsageVerifyTest.twoReturns":204,"org.easymock.tests.UsageVarargTest.varargByteAccepted":319,"org.easymock.tests2.ThreadingTest.testThreadSafe":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":67,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":272,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":288,"org.easymock.tests2.CaptureTest.testCapture_2617107":331,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":263,"org.easymock.tests2.UsageConstraintsTest.any":456,"org.easymock.tests2.StubTest.stub":430,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":188,"org.easymock.tests.UsageExpectAndThrowTest.longType":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":264,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":15,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":296,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":418,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":437,"org.easymock.tests2.SerializationTest.testClass":76,"org.easymock.tests.LimitationsTest.mockNativeMethod":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":164,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":8,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":378,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":421,"org.easymock.tests2.NameTest.nameForMocksControl":393,"org.easymock.tests2.MockedExceptionTest.testMockedException":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":57,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":214,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":474,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":121,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":33,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":39,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":94,"org.easymock.tests.MockingTest.testNicePartialClassMocking":32,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":43,"org.easymock.tests2.CaptureTest.testCaptureLast":336,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":376,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":325,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":453,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":83,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":467,"org.easymock.tests.MockingTest.testTwoMocks":30,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":125,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":411,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":471,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":500,"org.easymock.samples.ExampleTest.removeNonExistingDocument":111,"org.easymock.tests.UsageStrictMockTest.differentMethods":237,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":434,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":13,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":345,"org.easymock.tests2.MockBuilderTest.testCreateMockString":99,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":18,"org.easymock.tests.UsageExpectAndThrowTest.floatType":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":59,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":359,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":104,"org.easymock.tests.UsageVerifyTest.twoThrows":203,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":108,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":254,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":50,"org.easymock.tests.LimitationsTest.privateConstructor":36,"org.easymock.tests2.UsageConstraintsTest.testNotNull":470,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":196,"org.easymock.tests2.UsageTest.defaultResetToNice":410,"org.easymock.samples.ExampleTest.voteAgainstRemovals":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":255,"org.easymock.tests.UsageVarargTest.differentLength":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":377,"org.easymock.tests2.CallbackTest.callback":354,"org.easymock.tests2.UsageConstraintsTest.equals":448,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":46,"org.easymock.tests.UsageTest.openCallCountByLastCall":213,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":199,"org.easymock.tests.UsageCallCountTest.tooFewCalls":270,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":81,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":180,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":499,"org.easymock.tests.UsageThrowableTest.throwCheckedException":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":502,"org.easymock.tests.MockingTest.testStrictClassMocking":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":170,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":382,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":388,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":361,"org.easymock.tests.ObjectMethodsTest.testHashCode":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":479,"org.easymock.tests2.NameTest.nameForNiceMock":392,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":347,"org.easymock.tests2.DependencyTest.testInterfaceMocking":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":478,"org.easymock.samples.ExampleTest.addDocument":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":68,"org.easymock.tests2.DelegateToTest.testStubDelegate":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":352,"org.easymock.tests2.AnswerTest.stubAnswer":360,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":234,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":492,"org.easymock.tests.UsageVarargTest.varargLongAccepted":318,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":163,"org.easymock.tests.UsageExpectAndReturnTest.floatType":147,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":102,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":464,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":441,"org.easymock.tests.UsageThrowableTest.noUpperLimit":190,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":228,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":445,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":100,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":334,"org.easymock.tests2.SerializationTest.test":362,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":12,"org.easymock.tests2.UsageConstraintsTest.testSame":451,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":146,"org.easymock.samples.SupportTest.addDocument":113,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":490,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":60,"org.easymock.tests.GenericTest.testPackageScope":6,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":247,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":440,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":241,"org.easymock.tests2.NameTest.nameForMock":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":157,"org.easymock.tests2.UsageStrictMockTest.differentMethods":420,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":98,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":131,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":168,"org.easymock.tests2.MockedExceptionTest.testRealException":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":208,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":198,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":301,"org.easymock.tests2.NameTest.nameForStrictMock":391,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":89,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":473,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":42,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":101,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":465,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":14,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":86,"org.easymock.tests2.UsageStrictMockTest.range":419,"org.easymock.tests2.UsageConstraintsTest.lessThan":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":436,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":251,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":63,"org.easymock.tests2.CaptureTest.testCaptureRightOne":339,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":497,"org.easymock.tests2.UsageConstraintsTest.testOr":452,"org.easymock.tests.UsageRangeTest.combination":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":40,"org.easymock.tests.UsageTest.wrongArguments":212,"org.easymock.tests2.MockBuilderTest.testWithConstructor":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":61,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":244,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":16,"org.easymock.tests.UsageVarargTest.varargShortAccepted":317,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":273,"org.easymock.tests2.UsageConstraintsTest.cmpTo":457,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":246,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":409,"org.easymock.tests2.CaptureTest.testCaptureFromStub":340,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":291,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":87,"org.easymock.tests.UsageTest.unexpectedCallWithArray":211,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":233,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":159,"org.easymock.tests2.UsageConstraintsTest.constraints":446,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":235,"org.easymock.samples.ExampleTest.addAndChangeDocument":112,"org.easymock.tests.UsageStrictMockTest.testVerify":239,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":115,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":182,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":151,"org.easymock.tests.LimitationsTest.abstractClass":35,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":305,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":369}}]
