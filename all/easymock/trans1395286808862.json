[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,13,14,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[57,58,59,60],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[61,62,63,64,65,66],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[68,69,70],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[71,72,73,74,75],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[38,78,79,52,80,81,82,83,84,85],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[87,88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[90,91,92,93,94,95,96,97,98,99,100],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:70","failures":[101,102,103,104],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[41,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[61,62,63,64,65,66],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[141,38,142,39],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[106,107,108,143,144,145,146,147,148,149,150,151,152,153,154,0,155,156,157,158,1,159,160,161,162,163,164,165,109,166,167,168,169,170,171,172,110,173,174,111,112,113,114,115,175,176,177,178,179,180,181,182,116,183,184,185,71,117,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,63,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,2,227,228,229,230,3,4,5,231,232,233,234,118,235,236,237,238,239,240,241,242,243,244,245,57,67,246,247,248,249,250,58,251,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,6,7,8,274,9,275,276,277,278,279,280,281,59,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,10,318,319,320,321,322,323,11,324,139,325,326,327,328,329,330,331,332,64,333,334,101,102,335,336,12,337,72,338,339,340,341,342,343,13,14,344,345,346,347,15,16,17,18,348,19,20,21,22,349,23,350,351,24,25,26,27,352,353,354,355,356,28,357,358,29,359,360,361,362,363,364,365,366,367,30,368,369,370,371,372,31,373,374,32,33,34,35,375,376,36,37,89,377,77,378,379,380,90,91,381,382,92,383,93,94,384,95,385,386,387,86,388,389,390,391,392,96,393,394,395,396,97,397,398,38,142,39,40,399,42,43,400,401,44,45,46,78,47,402,79,48,49,403,51,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,52,80,476,477,478,56,479,480,481,482,76,483,484,60,140,485,486,487,488,489,73,490,74,491,75,98,492,99,493,494,495,496,497,498,499,100,500,501,502,503,504,505,506,507,103,104,508],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[509],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[239,123,127,128,130,133,256,260,261,263,266,326,329,330,101,102,103,104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[146,148,151,109,174,202,203,204,205,206,207,208,209,210,221,278,324,139,325,327,328,64,333,101,102,72,92,383,385,386,97,397,404,406,407,410,411,413,414,416,424,460,461,462,463,75,506,103,104],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[152,153,154,238,302],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[109,174,114,115,179,180,181,182,116,183,117,202,206,229,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,281,59,404,411,477,478,56,479,140],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:191","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>;\n    try {\n        java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n    }\n    T T;\n    try {\n        java.lang.reflect.Constructor<?>.setAccessible(true);\n        T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n    } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n        throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n    }\n    return T;\n} else {\n    net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory;\n    try {\n        net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n    } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n    }\n    net.sf.cglib.proxy.Factory.getCallback(0);\n    return ((T)(net.sf.cglib.proxy.Factory));\n}","type":"CtIfImpl"},"failures":[161,2,3,5,6,7,8,9,278,284,292,317,10,318,319,320,321,322,323,11,12,13,13,14,14,17,18,19,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,37,39,40,42,44,45,47,48,49,51,424,52,477,478,56],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[38,78,80,510,81,82,83,511,512,85],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[145,146,147,148,149,150,151,164,165,109,110,173,174,111,112,113,114,115,175,176,177,178,179,180,181,182,116,183,184,71,117,188,189,190,192,193,194,195,196,197,198,199,200,201,202,203,63,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,2,228,229,3,4,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,7,8,9,278,279,280,281,59,282,304,306,307,308,309,310,311,312,11,324,139,325,331,332,64,333,334,101,102,335,12,337,72,338,339,340,341,343,13,14,344,345,346,347,15,16,17,18,348,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,376,36,37,377,378,379,380,90,91,382,92,383,93,94,384,385,386,387,86,388,389,390,391,392,96,393,394,395,396,97,397,398,38,142,39,40,42,44,45,46,47,48,49,51,404,405,406,407,408,409,410,411,412,413,414,415,416,424,427,428,429,430,431,432,433,439,446,447,448,449,450,451,452,453,454,455,456,457,458,469,52,477,478,56,479,480,481,482,76,483,484,60,140,487,488,73,490,74,75,98,492,99,493,494,495,496,497,498,499,100,500,501,502,504,505,506,507,103,104,508],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[161,162,163,164,165,109,110,174,111,112,113,114,115,187,189,190,192,193,194,195,196,197,202,203,205,206,209,223,2,228,229,3,240,242,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,7,8,9,279,280,282,284,304,305,306,307,324,325,333,101,102,12,337,338,339,341,347,17,18,348,19,20,21,23,25,26,27,28,29,30,31,32,33,34,35,376,36,37,379,380,90,91,382,92,383,93,94,384,385,386,387,86,388,389,390,391,392,96,393,394,395,396,97,397,398,38,142,42,44,46,47,49,404,405,406,408,410,411,412,415,416,424,428,439,446,447,448,449,450,451,452,453,454,455,456,457,469,52,56,481,482,76,483,484,140,487,488,490,98,492,99,493,494,497,498,499,100,501,502,506,103,104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[405],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[13,14,350,399,513,514,403],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[515,516],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[90,91,92,93,94,95,96,97,98,99,100],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":91,"org.easymock.tests2.UsageTest.argumentsOrdered":414,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":202,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":456,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":241,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":409,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":344,"org.easymock.tests2.DelegateToTest.testReturnException":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":180,"org.easymock.tests.MockingTest.testPartialClassMocking":7,"org.easymock.tests.MockClassControlTest.testToString":318,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":459,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":119,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":29,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":488,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":384,"org.easymock.tests2.UsageTest.wrongArguments":407,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":279,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":475,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":177,"org.easymock.samples.ExampleTest.answerVsDelegate":72,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":1,"org.easymock.tests2.UsageConstraintsTest.testNull":92,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":276,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":455,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":323,"org.easymock.tests2.CaptureTest.testPrimitive":493,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":282,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":138,"org.easymock.tests.UsageTest.moreThanOneArgument":203,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":310,"org.easymock.tests.UsageTest.argumentsOrdered":208,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":326,"org.easymock.tests.UsageVarargTest.varargIntAccepted":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":512,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":444,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":419,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":196,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":469,"org.easymock.tests.ReplayStateInvalidUsageTest.times":300,"org.easymock.tests2.DependencyTest.testClassMocking":485,"org.easymock.tests2.AnswerTest.answer":424,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":433,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":156,"org.easymock.tests2.CaptureTest.testAnd":98,"org.easymock.tests2.UsageTest.strictResetToDefault":405,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":306,"org.easymock.tests2.DelegateToTest.testDelegate":75,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":330,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":134,"org.easymock.tests.LimitationsTest.mockFinalMethod":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":201,"org.easymock.tests2.DependencyTest.testClassMockingSupport":486,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":314,"org.easymock.tests2.CaptureTest.testCapture1_2446744":494,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":132,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":431,"org.easymock.tests.UsageThrowableTest.throwError":110,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":294,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":158,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":445,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":374,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.MockingTest.testInterfaceMocking":274,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":162,"org.easymock.tests2.UsageTest.niceToStrict":408,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":363,"org.easymock.tests2.ThreadingTest.testChangeDefault":88,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":232,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.MockBuilderTest.testCreateMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":472,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":128,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":65,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":451,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":108,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":175,"org.easymock.tests.UsageOverloadedMethodTest.overloading":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":372,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":388,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":117,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":263,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":86,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":499,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":213,"org.easymock.tests2.EasyMockSupportClassTest.testAll":28,"org.easymock.tests.MockClassControlTest.testEquals":322,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":136,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":53,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":514,"org.easymock.tests2.CaptureTest.testCaptureAll":492,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":432,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":199,"org.easymock.tests.MockNameTest.defaultName":172,"org.easymock.tests2.UsageConstraintsTest.testMatches":389,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":311,"org.easymock.samples.ExampleTest.voteForRemovals":341,"org.easymock.tests.UsageVarargTest.allKinds":221,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":324,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":200,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":114,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":504,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":183,"org.easymock.tests2.UsageConstraintsTest.greaterThan":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":85,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":27,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":291,"org.easymock.samples.ExampleTest.voteForRemoval":338,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":482,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":352,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":509,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":420,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":22,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":404,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":11,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":448,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":179,"org.easymock.tests2.CaptureTest.testCaptureFirst":502,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":449,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":416,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":259,"org.easymock.tests2.CaptureTest.testCapture2_2446744":501,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":483,"org.easymock.tests2.UsageTest.moreThanOneArgument":406,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":247,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":220,"org.easymock.tests.GenericTest.testBridgedEquals":231,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":150,"org.easymock.tests.UsageExpectAndReturnTest.longType":255,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":446,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":137,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":50,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":395,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":308,"org.easymock.tests.UsageCallCountTest.tooManyCalls":151,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":371,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":113,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":33,"org.easymock.tests.MockingTest.testNiceClassMocking":277,"org.easymock.tests.MockingTest.testClassMocking":273,"org.easymock.tests2.UsageConstraintsTest.testContains":387,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":144,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":41,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":56,"org.easymock.tests2.UsageConstraintsTest.testFind":382,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":109,"org.easymock.tests.MockTypeTest.fromEasyMockClass":157,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":331,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":378,"org.easymock.tests.UsageExpectAndReturnTest.object":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":454,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":82,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":215,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":169,"org.easymock.tests.UsageTest.exactCallCountByLastCall":209,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":236,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":222,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":80,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":71,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":435,"org.easymock.tests.MockClassControlTest.testHashCode":321,"org.easymock.tests2.EasyMockSupportTest.testVerify":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":365,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":328,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":184,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":107,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":430,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":503,"org.easymock.tests.UsageVarargTest.varargCharAccepted":214,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":283,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":251,"org.easymock.tests2.UsageTest.openCallCountByLastCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":457,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":69,"org.easymock.tests.DefaultClassInstantiatorTest.object":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":106,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":467,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":25,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":125,"org.easymock.tests.CapturesMatcherTest.test":515,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":269,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":31,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":319,"org.easymock.tests2.UsageTest.resumeIfFailure":415,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":182,"org.easymock.tests2.StubTest.stubWithReturnValue":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":78,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":261,"org.easymock.tests2.SerializationTest.testAllMockedMethod":39,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":67,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":66,"org.easymock.samples.SupportTest.voteForRemovals":347,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":437,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":131,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":141,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":58,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":425,"org.easymock.tests.UsageExpectAndThrowTest.object":129,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":224,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":393,"org.easymock.tests2.DelegateToTest.testWrongClass":74,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":189,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":190,"org.easymock.tests.UsageStrictMockTest.range":101,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":422,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":453,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":130,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":46,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":207,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":176,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":61,"org.easymock.tests2.CaptureTest.testCaptureNone":498,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":163,"org.easymock.tests.UsageUnorderedTest.message":278,"org.easymock.tests.UsageVerifyTest.twoReturns":325,"org.easymock.tests.UsageVarargTest.varargByteAccepted":219,"org.easymock.tests2.ThreadingTest.testThreadSafe":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":368,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":148,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":170,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":316,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":249,"org.easymock.tests2.UsageConstraintsTest.any":385,"org.easymock.tests2.StubTest.stub":60,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":181,"org.easymock.tests.UsageExpectAndThrowTest.longType":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":288,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":298,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":507,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":439,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests.LimitationsTest.mockNativeMethod":2,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":5,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":271,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":466,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":55,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":508,"org.easymock.tests2.NameTest.nameForMocksControl":463,"org.easymock.tests2.MockedExceptionTest.testMockedException":478,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":358,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":206,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":123,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":9,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":77,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":47,"org.easymock.tests.MockingTest.testNicePartialClassMocking":8,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests2.CompareToTest.testNotComparable":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":510,"org.easymock.tests2.CaptureTest.testCaptureLast":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":464,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":315,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":37,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":394,"org.easymock.tests.MockingTest.testTwoMocks":6,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":127,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":413,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":397,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":87,"org.easymock.samples.ExampleTest.removeNonExistingDocument":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":471,"org.easymock.tests.UsageStrictMockTest.differentMethods":102,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":436,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":286,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":76,"org.easymock.tests2.MockBuilderTest.testCreateMockString":51,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":317,"org.easymock.tests.UsageExpectAndThrowTest.floatType":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":359,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":427,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":476,"org.easymock.tests.UsageVerifyTest.twoThrows":139,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.samples.ExampleTest.voteAgainstRemoval":339,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":242,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":26,"org.easymock.tests.LimitationsTest.privateConstructor":226,"org.easymock.tests2.UsageConstraintsTest.testNotNull":97,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":477,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":115,"org.easymock.tests2.UsageTest.defaultResetToNice":412,"org.easymock.samples.ExampleTest.voteAgainstRemovals":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":465,"org.easymock.tests.UsageVarargTest.differentLength":216,"org.easymock.tests2.CallbackTest.callback":480,"org.easymock.tests2.UsageConstraintsTest.equals":381,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":350,"org.easymock.tests.UsageTest.openCallCountByLastCall":205,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":281,"org.easymock.tests.UsageCallCountTest.tooFewCalls":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":178,"org.easymock.tests.UsageThrowableTest.throwCheckedException":112,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":62,"org.easymock.tests.MockingTest.testStrictClassMocking":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":470,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":34,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":376,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":429,"org.easymock.tests.ObjectMethodsTest.testHashCode":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":511,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":484,"org.easymock.tests2.NameTest.nameForNiceMock":462,"org.easymock.tests2.DependencyTest.testInterfaceMocking":487,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":83,"org.easymock.samples.ExampleTest.addDocument":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":369,"org.easymock.tests2.DelegateToTest.testStubDelegate":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.AnswerTest.stubAnswer":428,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":333,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":402,"org.easymock.tests.UsageVarargTest.varargLongAccepted":218,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":240,"org.easymock.tests.UsageExpectAndReturnTest.floatType":254,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":443,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":392,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageThrowableTest.noUpperLimit":173,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":380,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":417,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":495,"org.easymock.tests2.SerializationTest.test":142,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":285,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":253,"org.easymock.tests2.UsageConstraintsTest.testSame":383,"org.easymock.samples.SupportTest.addDocument":346,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":375,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":360,"org.easymock.tests.GenericTest.testPackageScope":3,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":235,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":442,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":275,"org.easymock.tests2.NameTest.nameForMock":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":264,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":403,"org.easymock.tests2.UsageStrictMockTest.differentMethods":104,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":133,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":307,"org.easymock.tests2.MockedExceptionTest.testRealException":479,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":160,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":280,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":303,"org.easymock.tests2.NameTest.nameForStrictMock":461,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":401,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":70,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":377,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":421,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":96,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":287,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":103,"org.easymock.tests2.UsageConstraintsTest.lessThan":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":438,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":447,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":239,"org.easymock.tests2.CaptureTest.testCaptureRightOne":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":364,"org.easymock.tests2.UsageConstraintsTest.testOr":93,"org.easymock.tests.UsageRangeTest.combination":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":204,"org.easymock.tests2.MockBuilderTest.testWithConstructor":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":265,"org.easymock.tests.UsageVarargTest.varargShortAccepted":217,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":289,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":149,"org.easymock.tests2.UsageConstraintsTest.cmpTo":386,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":118,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":411,"org.easymock.tests2.CaptureTest.testCaptureFromStub":500,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":293,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":147,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":513,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":266,"org.easymock.tests2.CaptureTest.testCapture":516,"org.easymock.tests2.UsageConstraintsTest.constraints":90,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":334,"org.easymock.samples.ExampleTest.addAndChangeDocument":343,"org.easymock.tests.UsageStrictMockTest.testVerify":336,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":345,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":198,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":496,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":194,"org.easymock.tests.LimitationsTest.abstractClass":225,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":258,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":195,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":452,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":211}}]
