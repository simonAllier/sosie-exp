[{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,219,220,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,0,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[273,277],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[481],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,7,12,16,18,20,23,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,43,44,45,46,47,50,54,55,56,59,67,76,82,84,85,91,92,93,95,97,98,99,102,103,105,106,107,108,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,140,143,153,159,164,165,166,167,168,169,170,171,172,173,174,175,178,179,180,181,183,184,185,194,201,202,203,204,205,206,207,210,213,222,225,226,228,229,231,245,246,265,267,268,269,270,271,272,274,287,289,298,299,301,325,327,328,329,330,331,332,336,337,339,361,363,364,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399,400,403,404,407,409,410,411,412,413,414,417,420,443,454,455,456,457,459,460,461],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[482,483,360,401,484,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[2],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[18,478],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,486,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,487,488,489,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,490,205,206,207,491,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,0,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,492,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,493,494,476,477,478,479,480],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[339],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[296,424],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[10,17,48,58,208],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[171,172,173,174,175,176,177,178,179,180,181,182,183,184,495],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[496,171,173,174,175,176,177,178,180,497,181,182,184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[139],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[498,408],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[491],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[3,6,7,8,9,10,12,16,17,18,20,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,59,67,75,76,77,79,80,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,140,143,153,159,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,194,201,202,203,204,205,206,207,208,209,210,211,212,213,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,238,239,240,241,242,243,244,245,246,247,248,249,250,251,260,262,263,266,267,268,269,270,271,272,274,275,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,336,337,339,358,359,360,361,362,363,364,365,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,416,417,420,427,428,429,430,431,432,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,463,464,465,467,468,469,470,471,472,473,474],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[10,12,13,16,17,18,20,22,23,25,39,41,42,43,45,46,47,48,50,53,54,55,56,58,59,140,143,153,159,201,202,203,204,206,207,210,219,219,220,220,222,234,235,252,253,254,255,256,257,272,274,275,276,335,336,337,339,420,441,475,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"defaultValue"}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[11,14,19,500,24,59,60,501,502,203,207,491,219,220],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"length":"i","clazz":"paramType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":108,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":399,"org.easymock.tests2.UsageTest.argumentsOrdered":101,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":288,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":96,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":221,"org.easymock.tests2.DelegateToTest.testReturnException":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":428,"org.easymock.tests.MockingTest.testPartialClassMocking":336,"org.easymock.tests.MockClassControlTest.testToString":254,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":214,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":443,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":147,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":305,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":165,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":413,"org.easymock.tests2.UsageTest.wrongArguments":94,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":447,"org.easymock.samples.ExampleTest.answerVsDelegate":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":478,"org.easymock.tests2.UsageConstraintsTest.testNull":111,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":341,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":45,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":35,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":259,"org.easymock.tests2.CaptureTest.testPrimitive":174,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":417,"org.easymock.tests.UsageTest.moreThanOneArgument":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":324,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":249,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":422,"org.easymock.tests.UsageTest.argumentsOrdered":406,"org.easymock.tests.UsageVarargTest.varargIntAccepted":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":267,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":10,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":72,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":271,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests.ReplayStateInvalidUsageTest.times":351,"org.easymock.tests2.DependencyTest.testClassMocking":162,"org.easymock.tests2.AnswerTest.answer":3,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":188,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":494,"org.easymock.tests2.CaptureTest.testAnd":171,"org.easymock.tests2.UsageTest.strictResetToDefault":92,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":14,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":30,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":426,"org.easymock.tests2.DelegateToTest.testDelegate":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":320,"org.easymock.tests.LimitationsTest.mockFinalMethod":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":453,"org.easymock.tests2.DependencyTest.testClassMockingSupport":163,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":355,"org.easymock.tests2.CaptureTest.testCapture1_2446744":175,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":186,"org.easymock.tests.UsageThrowableTest.throwError":325,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":345,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":477,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":492,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":251,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":161,"org.easymock.samples.PartialClassMockTest.testGetArea":222,"org.easymock.tests.MockingTest.testInterfaceMocking":338,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":397,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":148,"org.easymock.tests2.UsageTest.niceToStrict":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":16,"org.easymock.tests2.MockBuilderTest.testCreateMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":156,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":197,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":482,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":314,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":31,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":493,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":236,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":445,"org.easymock.tests.UsageOverloadedMethodTest.overloading":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":152,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":121,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":263,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":386,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":120,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":180,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":466,"org.easymock.tests2.EasyMockSupportClassTest.testAll":140,"org.easymock.tests.MockClassControlTest.testEquals":258,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":322,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":451,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":187,"org.easymock.tests2.CaptureTest.testCaptureAll":172,"org.easymock.tests.MockNameTest.defaultName":395,"org.easymock.tests2.UsageConstraintsTest.testMatches":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":250,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":343,"org.easymock.samples.ExampleTest.voteForRemovals":231,"org.easymock.tests.UsageVarargTest.allKinds":474,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":457,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":452,"org.easymock.samples.BasicClassMockTest.testPrintContent":235,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":331,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":69,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":78,"org.easymock.tests2.UsageConstraintsTest.greaterThan":124,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":410,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":56,"org.easymock.samples.ExampleTest.voteForRemoval":228,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":374,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":167,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":57,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":479,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":48,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":272,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":28,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":427,"org.easymock.tests2.CaptureTest.testCaptureFirst":184,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":29,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":382,"org.easymock.tests2.CaptureTest.testCapture2_2446744":183,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":169,"org.easymock.tests2.UsageTest.moreThanOneArgument":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":296,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":473,"org.easymock.tests.GenericTest.testBridgedEquals":277,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":243,"org.easymock.tests.UsageExpectAndReturnTest.longType":378,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":449,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":323,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":462,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":129,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":321,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":247,"org.easymock.tests.UsageCallCountTest.tooManyCalls":244,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":157,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":310,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":330,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":202,"org.easymock.tests.MockingTest.testNiceClassMocking":342,"org.easymock.tests.MockingTest.testClassMocking":334,"org.easymock.tests2.UsageConstraintsTest.testContains":119,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":237,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":210,"org.easymock.tests2.UsageConstraintsTest.testFind":110,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":456,"org.easymock.tests.MockTypeTest.fromEasyMockClass":476,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":136,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":358,"org.easymock.tests.UsageExpectAndReturnTest.object":385,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":34,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":468,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":439,"org.easymock.tests.UsageTest.exactCallCountByLastCall":407,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":423,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":60,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":463,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":391,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":262,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":63,"org.easymock.tests.MockClassControlTest.testHashCode":257,"org.easymock.tests2.EasyMockSupportTest.testVerify":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":150,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":424,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":303,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":185,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":104,"org.easymock.tests.UsageVarargTest.varargCharAccepted":467,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":367,"org.easymock.tests2.CaptureTest.testCaptureMultiple":496,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":301,"org.easymock.tests2.UsageTest.openCallCountByLastCall":97,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":37,"org.easymock.tests.DefaultClassInstantiatorTest.object":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":302,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":328,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":192,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":62,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":54,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":311,"org.easymock.tests.CapturesMatcherTest.test":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":392,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":159,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":255,"org.easymock.tests2.UsageTest.resumeIfFailure":102,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":487,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":430,"org.easymock.tests2.StubTest.stubWithReturnValue":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":384,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":130,"org.easymock.tests2.SerializationTest.testAllMockedMethod":41,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":294,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":483,"org.easymock.samples.SupportTest.voteForRemovals":225,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":317,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":300,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":4,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":444,"org.easymock.tests.UsageExpectAndThrowTest.object":315,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":127,"org.easymock.tests2.DelegateToTest.testWrongClass":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":460,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":461,"org.easymock.samples.ConstructorCalledMockTest.testTax":219,"org.easymock.tests.UsageStrictMockTest.range":363,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":89,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":33,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":316,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":18,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":137,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":446,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":484,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":398,"org.easymock.tests2.CaptureTest.testCaptureNone":179,"org.easymock.tests.UsageUnorderedTest.message":408,"org.easymock.tests.UsageVerifyTest.twoReturns":459,"org.easymock.tests.UsageVarargTest.varargByteAccepted":472,"org.easymock.tests2.ThreadingTest.testThreadSafe":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":154,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":241,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":440,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":234,"org.easymock.tests2.CaptureTest.testCapture_2617107":173,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":357,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":298,"org.easymock.tests2.UsageConstraintsTest.any":117,"org.easymock.tests2.StubTest.stub":212,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":299,"org.easymock.tests.UsageExpectAndThrowTest.longType":308,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":83,"org.easymock.tests2.SerializationTest.testClass":39,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":67,"org.easymock.tests.LimitationsTest.mockNativeMethod":420,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":394,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":191,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":86,"org.easymock.tests2.NameTest.nameForMocksControl":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":193,"org.easymock.tests2.MockedExceptionTest.testMockedException":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":142,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":404,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":309,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":339,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":20,"org.easymock.tests.MockingTest.testNicePartialClassMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":47,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":189,"org.easymock.tests2.CaptureTest.testCaptureLast":178,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":356,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":114,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":207,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":128,"org.easymock.tests.MockingTest.testTwoMocks":335,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":375,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":313,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":132,"org.easymock.samples.ExampleTest.removeNonExistingDocument":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":196,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":347,"org.easymock.tests.UsageStrictMockTest.differentMethods":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":64,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":370,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":168,"org.easymock.tests2.MockBuilderTest.testCreateMockString":25,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":144,"org.easymock.tests.UsageExpectAndThrowTest.floatType":307,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":139,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":6,"org.easymock.tests.UsageVerifyTest.twoThrows":458,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":61,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":153,"org.easymock.samples.ExampleTest.voteAgainstRemoval":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":55,"org.easymock.tests.LimitationsTest.privateConstructor":419,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":502,"org.easymock.tests2.UsageConstraintsTest.testNotNull":131,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":332,"org.easymock.tests2.UsageTest.defaultResetToNice":99,"org.easymock.samples.ExampleTest.voteAgainstRemovals":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":290,"org.easymock.tests.UsageVarargTest.differentLength":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":190,"org.easymock.tests2.CallbackTest.callback":9,"org.easymock.tests2.UsageConstraintsTest.equals":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":51,"org.easymock.tests.UsageTest.openCallCountByLastCall":403,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":415,"org.easymock.tests.UsageCallCountTest.tooFewCalls":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":448,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":499,"org.easymock.tests.UsageThrowableTest.throwCheckedException":329,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":485,"org.easymock.tests.MockingTest.testStrictClassMocking":333,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":195,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":203,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":205,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":8,"org.easymock.tests.ObjectMethodsTest.testHashCode":438,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":481,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":170,"org.easymock.tests2.NameTest.nameForNiceMock":217,"org.easymock.tests2.DependencyTest.testInterfaceMocking":164,"org.easymock.samples.ExampleTest.addDocument":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":160,"org.easymock.tests2.DelegateToTest.testStubDelegate":76,"org.easymock.tests2.AnswerTest.stubAnswer":7,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":361,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":486,"org.easymock.tests.UsageVarargTest.varargLongAccepted":471,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":287,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":393,"org.easymock.tests.UsageExpectAndReturnTest.floatType":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":220,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":71,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests.UsageThrowableTest.noUpperLimit":326,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":106,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":87,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":176,"org.easymock.tests2.SerializationTest.test":40,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":369,"org.easymock.tests2.UsageConstraintsTest.testSame":112,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":376,"org.easymock.samples.SupportTest.addDocument":224,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":490,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":145,"org.easymock.tests.GenericTest.testPackageScope":274,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":282,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":70,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":340,"org.easymock.tests2.NameTest.nameForMock":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":387,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":24,"org.easymock.tests2.UsageStrictMockTest.differentMethods":85,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":379,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":319,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":436,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":412,"org.easymock.tests2.MockedExceptionTest.testRealException":211,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":480,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":414,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":354,"org.easymock.tests2.NameTest.nameForStrictMock":216,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":15,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":88,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":498,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":126,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":12,"org.easymock.tests2.UsageStrictMockTest.range":84,"org.easymock.tests2.UsageConstraintsTest.lessThan":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":66,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":286,"org.easymock.tests2.CaptureTest.testCaptureRightOne":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":149,"org.easymock.tests2.UsageConstraintsTest.testOr":113,"org.easymock.tests.UsageRangeTest.combination":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":43,"org.easymock.tests.UsageTest.wrongArguments":402,"org.easymock.tests2.MockBuilderTest.testWithConstructor":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":146,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":253,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":279,"org.easymock.tests.UsageVarargTest.varargShortAccepted":470,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":242,"org.easymock.tests2.UsageConstraintsTest.cmpTo":118,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":281,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":98,"org.easymock.tests2.CaptureTest.testCaptureFromStub":182,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":344,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":13,"org.easymock.tests.UsageTest.unexpectedCallWithArray":401,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":360,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":240,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":500,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":389,"org.easymock.tests2.CaptureTest.testCapture":497,"org.easymock.tests2.UsageConstraintsTest.constraints":107,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":362,"org.easymock.samples.ExampleTest.addAndChangeDocument":233,"org.easymock.tests.UsageStrictMockTest.testVerify":366,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":223,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":359,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":450,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":269,"org.easymock.tests.LimitationsTest.abstractClass":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":381,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":270,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":32}}]
