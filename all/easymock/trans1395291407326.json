[{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,171,172,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[330,331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[290,332],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[206,333,334,217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:189","sourceCode":"java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[11,12,14,15,16,17,18,19,26,31,67,69,70,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,335,336,337,111,128,155,160,338,339,340,199,200,201,202,204,310,317],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[341,342,57],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[11,12,14,15,16,17,18,19,31,69,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,111,128,155,160,199,200,201,202,204,310,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[343],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[344,345,4,5,6,7,8,346,9,10,11,12,13,18,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,117,119,120,121,122,124,125,126,127,128,129,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,168,169,170,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,201,203,204,205,206,207,208,209,210,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,343,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,296,297,299,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[347,348,349],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[161,350,319],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[351,352],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.MocksControl:105","failures":[353,1,2,3,354,355,356,357,358,0,344,345,359,360,4,5,6,7,8,346,361,362,9,10,11,12,13,14,15,16,17,18,19,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,330,382,341,383,384,385,386,387,388,342,389,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,390,45,46,391,392,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,393,394,395,76,396,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,397,100,101,102,103,104,105,106,107,108,109,335,336,337,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,398,127,128,399,129,130,400,401,402,131,132,403,133,404,405,406,407,408,409,134,410,411,412,413,414,415,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,338,339,340,416,168,169,170,171,171,172,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,417,212,418,419,213,214,215,216,420,333,334,217,218,219,220,421,422,423,424,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,425,260,261,262,426,263,264,265,266,267,350,268,269,270,271,272,273,343,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,427,428,429,430,431,291,432,433,434,435,436,437,292,293,438,439,294,295,296,297,440,298,299,300,441,442,443,444,445,301,446,447,448,449,450,451,452,453,454,302,455,456,303,457,458,459,460,461,462,463,464,465,304,466,467,468,469,470,305,471,472,473,474,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,475,324,325,476,326,477,331,327,328,329],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[4,5,6,7,8,362,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,33,35,38,39,40,41,42,43,44,45,46,48,68,69,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,129,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,164,165,166,167,175,176,177,178,179,180,182,185,186,187,188,190,191,192,193,194,195,198,199,200,201,202,203,204,205,207,208,209,210,212,213,215,217,218,219,220,221,222,225,227,228,231,232,233,234,235,236,238,239,242,243,244,245,246,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,292,294,295,306,309,311,312,314,315,318,321,323,324,325,326,327,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[478],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,5,6,7,8,9,10,13,369,373,374,382,386,35,55,108,109,110,112,113,114,115,116,416,171,171,172,172,196,204,239,264,265,268,269,270,271,276,278,279,281,282,283,288,289,290],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[26,30,67,68,70,71,72,73,74,75,162,195,206,215,250,257,258,267,272,273,274,277,283,284,285,287,315,320],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[479,244,245,246],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[34,480,481,157,482,483],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[484,476,485,486,487,488,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[490,75],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[491,492],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[484,476,485,486,487,488,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[413,493,494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,13,369,373,374,382,386,35,108,109,110,112,113,114,115,116,416,171,171,172,172,196,204,239,264,265,268,269,270,271,276,278,279,281,282,288,289,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[339,340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":267,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.UsageTest.argumentsOrdered":320,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":379,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":315,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":174,"org.easymock.tests2.DelegateToTest.testReturnException":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":15,"org.easymock.tests.MockingTest.testPartialClassMocking":131,"org.easymock.tests.MockClassControlTest.testToString":49,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":334,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":77,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":303,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":485,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":273,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":9,"org.easymock.tests2.UsageTest.wrongArguments":313,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":451,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":166,"org.easymock.samples.ExampleTest.answerVsDelegate":176,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":366,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":405,"org.easymock.tests2.UsageConstraintsTest.testNull":269,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":208,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":256,"org.easymock.tests2.CaptureTest.testPrimitive":188,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":13,"org.easymock.tests.UsageTest.moreThanOneArgument":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":96,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":114,"org.easymock.tests.UsageTest.argumentsOrdered":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":0,"org.easymock.tests.UsageVarargTest.varargIntAccepted":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":489,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":436,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":8,"org.easymock.tests.ReplayStateInvalidUsageTest.times":63,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":301,"org.easymock.tests2.DependencyTest.testClassMocking":473,"org.easymock.tests2.AnswerTest.answer":326,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":236,"org.easymock.tests2.CaptureTest.testAnd":185,"org.easymock.tests2.UsageTest.strictResetToDefault":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":251,"org.easymock.tests2.DelegateToTest.testDelegate":263,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":92,"org.easymock.tests.LimitationsTest.mockFinalMethod":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":24,"org.easymock.tests2.DependencyTest.testClassMockingSupport":474,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":346,"org.easymock.tests2.CaptureTest.testCapture1_2446744":189,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":417,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":234,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":57,"org.easymock.tests.UsageThrowableTest.throwError":67,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":365,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":472,"org.easymock.samples.PartialClassMockTest.testGetArea":173,"org.easymock.tests.MockingTest.testInterfaceMocking":403,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":461,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":78,"org.easymock.tests2.UsageTest.niceToStrict":314,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":294,"org.easymock.tests2.MockBuilderTest.testCreateMock":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":448,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":482,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":86,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":117,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":164,"org.easymock.tests.UsageOverloadedMethodTest.overloading":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":465,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":128,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":146,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":29,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":493,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":277,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":194,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":397,"org.easymock.tests.MockClassControlTest.testEquals":53,"org.easymock.tests2.EasyMockSupportClassTest.testAll":302,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":46,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":94,"org.easymock.tests2.CaptureTest.testCaptureAll":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":22,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":235,"org.easymock.tests.MockNameTest.defaultName":393,"org.easymock.tests2.UsageConstraintsTest.testMatches":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":115,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":55,"org.easymock.samples.ExampleTest.voteForRemovals":180,"org.easymock.tests.UsageVarargTest.allKinds":107,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":25,"org.easymock.samples.BasicClassMockTest.testPrintContent":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":23,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":73,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":237,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":433,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":478,"org.easymock.tests2.UsageConstraintsTest.greaterThan":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":42,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":216,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":415,"org.easymock.samples.ExampleTest.voteForRemoval":177,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":420,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":211,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":28,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":310,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":249,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":14,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":425,"org.easymock.tests2.CaptureTest.testCaptureFirst":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":250,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":322,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":142,"org.easymock.tests2.CaptureTest.testCapture2_2446744":197,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":224,"org.easymock.tests2.UsageTest.moreThanOneArgument":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":299,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":106,"org.easymock.tests.GenericTest.testBridgedEquals":392,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":124,"org.easymock.tests.UsageExpectAndReturnTest.longType":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":20,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":95,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":416,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":286,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":112,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":336,"org.easymock.tests.UsageCallCountTest.tooManyCalls":125,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":72,"org.easymock.tests.MockingTest.testNiceClassMocking":406,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":227,"org.easymock.tests.MockingTest.testClassMocking":401,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":118,"org.easymock.tests2.UsageConstraintsTest.testContains":276,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":201,"org.easymock.tests2.UsageConstraintsTest.testFind":268,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":31,"org.easymock.tests.MockTypeTest.fromEasyMockClass":364,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":32,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":324,"org.easymock.tests.UsageExpectAndReturnTest.object":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":486,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":101,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":3,"org.easymock.tests.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":344,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":476,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":151,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":97,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":127,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":428,"org.easymock.tests.MockClassControlTest.testHashCode":52,"org.easymock.tests2.EasyMockSupportTest.testVerify":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":463,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":126,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":233,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":308,"org.easymock.tests.UsageVarargTest.varargCharAccepted":100,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastCall":316,"org.easymock.tests.DefaultClassInstantiatorTest.object":134,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":348,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":338,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":464,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":427,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":51,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":214,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":83,"org.easymock.tests.CapturesMatcherTest.test":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":152,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":335,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":305,"org.easymock.tests2.UsageTest.resumeIfFailure":321,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":17,"org.easymock.tests2.StubTest.stubWithReturnValue":204,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":484,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":287,"org.easymock.tests2.SerializationTest.testAllMockedMethod":246,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":383,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":483,"org.easymock.samples.SupportTest.voteForRemovals":184,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":89,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":479,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":342,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":477,"org.easymock.tests.UsageExpectAndThrowTest.object":87,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":358,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":284,"org.easymock.tests2.DelegateToTest.testWrongClass":262,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":108,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":109,"org.easymock.samples.ConstructorCalledMockTest.testTax":171,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":423,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":161,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":165,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":480,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":409,"org.easymock.tests2.CaptureTest.testCaptureNone":193,"org.easymock.tests.UsageUnorderedTest.message":75,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests.UsageVarargTest.varargByteAccepted":105,"org.easymock.tests2.ThreadingTest.testThreadSafe":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":466,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":122,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":169,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":354,"org.easymock.tests2.CaptureTest.testCapture_2617107":187,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":12,"org.easymock.tests2.UsageConstraintsTest.any":274,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":62,"org.easymock.tests2.StubTest.stub":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":16,"org.easymock.tests.UsageExpectAndThrowTest.longType":80,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":413,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":61,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":240,"org.easymock.tests2.SerializationTest.testClass":244,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":291,"org.easymock.tests.LimitationsTest.mockNativeMethod":76,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":391,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":243,"org.easymock.tests2.NameTest.nameForMocksControl":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":445,"org.easymock.tests2.MockedExceptionTest.testMockedException":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":456,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":475,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":81,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":205,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":297,"org.easymock.tests.MockingTest.testNicePartialClassMocking":132,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":441,"org.easymock.tests2.CaptureTest.testCaptureLast":192,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":361,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":232,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":272,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":285,"org.easymock.tests.MockingTest.testTwoMocks":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":85,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":319,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":289,"org.easymock.samples.ExampleTest.removeNonExistingDocument":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":447,"org.easymock.tests.UsageStrictMockTest.differentMethods":38,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":59,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":429,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":411,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":352,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":223,"org.easymock.tests2.MockBuilderTest.testCreateMockString":300,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":457,"org.easymock.tests.UsageExpectAndThrowTest.floatType":79,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":327,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":304,"org.easymock.samples.ExampleTest.voteAgainstRemoval":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":215,"org.easymock.tests.LimitationsTest.privateConstructor":395,"org.easymock.tests2.UsageConstraintsTest.testNotNull":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":74,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":199,"org.easymock.tests2.UsageTest.defaultResetToNice":318,"org.easymock.samples.ExampleTest.voteAgainstRemovals":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.UsageVarargTest.differentLength":102,"org.easymock.tests2.CallbackTest.callback":309,"org.easymock.tests2.UsageConstraintsTest.equals":350,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":418,"org.easymock.tests.UsageTest.openCallCountByLastCall":159,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":264,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":11,"org.easymock.tests.UsageCallCountTest.tooFewCalls":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":167,"org.easymock.tests.UsageThrowableTest.throwCheckedException":71,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":481,"org.easymock.tests.MockingTest.testStrictClassMocking":400,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":446,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":228,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":64,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":230,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":329,"org.easymock.tests.ObjectMethodsTest.testHashCode":2,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":488,"org.easymock.tests2.NameTest.nameForNiceMock":219,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":225,"org.easymock.tests2.DependencyTest.testInterfaceMocking":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":487,"org.easymock.samples.ExampleTest.addDocument":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests2.DelegateToTest.testStubDelegate":261,"org.easymock.tests2.AnswerTest.stubAnswer":328,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests.UsageVarargTest.varargLongAccepted":104,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":378,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":153,"org.easymock.tests.UsageExpectAndReturnTest.floatType":137,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":325,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":172,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":435,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":399,"org.easymock.tests.UsageThrowableTest.noUpperLimit":68,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":282,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":265,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":421,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":190,"org.easymock.tests2.SerializationTest.test":245,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":136,"org.easymock.tests2.UsageConstraintsTest.testSame":270,"org.easymock.samples.SupportTest.addDocument":183,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":458,"org.easymock.tests.GenericTest.testPackageScope":45,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":404,"org.easymock.tests2.NameTest.nameForMock":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":147,"org.easymock.tests2.UsageStrictMockTest.differentMethods":242,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":419,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":139,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":91,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":44,"org.easymock.tests2.MockedExceptionTest.testRealException":202,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":368,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":66,"org.easymock.tests2.NameTest.nameForStrictMock":218,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":439,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":349,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":209,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":422,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":412,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":283,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":293,"org.easymock.tests2.UsageStrictMockTest.range":241,"org.easymock.tests2.UsageConstraintsTest.lessThan":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":431,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":462,"org.easymock.tests2.CaptureTest.testCaptureRightOne":195,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":351,"org.easymock.tests2.UsageConstraintsTest.testOr":271,"org.easymock.tests.UsageRangeTest.combination":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":206,"org.easymock.tests.UsageTest.wrongArguments":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":459,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":370,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":414,"org.easymock.tests.UsageVarargTest.varargShortAccepted":103,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":123,"org.easymock.tests2.UsageConstraintsTest.cmpTo":275,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":331,"org.easymock.tests2.CompareToTest.testLessThan":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":372,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":317,"org.easymock.tests2.CaptureTest.testCaptureFromStub":196,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":56,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":438,"org.easymock.tests.UsageTest.unexpectedCallWithArray":157,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":121,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":149,"org.easymock.tests2.CaptureTest.testCapture":492,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.UsageConstraintsTest.constraints":266,"org.easymock.samples.ExampleTest.addAndChangeDocument":182,"org.easymock.tests.UsageStrictMockTest.testVerify":40,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":168,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":21,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":6,"org.easymock.tests.LimitationsTest.abstractClass":394,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":141,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":7,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":98,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":253}}]
