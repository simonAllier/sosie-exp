[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[7,8,8,9,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[64,65,66,67],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,4,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[93,40,94,41],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[7,95,96,97,98,99,100,101,8,8,9,9,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,12,14,68,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,15,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,72,73,74,183,75,3,76,184,185,77,78,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,4,79,201,80,81,202,19,20,21,22,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,23,232,233,24,25,234,26,27,28,29,30,32,33,34,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,35,36,37,38,254,255,256,39,257,258,259,260,261,262,263,40,94,41,264,265,266,267,268,269,270,271,272,273,274,275,276,277,45,46,47,48,278,49,50,82,83,84,85,279,280,281,282,283,284,51,53,55,56,57,58,59,60,62,285,286,86,87,287,288,289,290,291,88,89,292,293,294,90,295,91,92,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,65,320,321,322,323,324,325,66,326,327,328,329,67,330,331,63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[7,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,12,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,170,172,173,174,175,176,177,178,179,182,72,73,74,183,75,184,185,186,191,193,195,196,198,79,80,81,20,21,22,333,334,335,336,337,213,214,215,221,222,223,224,225,230,231,23,24,25,234,26,27,28,30,32,33,34,235,236,237,238,239,242,243,244,245,247,248,249,250,251,252,253,35,36,37,38,254,39,258,262,263,40,94,264,265,266,267,268,269,270,271,272,273,274,275,277,45,46,47,48,278,49,50,280,281,282,284,53,55,57,58,60,285,286,86,287,289,290,291,292,293,90,91,92,300,301,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,65,320,321,322,323,324,325,66,326,327,328,329,67,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[338],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[64,339,332,340,341],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[342,343],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[344,259,262,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[8,8,9,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[7,8,8,9,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[326,328,330,331],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[7,95,96,97,98,345,99,100,346,101,347,8,9,10,11,348,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,338,338,12,13,68,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,15,349,159,160,161,162,163,164,165,166,170,171,172,173,174,175,176,177,178,179,180,181,182,72,73,74,183,75,3,76,184,185,77,78,186,187,188,189,190,191,192,193,195,196,199,200,350,4,79,201,80,81,202,20,21,22,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,351,352,353,354,355,356,357,358,359,360,229,230,231,23,24,25,234,26,27,28,29,30,31,32,33,34,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,35,36,37,38,254,255,256,39,257,258,261,262,263,40,94,41,264,265,266,267,268,269,270,271,272,273,274,275,276,277,45,46,47,48,278,49,50,280,281,282,284,51,53,55,56,57,58,59,60,62,285,286,86,87,287,288,289,290,291,88,89,292,293,294,361,90,295,91,92,296,362,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,65,320,321,322,323,324,325,66,326,327,328,329,67,330,331,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[315],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[363,260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[364,365,366,367,368,369,370],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"position":"org.easymock.internal.Range:44","failures":[7,95,96,97,98,345,99,371,100,346,101,347,8,9,10,11,348,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,372,125,373,0,12,13,14,374,375,68,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,15,376,158,342,377,378,379,343,380,381,382,349,159,160,161,162,163,164,165,166,167,168,169,383,16,384,385,386,387,388,389,170,171,172,173,174,175,176,177,178,179,180,181,182,72,73,74,17,390,391,392,393,18,394,395,183,75,3,76,184,185,77,78,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,350,4,79,201,80,81,202,396,397,398,19,20,21,399,22,400,401,402,403,333,404,405,406,407,344,408,334,409,410,411,335,363,412,413,203,336,337,414,415,416,204,417,205,418,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,221,222,223,224,225,226,227,228,351,352,353,437,354,355,356,357,358,359,360,229,230,231,438,439,23,440,232,233,441,24,25,234,26,27,28,29,442,30,443,444,31,32,33,34,445,446,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,447,448,449,35,450,451,36,452,453,454,455,456,457,458,459,460,37,461,462,463,464,465,38,466,467,254,255,256,39,257,258,259,260,261,262,263,40,94,41,264,265,266,267,268,269,270,271,272,273,274,275,276,468,469,470,471,472,277,473,474,475,476,477,478,45,46,47,48,479,278,49,50,480,481,82,83,84,85,279,280,281,282,283,284,51,482,53,54,483,484,55,56,57,369,58,485,486,59,60,487,62,488,489,490,491,492,493,494,285,286,86,87,287,288,289,290,291,88,89,292,293,294,361,90,295,91,92,296,362,297,298,299,495,496,300,301,302,303,497,498,499,500,501,304,502,503,504,505,506,507,305,306,307,308,508,309,310,311,312,313,314,315,316,317,318,319,65,320,321,322,323,324,325,66,326,327,328,329,67,509,330,510,331,63,370,511],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[71,73,74,80,91],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[251],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.Capture:82","failures":[235,237,238,239,240,241,242,244,512,245,246,248],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[151,180,187,188,189,190,191,192,255,256,39,257,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[29,446,255,51,56],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[7,95,96,97,98,345,99,371,100,346,101,347,8,9,10,11,348,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,372,125,373,0,12,13,14,374,375,68,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,15,158,342,377,378,379,343,381,349,159,160,161,162,163,164,165,166,167,168,169,383,16,384,385,386,387,388,389,170,171,172,173,174,175,176,177,178,179,180,181,182,72,73,74,17,390,391,392,393,18,394,395,183,75,3,76,184,185,77,78,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,350,4,79,201,80,81,202,396,397,398,19,20,21,399,22,400,401,402,403,333,404,405,406,407,344,408,334,409,410,411,335,363,412,413,203,336,337,414,415,416,204,417,205,418,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,221,222,223,224,225,226,227,228,351,352,353,437,354,355,356,357,358,359,360,229,230,231,438,439,23,440,232,233,441,24,25,234,26,27,28,29,442,30,443,444,31,32,33,34,445,446,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,447,448,449,35,450,451,36,452,453,454,455,456,457,458,459,460,37,461,462,463,464,465,38,466,467,254,255,256,39,257,258,259,260,261,262,263,40,94,41,264,265,266,267,268,269,270,271,272,273,274,275,276,468,469,470,471,472,277,473,474,475,476,477,478,45,46,47,48,479,278,49,50,480,481,82,83,84,85,279,280,281,282,283,284,51,53,54,484,55,56,57,58,485,486,59,60,62,488,492,493,494,285,286,86,87,287,288,289,290,291,88,89,292,293,294,361,90,295,91,92,296,362,297,298,299,495,496,300,301,302,303,497,498,499,500,501,304,502,503,504,505,506,507,305,306,307,308,508,309,310,311,312,313,314,315,316,317,318,319,65,320,321,322,323,324,325,66,326,327,328,329,67,509,330,510,331,63,370],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[235,237,245,307,308,310,312,313,315,324,328],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[93,40,94,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[29,446,255,51,56],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[311],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[513],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[93,40,94,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[40,94,41],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:173","failures":[281],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":308,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":183,"org.easymock.tests2.UsageTest.argumentsOrdered":89,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":410,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":288,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":348,"org.easymock.tests2.DelegateToTest.testReturnException":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":188,"org.easymock.tests.MockingTest.testPartialClassMocking":20,"org.easymock.tests.MockClassControlTest.testToString":384,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":481,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":102,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":36,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":69,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":364,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":178,"org.easymock.tests2.UsageTest.wrongArguments":87,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":160,"org.easymock.samples.ExampleTest.answerVsDelegate":96,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":18,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":401,"org.easymock.tests2.UsageConstraintsTest.testNull":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":26,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":273,"org.easymock.tests2.CaptureTest.testPrimitive":238,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":121,"org.easymock.tests.UsageTest.moreThanOneArgument":75,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":218,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":153,"org.easymock.tests.UsageTest.argumentsOrdered":78,"org.easymock.tests.UsageVarargTest.varargIntAccepted":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":506,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":490,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":225,"org.easymock.tests.ReplayStateInvalidUsageTest.times":433,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":277,"org.easymock.tests2.DependencyTest.testClassMocking":495,"org.easymock.tests2.AnswerTest.answer":258,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":299,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":391,"org.easymock.tests2.CaptureTest.testAnd":235,"org.easymock.tests2.UsageTest.strictResetToDefault":286,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":268,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":157,"org.easymock.tests2.DelegateToTest.testDelegate":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":117,"org.easymock.tests.LimitationsTest.mockFinalMethod":440,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":166,"org.easymock.tests2.DependencyTest.testClassMockingSupport":496,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":232,"org.easymock.tests2.CaptureTest.testCapture1_2446744":239,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":297,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":427,"org.easymock.tests.UsageThrowableTest.throwError":170,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":393,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":507,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":467,"org.easymock.samples.PartialClassMockTest.testGetArea":7,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":428,"org.easymock.tests.MockingTest.testInterfaceMocking":399,"org.easymock.tests2.CompareToTest.testLessOrEqual":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":222,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":456,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":103,"org.easymock.tests2.UsageTest.niceToStrict":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":55,"org.easymock.tests2.MockBuilderTest.testCreateMock":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":463,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":475,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":111,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":269,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":390,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":228,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":349,"org.easymock.tests.UsageOverloadedMethodTest.overloading":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":65,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":137,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":213,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":513,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":319,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":244,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":437,"org.easymock.tests.MockClassControlTest.testEquals":388,"org.easymock.tests2.EasyMockSupportClassTest.testAll":35,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":119,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":164,"org.easymock.tests2.CaptureTest.testCaptureAll":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":298,"org.easymock.tests.MockNameTest.defaultName":375,"org.easymock.tests2.UsageConstraintsTest.testMatches":320,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":219,"org.easymock.samples.ExampleTest.voteForRemovals":99,"org.easymock.tests.UsageVarargTest.allKinds":229,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":165,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":176,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":294,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":503,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":192,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":283,"org.easymock.tests2.UsageConstraintsTest.greaterThan":322,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":147,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":34,"org.easymock.samples.ExampleTest.voteForRemoval":97,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":445,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":250,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":15,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":285,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":266,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":187,"org.easymock.tests2.CaptureTest.testCaptureFirst":248,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":267,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":293,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":133,"org.easymock.tests2.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.CaptureTest.testCapture2_2446744":247,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":252,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":337,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":360,"org.easymock.tests.GenericTest.testBridgedEquals":374,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":211,"org.easymock.tests.UsageExpectAndReturnTest.longType":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":162,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":264,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":120,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":61,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":152,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":118,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":216,"org.easymock.tests.UsageCallCountTest.tooManyCalls":212,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":175,"org.easymock.tests.MockingTest.testNiceClassMocking":402,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":46,"org.easymock.tests.MockingTest.testClassMocking":398,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":418,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":52,"org.easymock.tests2.UsageConstraintsTest.testContains":318,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":39,"org.easymock.tests2.UsageConstraintsTest.testFind":309,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":215,"org.easymock.tests.MockTypeTest.fromEasyMockClass":392,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":200,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":331,"org.easymock.tests.UsageExpectAndReturnTest.object":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":30,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":272,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":355,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":365,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":422,"org.easymock.tests.UsageTest.exactCallCountByLastCall":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":154,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":370,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":142,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":498,"org.easymock.tests.MockClassControlTest.testHashCode":387,"org.easymock.tests2.EasyMockSupportTest.testVerify":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":458,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":155,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":193,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":362,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":509,"org.easymock.tests.UsageVarargTest.varargCharAccepted":354,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":376,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":417,"org.easymock.tests2.UsageTest.openCallCountByLastCall":289,"org.easymock.tests.DefaultClassInstantiatorTest.object":158,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":226,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":459,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":497,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":32,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":108,"org.easymock.tests.CapturesMatcherTest.test":338,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":167,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":38,"org.easymock.tests2.UsageTest.resumeIfFailure":292,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":190,"org.easymock.tests2.StubTest.stubWithReturnValue":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":369,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":135,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":327,"org.easymock.tests2.SerializationTest.testAllMockedMethod":41,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":203,"org.easymock.samples.SupportTest.voteForRemovals":101,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":500,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":114,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":93,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":204,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":259,"org.easymock.tests.UsageExpectAndThrowTest.object":112,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":373,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":325,"org.easymock.tests2.DelegateToTest.testWrongClass":282,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":231,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests.UsageStrictMockTest.range":80,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":493,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":271,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":447,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":435,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":124,"org.easymock.tests2.CaptureTest.testCaptureNone":243,"org.easymock.tests.UsageUnorderedTest.message":68,"org.easymock.tests.UsageVerifyTest.twoReturns":74,"org.easymock.tests.UsageVarargTest.varargByteAccepted":359,"org.easymock.tests2.ThreadingTest.testThreadSafe":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":461,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":209,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":423,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests2.CaptureTest.testCapture_2617107":237,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":181,"org.easymock.tests2.UsageConstraintsTest.any":316,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":432,"org.easymock.tests2.StubTest.stub":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":189,"org.easymock.tests.UsageExpectAndThrowTest.longType":105,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":379,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":431,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":304,"org.easymock.tests.LimitationsTest.mockNativeMethod":23,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":145,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":470,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":44,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":296,"org.easymock.tests2.NameTest.nameForMocksControl":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":472,"org.easymock.tests2.MockedExceptionTest.testMockedException":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":451,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":185,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":510,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":106,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":22,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":24,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":58,"org.easymock.tests.MockingTest.testNicePartialClassMocking":21,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":28,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":468,"org.easymock.tests2.CaptureTest.testCaptureLast":242,"org.easymock.tests2.CompareToTest.testCompareEqual":332,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":233,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":313,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":66,"org.easymock.tests.MockingTest.testTwoMocks":19,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":110,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":329,"org.easymock.samples.ExampleTest.removeNonExistingDocument":371,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":474,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":429,"org.easymock.tests.UsageStrictMockTest.differentMethods":81,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":499,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":377,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":251,"org.easymock.tests2.MockBuilderTest.testCreateMockString":62,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":452,"org.easymock.tests.UsageExpectAndThrowTest.floatType":104,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":511,"org.easymock.tests.UsageVerifyTest.twoThrows":73,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":37,"org.easymock.samples.ExampleTest.voteAgainstRemoval":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":411,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":122,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":33,"org.easymock.tests.LimitationsTest.privateConstructor":439,"org.easymock.tests2.UsageConstraintsTest.testNotNull":328,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":177,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":255,"org.easymock.tests2.UsageTest.defaultResetToNice":291,"org.easymock.samples.ExampleTest.voteAgainstRemovals":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":335,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":469,"org.easymock.tests.UsageVarargTest.differentLength":356,"org.easymock.tests2.CallbackTest.callback":254,"org.easymock.tests2.UsageConstraintsTest.equals":508,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":443,"org.easymock.tests.UsageTest.openCallCountByLastCall":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":180,"org.easymock.tests.UsageCallCountTest.tooFewCalls":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":161,"org.easymock.tests.UsageThrowableTest.throwCheckedException":174,"org.easymock.tests.MockingTest.testStrictClassMocking":397,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":151,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":473,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":434,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":278,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":263,"org.easymock.tests.ObjectMethodsTest.testHashCode":421,"org.easymock.tests2.CompareToTest.testGreateOrEqual":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":367,"org.easymock.tests2.NameTest.nameForNiceMock":84,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":253,"org.easymock.tests2.DependencyTest.testInterfaceMocking":300,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":366,"org.easymock.samples.ExampleTest.addDocument":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.DelegateToTest.testStubDelegate":281,"org.easymock.tests2.AnswerTest.stubAnswer":262,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":79,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":485,"org.easymock.tests.UsageVarargTest.varargLongAccepted":358,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":144,"org.easymock.tests.UsageExpectAndReturnTest.floatType":128,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":63,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":505,"org.easymock.tests.UsageThrowableTest.noUpperLimit":171,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":323,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":306,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":488,"org.easymock.tests2.SerializationTest.test":94,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":240,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":342,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":127,"org.easymock.tests2.UsageConstraintsTest.testSame":311,"org.easymock.samples.SupportTest.addDocument":346,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":479,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":453,"org.easymock.tests.GenericTest.testPackageScope":12,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":504,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":400,"org.easymock.tests2.NameTest.nameForMock":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":487,"org.easymock.tests2.UsageStrictMockTest.differentMethods":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":444,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":116,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":419,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":149,"org.easymock.tests2.MockedExceptionTest.testRealException":257,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":363,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":179,"org.easymock.tests2.NameTest.nameForStrictMock":83,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":484,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":27,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":492,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":70,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":324,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":53,"org.easymock.tests2.UsageStrictMockTest.range":91,"org.easymock.tests2.UsageConstraintsTest.lessThan":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":501,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":457,"org.easymock.tests2.CaptureTest.testCaptureRightOne":245,"org.easymock.tests2.UsageConstraintsTest.testOr":312,"org.easymock.tests.UsageRangeTest.combination":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":25,"org.easymock.tests.UsageTest.wrongArguments":76,"org.easymock.tests2.MockBuilderTest.testWithConstructor":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":454,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":16,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":131,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":333,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":343,"org.easymock.tests.UsageVarargTest.varargShortAccepted":357,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":210,"org.easymock.tests2.UsageConstraintsTest.cmpTo":317,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":260,"org.easymock.tests2.CompareToTest.testLessThan":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":290,"org.easymock.tests2.CaptureTest.testCaptureFromStub":246,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":426,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":54,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":140,"org.easymock.tests2.CaptureTest.testCapture":512,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.tests2.UsageConstraintsTest.constraints":307,"org.easymock.samples.ExampleTest.addAndChangeDocument":100,"org.easymock.tests.UsageStrictMockTest.testVerify":396,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":347,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":163,"org.easymock.tests2.CompareToTest.testGreateThan":339,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":241,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":223,"org.easymock.tests.LimitationsTest.abstractClass":438,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":132,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":224,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":270,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":352}}]
