[{"position":"org.easymock.ConstructorArgs:60","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:112","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,0,68,69,70,1,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,13,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,19,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,22,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[23,24,258,25,26,27,259,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,260,51,52,53,54,55,56,57,58,59,60,61,261,262,263,62,63,64,65,66,67,0,68,69,70,1,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,264,96,97,265,98,99,266,100,267,268,269,270,271,101,102,103,272,273,104,105,106,107,108,109,110,274,111,275,112,113,114,11,12,13,14,115,116,117,118,119,120,121,276,122,123,124,125,126,127,128,129,130,131,132,277,133,134,135,136,137,138,278,279,139,140,280,141,142,143,144,145,146,147,148,149,150,281,282,283,284,15,16,17,18,19,20,151,152,285,153,286,287,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,288,289,290,291,292,177,178,179,180,181,182,183,184,293,294,295,296,297,185,186,187,21,188,189,190,192,193,298,299,300,301,195,196,197,22,198,199,200,302,201,202,303,304,305,306,307,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,308,242,243,244,245,246,247,248,249,250,309,310,251,252,253,254,255,256,257],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[302,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[311,312],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[311,312],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[313,23,24,258,314,25,26,27,259,28,29,30,31,32,315,33,34,35,36,37,38,316,39,40,41,42,43,44,45,46,47,48,49,50,260,51,52,53,54,317,318,319,320,321,55,322,323,324,325,326,327,56,57,58,59,60,61,261,262,263,62,63,64,65,66,67,0,68,328,69,70,1,2,329,330,71,72,73,74,75,76,77,78,79,331,332,333,80,334,335,81,336,337,338,339,340,341,342,343,344,82,345,346,347,348,349,83,350,351,352,353,354,355,356,357,84,358,359,360,361,362,363,85,364,365,86,87,88,366,89,90,91,92,93,94,95,264,5,96,367,6,368,97,265,98,7,99,369,370,266,100,9,267,268,269,270,271,101,10,371,102,103,272,273,104,105,106,107,108,109,110,274,372,111,373,374,275,112,113,114,375,376,11,12,13,14,115,116,117,118,119,120,121,276,122,123,124,125,126,377,378,379,380,381,382,383,127,128,129,130,131,132,277,133,134,135,136,137,138,278,279,139,384,385,140,386,387,388,389,390,391,392,280,141,142,393,394,395,143,144,396,145,397,398,399,146,147,148,149,150,281,282,283,284,15,16,17,18,19,20,400,151,152,285,153,286,287,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,288,289,290,291,292,401,402,403,177,178,179,180,181,182,183,184,404,405,406,407,408,409,410,411,412,293,294,295,296,297,413,414,415,185,186,416,417,418,419,420,421,422,423,424,187,21,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,311,188,189,450,312,451,452,453,190,191,192,193,298,454,299,300,455,194,301,195,456,457,458,459,460,461,462,463,464,465,466,467,196,197,22,198,199,200,468,469,470,471,472,473,474,475,302,201,202,303,304,305,306,307,476,477,478,203,204,205,479,206,207,208,209,210,211,212,213,214,215,216,480,481,482,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,483,237,484,238,239,240,241,308,242,243,485,486,487,488,489,244,245,246,247,248,249,490,250,309,310,251,252,253,254,255,256,257],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[8],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[43,50,54,491],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[418,422],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[139],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[492,493,494,495,285,179],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[5,8,9,373,309,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"position":"org.easymock.internal.Range:36","failures":[313,23,24,258,314,25,26,27,259,28,29,30,31,32,315,33,34,35,36,37,38,316,39,40,41,42,43,44,45,46,47,48,49,50,260,51,52,53,54,317,318,319,320,321,55,322,323,324,325,326,327,56,57,58,59,60,61,261,262,263,62,63,64,65,66,67,0,68,328,69,70,1,2,329,330,71,72,73,74,75,76,77,78,79,331,332,333,80,334,335,81,336,337,338,339,340,341,342,343,344,82,345,346,347,348,349,83,350,351,352,353,354,355,356,357,84,358,359,360,361,362,363,85,364,365,86,87,88,366,89,90,91,92,93,94,95,264,5,96,367,6,368,97,265,98,7,99,369,370,266,100,9,267,268,269,270,271,101,10,371,102,103,272,273,104,105,106,107,108,109,110,274,372,111,373,374,275,112,113,114,375,376,11,12,13,14,115,116,117,118,119,120,121,276,122,123,124,125,126,377,378,379,380,381,382,383,127,128,129,130,131,132,277,133,134,135,136,137,138,278,279,139,384,385,140,386,387,388,389,390,391,392,280,141,142,393,394,395,143,144,396,145,397,398,399,146,147,148,149,150,281,282,283,284,15,16,17,18,19,20,400,151,152,285,153,286,287,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,288,289,290,291,292,401,402,403,177,178,179,180,181,182,183,184,404,405,406,407,408,409,410,411,412,293,294,295,296,297,413,414,415,185,186,416,417,418,419,420,421,422,423,424,187,21,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,311,188,189,450,312,451,452,453,190,191,192,193,298,454,299,300,455,194,301,195,456,457,458,459,460,461,462,463,464,465,466,467,196,197,22,198,199,200,468,469,470,471,472,473,474,475,302,201,202,303,304,305,306,307,476,477,478,203,204,205,479,206,207,208,209,210,211,212,213,214,215,216,480,481,482,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,483,237,484,238,239,240,241,308,242,243,485,486,487,488,489,244,245,246,247,248,249,490,250,309,310,251,252,253,254,255,256,257],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[489],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[59,62,63,64,77,78,96,266,100,267,123,496,497,285,153,154,155,179,182,183,498,425,190,301,200,215,216,308,242,243],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[93,94,95,499],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[500,501,502],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[93,94,95,499],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[503,504,505,506,507,93,7,370,101,10],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[23,24,258,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,260,51,52,53,54,55,56,57,58,59,60,61,261,262,263,62,63,64,65,66,67,0,68,69,70,1,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,264,96,97,265,98,99,266,100,267,268,269,270,271,101,102,103,272,273,104,105,106,107,108,109,110,274,111,275,112,113,114,11,12,13,14,115,116,117,118,119,120,121,276,122,123,124,125,126,127,128,129,130,131,132,277,133,134,135,136,137,138,278,279,139,140,388,389,390,280,141,142,143,144,145,146,147,148,149,150,281,282,283,284,15,16,17,18,19,20,151,152,285,153,286,287,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,288,289,290,291,292,177,178,179,180,181,182,183,184,404,405,406,407,408,409,410,411,412,293,294,295,296,297,185,186,417,187,21,188,189,190,191,192,193,298,299,300,194,301,195,456,457,458,459,460,461,462,463,464,465,466,467,196,197,22,198,199,200,302,201,202,303,304,305,306,307,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,484,238,239,240,241,308,242,243,244,245,246,247,248,249,490,250,309,310,251,252,253,254,255,256,257],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[313,23,24,258,314,25,26,27,259,28,29,30,31,32,315,33,34,35,36,37,38,316,39,40,41,42,43,44,45,46,47,48,49,50,260,51,52,53,54,317,318,319,320,321,55,322,323,324,325,326,327,56,57,58,59,60,61,261,262,263,62,63,64,65,66,67,0,68,328,69,70,1,2,329,330,71,72,73,74,75,76,77,78,79,331,332,333,80,334,335,81,336,337,338,339,340,341,342,343,344,82,345,346,347,348,349,83,350,351,352,353,354,355,356,357,84,358,359,360,361,362,363,85,364,365,86,87,88,366,89,90,91,92,93,94,95,264,5,96,367,6,368,97,265,98,7,99,369,370,266,100,9,267,268,269,270,271,101,10,371,102,103,272,273,104,105,106,107,108,109,110,274,372,111,373,374,275,112,113,114,375,376,11,12,13,14,115,116,117,118,119,120,121,276,122,123,124,125,126,377,378,379,380,381,382,383,127,128,129,130,131,132,277,133,134,135,136,137,138,278,279,139,384,385,140,386,387,388,389,390,391,392,280,141,142,393,394,395,143,144,396,145,397,398,399,146,147,148,149,150,281,282,283,284,15,16,17,18,19,20,400,151,152,285,153,286,287,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,288,289,290,291,292,401,402,403,177,178,179,180,181,182,183,184,404,405,406,407,408,409,410,411,412,293,294,295,296,297,413,414,415,185,186,416,417,418,419,420,421,422,423,424,187,21,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,311,188,189,450,312,451,452,453,190,191,192,193,298,454,299,300,455,194,301,195,456,457,458,459,460,461,462,463,464,465,466,467,196,197,22,198,199,200,468,469,470,471,472,473,474,475,302,201,202,303,304,305,306,307,476,477,478,203,204,205,479,206,207,208,209,210,211,212,213,214,215,216,480,481,482,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,483,237,484,238,239,240,241,308,242,243,485,486,487,488,489,244,245,246,247,248,249,490,250,309,310,251,252,253,254,255,256,257],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[492,493,494,495,285,179],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[313,23,24,258,314,25,26,27,28,29,30,31,32,33,34,35,36,37,38,316,39,40,41,42,43,44,45,46,47,48,49,50,260,51,52,53,54,71,72,75,352,104,111,129,130,131,132,277,133,134,135,136,137,138,278,279,139,146,147,148,149,150,19,179,180,185,186,187,21,196,197,22,198,199,200,213],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[24,66,67,0,68,69,70,1,71,72,75,77,78,80,81,82,83,96,97,98,99,100,101,273,105,106,107,108,109,110,111,112,113,114,140,143,144,145,146,147,148,149,150,180,182,183,293,294,295,296,185,186,190,191,192,193,196,217,218,219,220,221,222,225,226,228,229,230,232,233,234,235,236,244,246,247,249,252,255],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[507],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[30,31,33,35,36,41,44,47,53,261,262,77,78,142,286,287,182,183,427,190,201,214,238,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[93,94,95,499],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":32,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.UsageTest.argumentsOrdered":63,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":436,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":61,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":251,"org.easymock.tests2.DelegateToTest.testReturnException":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":16,"org.easymock.tests.MockingTest.testPartialClassMocking":143,"org.easymock.tests.MockClassControlTest.testToString":407,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":366,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":157,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":81,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":72,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":38,"org.easymock.tests2.UsageTest.wrongArguments":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":196,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":283,"org.easymock.samples.ExampleTest.answerVsDelegate":245,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":473,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":398,"org.easymock.tests2.UsageConstraintsTest.testNull":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":108,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":412,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":123,"org.easymock.tests2.CaptureTest.testPrimitive":132,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":176,"org.easymock.tests.UsageTest.moreThanOneArgument":152,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":107,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":295,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":485,"org.easymock.tests.UsageTest.argumentsOrdered":155,"org.easymock.tests.UsageVarargTest.varargIntAccepted":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":146,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":326,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":379,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":150,"org.easymock.tests.ReplayStateInvalidUsageTest.times":464,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":84,"org.easymock.tests2.DependencyTest.testClassMocking":329,"org.easymock.tests2.AnswerTest.answer":85,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":271,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":470,"org.easymock.tests2.CaptureTest.testAnd":129,"org.easymock.tests2.UsageTest.strictResetToDefault":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":6,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":192,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":489,"org.easymock.tests2.DelegateToTest.testDelegate":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":172,"org.easymock.tests.LimitationsTest.mockFinalMethod":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":292,"org.easymock.tests2.DependencyTest.testClassMockingSupport":330,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":451,"org.easymock.tests2.CaptureTest.testCapture1_2446744":277,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":269,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":458,"org.easymock.tests.UsageThrowableTest.throwError":302,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":472,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":425,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":297,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":351,"org.easymock.samples.PartialClassMockTest.testGetArea":252,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":459,"org.easymock.tests.MockingTest.testInterfaceMocking":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":147,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":414,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":158,"org.easymock.tests2.UsageTest.niceToStrict":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":340,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":97,"org.easymock.tests2.MockBuilderTest.testCreateMock":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":360,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":492,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":166,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":469,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":482,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":281,"org.easymock.tests.UsageOverloadedMethodTest.overloading":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":349,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":43,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":280,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":42,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":137,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":479,"org.easymock.tests.MockClassControlTest.testEquals":411,"org.easymock.tests2.EasyMockSupportClassTest.testAll":80,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":189,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":174,"org.easymock.tests2.CaptureTest.testCaptureAll":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":290,"org.easymock.tests.MockNameTest.defaultName":400,"org.easymock.tests2.UsageConstraintsTest.testMatches":44,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":456,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":296,"org.easymock.samples.ExampleTest.voteForRemovals":249,"org.easymock.tests.UsageVarargTest.allKinds":213,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":214,"org.easymock.samples.BasicClassMockTest.testPrintContent":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":306,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":20,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":323,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":507,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":423,"org.easymock.tests2.UsageConstraintsTest.greaterThan":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":191,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":114,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":424,"org.easymock.samples.ExampleTest.voteForRemoval":246,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":103,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":375,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":474,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":274,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":195,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":117,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":15,"org.easymock.tests2.CaptureTest.testCaptureFirst":139,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":118,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":65,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.UsageTest.moreThanOneArgument":58,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":273,"org.easymock.tests2.CaptureTest.testCapture2_2446744":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":100,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":212,"org.easymock.tests.GenericTest.testBridgedEquals":312,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":242,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":175,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":483,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":293,"org.easymock.tests.UsageCallCountTest.tooManyCalls":243,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":305,"org.easymock.tests.MockingTest.testNiceClassMocking":399,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":67,"org.easymock.tests.MockingTest.testClassMocking":394,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":484,"org.easymock.tests2.UsageConstraintsTest.testContains":41,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":13,"org.easymock.tests2.UsageConstraintsTest.testFind":33,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":142,"org.easymock.tests.MockTypeTest.fromEasyMockClass":471,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":177,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":28,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":504,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":207,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":390,"org.easymock.tests.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":486,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":476,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":203,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":299,"org.easymock.tests.MockClassControlTest.testHashCode":410,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":318,"org.easymock.tests2.EasyMockSupportTest.testVerify":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":342,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":487,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":481,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":298,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":496,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":268,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":352,"org.easymock.tests.UsageVarargTest.varargCharAccepted":206,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":416,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastCall":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":501,"org.easymock.tests.DefaultClassInstantiatorTest.object":417,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":125,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":480,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":388,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":343,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":356,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":317,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":409,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":401,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":83,"org.easymock.tests2.UsageTest.resumeIfFailure":64,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":18,"org.easymock.tests2.StubTest.stubWithReturnValue":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.tests2.SerializationTest.testAllMockedMethod":95,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":442,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":493,"org.easymock.samples.SupportTest.voteForRemovals":255,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":311,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":169,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":499,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":448,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":364,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":478,"org.easymock.tests.UsageExpectAndThrowTest.object":167,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":49,"org.easymock.tests2.DelegateToTest.testWrongClass":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":185,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":186,"org.easymock.tests.UsageStrictMockTest.range":182,"org.easymock.samples.ConstructorCalledMockTest.testTax":309,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":382,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":168,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":98,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":466,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":282,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":494,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":415,"org.easymock.tests2.CaptureTest.testCaptureNone":136,"org.easymock.tests.UsageUnorderedTest.message":200,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":498,"org.easymock.tests.UsageVerifyTest.twoReturns":216,"org.easymock.tests.UsageVarargTest.varargByteAccepted":211,"org.easymock.tests2.ThreadingTest.testThreadSafe":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":345,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":241,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":391,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":256,"org.easymock.tests2.CaptureTest.testCapture_2617107":131,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":198,"org.easymock.tests2.UsageConstraintsTest.any":39,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":463,"org.easymock.tests2.StubTest.stub":127,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndThrowTest.longType":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":17,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":421,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":462,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":76,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":55,"org.easymock.tests2.SerializationTest.testClass":93,"org.easymock.tests.LimitationsTest.mockNativeMethod":140,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":355,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":79,"org.easymock.tests2.NameTest.nameForMocksControl":92,"org.easymock.tests2.MockedExceptionTest.testMockedException":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":335,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":287,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":161,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":145,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":259,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":99,"org.easymock.tests.MockingTest.testNicePartialClassMocking":144,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":110,"org.easymock.tests2.CaptureTest.testCaptureLast":135,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":452,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":1,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":50,"org.easymock.tests.MockingTest.testTwoMocks":395,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":165,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":53,"org.easymock.samples.ExampleTest.removeNonExistingDocument":490,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":460,"org.easymock.tests.UsageStrictMockTest.differentMethods":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":319,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":419,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":272,"org.easymock.tests2.MockBuilderTest.testCreateMockString":267,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":405,"org.easymock.tests.UsageExpectAndThrowTest.floatType":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":336,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":86,"org.easymock.tests.UsageVerifyTest.twoThrows":215,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":371,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":82,"org.easymock.samples.ExampleTest.voteAgainstRemoval":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":413,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":113,"org.easymock.tests.LimitationsTest.privateConstructor":385,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":4,"org.easymock.tests2.UsageConstraintsTest.testNotNull":52,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":307,"org.easymock.tests2.UsageTest.defaultResetToNice":263,"org.easymock.samples.ExampleTest.voteAgainstRemovals":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests.UsageVarargTest.differentLength":208,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":354,"org.easymock.tests2.CallbackTest.callback":26,"org.easymock.tests2.UsageConstraintsTest.equals":315,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":373,"org.easymock.tests.UsageTest.openCallCountByLastCall":286,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":22,"org.easymock.tests.UsageCallCountTest.tooFewCalls":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":284,"org.easymock.tests.UsageThrowableTest.throwCheckedException":304,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":495,"org.easymock.tests.MockingTest.testStrictClassMocking":393,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":0,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":358,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":465,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":69,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":88,"org.easymock.tests.ObjectMethodsTest.testHashCode":389,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":104,"org.easymock.tests2.NameTest.nameForNiceMock":91,"org.easymock.tests2.DependencyTest.testInterfaceMocking":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":505,"org.easymock.samples.ExampleTest.addDocument":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":346,"org.easymock.tests2.DelegateToTest.testStubDelegate":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.AnswerTest.stubAnswer":87,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":180,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":369,"org.easymock.tests.UsageVarargTest.varargLongAccepted":210,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":101,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":310,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":455,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":47,"org.easymock.tests.UsageThrowableTest.noUpperLimit":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":325,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":30,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":377,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":133,"org.easymock.tests2.SerializationTest.test":94,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":418,"org.easymock.tests2.UsageConstraintsTest.testSame":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.samples.SupportTest.addDocument":254,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":328,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":337,"org.easymock.tests.GenericTest.testPackageScope":188,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":324,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":397,"org.easymock.tests2.NameTest.nameForMock":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":9,"org.easymock.tests2.UsageStrictMockTest.differentMethods":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":374,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":171,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":193,"org.easymock.tests2.MockedExceptionTest.testRealException":14,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":439,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":75,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":467,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":197,"org.easymock.tests2.NameTest.nameForStrictMock":90,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":502,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":27,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":109,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":381,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":420,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":48,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":96,"org.easymock.tests2.UsageStrictMockTest.range":77,"org.easymock.tests2.UsageConstraintsTest.lessThan":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":116,"org.easymock.tests2.CaptureTest.testCaptureRightOne":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":341,"org.easymock.tests2.UsageConstraintsTest.testOr":36,"org.easymock.tests.UsageRangeTest.combination":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":106,"org.easymock.tests.UsageTest.wrongArguments":153,"org.easymock.tests2.MockBuilderTest.testWithConstructor":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":338,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":422,"org.easymock.tests.UsageVarargTest.varargShortAccepted":209,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":308,"org.easymock.tests2.UsageConstraintsTest.cmpTo":40,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":365,"org.easymock.tests2.CompareToTest.testLessThan":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":262,"org.easymock.tests2.CaptureTest.testCaptureFromStub":278,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":457,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":367,"org.easymock.tests.UsageTest.unexpectedCallWithArray":285,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":179,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":240,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":181,"org.easymock.tests2.UsageConstraintsTest.constraints":31,"org.easymock.samples.ExampleTest.addAndChangeDocument":250,"org.easymock.tests.UsageStrictMockTest.testVerify":404,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":253,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":289,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":148,"org.easymock.tests.LimitationsTest.abstractClass":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":149,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":121,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":204}}]
