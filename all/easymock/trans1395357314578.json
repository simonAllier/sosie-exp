[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[1,16,17,18,19,2,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,0,78,79,80,81,82,83,84,85,86,87,88,89,3,90,91,92,93,94,4,5,95,96,97,98,6,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,7,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,8,163,9,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,10,227,228,11,12,229,230,13,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[3,5,105,133,137,253,254,255,156,163,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,10,12,234,236,237,238,239,240,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[78,79,80,81,105,129,130,131,132,133,134,256,257,258,259,260,160,243],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[2,21,22,261,262,263,264,91,92,96,97,265,266,267,139,7,141,142,8,163,9,206,227,228,229,230],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[268,2,20,21,22,23,269,270,34,261,262,263,264,37,51,62,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,3,91,92,93,94,96,97,98,6,100,101,102,103,107,114,14,286,287,139,7,140,141,142,143,288,149,289,290,157,291,292,293,294,295,296,297,8,163,9,298,299,300,301,206,10,227,302,228,229,230,13,303,231,304,247,248,305,251,252,306,307,308],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[309,310,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[2,21,22,107,109,111,114,14,139,7,141,142,312,302],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"org.easymock.MockType.NICE","org.easymock.MockType.NICE":"type"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[24,313,314,315,316,317,318,319,320,321,322,62,271,272,63,273,274,276,323,277,99,107,112,324,115,14,325,148,153,174,326,244,245,246],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[256,258,259,260],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[327],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[24,26,318,319,320,321,62,271,272,63,64,273,274,275,276,277,80,99,328,100,101,329,102,103,106,107,109,110,111,112,113,114,324,115,14,286,325,330,330,331,331,332,333,148,153,292,295,174,175,326,301,334,244,245,246,335,306,307,308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[38,43,54],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[51,94,110],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[268,21,22,34,276,280,282,283,285,93,287,141,142,149],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[337],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[107],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[338,339,340,341,330,331],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":38,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests2.UsageTest.argumentsOrdered":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":132,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":94,"org.easymock.tests2.StubTest.stubWithReturnValue":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":58,"org.easymock.tests2.SerializationTest.testAllMockedMethod":26,"org.easymock.tests2.DelegateToTest.testReturnException":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":130,"org.easymock.tests.MockingTest.testPartialClassMocking":244,"org.easymock.tests.MockClassControlTest.testToString":306,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":286,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":219,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":207,"org.easymock.tests.UsageExpectAndThrowTest.object":217,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":265,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":55,"org.easymock.tests2.DelegateToTest.testWrongClass":84,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":232,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":233,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":44,"org.easymock.tests2.UsageTest.wrongArguments":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":158,"org.easymock.samples.ConstructorCalledMockTest.testTax":330,"org.easymock.tests.UsageStrictMockTest.range":141,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":146,"org.easymock.samples.ExampleTest.answerVsDelegate":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":328,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":295,"org.easymock.tests2.UsageConstraintsTest.testNull":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":218,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":285,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":273,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":313,"org.easymock.tests2.CaptureTest.testPrimitive":68,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":162,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":257,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":229,"org.easymock.tests.UsageTest.moreThanOneArgument":227,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":226,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":166,"org.easymock.tests2.CaptureTest.testCaptureNone":73,"org.easymock.tests.UsageUnorderedTest.message":206,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":183,"org.easymock.tests2.ThreadingTest.testThreadSafe":27,"org.easymock.tests.UsageTest.argumentsOrdered":230,"org.easymock.tests.UsageVarargTest.varargIntAccepted":178,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":250,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":332,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":300,"org.easymock.tests2.CaptureTest.testCapture_2617107":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":124,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":327,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":161,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":64,"org.easymock.tests2.UsageConstraintsTest.any":45,"org.easymock.tests2.StubTest.stub":104,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":128,"org.easymock.tests.UsageExpectAndThrowTest.longType":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":131,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":309,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":20,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":278,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":269,"org.easymock.tests.LimitationsTest.mockNativeMethod":153,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":205,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":89,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":316,"org.easymock.tests2.CaptureTest.testAnd":65,"org.easymock.tests2.UsageTest.strictResetToDefault":90,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":23,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":114,"org.easymock.tests2.NameTest.nameForMocksControl":264,"org.easymock.tests2.MockedExceptionTest.testMockedException":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":165,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":150,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":12,"org.easymock.tests2.DelegateToTest.testDelegate":85,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":211,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":274,"org.easymock.tests.MockingTest.testNicePartialClassMocking":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":222,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":111,"org.easymock.tests2.CaptureTest.testCaptureLast":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":133,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":231,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":43,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":173,"org.easymock.tests.MockingTest.testTwoMocks":334,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":303,"org.easymock.tests2.CaptureTest.testCapture1_2446744":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":87,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":96,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":60,"org.easymock.tests.UsageThrowableTest.throwError":234,"org.easymock.tests.UsageStrictMockTest.differentMethods":142,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":152,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":294,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":29,"org.easymock.tests2.MockBuilderTest.testCreateMockString":277,"org.easymock.tests.UsageExpectAndThrowTest.floatType":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":168,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":51,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":16,"org.easymock.tests.UsageVerifyTest.twoThrows":163,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":340,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":320,"org.easymock.samples.PartialClassMockTest.testGetArea":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":125,"org.easymock.samples.ExampleTest.voteAgainstRemoval":120,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":115,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":208,"org.easymock.tests2.UsageTest.niceToStrict":93,"org.easymock.tests2.UsageConstraintsTest.testNotNull":59,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":241,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":78,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":63,"org.easymock.tests2.MockBuilderTest.testCreateMock":275,"org.easymock.tests2.UsageTest.defaultResetToNice":95,"org.easymock.samples.ExampleTest.voteAgainstRemovals":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":201,"org.easymock.tests.UsageVarargTest.differentLength":298,"org.easymock.tests2.CallbackTest.callback":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":341,"org.easymock.tests.UsageTest.openCallCountByLastCall":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":216,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":160,"org.easymock.tests.UsageCallCountTest.tooFewCalls":248,"org.easymock.tests.UsageOverloadedMethodTest.overloading":136,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":49,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":156,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":197,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":135,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":310,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":48,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":147,"org.easymock.tests.UsageThrowableTest.throwCheckedException":238,"org.easymock.tests2.EasyMockSupportClassTest.testAll":318,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":224,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":88,"org.easymock.tests2.CaptureTest.testCaptureAll":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":243,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":102,"org.easymock.tests.MockNameTest.defaultName":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":270,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.testMatches":50,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":167,"org.easymock.samples.ExampleTest.voteForRemovals":122,"org.easymock.tests2.NameTest.nameForNiceMock":263,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":31,"org.easymock.tests.UsageVarargTest.allKinds":185,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":8,"org.easymock.tests2.DependencyTest.testInterfaceMocking":116,"org.easymock.samples.BasicClassMockTest.testPrintContent":333,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":172,"org.easymock.samples.ExampleTest.addDocument":121,"org.easymock.tests2.DelegateToTest.testStubDelegate":83,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":240,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":268,"org.easymock.tests2.AnswerTest.stubAnswer":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":134,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":7,"org.easymock.tests2.UsageConstraintsTest.greaterThan":52,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":14,"org.easymock.tests.UsageVarargTest.varargLongAccepted":182,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.samples.ExampleTest.voteForRemoval":119,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":28,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":204,"org.easymock.tests.UsageExpectAndReturnTest.floatType":188,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":112,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":331,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.UsageThrowableTest.noUpperLimit":235,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":53,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":36,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":148,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":70,"org.easymock.tests2.SerializationTest.test":25,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":256,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":236,"org.easymock.tests2.UsageConstraintsTest.testSame":41,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":129,"org.easymock.tests2.CaptureTest.testCaptureFirst":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":281,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":6,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":193,"org.easymock.tests.GenericTest.testPackageScope":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":91,"org.easymock.tests2.CaptureTest.testCapture2_2446744":77,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":30,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":276,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":184,"org.easymock.tests2.NameTest.nameForMock":261,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":251,"org.easymock.tests.UsageExpectAndReturnTest.longType":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":198,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":223,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":190,"org.easymock.tests.UsageCallCountTest.tooManyCalls":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":151,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":247,"org.easymock.tests2.MockedExceptionTest.testRealException":81,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":212,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":159,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":100,"org.easymock.tests2.NameTest.nameForStrictMock":262,"org.easymock.tests2.UsageConstraintsTest.testContains":47,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":80,"org.easymock.tests2.UsageConstraintsTest.testFind":39,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":137,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":32,"org.easymock.tests.MockTypeTest.fromEasyMockClass":293,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":110,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":287,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":33,"org.easymock.tests.UsageExpectAndReturnTest.object":196,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":266,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":54,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":113,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":271,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":284,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":180,"org.easymock.tests.UsageTest.exactCallCountByLastCall":13,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":322,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":337,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":280,"org.easymock.tests2.CaptureTest.testCaptureRightOne":75,"org.easymock.tests2.UsageConstraintsTest.testOr":42,"org.easymock.tests.UsageRangeTest.combination":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":107,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":176,"org.easymock.tests.UsageTest.wrongArguments":228,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":155,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":335,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":154,"org.easymock.tests.UsageVarargTest.varargShortAccepted":181,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":86,"org.easymock.tests2.UsageConstraintsTest.cmpTo":46,"org.easymock.tests.UsageVarargTest.varargCharAccepted":179,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":19,"org.easymock.tests2.UsageTest.openCallCountByLastCall":4,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":253,"org.easymock.tests2.CaptureTest.testCaptureFromStub":76,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":272,"org.easymock.tests.UsageTest.unexpectedCallWithArray":302,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":299,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":214,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":237,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":139,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":249,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":200,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":324,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":308,"org.easymock.tests2.UsageConstraintsTest.constraints":37,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":140,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":213,"org.easymock.samples.ExampleTest.addAndChangeDocument":123,"org.easymock.tests.UsageStrictMockTest.testVerify":312,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":321,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":307,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":170,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":71,"org.easymock.tests2.UsageTest.resumeIfFailure":98,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":126,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":192,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":127,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":283,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":267,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":177}}]
