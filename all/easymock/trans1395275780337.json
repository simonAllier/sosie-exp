[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:382","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n    if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1373","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:633","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[23],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,39,40,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,6,7,71,72,73,74,75,8,9,76,77,23,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,2,3,4,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,14,203,204,205,206,207,208,209,15,16,17,210,211,18,19,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[338,339,340,341,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[343,125,127,128,129,130,131,132,134,344,135,136,138],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[38,2,156,345,157,346,158,159,160,161,162,163,347,348,164,171,349,350,351],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[61,199,200,205,352],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[101],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[338,339,340,341,342],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[26,59,62,69,6,7,73,74,8,9,77,93,94,98,99,112,113,115,116,117,118,124,152,179,197,198,199,200,14,203,206,209,15,17,210,211,18,19,212,273,283,284,286,318,320,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[41,42,43,44,214,215,216,217,218,219,243,272],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[25,27,28,30,37,38,39,39,40,40,43,45,46,47,48,49,50,51,52,53,54,55,56,59,61,62,69,70,6,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,122,125,126,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,2,3,152,154,157,158,160,161,163,165,166,167,168,169,170,172,174,175,176,177,178,179,184,185,186,187,188,349,195,196,198,200,353,354,203,205,206,209,15,210,211,212,213,239,241,242,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,284,286,287,288,289,290,291,355,356,357,312,313,314,358,332,333,334,335,336,359,360],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[23,361,244],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[177,188,349,357],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[61,7,8,9,197,199,200,14,205,16,17,18,19,362],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[90,96,125,127,135],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[172,363,364,173,174,175,176,365,366,367,188,189,349,368,350,351,369,370,213,371,220,372,373,374,312,313,314,375,324,325,326,327,328,329,330,331,337,376,377,378,379,380,381],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[367],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[368],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[69,74,78,179,199,209,211,218,238,244,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:41","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[382,383,384,385,386,387],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[382,383,384,385,388,389,387],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[390],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[128],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[391,154,155,392],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[34,35,38,39,39,40,40,43,45,49,50,51,52,54,55,79,80,81,82,2,4,393,394,156,345,157,346,158,159,160,161,162,163,348,164,165,166,168,169,170,171,172,173,174,175,176,188,189,349,350,351,213,220,374,312,313,314,325],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":91,"org.easymock.tests2.UsageTest.argumentsOrdered":9,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":149,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":72,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":24,"org.easymock.tests2.DelegateToTest.testReturnException":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":215,"org.easymock.tests.MockingTest.testPartialClassMocking":312,"org.easymock.tests.MockClassControlTest.testToString":326,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":358,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":292,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":97,"org.easymock.tests2.UsageTest.wrongArguments":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":241,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":182,"org.easymock.samples.ExampleTest.answerVsDelegate":26,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":351,"org.easymock.tests2.UsageConstraintsTest.testNull":93,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":168,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":148,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":331,"org.easymock.tests2.CaptureTest.testPrimitive":128,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":245,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":311,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":334,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.UsageVarargTest.varargIntAccepted":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":389,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":156,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":250,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":46,"org.easymock.tests.ReplayStateInvalidUsageTest.times":232,"org.easymock.tests2.AnswerTest.answer":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":67,"org.easymock.tests2.CaptureTest.testAnd":125,"org.easymock.tests2.UsageTest.strictResetToDefault":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":143,"org.easymock.tests2.DelegateToTest.testDelegate":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":307,"org.easymock.tests.LimitationsTest.mockFinalMethod":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":194,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":359,"org.easymock.tests2.CaptureTest.testCapture1_2446744":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":65,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":226,"org.easymock.tests.UsageThrowableTest.throwError":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":336,"org.easymock.samples.PartialClassMockTest.testGetArea":38,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":227,"org.easymock.tests2.CompareToTest.testLessOrEqual":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":356,"org.easymock.tests2.UsageTest.niceToStrict":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":293,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":158,"org.easymock.tests2.MockBuilderTest.testCreateMock":162,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":301,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":144,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":180,"org.easymock.tests.UsageOverloadedMethodTest.overloading":178,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":102,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":238,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":262,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":101,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":134,"org.easymock.tests2.EasyMockSupportClassTest.testAll":79,"org.easymock.tests.MockClassControlTest.testEquals":330,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":189,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":309,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":393,"org.easymock.tests2.CaptureTest.testCaptureAll":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":192,"org.easymock.tests2.UsageConstraintsTest.testMatches":103,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":335,"org.easymock.samples.ExampleTest.voteForRemovals":30,"org.easymock.tests.UsageVarargTest.allKinds":283,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":198,"org.easymock.samples.BasicClassMockTest.testPrintContent":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":193,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":290,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":57,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":386,"org.easymock.tests2.UsageConstraintsTest.greaterThan":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":185,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":176,"org.easymock.samples.ExampleTest.voteForRemoval":27,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":381,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":84,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":365,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":347,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":171,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":141,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":214,"org.easymock.tests2.CaptureTest.testCaptureFirst":138,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":142,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":77,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":258,"org.easymock.tests2.CaptureTest.testCapture2_2446744":137,"org.easymock.tests2.UsageTest.moreThanOneArgument":6,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":163,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":282,"org.easymock.tests.GenericTest.testBridgedEquals":368,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":322,"org.easymock.tests.UsageExpectAndReturnTest.longType":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":190,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":310,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":348,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":110,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":332,"org.easymock.tests.UsageCallCountTest.tooManyCalls":323,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":297,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":289,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":50,"org.easymock.tests.MockingTest.testNiceClassMocking":375,"org.easymock.tests.MockingTest.testClassMocking":373,"org.easymock.tests2.UsageConstraintsTest.testContains":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":316,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":345,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":92,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":179,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":120,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests.UsageExpectAndReturnTest.object":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":384,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":277,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":223,"org.easymock.tests.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":271,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":382,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":267,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":273,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":237,"org.easymock.tests.MockClassControlTest.testHashCode":329,"org.easymock.tests2.EasyMockSupportTest.testVerify":151,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":64,"org.easymock.tests.UsageVarargTest.varargCharAccepted":276,"org.easymock.tests2.CaptureTest.testCaptureMultiple":343,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":58,"org.easymock.tests2.UsageTest.openCallCountByLastCall":73,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":150,"org.easymock.tests.DefaultClassInstantiatorTest.object":337,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":221,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":299,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":287,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":174,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":82,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":327,"org.easymock.tests2.UsageTest.resumeIfFailure":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":217,"org.easymock.tests2.StubTest.stubWithReturnValue":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":387,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":260,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":353,"org.easymock.samples.SupportTest.voteForRemovals":37,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":12,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":304,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":354,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":391,"org.easymock.tests.UsageExpectAndThrowTest.object":302,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":108,"org.easymock.tests2.DelegateToTest.testWrongClass":123,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":195,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":196,"org.easymock.samples.ConstructorCalledMockTest.testTax":39,"org.easymock.tests.UsageStrictMockTest.range":205,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":303,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":160,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":181,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":20,"org.easymock.tests2.CaptureTest.testCaptureNone":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":357,"org.easymock.tests.UsageUnorderedTest.message":197,"org.easymock.tests.UsageVerifyTest.twoReturns":200,"org.easymock.tests.UsageVarargTest.varargByteAccepted":281,"org.easymock.tests2.ThreadingTest.testThreadSafe":83,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":320,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":34,"org.easymock.tests2.CaptureTest.testCapture_2617107":127,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":244,"org.easymock.tests2.UsageConstraintsTest.any":98,"org.easymock.tests2.StubTest.stub":23,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":216,"org.easymock.tests.UsageExpectAndThrowTest.longType":295,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":379,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":230,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":60,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":56,"org.easymock.tests.LimitationsTest.mockNativeMethod":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":270,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":349,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":63,"org.easymock.tests2.NameTest.nameForMocksControl":118,"org.easymock.tests2.MockedExceptionTest.testMockedException":42,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":296,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":161,"org.easymock.tests.MockingTest.testNicePartialClassMocking":313,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":170,"org.easymock.tests2.CaptureTest.testCaptureLast":132,"org.easymock.tests2.CompareToTest.testCompareEqual":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":360,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":96,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.MockingTest.testTwoMocks":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":300,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":113,"org.easymock.samples.ExampleTest.removeNonExistingDocument":31,"org.easymock.tests.UsageStrictMockTest.differentMethods":206,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":228,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":377,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":85,"org.easymock.tests2.MockBuilderTest.testCreateMockString":164,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":324,"org.easymock.tests.UsageExpectAndThrowTest.floatType":294,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":104,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":153,"org.easymock.tests.UsageVerifyTest.twoThrows":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":81,"org.easymock.samples.ExampleTest.voteAgainstRemoval":28,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":175,"org.easymock.tests.LimitationsTest.privateConstructor":370,"org.easymock.tests2.UsageConstraintsTest.testNotNull":112,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":291,"org.easymock.tests2.UsageTest.defaultResetToNice":75,"org.easymock.samples.ExampleTest.voteAgainstRemovals":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":266,"org.easymock.tests.UsageVarargTest.differentLength":278,"org.easymock.tests2.CallbackTest.callback":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":363,"org.easymock.tests.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":243,"org.easymock.tests.UsageCallCountTest.tooFewCalls":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":183,"org.easymock.tests.UsageThrowableTest.throwCheckedException":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":21,"org.easymock.tests.MockingTest.testStrictClassMocking":372,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":51,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":53,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":155,"org.easymock.tests.ObjectMethodsTest.testHashCode":222,"org.easymock.tests2.CompareToTest.testGreateOrEqual":341,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":388,"org.easymock.tests2.NameTest.nameForNiceMock":117,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":87,"org.easymock.tests2.DependencyTest.testInterfaceMocking":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":385,"org.easymock.samples.ExampleTest.addDocument":29,"org.easymock.tests2.DelegateToTest.testStubDelegate":122,"org.easymock.tests2.AnswerTest.stubAnswer":154,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":203,"org.easymock.tests.UsageVarargTest.varargLongAccepted":280,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":207,"org.easymock.tests.UsageExpectAndReturnTest.floatType":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":269,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":40,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":106,"org.easymock.tests.UsageThrowableTest.noUpperLimit":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":89,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":130,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testSame":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":252,"org.easymock.samples.SupportTest.addDocument":36,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":229,"org.easymock.tests.GenericTest.testPackageScope":188,"org.easymock.tests2.NameTest.nameForMock":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":263,"org.easymock.tests2.UsageStrictMockTest.differentMethods":62,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":364,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":306,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":187,"org.easymock.tests2.MockedExceptionTest.testRealException":44,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":242,"org.easymock.tests2.NameTest.nameForStrictMock":116,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":169,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":107,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":378,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":157,"org.easymock.tests2.UsageStrictMockTest.range":61,"org.easymock.tests2.UsageConstraintsTest.lessThan":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":140,"org.easymock.tests2.CaptureTest.testCaptureRightOne":135,"org.easymock.tests2.UsageConstraintsTest.testOr":95,"org.easymock.tests.UsageRangeTest.combination":184,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":166,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":264,"org.easymock.tests.UsageVarargTest.varargShortAccepted":279,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":321,"org.easymock.tests2.UsageConstraintsTest.cmpTo":99,"org.easymock.tests2.CompareToTest.testLessThan":338,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":74,"org.easymock.tests2.CaptureTest.testCaptureFromStub":136,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":225,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":346,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":265,"org.easymock.tests2.CaptureTest.testCapture":344,"org.easymock.tests2.UsageConstraintsTest.constraints":90,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":204,"org.easymock.samples.ExampleTest.addAndChangeDocument":32,"org.easymock.tests.UsageStrictMockTest.testVerify":208,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":33,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":191,"org.easymock.tests2.CompareToTest.testGreateThan":339,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":131,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":257,"org.easymock.tests.LimitationsTest.abstractClass":369,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":145,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":274,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":352}}]
