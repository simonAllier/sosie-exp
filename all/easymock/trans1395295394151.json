[{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[10,11,12,0,0,1,1,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,3,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[115,116,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[10,11,12,0,0,1,1,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,3,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:154","sourceCode":"for (final org.easymock.internal.UnorderedBehavior org.easymock.internal.UnorderedBehavior : java.util.List<org.easymock.internal.UnorderedBehavior>.subList(int, java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    if (!(org.easymock.internal.UnorderedBehavior.verify())) {\n        boolean = false;\n        break;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[72,73,74,75,76,77,78,79,80,81,82,117,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[118,119,120,56,57,58,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[96],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[163],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:189","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[164],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[12,0,1,13,25,35,48,165,52,53,55,3,65,73,77,80,96,99],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[118,119,120,122,124,125,126,127,128,129,130,131,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:44","failures":[166,167,168,169,170,171,172,173,10,11,12,174,175,176,0,1,177,178,179,180,181,182,183,13,184,14,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,15,201,202,203,16,204,205,206,118,207,208,209,210,211,212,213,214,215,216,217,218,219,220,119,221,222,223,224,115,225,120,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,116,263,264,163,265,266,267,268,269,270,271,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,272,44,273,45,46,274,47,48,49,50,275,51,165,52,53,54,276,55,277,278,279,280,281,282,283,284,285,286,287,288,56,57,58,121,289,290,291,292,293,59,60,61,62,294,295,63,64,296,297,6,298,299,7,8,3,65,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,66,67,320,68,69,70,71,321,72,73,74,75,76,77,78,79,80,322,323,324,122,325,326,327,328,329,330,331,332,123,124,333,334,335,336,337,125,338,126,127,128,129,130,131,339,340,341,342,343,344,345,346,347,348,349,350,351,352,81,132,133,134,135,136,137,353,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,82,117,83,84,85,86,87,88,371,89,90,91,92,93,94,372,95,96,97,98,99,100,373,374,375,376,377,378,379,380,381,382,4,383,384,385,386,387,388,389,390,391,5,392,101,393,394,395,396,102,397,398,158,399,400,401,402,159,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,103,421,422,160,423,424,425,426,427,428,9,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,164,471,472,473,474,104,105,106,107,475,161,476,477,478,479,480,481,482,162,108,109,110,111,112,483,113,484,485,114,486,487,488,489,490],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,13,2,491,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,273,274,275,52,492,276,61,64,296,3,65],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[166,167,168,169,170,171,172,173,10,11,12,174,175,176,0,0,1,1,177,178,179,180,181,182,183,13,184,14,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,15,16,204,205,206,118,207,208,209,210,211,212,213,214,215,216,217,218,219,220,119,221,222,223,224,115,225,120,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,116,263,264,163,265,266,267,268,269,270,271,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,277,278,279,280,281,282,283,284,285,286,287,288,56,57,58,121,289,290,291,292,293,59,60,61,62,295,63,64,297,6,298,299,7,8,3,65,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,66,67,320,68,69,70,71,321,72,73,74,75,76,77,78,79,80,322,323,324,122,325,326,327,328,329,330,331,332,123,124,333,334,335,336,337,125,338,126,127,128,129,130,131,339,340,341,342,343,344,345,346,347,348,349,350,351,352,81,132,133,134,135,136,137,353,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,82,117,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,373,374,375,376,377,378,379,380,381,382,4,383,384,385,386,387,388,389,390,391,5,392,101,395,396,102,397,398,158,399,400,401,402,159,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,103,421,422,160,423,424,425,426,427,428,9,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,164,471,472,473,474,104,105,106,107,475,161,476,477,478,479,480,481,482,162,108,109,110,111,112,483,113,484,485,114,486,487,488,489,490],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[216,218,219,222,493,494,495,496,497,498,323,325,326,327,342,343,499,500,501,376,378,379,399,415,475,161,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[13,502,503,504,505,506,507,508,275,52,509,510,3,65],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[118,119,120,122,124,125,126,127,128,129,130,131,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[167,179,181,182,183,324,425],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[93,511,512],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[255],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[513,245,263,265],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[96,100],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[514],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[494,515,516,499,375,400],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[260],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.RecordState:280","failures":[167,178,179,180,181,182,183,324],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":248,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":158,"org.easymock.tests2.UsageTest.argumentsOrdered":228,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":432,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":177,"org.easymock.tests2.DelegateToTest.testReturnException":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":133,"org.easymock.tests.MockingTest.testPartialClassMocking":111,"org.easymock.tests.MockClassControlTest.testToString":83,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":289,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":138,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":25,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":255,"org.easymock.tests2.UsageTest.wrongArguments":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":331,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":336,"org.easymock.samples.ExampleTest.answerVsDelegate":167,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":102,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":485,"org.easymock.tests2.UsageConstraintsTest.testNull":251,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":68,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":88,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":316,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":17,"org.easymock.tests2.CaptureTest.testPrimitive":234,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":333,"org.easymock.tests.UsageTest.moreThanOneArgument":399,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":157,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":350,"org.easymock.tests.UsageTest.argumentsOrdered":404,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":366,"org.easymock.tests.UsageVarargTest.varargIntAccepted":356,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":507,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":202,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":287,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":474,"org.easymock.tests.ReplayStateInvalidUsageTest.times":389,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests2.DependencyTest.testClassMocking":185,"org.easymock.tests2.AnswerTest.answer":297,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":439,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":213,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":394,"org.easymock.tests2.CaptureTest.testAnd":231,"org.easymock.tests2.UsageTest.strictResetToDefault":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":75,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":311,"org.easymock.tests2.DelegateToTest.testDelegate":183,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":370,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":153,"org.easymock.tests.LimitationsTest.mockFinalMethod":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":481,"org.easymock.tests2.DependencyTest.testClassMockingSupport":186,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":342,"org.easymock.tests2.CaptureTest.testCapture1_2446744":235,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":151,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":211,"org.easymock.tests.UsageThrowableTest.throwError":125,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":383,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":396,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":450,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":352,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":43,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.MockingTest.testInterfaceMocking":483,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":471,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":346,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":139,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":30,"org.easymock.tests2.UsageTest.niceToStrict":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":48,"org.easymock.tests2.MockBuilderTest.testCreateMock":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":38,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":197,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":147,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":393,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":334,"org.easymock.tests.UsageOverloadedMethodTest.overloading":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":34,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":122,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":462,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":421,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":511,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":260,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":240,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":357,"org.easymock.tests2.EasyMockSupportClassTest.testAll":22,"org.easymock.tests.MockClassControlTest.testEquals":87,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":98,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":479,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":212,"org.easymock.tests2.CaptureTest.testCaptureAll":232,"org.easymock.tests.MockNameTest.defaultName":353,"org.easymock.tests2.UsageConstraintsTest.testMatches":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":351,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":382,"org.easymock.samples.ExampleTest.voteForRemovals":171,"org.easymock.tests.UsageVarargTest.allKinds":365,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":480,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":130,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":214,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":508,"org.easymock.tests2.UsageConstraintsTest.greaterThan":263,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":23,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":447,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":78,"org.easymock.samples.ExampleTest.voteForRemoval":168,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":95,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":79,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":303,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":397,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":71,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":119,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":81,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":309,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":132,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":178,"org.easymock.tests2.CaptureTest.testCaptureFirst":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":310,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":230,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":458,"org.easymock.tests2.UsageTest.moreThanOneArgument":222,"org.easymock.tests2.CaptureTest.testCapture2_2446744":243,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":440,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":54,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":364,"org.easymock.tests.GenericTest.testBridgedEquals":100,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":413,"org.easymock.tests.UsageExpectAndReturnTest.longType":454,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":477,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":156,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":392,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":267,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":154,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":348,"org.easymock.tests.UsageCallCountTest.tooManyCalls":414,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":143,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":129,"org.easymock.tests.MockingTest.testNiceClassMocking":114,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":60,"org.easymock.tests.MockingTest.testClassMocking":109,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":407,"org.easymock.tests2.UsageConstraintsTest.testContains":259,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":58,"org.easymock.tests2.UsageConstraintsTest.testFind":250,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":160,"org.easymock.tests.MockTypeTest.fromEasyMockClass":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":209,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":373,"org.easymock.tests.UsageExpectAndReturnTest.object":461,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":198,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":315,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":504,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":359,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":419,"org.easymock.tests.UsageTest.exactCallCountByLastCall":405,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":488,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":367,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":467,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":324,"org.easymock.tests.MockClassControlTest.testHashCode":86,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":278,"org.easymock.tests2.EasyMockSupportTest.testVerify":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":32,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":322,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":210,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":272,"org.easymock.tests.UsageVarargTest.varargCharAccepted":358,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":371,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastCall":225,"org.easymock.tests.DefaultClassInstantiatorTest.object":89,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":339,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":417,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":127,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":192,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":277,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":76,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":468,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":328,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":84,"org.easymock.tests2.UsageTest.resumeIfFailure":229,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":101,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":135,"org.easymock.tests2.StubTest.stubWithReturnValue":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":460,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":268,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":438,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":510,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":515,"org.easymock.samples.SupportTest.voteForRemovals":175,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":150,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":444,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":6,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":490,"org.easymock.tests.UsageExpectAndThrowTest.object":148,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":265,"org.easymock.tests2.DelegateToTest.testWrongClass":181,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":486,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":487,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":378,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":204,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":314,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":59,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":50,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":403,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":335,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":516,"org.easymock.tests2.CaptureTest.testCaptureNone":239,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":347,"org.easymock.tests.UsageUnorderedTest.message":415,"org.easymock.tests.UsageVerifyTest.twoReturns":476,"org.easymock.tests.UsageVarargTest.varargByteAccepted":363,"org.easymock.tests2.ThreadingTest.testThreadSafe":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":36,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":411,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":420,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests2.CaptureTest.testCapture_2617107":233,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":124,"org.easymock.tests2.UsageConstraintsTest.any":257,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":388,"org.easymock.tests2.StubTest.stub":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndThrowTest.longType":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":134,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":93,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":387,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":217,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":282,"org.easymock.tests.LimitationsTest.mockNativeMethod":106,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":470,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":191,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":220,"org.easymock.tests2.NameTest.nameForMocksControl":293,"org.easymock.tests2.MockedExceptionTest.testMockedException":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":24,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":142,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":113,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":208,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":66,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":51,"org.easymock.tests.MockingTest.testNicePartialClassMocking":112,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":70,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":502,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":189,"org.easymock.tests2.CaptureTest.testCaptureLast":238,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":343,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":64,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":254,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":266,"org.easymock.tests.MockingTest.testTwoMocks":110,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":296,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":451,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":146,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":227,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":270,"org.easymock.samples.ExampleTest.removeNonExistingDocument":172,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":385,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":196,"org.easymock.tests.UsageStrictMockTest.differentMethods":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":279,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":91,"org.easymock.tests2.ConstraintsToStringTest.andToString":497,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":304,"org.easymock.tests2.MockBuilderTest.testCreateMockString":55,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":82,"org.easymock.tests.UsageExpectAndThrowTest.floatType":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":26,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":21,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":299,"org.easymock.tests.UsageVerifyTest.twoThrows":161,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":300,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":35,"org.easymock.samples.ExampleTest.voteAgainstRemoval":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":433,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":345,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":77,"org.easymock.tests.LimitationsTest.privateConstructor":105,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":491,"org.easymock.tests2.UsageConstraintsTest.testNotNull":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":131,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":56,"org.easymock.tests2.UsageTest.defaultResetToNice":226,"org.easymock.samples.ExampleTest.voteAgainstRemovals":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":434,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":190,"org.easymock.tests.UsageVarargTest.differentLength":360,"org.easymock.tests2.CallbackTest.callback":301,"org.easymock.tests2.UsageConstraintsTest.equals":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":73,"org.easymock.tests.UsageTest.openCallCountByLastCall":402,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":123,"org.easymock.tests.UsageCallCountTest.tooFewCalls":409,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":337,"org.easymock.tests.UsageThrowableTest.throwCheckedException":128,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":499,"org.easymock.tests.MockingTest.testStrictClassMocking":108,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":162,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":195,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":390,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":295,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":8,"org.easymock.tests.ObjectMethodsTest.testHashCode":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":506,"org.easymock.tests2.NameTest.nameForNiceMock":292,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":306,"org.easymock.tests2.DependencyTest.testInterfaceMocking":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":505,"org.easymock.samples.ExampleTest.addDocument":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":37,"org.easymock.tests2.DelegateToTest.testStubDelegate":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":42,"org.easymock.tests2.AnswerTest.stubAnswer":7,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":376,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":165,"org.easymock.tests.UsageVarargTest.varargLongAccepted":362,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":469,"org.easymock.tests.UsageExpectAndReturnTest.floatType":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.tests2.ConstraintsToStringTest.orToString":493,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":286,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests.UsageThrowableTest.noUpperLimit":338,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":246,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":15,"org.easymock.tests2.SerializationTest.test":184,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":236,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":512,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":452,"org.easymock.tests2.UsageConstraintsTest.testSame":252,"org.easymock.samples.SupportTest.addDocument":174,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":294,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":27,"org.easymock.tests.GenericTest.testPackageScope":97,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":285,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":484,"org.easymock.tests2.NameTest.nameForMock":290,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":463,"org.easymock.tests2.UsageStrictMockTest.differentMethods":219,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":276,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":455,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":152,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":416,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":449,"org.easymock.tests2.MockedExceptionTest.testRealException":121,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":205,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":500,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":435,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":216,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":332,"org.easymock.tests2.NameTest.nameForStrictMock":291,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":47,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":69,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":16,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":163,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":92,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":45,"org.easymock.tests2.UsageStrictMockTest.range":218,"org.easymock.tests2.UsageConstraintsTest.lessThan":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":31,"org.easymock.tests2.CaptureTest.testCaptureRightOne":241,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":514,"org.easymock.tests2.UsageConstraintsTest.testOr":253,"org.easymock.tests.UsageRangeTest.combination":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":67,"org.easymock.tests.UsageTest.wrongArguments":401,"org.easymock.tests2.MockBuilderTest.testWithConstructor":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":28,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":424,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":94,"org.easymock.tests.UsageVarargTest.varargShortAccepted":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":412,"org.easymock.tests2.UsageConstraintsTest.cmpTo":258,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":426,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":120,"org.easymock.tests2.CaptureTest.testCaptureFromStub":242,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":4,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":46,"org.easymock.tests.UsageTest.unexpectedCallWithArray":400,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":375,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":410,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":465,"org.easymock.tests2.UsageConstraintsTest.constraints":247,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":377,"org.easymock.samples.ExampleTest.addAndChangeDocument":173,"org.easymock.tests2.ConstraintsToStringTest.notToString":495,"org.easymock.tests.UsageStrictMockTest.testVerify":381,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":176,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":374,"org.easymock.tests2.CompareToTest.testGreateThan":513,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":478,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":472,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":457,"org.easymock.tests.LimitationsTest.abstractClass":104,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":473,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":313,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":355}}]
