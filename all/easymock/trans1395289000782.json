[{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[5,6,7,8,9,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[11,12],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[13,14,15,16,17,18,19,20,21,22,23],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[21,22,24,25,26,27,28,29,30,23,31,32],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[5,6,7,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[33,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[34,35,36,37,7,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,33,53,13,14,54,15,55,16,17,56,18,57,58,59,60,61,62,63,64,65,19,66,67,68,69,20,70,71,72,73,74,21,75,22,24,25,26,27,28,76,29,23,31,77,32,78,79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[80,21,75,22,24,25,26,27,28,29,23,31,77,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[82,83,84,85,86,87,0,1,88,2,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,34,35,137,138,139,36,140,141,142,143,144,145,146,147,148,149,150,37,151,152,153,154,155,156,157,158,159,160,161,162,7,38,163,164,165,166,167,39,40,41,42,43,168,169,170,171,172,173,174,175,176,177,178,179,180,181,44,45,46,47,48,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,8,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,11,248,249,250,12,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,49,50,275,276,277,278,279,280,281,282,51,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,52,366,367,368,369,370,371,372,33,53,13,14,373,54,15,55,16,17,56,18,57,58,59,60,61,62,63,64,65,19,66,67,68,69,20,70,71,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,3,393,4,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,72,73,415,74,416,417,418,419,420,421,422,423,81,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,21,75,22,24,25,26,27,28,76,29,23,31,77,32,439,440,441,442,443,444,78,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,79,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:183","sourceCode":"net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[98,99,100,123,426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[121,128,47,265,439],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[82,164,165,367,368],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[514,58,79],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[83,84,36,515,7,164,8,233,236,237,304,367,419,424,425],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[11,250,349,350,370,402,406,407,408,410,452,462,479,483,486,502,503,504],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[82,83,84,85,86,87,0,1,88,2,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,516,130,131,132,133,134,135,517,136,34,35,137,138,139,36,140,141,142,143,144,145,146,147,148,149,150,37,518,151,152,153,154,155,156,157,158,159,160,161,162,7,38,163,164,165,166,167,39,40,41,42,43,168,169,170,171,172,173,174,175,176,177,178,179,180,181,44,45,46,47,48,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,231,232,8,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,11,248,249,250,12,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,49,50,275,276,277,278,279,280,281,282,51,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,349,350,519,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,52,366,367,368,369,370,371,372,33,53,13,14,373,54,15,55,16,17,56,18,57,58,59,60,61,62,63,64,65,19,66,67,68,69,20,70,71,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,3,393,4,394,395,396,397,398,520,399,400,521,401,402,403,404,522,405,406,407,408,409,523,410,411,412,413,414,72,73,415,74,416,417,418,419,420,421,422,423,81,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,21,75,22,24,25,26,27,28,76,29,23,31,77,32,439,440,441,443,444,78,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,79,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,524,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[134,525,526],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[301,414],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"t":"t"}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[131,135,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[21,22,24,25,26,27,28,29,30,23],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[41,498,505,507,508,510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[106,110,111,120,125,34,154,38,39,40,41,42,43,168,169,170,171,172,44,45,48,49,50,52,33,53,54,15,55,16,59,61,62,64,65,20,70,71,31,502,502,503,503],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[432,502,502,503,503],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[251],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[83,35,153,174,176,177,178,179,180,181,46,47,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,231,235,279,280,281,282,51,283,301,411,412,413,414,416,423,440],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":14,"org.easymock.tests2.UsageTest.argumentsOrdered":425,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":231,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":116,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":421,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":501,"org.easymock.tests2.DelegateToTest.testReturnException":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":280,"org.easymock.tests.MockingTest.testPartialClassMocking":0,"org.easymock.tests.MockClassControlTest.testToString":289,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":434,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":452,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":189,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":490,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":230,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":56,"org.easymock.tests2.UsageTest.wrongArguments":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":44,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":261,"org.easymock.samples.ExampleTest.answerVsDelegate":506,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":256,"org.easymock.tests2.UsageConstraintsTest.testNull":15,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":90,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":474,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":294,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":383,"org.easymock.tests2.CaptureTest.testPrimitive":24,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":48,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":208,"org.easymock.tests.UsageTest.moreThanOneArgument":232,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":92,"org.easymock.tests.UsageTest.argumentsOrdered":237,"org.easymock.tests.UsageVarargTest.varargIntAccepted":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":39,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":335,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":43,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":214,"org.easymock.tests.ReplayStateInvalidUsageTest.times":271,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":357,"org.easymock.tests2.DependencyTest.testClassMocking":487,"org.easymock.tests2.AnswerTest.answer":428,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":123,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":397,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":253,"org.easymock.tests2.UsageTest.strictResetToDefault":417,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":521,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":481,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":378,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":96,"org.easymock.tests2.DelegateToTest.testDelegate":342,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":204,"org.easymock.tests.LimitationsTest.mockFinalMethod":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":105,"org.easymock.tests2.DependencyTest.testClassMockingSupport":488,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":186,"org.easymock.tests2.CaptureTest.testCapture1_2446744":25,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":202,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":395,"org.easymock.tests.UsageThrowableTest.throwError":174,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":265,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":255,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":518,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":470,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":217,"org.easymock.samples.PartialClassMockTest.testGetArea":504,"org.easymock.tests.MockingTest.testInterfaceMocking":88,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":40,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":457,"org.easymock.tests2.UsageTest.niceToStrict":420,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":190,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":160,"org.easymock.tests2.ThreadingTest.testChangeDefault":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":106,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":402,"org.easymock.tests2.MockBuilderTest.testCreateMock":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":465,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":360,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":9,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":198,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":379,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":259,"org.easymock.tests.UsageOverloadedMethodTest.overloading":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":61,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":301,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":316,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":525,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":60,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":29,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":143,"org.easymock.tests2.EasyMockSupportClassTest.testAll":449,"org.easymock.tests.MockClassControlTest.testEquals":293,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":103,"org.easymock.tests2.CaptureTest.testCaptureAll":75,"org.easymock.tests.MockNameTest.defaultName":182,"org.easymock.tests2.UsageConstraintsTest.testMatches":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":171,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":263,"org.easymock.samples.ExampleTest.voteForRemovals":510,"org.easymock.tests.UsageVarargTest.allKinds":37,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":82,"org.easymock.samples.BasicClassMockTest.testPrintContent":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":104,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":180,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":332,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":341,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":517,"org.easymock.tests2.UsageConstraintsTest.greaterThan":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":98,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":484,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":218,"org.easymock.samples.ExampleTest.voteForRemoval":507,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":136,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":485,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":443,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":257,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":524,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":477,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":210,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":416,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":173,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":376,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":279,"org.easymock.tests2.CaptureTest.testCaptureFirst":32,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":377,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":427,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":312,"org.easymock.tests2.UsageTest.moreThanOneArgument":418,"org.easymock.tests2.CaptureTest.testCapture2_2446744":77,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":78,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":124,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":150,"org.easymock.tests.GenericTest.testBridgedEquals":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":246,"org.easymock.tests.UsageExpectAndReturnTest.longType":308,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":101,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":374,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":207,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":154,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":168,"org.easymock.tests.UsageCallCountTest.tooManyCalls":247,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":313,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":388,"org.easymock.tests.MockingTest.testNiceClassMocking":91,"org.easymock.tests.MockingTest.testClassMocking":86,"org.easymock.tests2.UsageConstraintsTest.testContains":59,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":240,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":413,"org.easymock.tests2.UsageConstraintsTest.testFind":54,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":153,"org.easymock.tests.MockTypeTest.fromEasyMockClass":254,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":161,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":74,"org.easymock.tests.UsageExpectAndReturnTest.object":315,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":382,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":145,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":158,"org.easymock.tests.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":111,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":93,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":350,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":321,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":300,"org.easymock.tests.MockClassControlTest.testHashCode":292,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":459,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":285,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":394,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":72,"org.easymock.tests.UsageVarargTest.varargCharAccepted":144,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":516,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":129,"org.easymock.tests2.UsageTest.openCallCountByLastCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":385,"org.easymock.tests.DefaultClassInstantiatorTest.object":130,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":284,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":156,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":460,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":325,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":482,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":216,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":195,"org.easymock.tests.CapturesMatcherTest.test":80,"org.easymock.tests.ReplayStateInvalidCallsTest.times":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":183,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":468,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":290,"org.easymock.tests2.UsageTest.resumeIfFailure":426,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":251,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":282,"org.easymock.tests2.StubTest.stubWithReturnValue":440,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":522,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":314,"org.easymock.tests2.SerializationTest.testAllMockedMethod":372,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":122,"org.easymock.samples.SupportTest.voteForRemovals":498,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":10,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":328,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":201,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":128,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":429,"org.easymock.tests.UsageExpectAndThrowTest.object":199,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":297,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":66,"org.easymock.tests2.DelegateToTest.testWrongClass":340,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":49,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":220,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":50,"org.easymock.samples.ConstructorCalledMockTest.testTax":502,"org.easymock.tests.UsageStrictMockTest.range":164,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":495,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":387,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":200,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":446,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":236,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":260,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":5,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":139,"org.easymock.tests2.CaptureTest.testCaptureNone":76,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":344,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests.UsageVerifyTest.twoReturns":84,"org.easymock.tests.UsageVarargTest.varargByteAccepted":149,"org.easymock.tests2.ThreadingTest.testThreadSafe":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":463,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":244,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":499,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":159,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":47,"org.easymock.tests2.UsageConstraintsTest.any":57,"org.easymock.tests2.StubTest.stub":439,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":127,"org.easymock.tests.UsageExpectAndThrowTest.longType":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":281,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":134,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":269,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":366,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":330,"org.easymock.tests2.SerializationTest.testClass":370,"org.easymock.tests.LimitationsTest.mockNativeMethod":277,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":250,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":324,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":354,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":228,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":369,"org.easymock.tests2.NameTest.nameForMocksControl":438,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":345,"org.easymock.tests2.MockedExceptionTest.testMockedException":412,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":451,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":415,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":193,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":471,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":405,"org.easymock.tests.MockingTest.testNicePartialClassMocking":1,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":476,"org.easymock.tests2.CompareToTest.testCompareEqual":514,"org.easymock.tests2.CaptureTest.testCaptureLast":28,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":352,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":187,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":393,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":17,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":227,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":67,"org.easymock.tests.MockingTest.testTwoMocks":87,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":224,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":197,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":424,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":70,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":348,"org.easymock.samples.ExampleTest.removeNonExistingDocument":511,"org.easymock.tests.UsageStrictMockTest.differentMethods":165,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":327,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":132,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":347,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":444,"org.easymock.tests2.MockBuilderTest.testCreateMockString":410,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":453,"org.easymock.tests.UsageExpectAndThrowTest.floatType":191,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":448,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":431,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":519,"org.easymock.tests.UsageVerifyTest.twoThrows":83,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":462,"org.easymock.samples.ExampleTest.voteAgainstRemoval":508,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":117,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":483,"org.easymock.tests.LimitationsTest.privateConstructor":276,"org.easymock.tests2.UsageConstraintsTest.testNotNull":20,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":411,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":181,"org.easymock.tests2.UsageTest.defaultResetToNice":81,"org.easymock.samples.ExampleTest.voteAgainstRemovals":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":320,"org.easymock.tests.UsageVarargTest.differentLength":146,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":353,"org.easymock.tests2.CallbackTest.callback":351,"org.easymock.tests2.UsageConstraintsTest.equals":373,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":479,"org.easymock.tests.UsageTest.openCallCountByLastCall":234,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":46,"org.easymock.tests.UsageCallCountTest.tooFewCalls":242,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":390,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":262,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":346,"org.easymock.tests.UsageThrowableTest.throwCheckedException":178,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":6,"org.easymock.tests.MockingTest.testStrictClassMocking":85,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":35,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":358,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":272,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":392,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":433,"org.easymock.tests.ObjectMethodsTest.testHashCode":157,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":445,"org.easymock.tests2.NameTest.nameForNiceMock":437,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":226,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":221,"org.easymock.tests2.DependencyTest.testInterfaceMocking":489,"org.easymock.samples.ExampleTest.addDocument":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests2.DelegateToTest.testStubDelegate":339,"org.easymock.tests2.AnswerTest.stubAnswer":432,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":406,"org.easymock.tests.UsageVarargTest.varargLongAccepted":148,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":115,"org.easymock.tests.UsageExpectAndReturnTest.floatType":307,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":349,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":503,"org.easymock.tests.UsageThrowableTest.noUpperLimit":175,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":65,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":334,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":53,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":491,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":26,"org.easymock.tests2.SerializationTest.test":371,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":526,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":131,"org.easymock.tests2.UsageConstraintsTest.testSame":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":306,"org.easymock.samples.SupportTest.addDocument":497,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":391,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":211,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":454,"org.easymock.tests.GenericTest.testPackageScope":248,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":110,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":333,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":89,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":209,"org.easymock.tests2.NameTest.nameForMock":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":317,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":523,"org.easymock.tests2.UsageStrictMockTest.differentMethods":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":480,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":203,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":155,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":100,"org.easymock.tests2.MockedExceptionTest.testRealException":414,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":258,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":119,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":45,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":274,"org.easymock.tests2.NameTest.nameForStrictMock":436,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":73,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":494,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":133,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":399,"org.easymock.tests2.UsageStrictMockTest.range":367,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":215,"org.easymock.tests2.UsageConstraintsTest.lessThan":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":114,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":458,"org.easymock.tests2.CaptureTest.testCaptureRightOne":23,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":343,"org.easymock.tests2.UsageConstraintsTest.testOr":16,"org.easymock.tests.UsageRangeTest.combination":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":472,"org.easymock.tests.UsageTest.wrongArguments":233,"org.easymock.tests2.MockBuilderTest.testWithConstructor":520,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":455,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":288,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":318,"org.easymock.tests.UsageVarargTest.varargShortAccepted":147,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":135,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":245,"org.easymock.tests2.UsageConstraintsTest.cmpTo":58,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":229,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":430,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":109,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":423,"org.easymock.tests2.CaptureTest.testCaptureFromStub":31,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":264,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":400,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":225,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":243,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":319,"org.easymock.tests2.CaptureTest.testCapture":30,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":163,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.samples.ExampleTest.addAndChangeDocument":512,"org.easymock.tests.UsageStrictMockTest.testVerify":167,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":513,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":102,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":41,"org.easymock.tests.LimitationsTest.abstractClass":275,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":42,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":380}}]
