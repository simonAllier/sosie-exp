[{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,0,1,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.internal.Range:40","failures":[35,20,21,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,22,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,24,123,124,25,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,26,27,181,182,28,29,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,30,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,31,312,313,314,315,316,317,318,2,3,319,4,5,6,7,8,9,10,11,320,321,322,323,324,325,326,327,0,1,328,329,330,12,13,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,32,386,387,388,389,390,33,34,391,392,393,394,395,396,397,398,399,400,401,402,403,14,15,16,17,404,405,406,407,408,409,18,19,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[20,21,39,40,42,51,22,98,99,100,102,103,105,106,107,108,109,111,112,122,24,123,124,25,125,126,138,139,140,141,142,143,144,145,146,147,148,149,150,156,157,161,162,164,169,174,27,28,29,183,187,188,189,191,192,194,195,226,248,250,251,253,256,257,259,264,269,279,287,289,291,292,295,301,309,310,311,31,312,313,314,315,316,3,5,8,9,11,320,322,325,0,1,328,329,330,12,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,350,351,352,364,366,368,377,383,384,32,386,387,33,34,392,393,396,14,15,16,17,405,406,407,408,409,18,411,417,418,422,425,435,441,444,445,446,447,448,449,452,457,463,464,472,473,474,475,476,479,480,481,482,483,484,485,487,488],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[489,490,491],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[94,113,141,145,146,149,150,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,228,229,230,231,232,233,251,375,376,377,378,383,389,413],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[20,21,51,22,492,23,493,110,24,25,125,26,27,28,29,190,191,192,30,31,312,341,360,371,372,374,32,33,34,391],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[35,20,21,39,40,42,51,52,53,54,55,56,57,58,59,93,94,22,98,99,100,102,103,105,106,107,108,109,112,113,121,122,24,123,124,25,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,26,27,181,182,28,29,183,184,185,186,187,188,189,194,195,206,207,208,209,211,213,214,216,219,221,222,223,226,228,229,230,231,232,233,238,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,279,287,288,289,291,292,295,301,308,309,310,311,31,312,313,314,315,316,317,318,2,3,4,5,6,7,8,9,11,320,321,322,323,324,325,326,327,0,1,328,330,12,13,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,354,355,356,357,358,364,365,366,368,372,374,375,376,377,378,379,380,382,383,384,385,32,386,387,388,389,390,33,34,391,392,393,396,397,398,400,401,402,403,14,15,16,17,404,405,406,407,408,409,18,19,410,411,412,413,414,415,416,417,418,422,425,435,441,444,445,446,447,448,449,452,455,457,463,464,472,473,474,475,476,477,477,478,478,479,480,481,482,483,484,485,487,488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[197],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[494,495,24,26,496,497],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[35,20,21,22,116,119,24,123,25,125,152,156,157,180,26,27,28,29,201,205,279,301,310,31,312,385,32,33,34,470],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:178","failures":[368],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[498,364,456,457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[499,314,315,316],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[193],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","bridgeMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[250,287,289,291,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[314,315,316],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[499,314,315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":179,"org.easymock.tests2.UsageTest.argumentsOrdered":34,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":342,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":70,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":387,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":476,"org.easymock.tests2.DelegateToTest.testReturnException":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":229,"org.easymock.tests.MockingTest.testPartialClassMocking":39,"org.easymock.tests.MockClassControlTest.testToString":239,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":399,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":425,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":159,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":464,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":147,"org.easymock.tests2.UsageTest.wrongArguments":32,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":208,"org.easymock.samples.ExampleTest.answerVsDelegate":481,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":203,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":44,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":447,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":244,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":341,"org.easymock.tests2.CaptureTest.testPrimitive":17,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":151,"org.easymock.tests.UsageTest.moreThanOneArgument":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":178,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":135,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":46,"org.easymock.tests.UsageTest.argumentsOrdered":29,"org.easymock.tests.UsageVarargTest.varargIntAccepted":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":128,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":284,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":132,"org.easymock.tests.ReplayStateInvalidUsageTest.times":218,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":301,"org.easymock.tests2.DependencyTest.testClassMocking":461,"org.easymock.tests2.AnswerTest.answer":393,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":357,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":200,"org.easymock.tests2.UsageTest.strictResetToDefault":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":455,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":134,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":336,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":50,"org.easymock.tests2.DelegateToTest.testDelegate":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":174,"org.easymock.tests.LimitationsTest.mockFinalMethod":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":59,"org.easymock.tests2.DependencyTest.testClassMockingSupport":462,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":156,"org.easymock.tests2.CaptureTest.testCapture1_2446744":404,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":172,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":355,"org.easymock.tests.UsageThrowableTest.throwError":139,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":212,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":202,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":110,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":443,"org.easymock.samples.PartialClassMockTest.testGetArea":479,"org.easymock.tests.MockingTest.testInterfaceMocking":41,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":430,"org.easymock.tests2.UsageTest.niceToStrict":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":160,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":120,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":60,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":364,"org.easymock.tests2.MockBuilderTest.testCreateMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":438,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":304,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":496,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":168,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":337,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":236,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":206,"org.easymock.tests.UsageOverloadedMethodTest.overloading":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":251,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":323,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":265,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":322,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":409,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":101,"org.easymock.tests2.EasyMockSupportClassTest.testAll":422,"org.easymock.tests.MockClassControlTest.testEquals":243,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":195,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":176,"org.easymock.tests2.CaptureTest.testCaptureAll":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":356,"org.easymock.tests.MockNameTest.defaultName":152,"org.easymock.tests2.UsageConstraintsTest.testMatches":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":136,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":210,"org.easymock.samples.ExampleTest.voteForRemovals":485,"org.easymock.tests.UsageVarargTest.allKinds":109,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":35,"org.easymock.samples.BasicClassMockTest.testPrintContent":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":58,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":145,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":281,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":290,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":91,"org.easymock.tests2.UsageConstraintsTest.greaterThan":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":52,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":458,"org.easymock.samples.ExampleTest.voteForRemoval":482,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":92,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":459,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":415,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":204,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":450,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":138,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":383,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":67,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":334,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":228,"org.easymock.tests2.CaptureTest.testCaptureFirst":411,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":335,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":392,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":30,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":261,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":417,"org.easymock.tests2.CaptureTest.testCapture2_2446744":410,"org.easymock.tests2.UsageTest.moreThanOneArgument":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":78,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":372,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":108,"org.easymock.tests.GenericTest.testBridgedEquals":197,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":191,"org.easymock.tests.UsageExpectAndReturnTest.longType":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":55,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":332,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":177,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":114,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":133,"org.easymock.tests.UsageCallCountTest.tooManyCalls":192,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":262,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":164,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":144,"org.easymock.tests.MockingTest.testNiceClassMocking":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":346,"org.easymock.tests.MockingTest.testClassMocking":37,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":498,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":185,"org.easymock.tests2.UsageConstraintsTest.testContains":321,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":377,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":113,"org.easymock.tests.MockTypeTest.fromEasyMockClass":201,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":121,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":382,"org.easymock.tests.UsageExpectAndReturnTest.object":264,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":452,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":340,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":103,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":118,"org.easymock.tests.UsageTest.exactCallCountByLastCall":183,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":65,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":47,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":293,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":270,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":250,"org.easymock.tests.MockClassControlTest.testHashCode":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":275,"org.easymock.tests2.EasyMockSupportTest.testVerify":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":432,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":48,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":235,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":248,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":492,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":354,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":379,"org.easymock.tests.UsageVarargTest.varargCharAccepted":102,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":84,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":83,"org.easymock.tests2.UsageTest.openCallCountByLastCall":388,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":489,"org.easymock.tests.DefaultClassInstantiatorTest.object":85,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":234,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":116,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":433,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":166,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":274,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":456,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":165,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":271,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":441,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":240,"org.easymock.tests2.UsageTest.resumeIfFailure":391,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":198,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":231,"org.easymock.tests2.StubTest.stubWithReturnValue":413,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":367,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":263,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":330,"org.easymock.tests2.SerializationTest.testAllMockedMethod":316,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":76,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":500,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":497,"org.easymock.samples.SupportTest.voteForRemovals":473,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":171,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":499,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":82,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":394,"org.easymock.tests.UsageExpectAndThrowTest.object":169,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":247,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":1,"org.easymock.tests2.DelegateToTest.testWrongClass":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":222,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":223,"org.easymock.samples.ConstructorCalledMockTest.testTax":477,"org.easymock.tests.UsageStrictMockTest.range":25,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":470,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":170,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":419,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":207,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":494,"org.easymock.tests2.CaptureTest.testCaptureNone":408,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":97,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":493,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests.UsageVarargTest.varargByteAccepted":107,"org.easymock.tests2.ThreadingTest.testThreadSafe":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":436,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":189,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":474,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":119,"org.easymock.tests2.CaptureTest.testCapture_2617107":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":158,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":80,"org.easymock.tests2.UsageConstraintsTest.any":11,"org.easymock.tests2.StubTest.stub":412,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":217,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":155,"org.easymock.tests.UsageExpectAndThrowTest.longType":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":230,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":89,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":216,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":311,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":279,"org.easymock.tests2.SerializationTest.testClass":314,"org.easymock.tests.LimitationsTest.mockNativeMethod":226,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":273,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":298,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":313,"org.easymock.tests2.NameTest.nameForMocksControl":403,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":300,"org.easymock.tests2.MockedExceptionTest.testMockedException":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":424,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":163,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":42,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":381,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":444,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":368,"org.easymock.tests.MockingTest.testNicePartialClassMocking":40,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":449,"org.easymock.tests2.CaptureTest.testCaptureLast":407,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":296,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":157,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":352,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":328,"org.easymock.tests.MockingTest.testTwoMocks":38,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":167,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":13,"org.easymock.samples.ExampleTest.removeNonExistingDocument":486,"org.easymock.tests.UsageStrictMockTest.differentMethods":125,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":214,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":276,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":87,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":416,"org.easymock.tests2.MockBuilderTest.testCreateMockString":374,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":426,"org.easymock.tests.UsageExpectAndThrowTest.floatType":161,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":396,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":294,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":435,"org.easymock.samples.ExampleTest.voteAgainstRemoval":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":71,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":95,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":457,"org.easymock.tests.LimitationsTest.privateConstructor":225,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":146,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":375,"org.easymock.tests2.UsageTest.defaultResetToNice":390,"org.easymock.samples.ExampleTest.voteAgainstRemovals":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":269,"org.easymock.tests.UsageVarargTest.differentLength":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":297,"org.easymock.tests2.CallbackTest.callback":295,"org.easymock.tests2.UsageConstraintsTest.equals":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":453,"org.easymock.tests.UsageTest.openCallCountByLastCall":181,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":149,"org.easymock.tests.UsageCallCountTest.tooFewCalls":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":209,"org.easymock.tests.UsageThrowableTest.throwCheckedException":143,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":495,"org.easymock.tests.MockingTest.testStrictClassMocking":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":94,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":302,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":347,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":350,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":398,"org.easymock.tests.ObjectMethodsTest.testHashCode":117,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":418,"org.easymock.tests2.NameTest.nameForNiceMock":402,"org.easymock.tests2.DependencyTest.testInterfaceMocking":463,"org.easymock.samples.ExampleTest.addDocument":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":442,"org.easymock.tests2.DelegateToTest.testStubDelegate":288,"org.easymock.tests2.AnswerTest.stubAnswer":397,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":123,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":369,"org.easymock.tests.UsageVarargTest.varargLongAccepted":106,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":69,"org.easymock.tests.UsageExpectAndReturnTest.floatType":256,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":292,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":478,"org.easymock.tests.UsageThrowableTest.noUpperLimit":140,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":283,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":327,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":318,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":465,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":405,"org.easymock.tests2.SerializationTest.test":315,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":86,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":255,"org.easymock.samples.SupportTest.addDocument":472,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":349,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":427,"org.easymock.tests.GenericTest.testPackageScope":194,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":64,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":282,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":43,"org.easymock.tests2.NameTest.nameForMock":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":266,"org.easymock.tests2.UsageStrictMockTest.differentMethods":312,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":373,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":454,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":173,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":115,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":54,"org.easymock.tests2.MockedExceptionTest.testRealException":378,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":205,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":73,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":148,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":221,"org.easymock.tests2.NameTest.nameForStrictMock":401,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":490,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":380,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":469,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":360,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests2.UsageConstraintsTest.lessThan":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":68,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":431,"org.easymock.tests2.CaptureTest.testCaptureRightOne":18,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":51,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":445,"org.easymock.tests.UsageTest.wrongArguments":27,"org.easymock.tests2.MockBuilderTest.testWithConstructor":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":428,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":267,"org.easymock.tests.UsageVarargTest.varargShortAccepted":105,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":90,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":190,"org.easymock.tests2.UsageConstraintsTest.cmpTo":320,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":63,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":389,"org.easymock.tests2.CaptureTest.testCaptureFromStub":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":211,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":361,"org.easymock.tests.UsageTest.unexpectedCallWithArray":26,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":268,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":124,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.samples.ExampleTest.addAndChangeDocument":487,"org.easymock.tests.UsageStrictMockTest.testVerify":127,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":488,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":56,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":130,"org.easymock.tests.LimitationsTest.abstractClass":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":131,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":338}}]
