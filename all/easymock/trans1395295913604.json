[{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[0],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[16,17,18,19,4,20,6,7,10,11,21,22,23,24],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[35,37,44,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[56],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[57,58,59,60,61,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[63,64,65],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[35,37,44,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[35,36,37,38,44,45,49,50,66,51,67,52,53,68,54,69,55,70,56,71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[35,37,44,49,50,51,52,53,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[72],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[35,37,44,49,53],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:61","failures":[74,75,35,36,37,38,39,40,41,42,76,43,44,45,46,47,77,78,79,80,49,50,66,51,67,52,53,68,54,69,81,82,83,84,85,86,87,88,55,70,89,90,91,56,71,92,3,93,4,5,94,95,96,97,98,99,100,101,22,102,103,104,105,106,107,108,109],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[110,57,111,112,113,16,114,17,115,116,18,19,117,118,119,120,121,122,49,86,123,124,4,125,20,126,6,7,10,11,12,127,21,22,23,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[128],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[130,131,132,133,134,135,59,136,137,138,139,140,141,142,34,143,144,145],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[146,146,147,147,130,148,149,150,110,151,152,153,131,74,129,57,58,111,154,132,133,134,135,59,136,137,138,139,140,141,142,60,155,61,156,157,158,159,160,161,162,34,163,164,165,166,167,168,169,170,171,143,144,172,173,174,175,145,176],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[146,146,147,147,130,177,148,149,178,179,180,181,182,183,184,185,186,187,188,150,110,189,151,152,153,131,190,74,191,192,129,57,58,111,193,194,195,196,154,197,112,198,75,113,16,199,200,201,202,203,204,205,35,36,37,38,39,40,41,42,76,43,44,45,46,47,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,114,222,223,17,115,116,224,225,226,18,19,227,117,228,118,229,230,231,119,120,232,233,121,234,235,236,132,134,135,237,59,136,137,138,238,139,140,142,156,33,157,158,159,160,239,161,162,240,241,242,243,244,245,246,247,248,249,34,250,163,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,164,266,267,165,268,269,270,271,272,273,274,275,276,166,277,278,279,280,281,167,282,283,122,284,285,286,287,72,288,289,290,291,292,293,78,294,79,80,49,50,128,66,51,67,52,53,68,54,69,81,82,83,84,85,86,87,88,55,70,89,90,91,56,71,92,295,296,297,298,3,73,93,299,300,301,302,303,304,123,305,306,168,169,170,307,171,308,309,310,124,311,4,5,125,20,312,313,314,94,95,96,97,98,99,100,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,126,369,6,7,8,9,10,11,12,143,370,371,144,372,373,374,375,376,377,378,379,172,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,127,437,438,439,440,101,15,441,442,22,443,23,24,444,445,446,447,448,449,450,451,452,453,454,455,456,102,103,104,105,106,173,457,174,175,145,0,458,459,460,461,462,463,464,107,465,466,467,176,468,469,470,471,472,473,474,108,109,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[1,2,4,6,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[1,2,4,6,13,14],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[63,64,65],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[75,16,199,223,5,20,312,369,495,496,497,498,22,443,23,24],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[138,143],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[146,146,147,147,130,177,148,149,178,179,180,181,182,183,184,185,186,187,188,150,110,189,151,152,153,131,74,129,57,58,111,195,196,154,197,112,198,75,113,16,199,200,202,203,204,205,35,36,37,38,39,40,41,42,76,43,44,45,46,47,211,218,219,220,221,114,222,223,17,115,116,224,225,226,18,19,227,117,228,118,229,230,231,119,120,232,233,121,234,235,236,132,134,59,136,137,138,139,140,142,156,157,158,159,160,239,161,162,244,247,248,249,77,34,250,163,256,164,165,166,167,122,284,285,287,72,288,290,291,292,293,78,294,79,80,49,50,66,51,67,52,53,68,69,81,82,83,84,85,86,87,88,55,70,89,90,91,56,71,92,297,298,3,93,299,301,302,304,123,169,170,171,124,311,4,5,125,20,312,313,314,94,95,96,97,98,99,100,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,126,369,6,7,8,9,10,11,12,375,376,377,378,379,172,380,381,382,383,384,385,386,387,388,389,414,415,416,418,419,420,423,431,432,433,435,436,127,437,438,439,440,101,22,443,23,24,444,445,446,447,448,449,450,451,452,453,454,455,456,102,103,104,105,106,173,174,175,461,462,463,464,107,465,176,108,109,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[75,16,199,202,203,204,205,223,17,18,19,4,5,20,312,369,7,10,11,495,443,23,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[316,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[35,36,37,38,44,45,49,50,66,51,67,52,53,68,54,69,55,70,56,71],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[499],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[26,27,28,29,30,31,32,156],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":50,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":126,"org.easymock.tests2.UsageTest.argumentsOrdered":19,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":400,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":116,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":177,"org.easymock.tests2.DelegateToTest.testReturnException":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":462,"org.easymock.tests.MockingTest.testPartialClassMocking":169,"org.easymock.tests.MockClassControlTest.testToString":380,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":201,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":271,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":349,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":495,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":27,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":68,"org.easymock.tests2.UsageTest.wrongArguments":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":94,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":377,"org.easymock.samples.ExampleTest.answerVsDelegate":179,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":144,"org.easymock.tests2.UsageConstraintsTest.testNull":51,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":151,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":385,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":121,"org.easymock.tests2.CaptureTest.testPrimitive":38,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":368,"org.easymock.tests.UsageTest.moreThanOneArgument":369,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":454,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":336,"org.easymock.tests.UsageVarargTest.varargIntAccepted":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":102,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":261,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":106,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":211,"org.easymock.tests.ReplayStateInvalidUsageTest.times":323,"org.easymock.tests2.DependencyTest.testClassMocking":295,"org.easymock.tests2.AnswerTest.answer":244,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":407,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":221,"org.easymock.tests2.CaptureTest.testAnd":35,"org.easymock.tests2.UsageTest.strictResetToDefault":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":453,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":231,"org.easymock.tests2.DelegateToTest.testDelegate":290,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":364,"org.easymock.tests.LimitationsTest.mockFinalMethod":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":348,"org.easymock.tests2.DependencyTest.testClassMockingSupport":296,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":341,"org.easymock.tests2.CaptureTest.testCapture1_2446744":39,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":362,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":219,"org.easymock.tests.UsageThrowableTest.throwError":444,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":317,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":371,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":283,"org.easymock.samples.PartialClassMockTest.testGetArea":130,"org.easymock.tests.MockingTest.testInterfaceMocking":307,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":470,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":422,"org.easymock.tests2.UsageTest.niceToStrict":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":65,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":59,"org.easymock.tests2.MockBuilderTest.testCreateMock":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":214,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":358,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":119,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":442,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":375,"org.easymock.tests.UsageOverloadedMethodTest.overloading":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":281,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":486,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":414,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":83,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":43,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":434,"org.easymock.tests.MockClassControlTest.testEquals":384,"org.easymock.tests2.EasyMockSupportClassTest.testAll":164,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":366,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":60,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":346,"org.easymock.tests.MockNameTest.defaultName":430,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":455,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":315,"org.easymock.samples.ExampleTest.voteForRemovals":183,"org.easymock.tests.UsageVarargTest.allKinds":101,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":443,"org.easymock.samples.BasicClassMockTest.testPrintContent":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":347,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":450,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":258,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":32,"org.easymock.tests2.UsageConstraintsTest.greaterThan":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":111,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":429,"org.easymock.samples.ExampleTest.voteForRemoval":180,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":193,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":292,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":499,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":131,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":173,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":229,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":461,"org.easymock.tests2.CaptureTest.testCaptureFirst":47,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":230,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":117,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":482,"org.easymock.tests2.CaptureTest.testCapture2_2446744":46,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":78,"org.easymock.tests2.UsageTest.moreThanOneArgument":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":408,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":140,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":440,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":334,"org.easymock.tests.UsageExpectAndReturnTest.longType":478,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":344,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":367,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":90,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":374,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":365,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":452,"org.easymock.tests.UsageCallCountTest.tooManyCalls":335,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":483,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":449,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":158,"org.easymock.tests.MockingTest.testNiceClassMocking":310,"org.easymock.tests.MockingTest.testClassMocking":306,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":133,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":328,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":154,"org.easymock.tests2.UsageConstraintsTest.testFind":66,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":416,"org.easymock.tests.MockTypeTest.fromEasyMockClass":370,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":124,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":93,"org.easymock.tests.UsageExpectAndReturnTest.object":485,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":233,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":436,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":28,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":420,"org.easymock.tests.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":491,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":431,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":252,"org.easymock.tests.MockClassControlTest.testHashCode":383,"org.easymock.tests2.EasyMockSupportTest.testVerify":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":274,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":441,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":218,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":77,"org.easymock.tests.UsageVarargTest.varargCharAccepted":435,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastCall":224,"org.easymock.tests.DefaultClassInstantiatorTest.object":423,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":63,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":235,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":15,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":418,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":447,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":209,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":251,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":57,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":382,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":355,"org.easymock.tests.CapturesMatcherTest.test":48,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":492,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":167,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":381,"org.easymock.tests2.UsageTest.resumeIfFailure":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":464,"org.easymock.tests2.StubTest.stubWithReturnValue":285,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":484,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":91,"org.easymock.tests2.SerializationTest.testAllMockedMethod":163,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":406,"org.easymock.samples.SupportTest.voteForRemovals":187,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":457,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":361,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":412,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":245,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":460,"org.easymock.tests.UsageExpectAndThrowTest.object":359,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":70,"org.easymock.tests2.DelegateToTest.testWrongClass":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":99,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":100,"org.easymock.samples.ConstructorCalledMockTest.testTax":146,"org.easymock.tests.UsageStrictMockTest.range":20,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":242,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":360,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":137,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":263,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":376,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":13,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":471,"org.easymock.tests2.CaptureTest.testCaptureNone":76,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":439,"org.easymock.tests2.ThreadingTest.testThreadSafe":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":277,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":332,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":148,"org.easymock.tests2.CaptureTest.testCapture_2617107":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":410,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":97,"org.easymock.tests2.UsageConstraintsTest.any":69,"org.easymock.tests2.StubTest.stub":284,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndThrowTest.longType":352,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":427,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":321,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":113,"org.easymock.tests2.SerializationTest.testClass":34,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":256,"org.easymock.tests.LimitationsTest.mockNativeMethod":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":494,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":61,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":208,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests2.NameTest.nameForMocksControl":205,"org.easymock.tests2.MockedExceptionTest.testMockedException":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":267,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":171,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":73,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":353,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":138,"org.easymock.tests.MockingTest.testNicePartialClassMocking":170,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":153,"org.easymock.tests2.CaptureTest.testCaptureLast":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":26,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":206,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":342,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":162,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":89,"org.easymock.tests.MockingTest.testTwoMocks":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":475,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":357,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":71,"org.easymock.samples.ExampleTest.removeNonExistingDocument":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":213,"org.easymock.tests.UsageStrictMockTest.differentMethods":312,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":253,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":425,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":293,"org.easymock.tests2.MockBuilderTest.testCreateMockString":142,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":268,"org.easymock.tests.UsageExpectAndThrowTest.floatType":351,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":247,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":166,"org.easymock.samples.ExampleTest.voteAgainstRemoval":181,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":58,"org.easymock.tests.LimitationsTest.privateConstructor":467,"org.easymock.tests2.UsageConstraintsTest.testNotNull":56,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":451,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":195,"org.easymock.tests2.UsageTest.defaultResetToNice":226,"org.easymock.samples.ExampleTest.voteAgainstRemovals":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":402,"org.easymock.tests.UsageVarargTest.differentLength":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":207,"org.easymock.tests2.CallbackTest.callback":122,"org.easymock.tests2.UsageConstraintsTest.equals":128,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":191,"org.easymock.tests.UsageTest.openCallCountByLastCall":8,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":96,"org.easymock.tests.UsageCallCountTest.tooFewCalls":330,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":378,"org.easymock.tests.UsageThrowableTest.throwCheckedException":448,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":14,"org.easymock.tests.MockingTest.testStrictClassMocking":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":109,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":212,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":239,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":249,"org.easymock.tests.ObjectMethodsTest.testHashCode":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":30,"org.easymock.tests2.NameTest.nameForNiceMock":204,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":294,"org.easymock.tests2.DependencyTest.testInterfaceMocking":297,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":29,"org.easymock.samples.ExampleTest.addDocument":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":278,"org.easymock.tests2.DelegateToTest.testStubDelegate":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":282,"org.easymock.tests2.AnswerTest.stubAnswer":248,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":5,"org.easymock.tests.UsageVarargTest.varargLongAccepted":438,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":493,"org.easymock.tests.UsageExpectAndReturnTest.floatType":477,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":156,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":147,"org.easymock.tests.UsageThrowableTest.noUpperLimit":445,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":260,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":80,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":240,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":40,"org.easymock.tests2.SerializationTest.test":250,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":424,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":476,"org.easymock.tests2.UsageConstraintsTest.testSame":67,"org.easymock.samples.SupportTest.addDocument":186,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":269,"org.easymock.tests.GenericTest.testPackageScope":174,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":259,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":308,"org.easymock.tests2.NameTest.nameForMock":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":487,"org.easymock.tests2.UsageStrictMockTest.differentMethods":199,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":479,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":363,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":389,"org.easymock.tests2.MockedExceptionTest.testRealException":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":403,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":95,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":326,"org.easymock.tests2.NameTest.nameForStrictMock":203,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":237,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":3,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":241,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":496,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":426,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":55,"org.easymock.tests.ErrorMessageTest.testGetters":497,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":134,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":118,"org.easymock.tests2.CaptureTest.testCaptureRightOne":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":273,"org.easymock.tests2.UsageConstraintsTest.testOr":52,"org.easymock.tests.UsageRangeTest.combination":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":110,"org.easymock.tests.UsageTest.wrongArguments":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":270,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":391,"org.easymock.tests.UsageVarargTest.varargShortAccepted":437,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":428,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":333,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":393,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":225,"org.easymock.tests2.CaptureTest.testCaptureFromStub":45,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":316,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":135,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":331,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":489,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":125,"org.easymock.tests2.UsageConstraintsTest.constraints":49,"org.easymock.samples.ExampleTest.addAndChangeDocument":185,"org.easymock.tests.UsageStrictMockTest.testVerify":314,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":188,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":345,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":41,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":104,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":481,"org.easymock.tests.LimitationsTest.abstractClass":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":105,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":498,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":120}}]
