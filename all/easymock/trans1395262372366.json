[{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[14,15,16,17],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[18,19],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[14,15,16,17],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[21,22,23],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[2,36,37,38,39,10,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"minimum"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[41,42,43,44,45,46],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[47,48,0,1,49,50,2,36,51,52,53,5,54,55,6,7,56,57,58,59,39,8,9,60,61,10,40,62,63,64,11,65,66,12,13,67,68,69,70,71,72,73,74,75,26,76,77,78,79,80,81,30,82,83,35,84],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[85,86,87,88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"this","value":"delegateTo","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[1,90,91,4,92,93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[94,95,96,97,98,99,58,100,62,101,102,103,104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[49,36,105,106,53,107,108,109,110,111,112,39,8,9,60,40,113,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[21,114,115,22,116,117,118,28,119,23,120,121,122,123,124,125],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[126,127,73,128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,129,8,9,10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[130],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.RecordState:99","failures":[131,132,133,134,47,48,135,49,2,36,136,51,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,52,53,54,55,56,162,163,164,165,166,107,167,168,169,170,171,172,173,59,174,175,176,177,39,9,178,179,180,181,182,183,184,185,186,60,10,40,62,187,188,189,190,191,192,193,63,194,64,195,65,66,196,197,67,103,198,199,200,201,202,203,204,205,206,19,207,208,209,210,211,212,213,214,215,216,217,21,218,219,220,73,74,25,75,221,76,79,80,222,27,223,81,224,225,226,227,228,229,230,231,232,233,234,235,236,118,237,28,29,238,30,239,31,32,119,82,23,240,241,120,242,83,121,243,34,122,123,124,35,244,125,15,16],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[117,118,121,124],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[245,246,247,248,249,250,251,203,252,253,254,255,15],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":99,"org.easymock.tests2.StubTest.stubWithReturnValue":62,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":253,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":124,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":151,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests2.DelegateToTest.testReturnException":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":97,"org.easymock.tests.MockingTest.testPartialClassMocking":167,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":93,"org.easymock.samples.SupportTest.voteForRemovals":183,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":14,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":209,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":127,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":122,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":246,"org.easymock.tests2.DelegateToTest.testWrongClass":88,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":119,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":134,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.samples.ExampleTest.answerVsDelegate":86,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":187,"org.easymock.tests2.UsageConstraintsTest.testNull":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":111,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":233,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":206,"org.easymock.tests2.CaptureTest.testPrimitive":221,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":48,"org.easymock.tests.UsageTest.moreThanOneArgument":53,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":214,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":90,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests2.ThreadingTest.testThreadSafe":198,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests2.CaptureTest.testCapture_2617107":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":106,"org.easymock.tests2.UsageConstraintsTest.any":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":98,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":61,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":236,"org.easymock.tests.LimitationsTest.mockNativeMethod":135,"org.easymock.tests2.AnswerTest.answer":72,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":161,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":33,"org.easymock.tests2.CaptureTest.testAnd":25,"org.easymock.tests2.UsageTest.strictResetToDefault":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":113,"org.easymock.tests2.NameTest.nameForMocksControl":71,"org.easymock.tests2.MockedExceptionTest.testMockedException":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":176,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests2.DelegateToTest.testDelegate":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":108,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":169,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":212,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":19,"org.easymock.tests.MockingTest.testNicePartialClassMocking":168,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":245,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests2.CompareToTest.testCompareEqual":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":58,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":193,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":32,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":123,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":109,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":244,"org.easymock.tests.UsageThrowableTest.throwError":136,"org.easymock.tests.UsageStrictMockTest.differentMethods":36,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":43,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":200,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":83,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":210,"org.easymock.samples.PartialClassMockTest.testGetArea":182,"org.easymock.tests2.CompareToTest.testLessOrEqual":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":163,"org.easymock.samples.ExampleTest.voteAgainstRemoval":180,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":219,"org.easymock.tests2.UsageTest.niceToStrict":195,"org.easymock.tests2.UsageConstraintsTest.testNotNull":35,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":101,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":141,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":205,"org.easymock.tests2.UsageTest.defaultResetToNice":196,"org.easymock.samples.ExampleTest.voteAgainstRemovals":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":157,"org.easymock.tests2.CallbackTest.callback":84,"org.easymock.tests.UsageTest.openCallCountByLastCall":54,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":110,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":229,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":95,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":153,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":190,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":241,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":222,"org.easymock.tests.UsageThrowableTest.throwCheckedException":138,"org.easymock.tests2.EasyMockSupportClassTest.testAll":208,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":91,"org.easymock.tests2.CaptureTest.testCaptureAll":75,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":192,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":94,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":189,"org.easymock.tests2.UsageConstraintsTest.testMatches":242,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":20,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":191,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":128,"org.easymock.tests2.CompareToTest.testGreateOrEqual":116,"org.easymock.samples.ExampleTest.voteForRemovals":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":250,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":202,"org.easymock.tests2.NameTest.nameForNiceMock":70,"org.easymock.tests.UsageVarargTest.allKinds":57,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":39,"org.easymock.tests2.DependencyTest.testInterfaceMocking":185,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":248,"org.easymock.tests2.DelegateToTest.testStubDelegate":74,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":140,"org.easymock.tests2.AnswerTest.stubAnswer":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":100,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":251,"org.easymock.tests2.UsageConstraintsTest.greaterThan":121,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":175,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":220,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":105,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":46,"org.easymock.samples.ExampleTest.voteForRemoval":179,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":199,"org.easymock.tests.UsageExpectAndReturnTest.floatType":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":160,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":203,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":243,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":237,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":77,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":226,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":42,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":51,"org.easymock.tests2.UsageConstraintsTest.testSame":239,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":96,"org.easymock.tests2.CaptureTest.testCaptureFirst":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":227,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":67,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":149,"org.easymock.tests.GenericTest.testPackageScope":132,"org.easymock.tests2.CaptureTest.testCapture2_2446744":223,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":201,"org.easymock.tests2.UsageTest.moreThanOneArgument":64,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":207,"org.easymock.tests2.NameTest.nameForMock":68,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":130,"org.easymock.tests.UsageExpectAndReturnTest.longType":145,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":154,"org.easymock.tests2.UsageStrictMockTest.differentMethods":40,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":146,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":112,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":177,"org.easymock.tests2.MockedExceptionTest.testRealException":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":150,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":255,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":139,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":188,"org.easymock.tests2.UsageConstraintsTest.testContains":240,"org.easymock.tests2.NameTest.nameForStrictMock":69,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":103,"org.easymock.tests2.UsageConstraintsTest.testFind":238,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":216,"org.easymock.tests.UsageExpectAndReturnTest.object":152,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":34,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":204,"org.easymock.tests2.UsageStrictMockTest.range":10,"org.easymock.tests2.UsageConstraintsTest.lessThan":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":247,"org.easymock.tests.UsageTest.exactCallCountByLastCall":56,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":249,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":225,"org.easymock.tests2.CaptureTest.testCaptureRightOne":27,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":37,"org.easymock.tests2.UsageConstraintsTest.testOr":31,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":252,"org.easymock.tests.UsageRangeTest.combination":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":158,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":85,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":155,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":38,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":45,"org.easymock.tests2.UsageConstraintsTest.cmpTo":23,"org.easymock.tests2.CompareToTest.testLessThan":114,"org.easymock.tests2.UsageTest.openCallCountByLastCall":65,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":66,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":235,"org.easymock.tests.DefaultClassInstantiatorTest.object":41,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":156,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":218,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":50,"org.easymock.tests2.UsageConstraintsTest.constraints":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":211,"org.easymock.tests2.CompareToTest.testGreateThan":115,"org.easymock.tests2.UsageTest.resumeIfFailure":197,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":148,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":230}}]
