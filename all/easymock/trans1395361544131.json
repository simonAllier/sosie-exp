[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[1,2,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","sourceCode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[469],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[160,164],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[372,391,394,470],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[369],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[1,2,2,3,3,4,5,6,7,8,9,10,11,12,13,15,16,17,21,22,23,25,26,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,59,60,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,101,102,103,104,105,106,107,109,111,112,114,117,119,120,121,122,123,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,152,153,154,155,156,161,162,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,192,193,194,196,240,241,242,243,244,245,246,247,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,312,313,314,315,316,317,318,319,320,321,325,328,338,344,347,351,352,353,354,357,358,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,404,405,406,408,411,413,422,433,434,435,436,437,438,439,440,441,442,443,444,445,446,452,460,461,462,464,465,466,467,468],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[471,472,473,35,36,37,39,47,48,89,91,92,125,128,129,130,194,285,298,300,301,474,475,476,477,478,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[480,473,36,37,40,41,44,45,88,91,130,194,286,292,293,300],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"message","key":"message"}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[27,33,35,36,37,38,39,40,41,44,45,46,47,48,50,51,52,53,54,55,86,88,89,90,91,92,93,125,128,129,130,151,153,154,157,158,159,194,197,198,199,235,238,239,258,268,270,272,273,275,276,282,283,285,286,287,288,292,293,294,295,296,298,299,300,301,302,305,306,307,308,347,348,349,353,354,356,357,358,361,362,365,366,374,390,402,411,414,416,422,423,452,453],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[319,320,321],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[27,33,35,36,37,38,39,40,41,44,45,46,47,48,50,51,52,53,54,55,86,88,89,90,91,92,93,125,128,129,130,151,153,154,157,158,159,194,197,198,199,235,238,239,258,268,270,272,273,275,276,282,283,285,286,287,288,292,293,294,295,296,298,299,300,301,302,305,306,307,308,347,348,349,353,354,356,357,358,361,362,365,366,374,390,402,411,414,416,422,423,452,453],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[213,459,461],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[6,9,35,36,38,39,42,43,66,67,70,72,73,74,75,77,78,79,80,82,83,84,85,89,91,92,101,103,104,107,136,138,139,140,141,142,166,167,168,169,172,174,175,176,177,179,180,181,182,184,185,186,187,192,193,240,243,244,245,246,247,258,259,260,261,262,264,266,267,268,269,272,273,276,278,282,284,285,287,289,290,294,298,300,301,313,314,351,367,368,372,373,374,375,377,378,379,380,381,382,384,386,387,388,389,390,391,392,393,394,395,397,398,399,400,405,413,434,436,437,440,441,442,443,446,461,464],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[2,3,6,328,338,413],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[209,310,313,314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[2,2,3,3,5,6,8,10,11,13,34,35,37,38,39,42,43,46,47,48,59,60,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,91,92,96,97,99,101,103,104,107,129,138,139,140,141,142,161,163,165,166,167,190,192,193,219,225,240,242,243,244,245,246,247,253,254,255,256,257,258,259,260,261,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,283,284,285,287,289,290,291,294,295,298,300,301,303,309,313,319,320,325,328,338,344,348,351,353,354,357,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,404,405,406,408,412,413,414,422,433,434,436,437,440,441,442,443,444,445,446,452,461,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[205,463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[402,411],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[5,6,8,10,11,13,35,37,38,39,42,43,46,59,60,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,91,92,101,102,103,104,107,108,129,138,139,140,141,142,143,161,165,166,167,190,192,193,194,240,242,243,244,245,246,247,258,259,260,261,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,283,284,285,287,289,290,291,294,295,298,300,301,303,309,313,319,320,325,328,338,344,348,351,353,354,357,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,408,412,413,414,422,433,434,435,436,437,440,441,442,443,445,446,452,461,467],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[402],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[481,482,483,484,35,36,37,39,89,91,92,194,285,298,300,301],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[213,459,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":375,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.UsageTest.argumentsOrdered":293,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":213,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":288,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":7,"org.easymock.tests2.DelegateToTest.testReturnException":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":133,"org.easymock.tests.MockingTest.testPartialClassMocking":59,"org.easymock.tests.MockClassControlTest.testToString":197,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":99,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":168,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":328,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":481,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":281,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":382,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":103,"org.easymock.tests2.UsageTest.wrongArguments":286,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":122,"org.easymock.samples.ExampleTest.answerVsDelegate":9,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":53,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":64,"org.easymock.tests2.UsageConstraintsTest.testNull":378,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":404,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":202,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":276,"org.easymock.tests2.CaptureTest.testPrimitive":436,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":187,"org.easymock.tests.UsageTest.moreThanOneArgument":39,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":255,"org.easymock.tests.UsageTest.argumentsOrdered":45,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":248,"org.easymock.tests.UsageVarargTest.varargIntAccepted":23,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":218,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":138,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":427,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":142,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":452,"org.easymock.tests.ReplayStateInvalidUsageTest.times":116,"org.easymock.tests2.AnswerTest.answer":309,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":318,"org.easymock.tests2.CaptureTest.testAnd":433,"org.easymock.tests2.UsageTest.strictResetToDefault":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":254,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":271,"org.easymock.tests2.DelegateToTest.testDelegate":464,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":183,"org.easymock.tests.LimitationsTest.mockFinalMethod":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":147,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":47,"org.easymock.tests2.CaptureTest.testCapture1_2446744":437,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":181,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":316,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":110,"org.easymock.tests.UsageThrowableTest.throwError":240,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":52,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":346,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":111,"org.easymock.tests.MockingTest.testInterfaceMocking":61,"org.easymock.tests2.CompareToTest.testLessOrEqual":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":169,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":239,"org.easymock.tests2.UsageTest.niceToStrict":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":203,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":351,"org.easymock.tests2.MockBuilderTest.testCreateMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":341,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":455,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":475,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":177,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":120,"org.easymock.tests.UsageOverloadedMethodTest.overloading":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":343,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":388,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":127,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":77,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":387,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":442,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":24,"org.easymock.tests.MockClassControlTest.testEquals":201,"org.easymock.tests2.EasyMockSupportClassTest.testAll":325,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":185,"org.easymock.tests2.CaptureTest.testCaptureAll":434,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":317,"org.easymock.tests.MockNameTest.defaultName":33,"org.easymock.tests2.UsageConstraintsTest.testMatches":389,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":256,"org.easymock.samples.ExampleTest.voteForRemovals":13,"org.easymock.tests.UsageVarargTest.allKinds":32,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":146,"org.easymock.samples.BasicClassMockTest.testPrintContent":17,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":246,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":296,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":137,"org.easymock.tests2.UsageConstraintsTest.greaterThan":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":326,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":414,"org.easymock.samples.ExampleTest.voteForRemoval":10,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":233,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":415,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":368,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":407,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":131,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":283,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":269,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":132,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":459,"org.easymock.tests2.CaptureTest.testCaptureFirst":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":270,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":295,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":73,"org.easymock.tests2.CaptureTest.testCapture2_2446744":445,"org.easymock.tests2.UsageTest.moreThanOneArgument":285,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":357,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":31,"org.easymock.tests.GenericTest.testBridgedEquals":164,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":158,"org.easymock.tests.UsageExpectAndReturnTest.longType":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":143,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":267,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":186,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":396,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":34,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":253,"org.easymock.tests.UsageCallCountTest.tooManyCalls":159,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":342,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":245,"org.easymock.tests.MockingTest.testNiceClassMocking":65,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":361,"org.easymock.tests.MockingTest.testClassMocking":57,"org.easymock.tests2.UsageConstraintsTest.testContains":386,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":152,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":467,"org.easymock.tests2.UsageConstraintsTest.testFind":377,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":167,"org.easymock.tests.MockTypeTest.fromEasyMockClass":51,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":86,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":264,"org.easymock.tests.UsageExpectAndReturnTest.object":76,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":408,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":275,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":26,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":237,"org.easymock.tests.UsageTest.exactCallCountByLastCall":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":208,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":98,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":304,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":21,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":82,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":126,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":418,"org.easymock.tests.MockClassControlTest.testHashCode":200,"org.easymock.tests2.EasyMockSupportTest.testVerify":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":335,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":250,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":124,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":19,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":480,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":315,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":359,"org.easymock.tests.UsageVarargTest.varargCharAccepted":25,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":226,"org.easymock.tests2.UsageTest.openCallCountByLastCall":289,"org.easymock.tests.DefaultClassInstantiatorTest.object":227,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":18,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":235,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":473,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":417,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":412,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":83,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":148,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":477,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":344,"org.easymock.tests2.UsageTest.resumeIfFailure":294,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":135,"org.easymock.tests2.StubTest.stubWithReturnValue":266,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":75,"org.easymock.tests2.SerializationTest.testAllMockedMethod":321,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":219,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":180,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":225,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":310,"org.easymock.tests.UsageExpectAndThrowTest.object":178,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":100,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":394,"org.easymock.tests2.DelegateToTest.testWrongClass":462,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":192,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":193,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.UsageStrictMockTest.range":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":431,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":179,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":353,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":118,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":121,"org.easymock.tests2.CaptureTest.testCaptureNone":441,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":97,"org.easymock.tests.UsageUnorderedTest.message":194,"org.easymock.tests.UsageVerifyTest.twoReturns":37,"org.easymock.tests.UsageVarargTest.varargByteAccepted":30,"org.easymock.tests2.ThreadingTest.testThreadSafe":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":339,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":156,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":16,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":238,"org.easymock.tests2.CaptureTest.testCapture_2617107":435,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":223,"org.easymock.tests2.UsageConstraintsTest.any":384,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":115,"org.easymock.tests2.StubTest.stub":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":150,"org.easymock.tests.UsageExpectAndThrowTest.longType":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":224,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":231,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":114,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":422,"org.easymock.tests2.SerializationTest.testClass":319,"org.easymock.tests.LimitationsTest.mockNativeMethod":190,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":163,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":85,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":449,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests2.NameTest.nameForMocksControl":308,"org.easymock.tests2.MockedExceptionTest.testMockedException":466,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":327,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":172,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":62,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":263,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":354,"org.easymock.tests.MockingTest.testNicePartialClassMocking":60,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":406,"org.easymock.tests2.CompareToTest.testNotComparable":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":447,"org.easymock.tests2.CaptureTest.testCaptureLast":440,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":48,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":366,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":381,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":395,"org.easymock.tests.MockingTest.testTwoMocks":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":176,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":292,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":399,"org.easymock.samples.ExampleTest.removeNonExistingDocument":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":454,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":112,"org.easymock.tests.UsageStrictMockTest.differentMethods":92,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":419,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":229,"org.easymock.tests2.ConstraintsToStringTest.andToString":478,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":369,"org.easymock.tests2.MockBuilderTest.testCreateMockString":358,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":195,"org.easymock.tests.UsageExpectAndThrowTest.floatType":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":329,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":324,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":312,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":338,"org.easymock.samples.ExampleTest.voteAgainstRemoval":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":214,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":413,"org.easymock.tests.LimitationsTest.privateConstructor":189,"org.easymock.tests2.UsageConstraintsTest.testNotNull":398,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":465,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":247,"org.easymock.tests2.UsageTest.defaultResetToNice":291,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":215,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":448,"org.easymock.tests.UsageVarargTest.differentLength":27,"org.easymock.tests2.CallbackTest.callback":282,"org.easymock.tests2.UsageConstraintsTest.equals":376,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":409,"org.easymock.tests.UsageTest.openCallCountByLastCall":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":372,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":105,"org.easymock.tests.UsageCallCountTest.tooFewCalls":154,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":123,"org.easymock.tests.UsageThrowableTest.throwCheckedException":244,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":471,"org.easymock.tests.MockingTest.testStrictClassMocking":56,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":365,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":362,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":117,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":364,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":314,"org.easymock.tests.ObjectMethodsTest.testHashCode":236,"org.easymock.tests2.NameTest.nameForNiceMock":307,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":371,"org.easymock.tests2.DependencyTest.testInterfaceMocking":280,"org.easymock.samples.ExampleTest.addDocument":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":340,"org.easymock.tests2.DelegateToTest.testStubDelegate":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.AnswerTest.stubAnswer":313,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":89,"org.easymock.tests.UsageVarargTest.varargLongAccepted":29,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":212,"org.easymock.tests.UsageExpectAndReturnTest.floatType":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":303,"org.easymock.tests2.ConstraintsToStringTest.orToString":474,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":426,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":392,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":128,"org.easymock.tests.UsageThrowableTest.noUpperLimit":241,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":373,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":429,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":438,"org.easymock.tests2.SerializationTest.test":320,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":228,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":67,"org.easymock.tests2.UsageConstraintsTest.testSame":379,"org.easymock.samples.SupportTest.addDocument":4,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":330,"org.easymock.tests.GenericTest.testPackageScope":161,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":425,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":63,"org.easymock.tests2.NameTest.nameForMock":305,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":78,"org.easymock.tests2.UsageStrictMockTest.differentMethods":301,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":182,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":261,"org.easymock.tests2.MockedExceptionTest.testRealException":468,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":217,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":216,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":298,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":104,"org.easymock.tests2.NameTest.nameForStrictMock":306,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":350,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":430,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":482,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":393,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":230,"org.easymock.tests.ErrorMessageTest.testGetters":483,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":348,"org.easymock.tests2.UsageStrictMockTest.range":300,"org.easymock.tests2.UsageConstraintsTest.lessThan":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":268,"org.easymock.tests2.CaptureTest.testCaptureRightOne":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":334,"org.easymock.tests2.UsageConstraintsTest.testOr":380,"org.easymock.tests.UsageRangeTest.combination":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":402,"org.easymock.tests.UsageTest.wrongArguments":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":331,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":71,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":204,"org.easymock.tests.UsageVarargTest.varargShortAccepted":28,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":232,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":157,"org.easymock.tests2.UsageConstraintsTest.cmpTo":385,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":206,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":290,"org.easymock.tests2.CaptureTest.testCaptureFromStub":444,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":109,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":349,"org.easymock.tests.UsageTest.unexpectedCallWithArray":40,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":88,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":80,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":90,"org.easymock.tests2.UsageConstraintsTest.constraints":374,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests2.ConstraintsToStringTest.notToString":476,"org.easymock.tests.UsageStrictMockTest.testVerify":94,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":87,"org.easymock.tests2.CompareToTest.testGreateThan":470,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":144,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":140,"org.easymock.tests.LimitationsTest.abstractClass":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":141,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":484,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":273}}]
