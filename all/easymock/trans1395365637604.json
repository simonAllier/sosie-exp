[{"position":"org.easymock.internal.matchers.NotNull:36","failures":[0,1,2,3],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[20,21,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:98","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType()))","type":"CtAssignmentImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,20,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[50,51,52,53,54,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[56,57,58,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[61,62,63,64,65,66,67,6,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[61,98,99,62,100,101,102,103,63,104,64,68,105,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,94,95,96,106,107,108,109,110,97],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[113,114,115,116,117,118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[119,120,61,4,121,122,98,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,99,62,139,140,141,142,143,100,101,102,103,63,104,144,145,146,147,64,148,149,111,150,151,152,153,65,66,154,155,113,156,114,157,158,159,160,161,162,163,164,165,166,167,168,169,115,116,170,171,172,173,174,175,176,177,178,179,180,5,6,7,8,117,181,118,182,183,184,185,186,187,68,188,189,190,191,192,193,105,28,194,195,196,197,198,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,199,200,53,9,201,10,11,202,203,89,204,90,91,92,93,94,95,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,219,220,220,221,222,223,224,225,226,227,228,229,230,231,232,96,233,16,234,32,235,236,106,33,237,238,239,240,241,242,36,37,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,20,258,259,260,39,261,262,263,264,40,265,57,266,267,58,59,268,269,270,271,272,273,107,108,109,110,274,275,45,276,46,47,277,48,49,278,279,280,281,282,283,284,22,285,286,287,288,289,290,291,292,97,293,294,17,295,18,19,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,0,320,1,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[35,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[342,343,344,272],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[330,338],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1976","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:907","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[345,325,326,327],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[33,48],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[62,63,64,153,65,66,6,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,97],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[346,306,312,322],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[50,121,123,124,347,6,7,8,53,10,234,237,238,18],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[348,349,144,350,351,352,353,354,355,356,357,358,359,180,360,361,362,188,189,190,191,363,364,365,366,367,368,369,370,112,210,211,212,371,216,219,219,220,220,228,229,230,372,373,374,34,375,241,376,377,242,35,36,37,378,379,243,380,381,382,244,245,246,247,249,250,251,252,254,255,256,38,257,383,384,20,258,259,260,385,21,386,387,388,389,390,391,392,393,394,261,395,396,262,397,398,399,400,401,402,403,404,405,263,406,407,408,409,410,264,411,412,268,413,107,108,109,325,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod","bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[4,121,123,124,5,6,7,53,9,10,11,12,16,234,237,238,283,284,22,285,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[317],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[414,415],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[6,7,10,15,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":300,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests2.UsageTest.argumentsOrdered":238,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":279,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":235,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":232,"org.easymock.tests2.DelegateToTest.testReturnException":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":101,"org.easymock.tests.MockingTest.testPartialClassMocking":189,"org.easymock.tests.MockClassControlTest.testToString":351,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":152,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":400,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":69,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":262,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":12,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":324,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":137,"org.easymock.tests2.UsageTest.wrongArguments":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":30,"org.easymock.samples.ExampleTest.answerVsDelegate":222,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":349,"org.easymock.tests2.UsageConstraintsTest.testNull":302,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":254,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":278,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":356,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":386,"org.easymock.tests2.CaptureTest.testPrimitive":331,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":139,"org.easymock.tests.UsageTest.moreThanOneArgument":4,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":88,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":183,"org.easymock.tests.UsageTest.argumentsOrdered":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":194,"org.easymock.tests.UsageVarargTest.varargIntAccepted":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":205,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":34,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":209,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":39,"org.easymock.tests2.AnswerTest.answer":265,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":44,"org.easymock.tests2.CaptureTest.testAnd":328,"org.easymock.tests2.UsageTest.strictResetToDefault":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":46,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":198,"org.easymock.tests2.DelegateToTest.testDelegate":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":84,"org.easymock.tests.LimitationsTest.mockFinalMethod":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":27,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":119,"org.easymock.tests2.CaptureTest.testCapture1_2446744":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":42,"org.easymock.tests.UsageThrowableTest.throwError":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":412,"org.easymock.samples.PartialClassMockTest.testGetArea":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":401,"org.easymock.tests2.UsageTest.niceToStrict":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":70,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":357,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":242,"org.easymock.tests2.MockBuilderTest.testCreateMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":408,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":78,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":47,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":170,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":28,"org.easymock.tests.UsageOverloadedMethodTest.overloading":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":405,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":64,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":312,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":186,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":163,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":311,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":337,"org.easymock.tests2.EasyMockSupportClassTest.testAll":261,"org.easymock.tests.MockClassControlTest.testEquals":355,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":211,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":86,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":387,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":25,"org.easymock.tests2.CaptureTest.testCaptureAll":329,"org.easymock.tests2.UsageConstraintsTest.testMatches":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":184,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":192,"org.easymock.samples.ExampleTest.voteForRemovals":226,"org.easymock.tests.UsageVarargTest.allKinds":136,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":26,"org.easymock.samples.BasicClassMockTest.testPrintContent":229,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":94,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":104,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":290,"org.easymock.tests2.UsageConstraintsTest.greaterThan":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":141,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":260,"org.easymock.samples.ExampleTest.voteForRemoval":223,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":370,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":385,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":270,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":38,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":216,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":45,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":100,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":286,"org.easymock.tests2.CaptureTest.testCaptureFirst":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":276,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":159,"org.easymock.tests2.UsageTest.moreThanOneArgument":16,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":272,"org.easymock.tests2.CaptureTest.testCapture2_2446744":340,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":243,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":135,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":175,"org.easymock.tests.UsageExpectAndReturnTest.longType":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":23,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":87,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":381,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":179,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":118,"org.easymock.tests.UsageCallCountTest.tooManyCalls":176,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":93,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":245,"org.easymock.tests.MockingTest.testNiceClassMocking":363,"org.easymock.tests.MockingTest.testClassMocking":362,"org.easymock.tests2.UsageConstraintsTest.testContains":310,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":375,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":109,"org.easymock.tests2.UsageConstraintsTest.testFind":301,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":68,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":3,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":199,"org.easymock.tests.UsageExpectAndReturnTest.object":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":49,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":130,"org.easymock.tests.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":193,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":195,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":413,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":168,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":147,"org.easymock.tests.MockClassControlTest.testHashCode":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":403,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":196,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":145,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":65,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":41,"org.easymock.tests.UsageVarargTest.varargCharAccepted":129,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests2.UsageTest.openCallCountByLastCall":236,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":280,"org.easymock.tests.DefaultClassInstantiatorTest.object":364,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":153,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":404,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":76,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":391,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":91,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":258,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":75,"org.easymock.tests.CapturesMatcherTest.test":414,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":264,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":352,"org.easymock.tests2.UsageTest.resumeIfFailure":239,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":103,"org.easymock.tests2.StubTest.stubWithReturnValue":97,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":161,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":320,"org.easymock.tests2.SerializationTest.testAllMockedMethod":327,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":177,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":55,"org.easymock.samples.SupportTest.voteForRemovals":218,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":81,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":345,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":178,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":57,"org.easymock.tests.UsageExpectAndThrowTest.object":79,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":343,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":318,"org.easymock.tests2.DelegateToTest.testWrongClass":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":117,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":181,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.samples.ConstructorCalledMockTest.testTax":219,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":48,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":244,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":392,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":29,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":215,"org.easymock.tests2.CaptureTest.testCaptureNone":336,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":134,"org.easymock.tests2.ThreadingTest.testThreadSafe":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":406,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":174,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":228,"org.easymock.tests2.CaptureTest.testCapture_2617107":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":62,"org.easymock.tests2.UsageConstraintsTest.any":308,"org.easymock.tests2.StubTest.stub":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":102,"org.easymock.tests.UsageExpectAndThrowTest.longType":72,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":368,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":40,"org.easymock.tests2.SerializationTest.testClass":325,"org.easymock.tests.LimitationsTest.mockNativeMethod":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":116,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":212,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":390,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":296,"org.easymock.tests2.NameTest.nameForMocksControl":285,"org.easymock.tests2.MockedExceptionTest.testMockedException":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":396,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":98,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":73,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":251,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":37,"org.easymock.tests.MockingTest.testNicePartialClassMocking":190,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":256,"org.easymock.tests2.CaptureTest.testCaptureLast":335,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":250,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":305,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":319,"org.easymock.tests.MockingTest.testTwoMocks":188,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":77,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":237,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":321,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":366,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":271,"org.easymock.tests2.MockBuilderTest.testCreateMockString":382,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":397,"org.easymock.tests.UsageExpectAndThrowTest.floatType":71,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":267,"org.easymock.tests.UsageVerifyTest.twoThrows":6,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":263,"org.easymock.samples.ExampleTest.voteAgainstRemoval":224,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":213,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":259,"org.easymock.tests.LimitationsTest.privateConstructor":359,"org.easymock.tests2.UsageConstraintsTest.testNotNull":1,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":95,"org.easymock.tests2.UsageTest.defaultResetToNice":33,"org.easymock.samples.ExampleTest.voteAgainstRemovals":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":167,"org.easymock.tests.UsageVarargTest.differentLength":131,"org.easymock.tests2.CallbackTest.callback":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":383,"org.easymock.tests.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":99,"org.easymock.tests.UsageCallCountTest.tooFewCalls":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":31,"org.easymock.tests.UsageThrowableTest.throwCheckedException":92,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":52,"org.easymock.tests.MockingTest.testStrictClassMocking":361,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":105,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":249,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":248,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":59,"org.easymock.tests2.CompareToTest.testGreateOrEqual":346,"org.easymock.tests2.NameTest.nameForNiceMock":22,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":273,"org.easymock.tests2.DependencyTest.testInterfaceMocking":323,"org.easymock.samples.ExampleTest.addDocument":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.DelegateToTest.testStubDelegate":288,"org.easymock.tests2.AnswerTest.stubAnswer":58,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests.UsageVarargTest.varargLongAccepted":133,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":115,"org.easymock.tests.UsageExpectAndReturnTest.floatType":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":268,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":220,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageThrowableTest.noUpperLimit":204,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":316,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":298,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":372,"org.easymock.tests2.SerializationTest.test":326,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":333,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":155,"org.easymock.tests2.UsageConstraintsTest.testSame":303,"org.easymock.samples.SupportTest.addDocument":217,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":398,"org.easymock.tests.GenericTest.testPackageScope":210,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":197,"org.easymock.tests2.NameTest.nameForMock":283,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":164,"org.easymock.tests2.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":114,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":83,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":143,"org.easymock.tests2.MockedExceptionTest.testRealException":110,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":138,"org.easymock.tests2.NameTest.nameForStrictMock":284,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":377,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":255,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":373,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":13,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":317,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":367,"org.easymock.tests.ErrorMessageTest.testGetters":14,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":241,"org.easymock.tests2.UsageStrictMockTest.range":18,"org.easymock.tests2.UsageConstraintsTest.lessThan":322,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":388,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":374,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":402,"org.easymock.tests2.CaptureTest.testCaptureRightOne":338,"org.easymock.tests2.UsageConstraintsTest.testOr":304,"org.easymock.tests.UsageRangeTest.combination":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":252,"org.easymock.tests.UsageTest.wrongArguments":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":399,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":165,"org.easymock.tests.UsageVarargTest.varargShortAccepted":132,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":369,"org.easymock.tests2.UsageConstraintsTest.cmpTo":309,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":67,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.CaptureTest.testCaptureFromStub":339,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":376,"org.easymock.tests.UsageTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":173,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":166,"org.easymock.tests2.CaptureTest.testCapture":415,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.tests2.UsageConstraintsTest.constraints":299,"org.easymock.samples.ExampleTest.addAndChangeDocument":227,"org.easymock.tests.UsageStrictMockTest.testVerify":203,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":231,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":24,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":334,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":158,"org.easymock.tests.LimitationsTest.abstractClass":358,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":208,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":127,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":277}}]
