[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[2,3,4,5,6,7],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[8,9,10,0,11],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,8,41,42,43,44,45,46,9,47,48,49,50,51,10,52,53,54,55,56,57,58,59,60,61,62,0,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[279,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[91,92,98,99,140,141,142,143,149,151,152,207,208,211,212,237,238,239,259,262,263,265,266,281,282,283],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[30,284,285,286,287,288,289,290,144,291],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[53,59,68,69,71,72,73,74,75,79],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,292,22,23,24,25,26,27,28,30,31,32,33,34,35,36,41,46,9,48,49,51,53,56,57,58,59,60,63,64,293,294,295,296,67,68,69,70,72,73,74,75,76,77,79,83,84,85,87,89,90,92,93,94,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,297,115,116,298,117,118,299,300,120,121,122,123,124,125,301,126,302,128,130,131,132,133,134,135,136,137,138,139,144,145,303,304,146,148,150,153,305,306,307,308,2,158,159,160,163,164,166,171,176,309,310,311,312,313,314,315,316,317,318,319,320,185,186,187,188,189,190,191,193,194,195,196,197,200,321,322,323,324,325,326,327,328,329,330,331,332,204,333,208,211,212,213,216,217,219,224,229,234,235,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,334,335,336,337,338,339,261,262,264,267,268,340,275,276,341,277,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[342],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RuntimeExceptionWrapper:23","sourceCode":"-3483500330975410177L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[67,69,70,71,72,73,74,76,13,77,343,79],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[280],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[344,344,345,345,22,23,26,30,32,346,347,348,349,350,33,351,352,34,353,354,355,356,357,358,359,360,361,35,362,363,364,365,366,36,367,368,297,115,369,370,116,298,117,118,285,299,119,300,120,121,123,124,125,301,126,371,372,302,127,128,129,373,374,130,131,132,133,135,136,375,376,144,291,303,304,146,2,3,4,5,377,6,7,378,379,380,158,159,160,381,382,313,315,316,317,318,319,320,279,185,186,383,280,200,384,385,386,387,248,388],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,27,28,29,31,32,33,37,38,39,40,8,41,42,43,44,45,46,9,48,49,50,51,10,52,53,54,55,56,57,58,59,60,61,62,0,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,343,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,120,121,122,123,124,125,126,129,130,133,134,137,138,139,145,303,304,146,389,147,148,149,150,151,152,153,154,155,156,157,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,390,312,181,183,184,319,320,185,186,280,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,391,392,393,394,269,395,270,271,396,397,398,399,400,273,274,275,276,277,278],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[29,39,40,8,41,42,44,45,46,9,48,50,51,10,52,53,54,55,56,57,58,60,62,0,65,67,68,69,70,71,72,73,74,76,77,343,78,79,92,93,94,98,99,103,104,105,106,107,108,110,111,112,113,119,147,149,151,152,155,156,181,201,204,208,211,212,235,238,240,241,243,244,245,246,247,260,262,263,265,266],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[402,98,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"o"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[54,403],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[404],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[26,33,34,35,36,83,86,115,116,117,118,119,120,122,123,125,130,131,132,133,134,135,136,144,158,159,160,248,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,292,21,29,30,31,32,37,38,39,40,8,41,42,43,44,45,46,9,48,49,50,51,10,52,53,54,55,56,57,58,59,60,61,62,0,63,64,65,66,293,294,295,296,67,68,69,70,71,72,73,74,75,76,77,343,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,405,297,115,116,298,299,119,300,120,121,122,123,124,125,301,126,302,127,128,129,131,132,135,136,137,140,141,142,143,144,303,304,146,389,147,148,149,150,151,152,153,154,155,305,306,307,308,156,157,2,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,309,310,311,312,181,182,183,184,313,314,315,316,317,318,319,320,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,321,322,323,324,325,326,327,328,329,330,331,332,201,202,203,204,205,206,207,333,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,406,250,251,252,334,253,254,255,256,257,335,336,337,338,339,259,260,261,262,263,264,265,266,267,268,391,392,393,394,269,395,396,397,398,399,400,272,340,273,274,275,276,341,277,278],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[8,41,45,46,47,56,67,69,77],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[407],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[309,325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[30,31,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:140","sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Set<org.easymock.internal.MethodSerializationWrapper>)","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[26,30,297,409,115,369,116,298,117,118,299,119,410,411,300,301,383,384,385],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[30,284,285,286,287,288,412,413,291],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":41,"org.easymock.tests2.UsageTest.argumentsOrdered":99,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":94,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":25,"org.easymock.tests2.DelegateToTest.testReturnException":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":392,"org.easymock.tests.MockingTest.testPartialClassMocking":158,"org.easymock.tests.MockClassControlTest.testToString":315,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":214,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":281,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":286,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":9,"org.easymock.tests2.UsageTest.wrongArguments":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":307,"org.easymock.samples.ExampleTest.answerVsDelegate":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":385,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":123,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":320,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":375,"org.easymock.tests2.CaptureTest.testPrimitive":70,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":205,"org.easymock.tests.UsageTest.moreThanOneArgument":207,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":233,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":398,"org.easymock.tests.UsageTest.argumentsOrdered":212,"org.easymock.tests.UsageVarargTest.varargIntAccepted":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":413,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":297,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":257,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests.ReplayStateInvalidUsageTest.times":329,"org.easymock.tests2.AnswerTest.answer":63,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":47,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":296,"org.easymock.tests2.CaptureTest.testAnd":67,"org.easymock.tests2.UsageTest.strictResetToDefault":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":106,"org.easymock.tests2.DelegateToTest.testDelegate":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":229,"org.easymock.tests.LimitationsTest.mockFinalMethod":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":339,"org.easymock.tests2.CaptureTest.testCapture1_2446744":71,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":294,"org.easymock.tests.UsageThrowableTest.throwError":240,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":368,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":254,"org.easymock.tests2.UsageTest.niceToStrict":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":357,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":407,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":116,"org.easymock.tests2.MockBuilderTest.testCreateMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":223,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":305,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":366,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":10,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":172,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":234,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":51,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":76,"org.easymock.tests2.EasyMockSupportClassTest.testAll":33,"org.easymock.tests.MockClassControlTest.testEquals":319,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":186,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":231,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":408,"org.easymock.tests2.CaptureTest.testCaptureAll":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":337,"org.easymock.tests2.UsageConstraintsTest.testMatches":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":399,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":321,"org.easymock.samples.ExampleTest.voteForRemovals":20,"org.easymock.tests.UsageVarargTest.allKinds":197,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":237,"org.easymock.samples.BasicClassMockTest.testPrintContent":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":338,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":246,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":395,"org.easymock.tests2.UsageConstraintsTest.greaterThan":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":182,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":129,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":7,"org.easymock.samples.ExampleTest.voteForRemoval":17,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":81,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":373,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":301,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":89,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":200,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":391,"org.easymock.tests2.CaptureTest.testCaptureFirst":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":168,"org.easymock.tests2.CaptureTest.testCapture2_2446744":78,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":83,"org.easymock.tests2.UsageTest.moreThanOneArgument":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":119,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":196,"org.easymock.tests.GenericTest.testBridgedEquals":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":277,"org.easymock.tests.UsageExpectAndReturnTest.longType":164,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":335,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":411,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":232,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":59,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":396,"org.easymock.tests.UsageCallCountTest.tooManyCalls":278,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":365,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":245,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":131,"org.easymock.tests.MockingTest.testNiceClassMocking":381,"org.easymock.tests.MockingTest.testClassMocking":379,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":409,"org.easymock.tests2.UsageConstraintsTest.testContains":50,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":340,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":146,"org.easymock.tests2.UsageConstraintsTest.testFind":42,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":38,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":260,"org.easymock.tests.UsageExpectAndReturnTest.object":171,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":126,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":287,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":312,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":401,"org.easymock.tests.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":156,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":291,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":177,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":250,"org.easymock.tests.MockClassControlTest.testHashCode":318,"org.easymock.tests2.EasyMockSupportTest.testVerify":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":359,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":271,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":293,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":405,"org.easymock.tests.UsageVarargTest.varargCharAccepted":190,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests2.UsageTest.openCallCountByLastCall":95,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests.DefaultClassInstantiatorTest.object":2,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":243,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":376,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":127,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":220,"org.easymock.tests.CapturesMatcherTest.test":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":36,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":316,"org.easymock.tests2.UsageTest.resumeIfFailure":100,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":394,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":284,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":170,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.tests2.SerializationTest.testAllMockedMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":258,"org.easymock.samples.SupportTest.voteForRemovals":28,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":279,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":226,"org.easymock.tests.UsageExpectAndThrowTest.object":224,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":57,"org.easymock.tests2.DelegateToTest.testWrongClass":87,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":198,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":199,"org.easymock.tests.UsageStrictMockTest.range":265,"org.easymock.samples.ConstructorCalledMockTest.testTax":344,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":130,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":117,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":211,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":306,"org.easymock.tests2.CaptureTest.testCaptureNone":75,"org.easymock.tests.UsageUnorderedTest.message":259,"org.easymock.tests.UsageVerifyTest.twoReturns":239,"org.easymock.tests.UsageVarargTest.varargByteAccepted":195,"org.easymock.tests2.ThreadingTest.testThreadSafe":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":362,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":276,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":22,"org.easymock.tests2.CaptureTest.testCapture_2617107":69,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":204,"org.easymock.tests2.UsageConstraintsTest.any":48,"org.easymock.tests2.StubTest.stub":154,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":393,"org.easymock.tests.UsageExpectAndThrowTest.longType":217,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":377,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":327,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":145,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests.LimitationsTest.mockNativeMethod":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":180,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":383,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":153,"org.easymock.tests2.NameTest.nameForMocksControl":143,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":12,"org.easymock.tests2.MockedExceptionTest.testMockedException":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":352,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":218,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":120,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":118,"org.easymock.tests.MockingTest.testNicePartialClassMocking":159,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":125,"org.easymock.tests2.CaptureTest.testCaptureLast":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":309,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":136,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":58,"org.easymock.tests.MockingTest.testTwoMocks":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":222,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":62,"org.easymock.samples.ExampleTest.removeNonExistingDocument":292,"org.easymock.tests.UsageStrictMockTest.differentMethods":266,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":325,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":4,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":82,"org.easymock.tests2.MockBuilderTest.testCreateMockString":300,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":313,"org.easymock.tests.UsageExpectAndThrowTest.floatType":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":353,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":64,"org.easymock.tests.UsageVerifyTest.twoThrows":238,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":35,"org.easymock.samples.ExampleTest.voteAgainstRemoval":18,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":128,"org.easymock.tests.LimitationsTest.privateConstructor":387,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":247,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":303,"org.easymock.tests2.UsageTest.defaultResetToNice":97,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":176,"org.easymock.tests.UsageVarargTest.differentLength":192,"org.easymock.tests2.CallbackTest.callback":29,"org.easymock.tests2.UsageConstraintsTest.equals":402,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":371,"org.easymock.tests.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":203,"org.easymock.tests.UsageCallCountTest.tooFewCalls":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":308,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":404,"org.easymock.tests.UsageThrowableTest.throwCheckedException":244,"org.easymock.tests.MockingTest.testStrictClassMocking":378,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":157,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":135,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":132,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":330,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":134,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":66,"org.easymock.tests2.CompareToTest.testGreateOrEqual":11,"org.easymock.tests.ObjectMethodsTest.testHashCode":311,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":412,"org.easymock.tests2.NameTest.nameForNiceMock":142,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":84,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":288,"org.easymock.samples.ExampleTest.addDocument":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":363,"org.easymock.tests2.DelegateToTest.testStubDelegate":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.AnswerTest.stubAnswer":65,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":263,"org.easymock.tests.UsageVarargTest.varargLongAccepted":194,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":267,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":179,"org.easymock.tests.UsageExpectAndReturnTest.floatType":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":144,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":345,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":55,"org.easymock.tests.UsageThrowableTest.noUpperLimit":241,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":40,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":346,"org.easymock.tests2.SerializationTest.test":31,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":72,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":162,"org.easymock.tests2.UsageConstraintsTest.testSame":44,"org.easymock.samples.SupportTest.addDocument":27,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":354,"org.easymock.tests.GenericTest.testPackageScope":185,"org.easymock.tests2.NameTest.nameForMock":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":173,"org.easymock.tests2.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":372,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":228,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":184,"org.easymock.tests2.MockedExceptionTest.testRealException":389,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":202,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":332,"org.easymock.tests2.NameTest.nameForStrictMock":141,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":370,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":37,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":124,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":347,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":5,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":56,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":282,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":115,"org.easymock.tests2.UsageStrictMockTest.range":151,"org.easymock.tests2.UsageConstraintsTest.lessThan":0,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":289,"org.easymock.tests2.CaptureTest.testCaptureRightOne":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":358,"org.easymock.tests2.UsageConstraintsTest.testOr":45,"org.easymock.tests.UsageRangeTest.combination":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":121,"org.easymock.tests.UsageTest.wrongArguments":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":355,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":174,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":6,"org.easymock.tests.UsageVarargTest.varargShortAccepted":193,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":341,"org.easymock.tests2.UsageConstraintsTest.cmpTo":49,"org.easymock.tests2.CompareToTest.testLessThan":1,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":96,"org.easymock.tests2.CaptureTest.testCaptureFromStub":343,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":322,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":369,"org.easymock.tests.UsageTest.unexpectedCallWithArray":333,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":262,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":275,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":175,"org.easymock.tests2.CaptureTest.testCapture":13,"org.easymock.tests2.UsageConstraintsTest.constraints":8,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":264,"org.easymock.samples.ExampleTest.addAndChangeDocument":21,"org.easymock.tests.UsageStrictMockTest.testVerify":268,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":24,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests2.CompareToTest.testGreateThan":403,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":336,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":255,"org.easymock.tests.LimitationsTest.abstractClass":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":256,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":283}}]
