[{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,83,84,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[122,20,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return this.org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[123,124,125,126,127,128,129,17,20,22,23,25,26,27,130,131,132,133,134,135,136,137,138,139,140,141,28,142,30,31,143,32,33,34,36,40,41,42,45,144,145,146,147,148,149,150,151,0,152,1,2,153,154,3,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,52,55,65,71,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,74,75,76,77,212,78,79,80,81,82,213,214,215,83,83,84,84,85,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,96,98,100,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,105,106,107,276,277,278,279,8,280,9,10,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,11,305,306,307,308,309,310,311,12,312,313,314,315,316,317,318,319,320,118,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,13,14,15,339,340,341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"control":"control","args":"args","proxy":"proxy","method":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[110,114],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:203","sourceCode":"T T","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[343],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[123,127,20,22,23,130,131,132,133,134,135,136,138,139,140,141,28,142,30,31,143,32,33,34,36,41,45,144,147,0,1,2,153,154,3,156,158,159,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,52,55,65,71,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,74,75,76,77,212,78,79,82,215,85,216,217,219,220,221,227,238,239,240,241,242,98,100,344,345,346,347,348,268,270,271,272,273,274,275,105,106,107,8,9,10,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,11,307,308,311,312,313,314,315,316,317,320,118,336,337,338,13,15,339,340],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[350,351,352,353,354,355,356,357,358,359,360,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[210],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[123,124,125,126,127,128,129,17,20,22,23,26,130,131,132,133,134,135,136,137,138,139,140,141,28,142,30,31,143,32,33,34,36,40,41,42,45,144,145,146,147,148,149,150,0,1,2,153,154,3,156,158,159,160,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,52,55,65,71,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,74,75,76,77,212,78,79,80,81,82,213,214,215,83,83,84,84,85,216,217,218,219,220,221,222,223,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,96,98,100,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,105,106,107,277,8,9,10,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,11,307,308,311,12,312,313,314,315,316,317,318,319,320,118,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,13,14,15,339,340,341],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[362,201,208,209,363],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[17,20,22,23,26,30,31,143,32,33,34,36,40,41,42,45,147,0,1,2,52,55,65,71,193,194,198,74,75,76,77,212,78,79,85,216,217,219,220,221,229,230,231,232,238,239,240,241,242,105,106,107,8,9,10,281,282,283,284,285,286,289,290,292,293,294,296,297,298,299,300,312,313,314,315,316,118,339,340],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[365,366,367],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[210],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[1,155,161,162,368,279,9,305,306,309,310,12,369,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[1,2,9,10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[178],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[370,371,372,373,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[202],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":168,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":304,"org.easymock.tests2.UsageTest.argumentsOrdered":162,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":329,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":157,"org.easymock.tests2.StubTest.stubWithReturnValue":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":290,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":187,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests2.DelegateToTest.testReturnException":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":327,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":243,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":374,"org.easymock.tests.MockingTest.testPartialClassMocking":105,"org.easymock.samples.SupportTest.voteForRemovals":216,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":97,"org.easymock.tests.MockClassControlTest.testToString":90,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":248,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":244,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":55,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":124,"org.easymock.tests.UsageExpectAndThrowTest.object":258,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":4,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":194,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":185,"org.easymock.tests2.DelegateToTest.testWrongClass":148,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":339,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":340,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":316,"org.easymock.tests2.UsageTest.wrongArguments":155,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.samples.ConstructorCalledMockTest.testTax":83,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.samples.ExampleTest.answerVsDelegate":218,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":74,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":121,"org.easymock.tests2.UsageConstraintsTest.testNull":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":259,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":32,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":22,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests2.CaptureTest.testPrimitive":202,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":320,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":309,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":49,"org.easymock.tests.UsageTest.moreThanOneArgument":11,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":231,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":303,"org.easymock.tests2.CaptureTest.testCaptureNone":205,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests2.ThreadingTest.testThreadSafe":195,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":321,"org.easymock.tests.UsageTest.argumentsOrdered":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":66,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":372,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":346,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":319,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":21,"org.easymock.tests2.UsageConstraintsTest.any":175,"org.easymock.tests2.StubTest.stub":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":328,"org.easymock.tests.UsageExpectAndThrowTest.longType":251,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":113,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":152,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":144,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":211,"org.easymock.tests.LimitationsTest.mockNativeMethod":118,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":343,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":300,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":100,"org.easymock.tests2.AnswerTest.answer":123,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":357,"org.easymock.tests2.CaptureTest.testAnd":200,"org.easymock.tests2.UsageTest.strictResetToDefault":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests2.MockedExceptionTest.testMockedException":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":230,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":134,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":308,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":325,"org.easymock.tests2.DelegateToTest.testDelegate":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":252,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":107,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":23,"org.easymock.tests.MockingTest.testNicePartialClassMocking":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":263,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":34,"org.easymock.tests.LimitationsTest.mockFinalMethod":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":370,"org.easymock.tests2.CaptureTest.testCaptureLast":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":330,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":277,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":173,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":186,"org.easymock.tests.MockingTest.testTwoMocks":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":276,"org.easymock.tests2.CaptureTest.testCapture1_2446744":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":256,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":161,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":189,"org.easymock.tests.UsageThrowableTest.throwError":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":359,"org.easymock.tests.UsageStrictMockTest.differentMethods":10,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":351,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":111,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":197,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":355,"org.easymock.tests2.MockBuilderTest.testCreateMockString":27,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":88,"org.easymock.tests.UsageExpectAndThrowTest.floatType":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":56,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":51,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":126,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":65,"org.easymock.samples.PartialClassMockTest.testGetArea":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":239,"org.easymock.samples.ExampleTest.voteAgainstRemoval":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":345,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":302,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":301,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":60,"org.easymock.tests2.UsageTest.niceToStrict":156,"org.easymock.tests.LimitationsTest.privateConstructor":117,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":275,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":80,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":20,"org.easymock.tests2.MockBuilderTest.testCreateMock":25,"org.easymock.tests2.UsageTest.defaultResetToNice":160,"org.easymock.samples.ExampleTest.voteAgainstRemovals":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":356,"org.easymock.tests.UsageVarargTest.differentLength":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":68,"org.easymock.tests2.CallbackTest.callback":129,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":360,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":37,"org.easymock.tests.UsageTest.openCallCountByLastCall":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":257,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":135,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":318,"org.easymock.tests.UsageOverloadedMethodTest.overloading":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":64,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":236,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":179,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":292,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":77,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":178,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":206,"org.easymock.tests.UsageThrowableTest.throwCheckedException":272,"org.easymock.tests.MockClassControlTest.testEquals":94,"org.easymock.tests2.EasyMockSupportClassTest.testAll":52,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":265,"org.easymock.tests.MockingTest.testStrictClassMocking":102,"org.easymock.tests2.CaptureTest.testCaptureAll":201,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":228,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":78,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":76,"org.easymock.tests2.UsageConstraintsTest.testMatches":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":212,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":232,"org.easymock.samples.ExampleTest.voteForRemovals":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":371,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":199,"org.easymock.tests2.DependencyTest.testInterfaceMocking":193,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":13,"org.easymock.samples.BasicClassMockTest.testPrintContent":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.DelegateToTest.testStubDelegate":147,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":274,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":151,"org.easymock.tests2.AnswerTest.stubAnswer":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":331,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":149,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":366,"org.easymock.tests2.UsageConstraintsTest.greaterThan":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":313,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":344,"org.easymock.samples.ExampleTest.voteForRemoval":219,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":115,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":196,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":299,"org.easymock.tests.UsageExpectAndReturnTest.floatType":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":84,"org.easymock.tests.UsageThrowableTest.noUpperLimit":269,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":183,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":96,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":166,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":47,"org.easymock.tests2.SerializationTest.test":142,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":24,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":132,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":282,"org.easymock.tests2.UsageConstraintsTest.testSame":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":326,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":367,"org.easymock.tests2.CaptureTest.testCaptureFirst":210,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":133,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":57,"org.easymock.tests.GenericTest.testPackageScope":98,"org.easymock.tests2.CaptureTest.testCapture2_2446744":209,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":198,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":324,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":26,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":354,"org.easymock.tests.GenericTest.testBridgedEquals":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":225,"org.easymock.tests.UsageExpectAndReturnTest.longType":284,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":266,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":341,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":264,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":229,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":285,"org.easymock.tests.UsageCallCountTest.tooManyCalls":226,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":315,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":223,"org.easymock.tests2.MockedExceptionTest.testRealException":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":289,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":253,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":273,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":75,"org.easymock.tests.MockingTest.testNiceClassMocking":108,"org.easymock.tests.MockingTest.testClassMocking":103,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":122,"org.easymock.tests2.UsageConstraintsTest.testContains":177,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":169,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":338,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":19,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":33,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":278,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":192,"org.easymock.tests.UsageExpectAndReturnTest.object":291,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":48,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":112,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":36,"org.easymock.tests.ErrorMessageTest.testGetters":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":17,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":352,"org.easymock.tests.UsageTest.exactCallCountByLastCall":311,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":364,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":131,"org.easymock.tests2.CaptureTest.testCaptureRightOne":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":61,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":322,"org.easymock.tests2.UsageConstraintsTest.testOr":172,"org.easymock.tests.UsageRangeTest.combination":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":31,"org.easymock.tests.UsageTest.wrongArguments":306,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":235,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":350,"org.easymock.tests.MockClassControlTest.testHashCode":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":58,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":62,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":246,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":234,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":114,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":224,"org.easymock.tests2.UsageConstraintsTest.cmpTo":176,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":365,"org.easymock.tests2.CaptureTest.testCaptureMultiple":362,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":348,"org.easymock.tests2.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests.DefaultClassInstantiatorTest.object":109,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":245,"org.easymock.tests2.CaptureTest.testCaptureFromStub":208,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":18,"org.easymock.tests.UsageTest.unexpectedCallWithArray":305,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":63,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":271,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":295,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":92,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":40,"org.easymock.tests2.UsageConstraintsTest.constraints":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":254,"org.easymock.samples.ExampleTest.addAndChangeDocument":222,"org.easymock.tests.CapturesMatcherTest.test":363,"org.easymock.tests2.ConstraintsToStringTest.containsToString":349,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":332,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":71,"org.easymock.tests2.UsageTest.resumeIfFailure":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":287,"org.easymock.tests.LimitationsTest.abstractClass":116,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":241,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":136}}]
