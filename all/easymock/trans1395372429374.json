[{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,70,71,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:105","failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,1,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,41,42,43,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,0,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,93,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[79,470,471],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:39","sourceCode":"try {\n    com.google.dexmaker.stock.ProxyBuilder<T> com.google.dexmaker.stock.ProxyBuilder<T> = com.google.dexmaker.stock.ProxyBuilder.com.google.dexmaker.stock.ProxyBuilder.forClass(java.lang.Class<T>).handler(org.easymock.internal.AndroidClassProxyFactory.MockHandler);\n    if (org.easymock.ConstructorArgs != null) {\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n    } else {\n        try {\n            org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n            java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n            java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n            com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n        } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n        }\n    }\n    return com.google.dexmaker.stock.ProxyBuilder<T>.build();\n} catch (java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[473,474,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,2,122,3,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,140,1,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,29,476,30,31,477,32,33,34,35,478,36,479,37,38,39,480,40,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,41,42,43,217,218,219,220,221,222,223,44,473,474,475,45,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,46,47,481,48,49,50,51,482,243,52,53,244,245,246,54,55,247,56,57,58,59,483,60,61,62,63,64,65,66,67,68,484,485,248,249,69,250,70,71,251,252,253,254,255,256,257,258,259,260,261,72,73,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,74,314,315,316,317,318,319,320,321,486,75,76,77,78,79,80,487,81,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,82,83,84,85,337,338,339,340,341,342,343,344,345,346,86,488,489,347,348,87,349,350,0,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,88,89,90,91,92,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,93,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,490,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,94,95,96,97,98,458,99,459,460,100,461,462,463,464,465,466,467,468,469,101,102,103,104,105,106,107,108],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[170],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[129,198,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:116","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[491,492,493],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":151,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":429,"org.easymock.tests2.UsageTest.argumentsOrdered":240,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":286,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":235,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":250,"org.easymock.tests2.DelegateToTest.testReturnException":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":268,"org.easymock.tests.MockingTest.testPartialClassMocking":97,"org.easymock.tests.MockClassControlTest.testToString":103,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":143,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":345,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":409,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":10,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":249,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":158,"org.easymock.tests2.UsageTest.wrongArguments":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":353,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":311,"org.easymock.samples.ExampleTest.answerVsDelegate":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":87,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":460,"org.easymock.tests2.UsageConstraintsTest.testNull":154,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":56,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":108,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":213,"org.easymock.tests2.CaptureTest.testPrimitive":181,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":357,"org.easymock.tests.UsageTest.moreThanOneArgument":430,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":428,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":363,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":438,"org.easymock.tests.UsageTest.argumentsOrdered":436,"org.easymock.tests.UsageVarargTest.varargIntAccepted":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":262,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":29,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":474,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":202,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":266,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests.ReplayStateInvalidUsageTest.times":330,"org.easymock.tests2.DependencyTest.testClassMocking":484,"org.easymock.tests2.AnswerTest.answer":109,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":229,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":489,"org.easymock.tests2.CaptureTest.testAnd":178,"org.easymock.tests2.UsageTest.strictResetToDefault":231,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":208,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":317,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":442,"org.easymock.tests2.DelegateToTest.testDelegate":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":424,"org.easymock.tests.LimitationsTest.mockFinalMethod":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":370,"org.easymock.tests2.DependencyTest.testClassMockingSupport":485,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":443,"org.easymock.tests2.CaptureTest.testCapture1_2446744":182,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":483,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":227,"org.easymock.tests.UsageThrowableTest.throwError":448,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":324,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":348,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":490,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":28,"org.easymock.samples.PartialClassMockTest.testGetArea":69,"org.easymock.tests.MockingTest.testInterfaceMocking":458,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":263,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":15,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":93,"org.easymock.tests2.UsageTest.niceToStrict":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":33,"org.easymock.tests2.MockBuilderTest.testCreateMock":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":23,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":418,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":209,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":488,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":461,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":309,"org.easymock.tests.UsageOverloadedMethodTest.overloading":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":19,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":164,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":399,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":470,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":163,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":187,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":374,"org.easymock.tests.MockClassControlTest.testEquals":107,"org.easymock.tests2.EasyMockSupportClassTest.testAll":7,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":90,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":426,"org.easymock.tests2.CaptureTest.testCaptureAll":179,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":368,"org.easymock.tests.MockNameTest.defaultName":313,"org.easymock.tests2.UsageConstraintsTest.testMatches":165,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":322,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":364,"org.easymock.samples.ExampleTest.voteForRemovals":259,"org.easymock.tests.UsageVarargTest.allKinds":382,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":358,"org.easymock.samples.BasicClassMockTest.testPrintContent":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":369,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":454,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":199,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":272,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":487,"org.easymock.tests2.UsageConstraintsTest.greaterThan":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":8,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":316,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":66,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":81,"org.easymock.samples.ExampleTest.voteForRemoval":256,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":136,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":67,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":472,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":475,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":59,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":74,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":230,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":206,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":267,"org.easymock.tests2.CaptureTest.testCaptureFirst":191,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":207,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":242,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":395,"org.easymock.tests2.CaptureTest.testCapture2_2446744":190,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":138,"org.easymock.tests2.UsageTest.moreThanOneArgument":232,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":294,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":381,"org.easymock.tests.GenericTest.testBridgedEquals":92,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":468,"org.easymock.tests.UsageExpectAndReturnTest.longType":391,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":366,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":427,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":172,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":314,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":425,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":361,"org.easymock.tests.UsageCallCountTest.tooManyCalls":469,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":396,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":133,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":414,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":453,"org.easymock.tests.MockingTest.testNiceClassMocking":100,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":49,"org.easymock.tests.MockingTest.testClassMocking":95,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":462,"org.easymock.tests2.UsageConstraintsTest.testContains":162,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":153,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":275,"org.easymock.tests.MockTypeTest.fromEasyMockClass":347,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":141,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests.UsageExpectAndReturnTest.object":398,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":212,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":376,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":386,"org.easymock.tests.UsageTest.exactCallCountByLastCall":437,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":439,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":344,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":404,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":371,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":339,"org.easymock.tests.ResultTest.createThrowResultToString":493,"org.easymock.tests.MockClassControlTest.testHashCode":106,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":193,"org.easymock.tests2.EasyMockSupportTest.testVerify":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":17,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":440,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":226,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":177,"org.easymock.tests.UsageVarargTest.varargCharAccepted":375,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":486,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":299,"org.easymock.tests2.UsageTest.openCallCountByLastCall":236,"org.easymock.tests.DefaultClassInstantiatorTest.object":75,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":319,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":451,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":126,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":192,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":105,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":415,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":405,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":334,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests2.UsageTest.resumeIfFailure":241,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":86,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":270,"org.easymock.tests2.StubTest.stubWithReturnValue":246,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":478,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":397,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":173,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":292,"org.easymock.samples.SupportTest.voteForRemovals":252,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":195,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":421,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":298,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":110,"org.easymock.tests.UsageExpectAndThrowTest.object":419,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":346,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":170,"org.easymock.tests2.DelegateToTest.testWrongClass":221,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":446,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":447,"org.easymock.samples.ConstructorCalledMockTest.testTax":70,"org.easymock.tests.UsageStrictMockTest.range":305,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":224,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":420,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":35,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":4,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":310,"org.easymock.tests2.CaptureTest.testCaptureNone":186,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":352,"org.easymock.tests.UsageUnorderedTest.message":408,"org.easymock.tests.UsageVerifyTest.twoReturns":360,"org.easymock.tests.UsageVarargTest.varargByteAccepted":380,"org.easymock.tests2.ThreadingTest.testThreadSafe":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":21,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":466,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":387,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":72,"org.easymock.tests2.CaptureTest.testCapture_2617107":180,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":356,"org.easymock.tests2.UsageConstraintsTest.any":160,"org.easymock.tests2.StubTest.stub":245,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":336,"org.easymock.tests.UsageExpectAndThrowTest.longType":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":297,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":79,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":328,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":118,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests.LimitationsTest.mockNativeMethod":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":407,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":125,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":121,"org.easymock.tests2.NameTest.nameForMocksControl":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":127,"org.easymock.tests2.MockedExceptionTest.testMockedException":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":9,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":434,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":413,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":99,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":1,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":36,"org.easymock.tests.MockingTest.testNicePartialClassMocking":98,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":58,"org.easymock.tests2.CaptureTest.testCaptureLast":185,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":123,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":444,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":171,"org.easymock.tests.MockingTest.testTwoMocks":96,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":417,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":239,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":175,"org.easymock.samples.ExampleTest.removeNonExistingDocument":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":130,"org.easymock.tests.UsageStrictMockTest.differentMethods":306,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":194,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":77,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":137,"org.easymock.tests2.MockBuilderTest.testCreateMockString":40,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":101,"org.easymock.tests.UsageExpectAndThrowTest.floatType":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":11,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":6,"org.easymock.tests.ResultTest.createReturnResultToString":492,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":481,"org.easymock.tests.UsageVerifyTest.twoThrows":359,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":20,"org.easymock.tests.ResultTest.createDelegateResultToString":491,"org.easymock.samples.ExampleTest.voteAgainstRemoval":257,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":287,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":65,"org.easymock.tests.LimitationsTest.privateConstructor":83,"org.easymock.tests2.UsageConstraintsTest.testNotNull":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":455,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":41,"org.easymock.tests2.UsageTest.defaultResetToNice":238,"org.easymock.samples.ExampleTest.voteAgainstRemovals":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":124,"org.easymock.tests.UsageVarargTest.differentLength":377,"org.easymock.tests2.CallbackTest.callback":142,"org.easymock.tests2.UsageConstraintsTest.equals":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":61,"org.easymock.tests.UsageTest.openCallCountByLastCall":433,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":355,"org.easymock.tests.UsageCallCountTest.tooFewCalls":464,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":312,"org.easymock.tests.UsageThrowableTest.throwCheckedException":452,"org.easymock.tests.MockingTest.testStrictClassMocking":94,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":457,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":129,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":50,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":243,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":114,"org.easymock.tests.ObjectMethodsTest.testHashCode":385,"org.easymock.tests2.NameTest.nameForNiceMock":146,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":139,"org.easymock.tests2.DependencyTest.testInterfaceMocking":248,"org.easymock.samples.ExampleTest.addDocument":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":27,"org.easymock.tests2.DelegateToTest.testStubDelegate":220,"org.easymock.tests2.AnswerTest.stubAnswer":113,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":303,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":479,"org.easymock.tests.UsageVarargTest.varargLongAccepted":379,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":285,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":406,"org.easymock.tests.UsageExpectAndReturnTest.floatType":390,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":46,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":71,"org.easymock.tests.UsageThrowableTest.noUpperLimit":449,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":201,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":149,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":44,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":183,"org.easymock.tests2.SerializationTest.test":122,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":471,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":389,"org.easymock.tests2.UsageConstraintsTest.testSame":155,"org.easymock.samples.SupportTest.addDocument":251,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":482,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":12,"org.easymock.tests.GenericTest.testPackageScope":89,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":280,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":200,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":459,"org.easymock.tests2.NameTest.nameForMock":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":400,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":480,"org.easymock.tests2.UsageStrictMockTest.differentMethods":120,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":392,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":423,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":318,"org.easymock.tests2.MockedExceptionTest.testRealException":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":350,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":290,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":289,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":354,"org.easymock.tests2.NameTest.nameForStrictMock":145,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":32,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":140,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":45,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":169,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":78,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":30,"org.easymock.tests2.UsageStrictMockTest.range":119,"org.easymock.tests2.UsageConstraintsTest.lessThan":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":284,"org.easymock.tests2.CaptureTest.testCaptureRightOne":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":16,"org.easymock.tests2.UsageConstraintsTest.testOr":156,"org.easymock.tests.UsageRangeTest.combination":315,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":55,"org.easymock.tests.UsageTest.wrongArguments":432,"org.easymock.tests2.MockBuilderTest.testWithConstructor":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":13,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":277,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":80,"org.easymock.tests.UsageVarargTest.varargShortAccepted":378,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":467,"org.easymock.tests2.UsageConstraintsTest.cmpTo":161,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":279,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests2.CaptureTest.testCaptureFromStub":189,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":323,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":31,"org.easymock.tests.UsageTest.unexpectedCallWithArray":431,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":302,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":465,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":402,"org.easymock.tests2.UsageConstraintsTest.constraints":150,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":304,"org.easymock.samples.ExampleTest.addAndChangeDocument":261,"org.easymock.tests.UsageStrictMockTest.testVerify":308,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":253,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":367,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":264,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":394,"org.easymock.tests.LimitationsTest.abstractClass":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":265,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":210,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":372}}]
