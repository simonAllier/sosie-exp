[{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:48","failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,2,3,4,115,5,116,117,118,119,120,121,122,123,124,125,6,126,127,128,129,130,130,131,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,7,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[24,255],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[23,256,257,258,259,260,261,262,263,264,265,266,267,268,269,121,122,123,169,270,271,272,273,182,274,204,226,227,228,275,276,236,277,278,279,280,281,282,283,284,285,244,245,246],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"key"}},{"position":"org.easymock.Capture:82","failures":[62,287,64,65,288,289,66,68,290,69,70,72],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[291,292,293,294,295,296],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[45,49,297,298,299,300,301,302,303,304,305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[306,307,308,309,310,8,311,312,313,314,315,316,9,10,317,318,319,320,321,11,12,13,14,15,16,322,323,17,18,19,324,20,21,22,23,256,24,325,25,26,27,257,258,28,29,326,327,328,329,30,31,32,33,34,35,36,37,38,39,40,41,330,42,43,44,45,46,331,47,48,49,297,50,298,332,333,334,51,335,336,52,337,338,339,340,341,342,343,344,345,53,346,347,348,349,350,54,351,352,353,354,355,356,357,55,56,358,57,359,360,58,361,59,60,362,363,61,364,62,63,287,64,65,288,289,66,67,68,69,70,71,72,73,74,75,76,77,78,365,366,79,367,255,368,80,81,82,369,370,83,84,85,86,371,87,88,89,90,91,92,372,93,94,95,96,97,98,99,100,101,102,103,104,373,105,106,107,108,109,110,111,112,374,375,376,377,378,113,379,380,381,382,383,384,114,2,3,4,115,5,116,117,118,119,120,385,386,121,387,122,123,388,389,124,390,125,6,126,127,391,128,392,129,393,130,131,132,394,395,133,134,135,136,137,138,139,140,396,397,398,399,141,142,143,144,145,146,400,401,402,403,404,405,406,407,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,270,271,170,171,272,273,172,173,174,175,408,409,176,410,411,412,413,414,415,177,178,179,180,181,182,291,292,293,294,0,295,296,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,183,431,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,274,204,432,205,206,207,208,209,210,211,212,213,214,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,215,449,450,451,452,453,216,454,455,217,456,457,458,459,460,461,462,218,219,220,221,222,223,463,464,465,466,467,468,469,470,471,472,473,474,475,224,476,225,477,478,479,480,481,482,483,484,485,226,227,228,229,230,231,232,233,234,275,7,235,276,236,277,237,238,239,486,487,488,489,490,240,241,242,243,491,492,285,244,493,245,246,494,495,496,497,498,247,248,499,249,500,501,502,250,251,252,253,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[23,354,355,356,357,121,123,388,169,408,176,410,226,227,228,244,246,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[23,256,257,258,354,355,356,357,121,122,123,169,271,272,273,182,503,504,505,226,227,228,285,244,245,246],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[62,287,69,85,86,88,90,91,372,102,106],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[234,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[506,97],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[260,267,270,278,280,285],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[23,259,260,261,264,266,268,121,122,123,169,182,274,204,226,227,228,275,276,236,277,280,282,284,244,245,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[9,10,317,507],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.RecordState:280","failures":[114,2,3,4,115,5,6,7],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[442,444,452,453,454],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[19,20,23,42,63,66,67,72,83,97,100,108,5,116,117,118,140,147,153,159,163,165,169,182,184,190,196,200,202,445],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[174,238],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[9,10,317,318,319,320,321,11,14,15,16,17,19,20,21,22,23,256,24,325,25,26,27,257,258,28,29,42,44,45,48,49,50,354,355,356,357,55,56,358,58,361,61,364,508,62,63,287,64,65,288,289,66,67,68,69,70,71,72,73,74,75,76,77,78,79,368,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,2,3,4,5,116,117,118,119,120,385,386,121,387,122,123,388,125,6,126,127,391,128,129,136,137,139,140,396,397,398,399,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,270,271,170,171,272,273,172,408,409,176,410,411,412,177,178,179,180,181,182,421,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,218,219,220,221,222,223,463,464,465,467,468,470,471,472,473,474,224,476,479,226,227,228,229,230,231,232,233,236,486,487,488,489,490,240,241,242,243,491,492,285,244,493,245,246,494,495,247,248,249],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[21,256,24,325,257,258,28,29,31,35,36,39,42,57,363,61,364,74,80,82,85,99,385,387,122,123,168,270,271,272,273,172,413,414,415,182,469,227,228,509,510,511,284,240,491,285,493,245,246],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[58,512],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[475],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[8,9,10,318,319,320,11,12,13,14,15,16,17,18,19,20,21,22,23,256,24,325,25,26,27,257,258,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,364,62,63,287,64,65,288,289,66,67,68,69,70,71,72,73,74,75,76,77,78,365,79,368,80,81,82,83,84,85,86,87,88,89,90,91,92,372,93,94,95,96,97,98,99,100,101,102,103,104,373,105,106,107,108,109,110,111,112,113,114,2,3,4,115,5,116,117,118,119,120,385,121,387,122,123,388,124,125,6,126,127,128,129,130,130,131,131,132,133,134,135,136,137,138,139,140,396,397,398,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,270,271,170,171,272,273,172,173,174,175,176,177,178,179,180,181,182,291,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,274,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,474,224,225,226,227,228,229,230,231,232,233,234,7,235,236,237,238,239,486,487,488,489,490,240,241,242,243,491,285,244,493,245,246,494,247,248,249,251,252],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[86,90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":86,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":168,"org.easymock.tests2.UsageTest.argumentsOrdered":258,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":443,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":325,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":390,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests.MockingTest.testPartialClassMocking":247,"org.easymock.tests.MockClassControlTest.testToString":480,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":353,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":184,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":52,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":503,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":18,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":142,"org.easymock.tests2.UsageTest.wrongArguments":256,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":398,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":405,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":501,"org.easymock.tests2.UsageConstraintsTest.testNull":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":76,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":485,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":39,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":146,"org.easymock.tests.UsageTest.moreThanOneArgument":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":203,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":231,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":250,"org.easymock.tests.UsageTest.argumentsOrdered":273,"org.easymock.tests.UsageVarargTest.varargIntAccepted":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":448,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":177,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":358,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":383,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":181,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":263,"org.easymock.tests.ReplayStateInvalidUsageTest.times":425,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":8,"org.easymock.tests2.DependencyTest.testClassMocking":322,"org.easymock.tests2.AnswerTest.answer":11,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":449,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":321,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":402,"org.easymock.tests2.CaptureTest.testAnd":62,"org.easymock.tests2.UsageTest.strictResetToDefault":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":34,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":242,"org.easymock.tests2.DelegateToTest.testDelegate":5,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":199,"org.easymock.tests.LimitationsTest.mockFinalMethod":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":490,"org.easymock.tests2.DependencyTest.testClassMockingSupport":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":274,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":319,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":419,"org.easymock.tests.UsageThrowableTest.throwError":205,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":404,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":510,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":233,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":352,"org.easymock.samples.PartialClassMockTest.testGetArea":132,"org.easymock.tests.MockingTest.testInterfaceMocking":499,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":134,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":462,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":185,"org.easymock.tests2.UsageTest.niceToStrict":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":58,"org.easymock.tests2.MockBuilderTest.testCreateMock":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":348,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":193,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":260,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":35,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":401,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":239,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":408,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":396,"org.easymock.tests.UsageOverloadedMethodTest.overloading":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":350,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":97,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":158,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":138,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":96,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":68,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":466,"org.easymock.tests.MockClassControlTest.testEquals":484,"org.easymock.tests2.EasyMockSupportClassTest.testAll":51,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":476,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":201,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":488,"org.easymock.tests2.CaptureTest.testCaptureAll":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":320,"org.easymock.tests.MockNameTest.defaultName":416,"org.easymock.tests2.UsageConstraintsTest.testMatches":98,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":417,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":232,"org.easymock.samples.ExampleTest.voteForRemovals":128,"org.easymock.tests.UsageVarargTest.allKinds":474,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":489,"org.easymock.samples.BasicClassMockTest.testPrintContent":395,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":211,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":385,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":380,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":335,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":241,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":82,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":296,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":117,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":369,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":365,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":167,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":32,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":114,"org.easymock.tests2.CaptureTest.testCaptureFirst":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":33,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":29,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":154,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":119,"org.easymock.tests2.UsageTest.moreThanOneArgument":23,"org.easymock.tests2.CaptureTest.testCapture2_2446744":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":61,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":473,"org.easymock.tests.GenericTest.testBridgedEquals":477,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":414,"org.easymock.tests.UsageExpectAndReturnTest.longType":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":486,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":30,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":512,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":202,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":141,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":373,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":200,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":229,"org.easymock.tests.UsageCallCountTest.tooManyCalls":415,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":279,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":349,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":210,"org.easymock.tests.MockingTest.testNiceClassMocking":502,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":44,"org.easymock.tests.MockingTest.testClassMocking":497,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":409,"org.easymock.tests2.UsageConstraintsTest.testContains":95,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":111,"org.easymock.tests2.UsageConstraintsTest.testFind":87,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":140,"org.easymock.tests.MockTypeTest.fromEasyMockClass":403,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":491,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":20,"org.easymock.tests.UsageExpectAndReturnTest.object":157,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":38,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":468,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":460,"org.easymock.tests.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":283,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":298,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":463,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":163,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":7,"org.easymock.tests.MockClassControlTest.testHashCode":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":375,"org.easymock.tests2.EasyMockSupportTest.testVerify":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":343,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":262,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":252,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":238,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":511,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":318,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":508,"org.easymock.tests.UsageVarargTest.varargCharAccepted":467,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":454,"org.easymock.tests2.UsageTest.openCallCountByLastCall":25,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":41,"org.easymock.tests.DefaultClassInstantiatorTest.object":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":237,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":458,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":284,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":309,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":374,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":482,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":173,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":54,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":264,"org.easymock.tests2.UsageTest.resumeIfFailure":28,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests2.StubTest.stubWithReturnValue":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":156,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":105,"org.easymock.tests2.SerializationTest.testAllMockedMethod":317,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":215,"org.easymock.samples.SupportTest.voteForRemovals":124,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":267,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":475,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":377,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":196,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":507,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":216,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":12,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":456,"org.easymock.tests.UsageExpectAndThrowTest.object":194,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":103,"org.easymock.tests2.DelegateToTest.testWrongClass":4,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":213,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":214,"org.easymock.samples.ConstructorCalledMockTest.testTax":130,"org.easymock.tests.UsageStrictMockTest.range":245,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":328,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":37,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":59,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":427,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":397,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":278,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":135,"org.easymock.tests2.CaptureTest.testCaptureNone":67,"org.easymock.tests.UsageUnorderedTest.message":182,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":509,"org.easymock.tests.UsageVerifyTest.twoReturns":228,"org.easymock.tests.UsageVarargTest.varargByteAccepted":472,"org.easymock.tests2.ThreadingTest.testThreadSafe":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":346,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":412,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":461,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":394,"org.easymock.tests2.CaptureTest.testCapture_2617107":287,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":269,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":145,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":424,"org.easymock.tests2.StubTest.stub":55,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndThrowTest.longType":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":423,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":387,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests.LimitationsTest.mockNativeMethod":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":166,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":308,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":388,"org.easymock.tests2.NameTest.nameForMocksControl":357,"org.easymock.tests2.MockedExceptionTest.testMockedException":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":336,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":188,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":249,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":324,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":60,"org.easymock.tests.MockingTest.testNicePartialClassMocking":248,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":78,"org.easymock.tests2.CaptureTest.testCaptureLast":66,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":306,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":204,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":49,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":91,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":104,"org.easymock.tests.MockingTest.testTwoMocks":498,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":192,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":107,"org.easymock.samples.ExampleTest.removeNonExistingDocument":392,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":421,"org.easymock.tests.UsageStrictMockTest.differentMethods":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":376,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":293,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":118,"org.easymock.tests2.ConstraintsToStringTest.andToString":266,"org.easymock.tests2.MockBuilderTest.testCreateMockString":364,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":478,"org.easymock.tests.UsageExpectAndThrowTest.floatType":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":337,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":334,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":14,"org.easymock.tests.UsageVerifyTest.twoThrows":227,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":53,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":444,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":133,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":81,"org.easymock.tests.LimitationsTest.privateConstructor":430,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":305,"org.easymock.tests2.UsageConstraintsTest.testNotNull":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":212,"org.easymock.tests2.UsageTest.defaultResetToNice":27,"org.easymock.samples.ExampleTest.voteAgainstRemovals":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":162,"org.easymock.tests.UsageVarargTest.differentLength":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":307,"org.easymock.tests2.CallbackTest.callback":42,"org.easymock.tests2.UsageConstraintsTest.equals":371,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":281,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":367,"org.easymock.tests.UsageTest.openCallCountByLastCall":170,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":144,"org.easymock.tests.UsageCallCountTest.tooFewCalls":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":399,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":286,"org.easymock.tests.UsageThrowableTest.throwCheckedException":209,"org.easymock.tests.MockingTest.testStrictClassMocking":496,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":280,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":137,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":311,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":426,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":47,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":16,"org.easymock.tests2.CompareToTest.testGreateOrEqual":506,"org.easymock.tests.ObjectMethodsTest.testHashCode":459,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":120,"org.easymock.tests2.NameTest.nameForNiceMock":356,"org.easymock.tests2.DependencyTest.testInterfaceMocking":17,"org.easymock.samples.ExampleTest.addDocument":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":347,"org.easymock.tests2.DelegateToTest.testStubDelegate":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.AnswerTest.stubAnswer":15,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":244,"org.easymock.tests.UsageVarargTest.varargLongAccepted":471,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":165,"org.easymock.tests.UsageExpectAndReturnTest.floatType":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":131,"org.easymock.tests2.ConstraintsToStringTest.orToString":259,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests.UsageThrowableTest.noUpperLimit":206,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":382,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":84,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":326,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":288,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":148,"org.easymock.tests2.UsageConstraintsTest.testSame":89,"org.easymock.samples.SupportTest.addDocument":389,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":331,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":338,"org.easymock.tests.GenericTest.testPackageScope":224,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":381,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":500,"org.easymock.tests2.NameTest.nameForMock":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":159,"org.easymock.tests2.UsageStrictMockTest.differentMethods":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":255,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":198,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":457,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":243,"org.easymock.tests2.MockedExceptionTest.testRealException":112,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":329,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":446,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":428,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":143,"org.easymock.tests2.NameTest.nameForStrictMock":355,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":19,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":77,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":327,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":504,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":294,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":57,"org.easymock.tests2.UsageStrictMockTest.range":122,"org.easymock.tests2.UsageConstraintsTest.lessThan":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":31,"org.easymock.tests2.CaptureTest.testCaptureRightOne":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":342,"org.easymock.tests2.UsageConstraintsTest.testOr":90,"org.easymock.tests.UsageRangeTest.combination":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageTest.wrongArguments":271,"org.easymock.tests2.MockBuilderTest.testWithConstructor":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":339,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":479,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":160,"org.easymock.tests.UsageVarargTest.varargShortAccepted":470,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":295,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":413,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":26,"org.easymock.tests2.CaptureTest.testCaptureFromStub":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":418,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":359,"org.easymock.tests.UsageTest.unexpectedCallWithArray":270,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":285,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":411,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":302,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":161,"org.easymock.tests2.CaptureTest.testCapture":290,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":493,"org.easymock.tests2.UsageConstraintsTest.constraints":85,"org.easymock.samples.ExampleTest.addAndChangeDocument":129,"org.easymock.tests2.ConstraintsToStringTest.notToString":261,"org.easymock.tests.UsageStrictMockTest.testVerify":495,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":393,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":492,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":487,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":289,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":179,"org.easymock.tests.LimitationsTest.abstractClass":429,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":180,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":505,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":36}}]
