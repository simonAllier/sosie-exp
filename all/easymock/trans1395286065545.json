[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,4,40],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[41,42,43,44,45,46,47,48],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[49,21,31,37,4,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[7,8,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[67,43,44,45,46,47,68],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79,41,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,3,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,4,5,6,162,163,164,165,50,53,54,166,167,168,169,170,171,60,172,173,62,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[67,4,42,43,44,45,46,47,48,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[311,312,86,88,89,98,99,105,106,313,314,315,193,194,195,196,198,199,201,202,205,316,206,209,210,317,318,319,320,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.internal.MocksControl:131","failures":[321],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[322,124,129,141],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[323,69,70,71,72,73,74,324,75,325,326,327,328,329,49,330,330,331,331,76,77,78,79,41,311,80,332,333,81,82,334,335,83,84,312,336,85,86,87,88,89,90,337,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,18,21,31,37,111,112,113,114,115,116,3,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,338,339,340,341,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,342,343,344,345,346,347,348,349,350,351,352,353,354,4,5,6,162,163,164,165,50,53,54,55,56,57,58,59,166,167,168,169,170,171,60,172,173,61,62,355,174,175,176,177,178,179,180,181,356,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,357,197,198,199,200,201,202,203,358,204,205,316,206,207,208,209,210,211,212,213,214,215,216,217,218,219,317,359,360,361,362,363,364,220,365,366,367,368,369,370,371,221,372,222,223,224,373,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,374,375,298,299,300,301,376,377,378,379,380,381,382,383,384,304,305,306,307,308,385,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:200","sourceCode":"if (!java.lang.Character.(java.lang.Character.isJavaIdentifierPart(char))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[386,387],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:95","sourceCode":"return java.util.List<T>","type":"CtReturnImpl"},"failures":[388,149,160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[326,327,49,330,330,331,331,76,77,78,41,67,333,81,82,334,83,84,389,390,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,4,6,391,392,50,393,51,52,394,53,54,55,56,40,57,58,395,59,166,167,169,170,171,60,172,396,397,173,61,62,355,398,63,399,184,185,64,400,65,66,401,402,212,403,219,404,405,406,407,295,296,297,408,377,378,379,380,381,382,383,384,385,409,410,411,412,413,414],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[415,416,198,316,417,418],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[49,21,31,37,4,50,51,52,53,55,56,58,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[419,420,421,322,422,116,117,124,126,129,132,135,136,138,141,172],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[423],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[4,5,6,424],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[326,327,49,76,77,78,333,81,334,83,390,18,21,31,37,6,50,51,52,394,53,54,55,56,57,58,59,166,167,169,170,171,60,172,397,173,61,62,355,398,63,174,184,185,64,65,66,212,219,405,406,407,295,296,297,408,377,378,379,380,381,382,383,384],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","sourceCode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"position":"org.easymock.Capture:82","failures":[148,150,151,152,153,154,155,157,0,158,159,161],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[323,69,70,71,72,73,74,324,75,325,326,327,328,329,49,330,330,331,331,76,77,78,79,41,311,80,332,333,81,82,334,335,83,84,312,336,85,86,87,88,89,90,337,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,18,21,31,37,111,112,113,114,115,116,3,117,118,119,120,121,122,123,124,425,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,338,339,340,341,142,143,426,144,145,146,427,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,342,343,344,345,346,347,348,349,350,351,352,353,354,4,5,6,162,428,429,163,164,165,50,51,53,54,55,56,57,58,59,166,167,168,169,170,171,60,172,173,61,62,355,174,175,176,177,178,179,180,181,356,182,183,430,431,432,184,185,64,186,187,188,189,190,191,192,193,194,195,196,433,434,357,197,198,199,200,201,202,203,358,204,205,316,206,207,208,209,210,211,212,213,214,215,216,217,218,219,317,359,360,361,362,363,364,220,365,366,367,368,369,370,371,221,372,222,223,435,224,373,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,423,436,437,438,439,255,256,257,258,259,260,261,440,262,263,264,265,266,267,268,269,270,271,272,273,274,441,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,442,443,444,407,295,296,297,374,375,298,299,300,301,376,302,303,377,378,379,380,381,382,383,384,445,304,305,306,307,308,446,447,448,385,320,309],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[67,43,44,45,449,46,47,48,68,450],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[118,123,134],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[164,165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":118,"org.easymock.tests2.UsageTest.argumentsOrdered":106,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":204,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":352,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":101,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":323,"org.easymock.tests2.DelegateToTest.testReturnException":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":214,"org.easymock.tests.MockingTest.testPartialClassMocking":295,"org.easymock.tests.MockClassControlTest.testToString":379,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":386,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":25,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":275,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":43,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":124,"org.easymock.tests2.UsageTest.wrongArguments":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":179,"org.easymock.samples.ExampleTest.answerVsDelegate":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":66,"org.easymock.tests2.UsageConstraintsTest.testNull":120,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":169,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":384,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":351,"org.easymock.tests2.CaptureTest.testPrimitive":151,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":229,"org.easymock.tests.UsageTest.moreThanOneArgument":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":294,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":306,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":423,"org.easymock.tests.UsageTest.argumentsOrdered":210,"org.easymock.tests.UsageVarargTest.varargIntAccepted":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":47,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":50,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":234,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":311,"org.easymock.tests.ReplayStateInvalidUsageTest.times":368,"org.easymock.tests2.AnswerTest.answer":162,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":94,"org.easymock.tests2.CaptureTest.testAnd":148,"org.easymock.tests2.UsageTest.strictResetToDefault":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":346,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":439,"org.easymock.tests2.DelegateToTest.testDelegate":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":290,"org.easymock.tests.LimitationsTest.mockFinalMethod":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":190,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":320,"org.easymock.tests2.CaptureTest.testCapture1_2446744":152,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":288,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":92,"org.easymock.tests.UsageThrowableTest.throwError":267,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":363,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":39,"org.easymock.samples.PartialClassMockTest.testGetArea":49,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":364,"org.easymock.tests2.CompareToTest.testLessOrEqual":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":231,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":443,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":404,"org.easymock.tests2.UsageTest.niceToStrict":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":276,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":14,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":53,"org.easymock.tests2.MockBuilderTest.testCreateMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":34,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":415,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":284,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":432,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":177,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":11,"org.easymock.tests.UsageOverloadedMethodTest.overloading":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":30,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":129,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":223,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":246,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":128,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":157,"org.easymock.tests2.EasyMockSupportClassTest.testAll":18,"org.easymock.tests.MockClassControlTest.testEquals":383,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":185,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":188,"org.easymock.tests2.CaptureTest.testCaptureAll":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":93,"org.easymock.tests.MockNameTest.defaultName":319,"org.easymock.tests2.UsageConstraintsTest.testMatches":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":307,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":361,"org.easymock.samples.ExampleTest.voteForRemovals":74,"org.easymock.tests.UsageVarargTest.allKinds":266,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":189,"org.easymock.samples.BasicClassMockTest.testPrintContent":327,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":273,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":218,"org.easymock.tests2.UsageConstraintsTest.greaterThan":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":19,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":356,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":355,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":414,"org.easymock.samples.ExampleTest.voteForRemoval":71,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":398,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":112,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":60,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":219,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":344,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":213,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":426,"org.easymock.tests2.CaptureTest.testCaptureFirst":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":345,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":108,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":242,"org.easymock.tests2.CaptureTest.testCapture2_2446744":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":114,"org.easymock.tests2.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":58,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":265,"org.easymock.tests.GenericTest.testBridgedEquals":400,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":12,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":302,"org.easymock.tests.UsageExpectAndReturnTest.longType":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":186,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":342,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":395,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":293,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":441,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":137,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":304,"org.easymock.tests.UsageCallCountTest.tooManyCalls":303,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":280,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":272,"org.easymock.tests.MockingTest.testNiceClassMocking":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":81,"org.easymock.tests.MockingTest.testClassMocking":406,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":393,"org.easymock.tests2.UsageConstraintsTest.testContains":127,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":375,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":78,"org.easymock.tests2.UsageConstraintsTest.testFind":119,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":176,"org.easymock.tests.MockTypeTest.fromEasyMockClass":314,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":143,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":357,"org.easymock.tests.UsageExpectAndReturnTest.object":245,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":350,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":44,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":261,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":360,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":13,"org.easymock.tests.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":255,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":436,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":67,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":251,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":257,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":222,"org.easymock.tests.MockClassControlTest.testHashCode":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":28,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":431,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":91,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":337,"org.easymock.tests.UsageVarargTest.varargCharAccepted":260,"org.easymock.tests2.CaptureTest.testCaptureMultiple":388,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":85,"org.easymock.tests2.UsageTest.openCallCountByLastCall":102,"org.easymock.tests.DefaultClassInstantiatorTest.object":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":7,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":430,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":317,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":29,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":61,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":381,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":281,"org.easymock.tests.CapturesMatcherTest.test":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":252,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":37,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":380,"org.easymock.tests2.UsageTest.resumeIfFailure":107,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":216,"org.easymock.tests2.StubTest.stubWithReturnValue":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":244,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":433,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":416,"org.easymock.samples.SupportTest.voteForRemovals":329,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":287,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":424,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":434,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":428,"org.easymock.tests.UsageExpectAndThrowTest.object":285,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":135,"org.easymock.tests2.DelegateToTest.testWrongClass":146,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":192,"org.easymock.tests.UsageStrictMockTest.range":201,"org.easymock.samples.ConstructorCalledMockTest.testTax":330,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":313,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":286,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":15,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":209,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":178,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":444,"org.easymock.tests2.CaptureTest.testCaptureNone":156,"org.easymock.tests.UsageUnorderedTest.message":193,"org.easymock.tests.UsageVerifyTest.twoReturns":196,"org.easymock.tests.UsageVarargTest.varargByteAccepted":264,"org.easymock.tests2.ThreadingTest.testThreadSafe":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":32,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":301,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":318,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":326,"org.easymock.tests2.CaptureTest.testCapture_2617107":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":228,"org.easymock.tests2.UsageConstraintsTest.any":125,"org.easymock.tests2.StubTest.stub":109,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":367,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":215,"org.easymock.tests.UsageExpectAndThrowTest.longType":278,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":412,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":366,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":87,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":312,"org.easymock.tests.LimitationsTest.mockNativeMethod":212,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":254,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":90,"org.easymock.tests2.NameTest.nameForMocksControl":341,"org.easymock.tests2.MockedExceptionTest.testMockedException":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":20,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":279,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":166,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":56,"org.easymock.tests.MockingTest.testNicePartialClassMocking":296,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":171,"org.easymock.tests2.CompareToTest.testCompareEqual":421,"org.easymock.tests2.CaptureTest.testCaptureLast":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":309,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":123,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":136,"org.easymock.tests.MockingTest.testTwoMocks":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":235,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":283,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":105,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":140,"org.easymock.samples.ExampleTest.removeNonExistingDocument":324,"org.easymock.tests.UsageStrictMockTest.differentMethods":202,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":220,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":410,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":113,"org.easymock.tests2.MockBuilderTest.testCreateMockString":59,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":22,"org.easymock.tests.UsageExpectAndThrowTest.floatType":277,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":17,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":163,"org.easymock.tests.UsageVerifyTest.twoThrows":195,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":31,"org.easymock.samples.ExampleTest.voteAgainstRemoval":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":442,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":62,"org.easymock.tests.LimitationsTest.privateConstructor":402,"org.easymock.tests2.UsageConstraintsTest.testNotNull":139,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":274,"org.easymock.tests2.UsageTest.defaultResetToNice":104,"org.easymock.samples.ExampleTest.voteAgainstRemovals":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":250,"org.easymock.tests.UsageVarargTest.differentLength":440,"org.easymock.tests2.CallbackTest.callback":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":396,"org.easymock.tests.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":227,"org.easymock.tests.UsageCallCountTest.tooFewCalls":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":180,"org.easymock.tests.UsageThrowableTest.throwCheckedException":271,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":418,"org.easymock.tests.MockingTest.testStrictClassMocking":405,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":256,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":82,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":369,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":335,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":165,"org.easymock.tests2.CompareToTest.testGreateOrEqual":322,"org.easymock.tests.ObjectMethodsTest.testHashCode":359,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":46,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":115,"org.easymock.tests2.NameTest.nameForNiceMock":340,"org.easymock.tests2.DependencyTest.testInterfaceMocking":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":45,"org.easymock.samples.ExampleTest.addDocument":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":33,"org.easymock.tests2.DelegateToTest.testStubDelegate":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":38,"org.easymock.tests2.AnswerTest.stubAnswer":164,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":199,"org.easymock.tests.UsageVarargTest.varargLongAccepted":263,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":203,"org.easymock.tests.UsageExpectAndReturnTest.floatType":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":41,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":331,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":133,"org.easymock.tests.UsageThrowableTest.noUpperLimit":268,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":389,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":153,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":409,"org.easymock.tests2.UsageConstraintsTest.testSame":121,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":236,"org.easymock.samples.SupportTest.addDocument":328,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":23,"org.easymock.tests.GenericTest.testPackageScope":184,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":438,"org.easymock.tests2.NameTest.nameForMock":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":247,"org.easymock.tests2.UsageStrictMockTest.differentMethods":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":397,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":239,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":183,"org.easymock.tests2.MockedExceptionTest.testRealException":79,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":450,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":226,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":371,"org.easymock.tests2.NameTest.nameForStrictMock":339,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":8,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":170,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":390,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":411,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":134,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":51,"org.easymock.tests2.UsageStrictMockTest.range":88,"org.easymock.tests2.UsageConstraintsTest.lessThan":141,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":343,"org.easymock.tests2.CaptureTest.testCaptureRightOne":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":27,"org.easymock.tests2.UsageConstraintsTest.testOr":122,"org.easymock.tests.UsageRangeTest.combination":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":167,"org.easymock.tests.UsageTest.wrongArguments":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":24,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":378,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":248,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":413,"org.easymock.tests.UsageVarargTest.varargShortAccepted":262,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":376,"org.easymock.tests2.UsageConstraintsTest.cmpTo":126,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":429,"org.easymock.tests2.CompareToTest.testLessThan":419,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":103,"org.easymock.tests2.CaptureTest.testCaptureFromStub":159,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":362,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":52,"org.easymock.tests.UsageTest.unexpectedCallWithArray":316,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":198,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":249,"org.easymock.tests2.CaptureTest.testCapture":0,"org.easymock.tests2.UsageConstraintsTest.constraints":117,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":200,"org.easymock.samples.ExampleTest.addAndChangeDocument":75,"org.easymock.tests.UsageStrictMockTest.testVerify":358,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":325,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests2.CompareToTest.testGreateThan":420,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":187,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":154,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":232,"org.easymock.tests.LimitationsTest.abstractClass":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":241,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":233,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":348}}]
