[{"position":"org.easymock.internal.RecordState:136","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[35,36,37,38],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[39,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,1,2,102,103,3,4,5,6,104,105,106,107,7,108,8,9,109,10,11,110,111,112,113,12,13,14,114,115,116,117,118,119,120,121,15,122,123,124,125,126,127,128,129,18,130,131,132,19,20,21,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,22,23,24,25,26,158,159,160,161,162,163,164,165,27,28,166,167,168,169,170,171,172,173,174,34,175,176,177,178,179],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[82,180,84,85,181,182,86,88,183,89,0,91],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[184,185,186,187,188,189,190],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[102,104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[39,35,36,191,192,193,194,40,195,41,42,196,197,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,198,64,65,66,67,68,69,70,71,72,73,74,75,199,76,77,78,79,80,81,82,83,84,85,86,87,88,89,0,90,91,92,93,94,95,96,97,98,99,100,101,1,2,102,103,3,4,5,6,104,105,106,107,7,108,8,9,109,10,11,110,111,112,113,12,13,14,200,201,114,202,115,203,184,116,185,186,187,117,118,119,120,121,15,122,123,124,125,188,126,127,128,204,16,16,17,17,129,205,206,207,18,208,130,131,132,209,19,20,210,211,21,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,212,153,154,155,156,157,213,214,215,216,22,23,24,25,26,217,218,158,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,159,240,160,161,162,163,164,165,27,28,241,242,243,244,245,246,247,248,249,250,251,166,167,168,252,169,29,30,31,32,33,253,190,254,170,255,256,257,171,172,173,174,34,175,176,177,178,179,258,259,260,261,262],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:314","failures":[214,215,256,257],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:500","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[196,197,52,53,58,61,73,74,75,263,264,77,81,181,95,96,97,1,265,266,267,268,269,270,271,272,273,274,275,171,172,173,174,276,277,179,258],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[120,218,243,245],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[277],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[278],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"actual"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:56","sourceCode":"final org.easymock.internal.matchers.Equals org.easymock.internal.matchers.Equals = ((org.easymock.internal.matchers.Equals)(java.lang.Object))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[279],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[37,194,196,197,280,281,282,283,55,61,62,63,284,198,263,264,285,286,199,77,78,81,83,180,181,182,86,87,91,92,287,106,288,113,265,289,15,290,122,123,291,292,124,293,125,126,127,294,128,204,295,296,297,210,211,212,298,299,300,301,216,302,303,304,305,306,217,240,307,308,309,310,311,266,267,268,312,269,270,271,272,273,274,275,166,313,276,314,315,34,316,175,176,317,318,259,260],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[43,280,46,281,282,283,50,51,53,57,58,61,198,77,319,81,320,93,99,101,102,109,265,290,122,123,153,321,298,299,300,157,322,305,306,217,270,252,169,323,324,325,326,171,276,315,316,175,176],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[35,66,70,327,71,328,329,330,331,72,332,333,73,334,335,336,337,338,339,340,341,342,74,343,344,345,346,347,75,348,349,350,351,352,353,354,355,356,357,16,17],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[358,239,359,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[361,362,321,363,364,315],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[365,309,241],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[91],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[366,367],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[191,193,194,195,196,197,198,188,368,253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[5],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[191,193,194,195,196,197,198,188,368,253],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[369],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[370,166,313,167,371],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[39,35,36,191,192,193,194,40,195,41,42,196,197,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,198,64,65,66,67,68,69,70,71,72,73,74,75,199,76,77,78,79,80,81,82,83,84,85,86,87,88,89,0,90,91,92,93,94,95,96,97,98,99,100,101,1,2,102,103,3,4,5,6,104,105,106,107,7,108,8,9,109,10,11,110,111,112,113,12,13,14,200,201,114,202,115,203,184,116,185,186,187,117,118,119,120,121,15,122,123,124,125,188,126,127,128,204,16,16,17,17,129,205,206,207,18,208,130,131,132,209,19,20,210,211,21,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,212,153,154,155,156,157,213,214,215,216,22,23,24,25,26,217,218,158,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,159,240,160,161,162,163,164,165,27,28,241,242,243,244,245,246,247,248,249,250,251,166,167,168,252,169,29,30,31,32,33,253,190,254,170,255,256,257,171,172,173,174,34,175,176,177,178,179,258,259,260,261,262],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[328,352,372,373,374,375,376],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[377],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[103,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[378],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","sourceCode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":103,"org.easymock.tests2.UsageTest.argumentsOrdered":283,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":377,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":281,"org.easymock.tests2.StubTest.stubWithReturnValue":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":352,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":293,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":113,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":142,"org.easymock.tests2.SerializationTest.testAllMockedMethod":37,"org.easymock.tests2.DelegateToTest.testReturnException":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":247,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":241,"org.easymock.tests.MockingTest.testPartialClassMocking":177,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":362,"org.easymock.samples.SupportTest.voteForRemovals":124,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":370,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":244,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":38,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":219,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":73,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":192,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":245,"org.easymock.tests.UsageExpectAndThrowTest.object":229,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":42,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":372,"org.easymock.tests2.DelegateToTest.testWrongClass":185,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":27,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":28,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":105,"org.easymock.tests2.UsageTest.wrongArguments":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":19,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests.UsageStrictMockTest.range":175,"org.easymock.samples.ExampleTest.answerVsDelegate":188,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":59,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":64,"org.easymock.tests2.UsageConstraintsTest.testNull":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":61,"org.easymock.tests2.CaptureTest.testPrimitive":84,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":329,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":238,"org.easymock.tests.UsageTest.moreThanOneArgument":154,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":94,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":31,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":207,"org.easymock.tests2.CaptureTest.testCaptureNone":87,"org.easymock.tests.UsageUnorderedTest.message":217,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":323,"org.easymock.tests.UsageVerifyTest.twoReturns":169,"org.easymock.tests.UsageVarargTest.varargByteAccepted":273,"org.easymock.tests2.ThreadingTest.testThreadSafe":117,"org.easymock.tests.UsageTest.argumentsOrdered":300,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":258,"org.easymock.tests.UsageVarargTest.varargIntAccepted":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":343,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":304,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":22,"org.easymock.tests2.CaptureTest.testCapture_2617107":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":376,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":211,"org.easymock.tests2.UsageConstraintsTest.any":106,"org.easymock.tests2.StubTest.stub":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":248,"org.easymock.tests.UsageExpectAndThrowTest.longType":222,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":290,"org.easymock.tests2.SerializationTest.testClass":35,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests.ReplayStateInvalidUsageTest.times":365,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":39,"org.easymock.tests.LimitationsTest.mockNativeMethod":158,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":378,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":152,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":167,"org.easymock.tests2.AnswerTest.answer":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":310,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests2.UsageTest.strictResetToDefault":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":351,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.tests2.NameTest.nameForMocksControl":286,"org.easymock.tests2.MockedExceptionTest.testMockedException":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":56,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":173,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":262,"org.easymock.tests2.DelegateToTest.testDelegate":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":223,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":179,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":234,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":97,"org.easymock.tests2.CaptureTest.testCaptureLast":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":250,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":239,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":70,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":104,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":112,"org.easymock.tests.MockingTest.testTwoMocks":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":358,"org.easymock.tests2.CaptureTest.testCapture1_2446744":85,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":133,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":227,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":282,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":13,"org.easymock.tests.UsageThrowableTest.throwError":159,"org.easymock.tests.UsageStrictMockTest.differentMethods":176,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":119,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":324,"org.easymock.tests2.MockBuilderTest.testCreateMockString":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":334,"org.easymock.tests.UsageExpectAndThrowTest.floatType":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":33,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":194,"org.easymock.tests.UsageVerifyTest.twoThrows":252,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":74,"org.easymock.samples.PartialClassMockTest.testGetArea":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":23,"org.easymock.samples.ExampleTest.voteAgainstRemoval":127,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":205,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":220,"org.easymock.tests2.UsageTest.niceToStrict":46,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":357,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":165,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":319,"org.easymock.tests2.UsageTest.defaultResetToNice":49,"org.easymock.samples.ExampleTest.voteAgainstRemovals":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":345,"org.easymock.tests.UsageVarargTest.differentLength":270,"org.easymock.tests2.CallbackTest.callback":198,"org.easymock.tests.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":228,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":57,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":257,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":210,"org.easymock.tests.UsageCallCountTest.tooFewCalls":302,"org.easymock.tests.UsageOverloadedMethodTest.overloading":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":342,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":254,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":67,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":144,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":366,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":108,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":279,"org.easymock.tests.UsageThrowableTest.throwCheckedException":162,"org.easymock.tests2.EasyMockSupportClassTest.testAll":72,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":313,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":236,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":208,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":66,"org.easymock.tests2.UsageConstraintsTest.testMatches":9,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":68,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":32,"org.easymock.samples.ExampleTest.voteForRemovals":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":375,"org.easymock.tests2.NameTest.nameForNiceMock":285,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":121,"org.easymock.tests.UsageVarargTest.allKinds":275,"org.easymock.tests2.DependencyTest.testInterfaceMocking":41,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":374,"org.easymock.samples.BasicClassMockTest.testPrintContent":297,"org.easymock.samples.ExampleTest.addDocument":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.DelegateToTest.testStubDelegate":116,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":164,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests2.AnswerTest.stubAnswer":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":251,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":186,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":34,"org.easymock.tests2.UsageConstraintsTest.greaterThan":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":172,"org.easymock.tests.UsageVarargTest.varargLongAccepted":272,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":101,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":317,"org.easymock.samples.ExampleTest.voteForRemoval":126,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":118,"org.easymock.tests.UsageExpectAndReturnTest.floatType":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":71,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests.UsageThrowableTest.noUpperLimit":240,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":11,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":212,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":2,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests2.SerializationTest.test":36,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":181,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":353,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":54,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":160,"org.easymock.tests2.UsageConstraintsTest.testSame":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":330,"org.easymock.samples.SupportTest.addDocument":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":246,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":203,"org.easymock.tests2.CaptureTest.testCaptureFirst":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":55,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":51,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":335,"org.easymock.tests.GenericTest.testPackageScope":166,"org.easymock.tests2.CaptureTest.testCapture2_2446744":90,"org.easymock.tests2.UsageTest.moreThanOneArgument":45,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":311,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":274,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":305,"org.easymock.tests2.NameTest.nameForMock":263,"org.easymock.tests.UsageExpectAndReturnTest.longType":136,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":145,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":288,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":209,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":235,"org.easymock.tests2.UsageStrictMockTest.differentMethods":123,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":137,"org.easymock.tests.UsageCallCountTest.tooManyCalls":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":174,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":346,"org.easymock.tests2.MockedExceptionTest.testRealException":202,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":224,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":20,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":65,"org.easymock.tests2.NameTest.nameForStrictMock":264,"org.easymock.tests2.UsageConstraintsTest.testContains":7,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":3,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":132,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":96,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":197,"org.easymock.tests.UsageExpectAndReturnTest.object":143,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":110,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":98,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":77,"org.easymock.tests2.UsageStrictMockTest.range":122,"org.easymock.tests2.UsageConstraintsTest.lessThan":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":373,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":269,"org.easymock.tests.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":308,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":339,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":259,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":243,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":328,"org.easymock.tests.UsageRangeTest.combination":171,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":149,"org.easymock.tests.UsageTest.wrongArguments":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":190,"org.easymock.tests2.MockBuilderTest.testWithConstructor":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":336,"org.easymock.tests2.EasyMockSupportTest.testVerify":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":340,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":260,"org.easymock.tests.UsageVarargTest.varargShortAccepted":271,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":256,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":253,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":325,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":322,"org.easymock.tests2.UsageConstraintsTest.cmpTo":107,"org.easymock.tests.UsageVarargTest.varargCharAccepted":312,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":193,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":289,"org.easymock.tests2.UsageTest.openCallCountByLastCall":47,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":48,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":63,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":255,"org.easymock.tests2.CaptureTest.testCaptureFromStub":0,"org.easymock.tests.UsageTest.unexpectedCallWithArray":321,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":226,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":303,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":147,"org.easymock.tests2.CaptureTest.testCapture":183,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":99,"org.easymock.tests2.UsageConstraintsTest.constraints":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":225,"org.easymock.samples.ExampleTest.addAndChangeDocument":204,"org.easymock.tests.CapturesMatcherTest.test":278,"org.easymock.tests.UsageStrictMockTest.testVerify":318,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":213,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":295,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":75,"org.easymock.tests2.UsageTest.resumeIfFailure":50,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":25,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":170,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":58}}]
