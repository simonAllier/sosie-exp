[{"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:172","failures":[67,68],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[19,21,29,38,39,41,43,44,46,56,61],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[19,21,29,38,39,43,44,46,56],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[69,70,71,72,73,74,75],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[11,12,76,77,78,79,80,81,82,83,84,35,85,86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"actual"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[87,67,88,89,90,90,91,91,92,93,94,95,96,97,98,99,100,101,102,103,104,68,105,106,107,108,109,110,111,112,113,70],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[96,98,101,108,110],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[114,115,116],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[117,118,119,120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[32,93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[99,69,70,122,71,72,73,74,75,123],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[124,125,126,11,127,76,77,13,128,79,129,130,131,132,133,134,85,86,38,108,109,135,136,137,138,139,140],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[141],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[142,143,144,145,13,146,147,148,149,150,151,152,153,154,155,156,157,20,26,27,32,158,159,160,161,36,51,54,63,162,163,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[88,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[123],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.Range:44","failures":[166,167,168,169,170,171,172,173,174,175,176,177,178,179,0,1,2,3,4,180,181,182,5,6,7,8,9,183,184,185,186,10,187,87,188,189,190,191,67,192,193,194,195,196,197,198,199,200,117,201,202,203,204,142,205,206,207,143,208,209,210,211,212,213,214,215,216,217,218,219,220,124,125,221,222,223,144,126,224,11,12,127,76,77,225,78,226,227,228,229,88,230,231,89,164,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,145,248,118,249,250,251,252,253,254,255,256,257,13,258,259,260,261,262,146,263,264,265,266,267,147,268,269,270,271,272,148,273,274,275,149,276,150,277,278,279,280,281,282,283,284,285,286,287,288,14,15,16,119,120,121,17,18,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,151,333,334,335,336,337,152,338,339,340,341,342,153,343,344,345,154,346,155,347,128,156,79,129,348,349,130,131,132,350,351,352,353,354,355,356,357,358,359,360,90,91,92,361,362,363,364,365,366,367,368,157,369,370,19,20,21,22,23,24,25,26,27,28,29,30,31,32,93,371,372,373,374,375,376,80,377,81,378,82,94,379,33,95,380,83,96,97,84,381,98,382,383,384,385,386,387,388,389,390,391,392,393,158,159,160,34,394,395,396,397,398,399,400,401,402,403,404,405,406,407,133,408,35,134,85,86,409,99,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,161,36,37,38,39,430,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,431,432,433,434,435,436,437,438,439,440,441,442,100,443,101,102,444,103,104,445,68,69,105,106,107,446,108,447,109,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,110,466,467,468,469,470,471,472,473,474,111,475,476,477,478,479,112,480,481,482,483,484,485,64,162,135,165,163,136,486,137,487,488,489,138,139,490,140,65,491,66,113,70,492,493,494,495,496,497,498],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[443],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[56],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[54,499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[53],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[7,8,183,184,185,186,10,187,124,144,250,252,253,254,255,256,257,146,263,264,265,266,267,147,268,269,270,271,272,148,273,274,275,149,276,150,277,18,306,128,349,93,371,372,373,375,135,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[500,379,501],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,220,124,125,221,222,223,144,224,11,12,127,76,77,225,226,230,231,250,251,252,253,254,255,256,257,13,261,146,263,264,265,266,267,147,268,269,270,271,272,148,273,274,275,149,276,150,277,278,279,280,282,283,285,286,287,288,14,15,16,17,296,297,298,299,301,302,303,305,306,313,314,316,151,333,334,335,336,337,152,338,339,340,341,342,153,343,344,345,154,346,155,347,128,156,129,348,349,130,131,132,358,359,360,92,361,362,363,364,365,366,367,157,369,370,19,20,21,22,23,24,25,26,27,28,29,31,32,372,375,376,80,377,81,378,82,33,97,158,159,160,34,394,395,396,397,398,400,401,402,408,35,134,85,86,409,99,410,411,412,413,414,415,416,417,418,420,421,422,423,424,426,427,428,161,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,436,104,68,105,453,463,110,111,112,484,485,162,135,165,163,136,486,137,487,488,138,139,140,65,66,113,493,496,497,498],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[502,503],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[176,177,7,8,221,126,224,11,12,127,76,77,225,78,231,251,13,278,279,280,282,283,284,285,286,287,288,14,15,294,296,297,298,299,301,302,321,129,130,131,358,359,360,361,362,364,365,366,367,157,369,370,20,21,24,25,26,27,32,93,374,383,384,385,386,133,408,35,134,85,86,409,411,415,421,422,423,424,46,47,59,60,101,104,108,136,137,138,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[42],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[166,167,168,169,170,171,172,173,174,175,176,177,178,179,0,1,2,3,4,180,181,182,5,6,7,8,9,183,184,185,186,10,187,87,188,189,190,191,67,192,193,194,195,196,197,198,199,200,117,201,202,203,204,142,205,206,207,143,208,209,210,211,212,213,214,215,216,217,218,219,220,124,125,221,222,223,144,126,224,11,12,127,76,77,225,78,226,227,228,229,88,230,231,89,164,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,145,248,118,249,250,251,252,253,254,255,256,257,13,258,259,260,261,262,146,263,264,265,266,267,147,268,269,270,271,272,148,273,274,275,149,276,150,277,278,279,280,281,282,283,284,285,286,287,288,14,15,16,119,120,121,17,18,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,151,333,334,335,336,337,152,338,339,340,341,342,153,343,344,345,154,346,155,347,128,156,79,129,348,349,130,131,132,350,351,352,353,354,355,356,357,358,359,360,90,91,92,361,362,363,364,365,366,367,368,157,369,370,19,20,21,22,23,24,25,26,27,28,29,30,31,32,93,371,372,373,374,375,376,80,377,81,378,82,94,379,33,95,380,83,96,97,84,381,98,382,383,384,385,386,387,388,389,390,391,392,393,158,159,160,34,394,395,396,397,398,399,400,401,402,403,404,405,406,407,133,408,35,134,85,86,409,99,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,161,36,37,38,39,430,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,431,432,433,434,435,436,437,438,439,440,441,442,100,443,101,102,444,103,104,445,68,69,105,106,107,446,108,447,109,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,110,466,467,468,469,470,471,472,473,474,111,475,476,477,478,479,112,480,481,482,483,484,485,64,162,135,165,163,136,486,137,487,488,489,138,139,490,140,65,491,66,113,70,492,493,494,495,496,497,498],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":39,"org.easymock.tests2.UsageTest.argumentsOrdered":139,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":203,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":137,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":361,"org.easymock.tests2.DelegateToTest.testReturnException":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":184,"org.easymock.tests.MockingTest.testPartialClassMocking":313,"org.easymock.tests.MockClassControlTest.testToString":234,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":382,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":146,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":110,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":485,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":71,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":45,"org.easymock.tests2.UsageTest.wrongArguments":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":5,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":352,"org.easymock.samples.ExampleTest.answerVsDelegate":363,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":67,"org.easymock.tests2.UsageConstraintsTest.testNull":41,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":318,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":81,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":421,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":239,"org.easymock.tests2.CaptureTest.testPrimitive":22,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":9,"org.easymock.tests.UsageTest.moreThanOneArgument":156,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":277,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":377,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":291,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":175,"org.easymock.tests.UsageTest.argumentsOrdered":131,"org.easymock.tests.UsageVarargTest.varargIntAccepted":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":0,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":441,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":389,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":4,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":453,"org.easymock.tests.ReplayStateInvalidUsageTest.times":145,"org.easymock.tests2.DependencyTest.testClassMocking":482,"org.easymock.tests2.AnswerTest.answer":493,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":407,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":189,"org.easymock.tests2.CaptureTest.testAnd":19,"org.easymock.tests2.UsageTest.strictResetToDefault":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":416,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":179,"org.easymock.tests2.DelegateToTest.testDelegate":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":275,"org.easymock.tests.LimitationsTest.mockFinalMethod":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":219,"org.easymock.tests2.DependencyTest.testClassMockingSupport":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":180,"org.easymock.tests2.CaptureTest.testCapture1_2446744":23,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":379,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":405,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":242,"org.easymock.tests.UsageThrowableTest.throwError":250,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":191,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":442,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":481,"org.easymock.samples.PartialClassMockTest.testGetArea":92,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":243,"org.easymock.tests.MockingTest.testInterfaceMocking":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":1,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":322,"org.easymock.tests2.UsageTest.niceToStrict":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":470,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":263,"org.easymock.tests2.ThreadingTest.testChangeDefault":501,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":194,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":104,"org.easymock.tests2.MockBuilderTest.testCreateMock":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":477,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":456,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":270,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":417,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":188,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":356,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":350,"org.easymock.tests.UsageOverloadedMethodTest.overloading":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":51,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":306,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":222,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":342,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":50,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":28,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":281,"org.easymock.tests2.EasyMockSupportClassTest.testAll":463,"org.easymock.tests.MockClassControlTest.testEquals":238,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":231,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":406,"org.easymock.tests2.CaptureTest.testCaptureAll":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":217,"org.easymock.tests.MockNameTest.defaultName":258,"org.easymock.tests2.UsageConstraintsTest.testMatches":52,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":292,"org.easymock.samples.ExampleTest.voteForRemovals":367,"org.easymock.tests.UsageVarargTest.allKinds":14,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":218,"org.easymock.samples.BasicClassMockTest.testPrintContent":360,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":256,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":438,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":123,"org.easymock.tests2.UsageConstraintsTest.greaterThan":54,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":84,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":332,"org.easymock.samples.ExampleTest.voteForRemoval":364,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":159,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":381,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":192,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":390,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":94,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":221,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":414,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":183,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":425,"org.easymock.tests2.CaptureTest.testCaptureFirst":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":415,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":338,"org.easymock.tests2.UsageTest.moreThanOneArgument":163,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":34,"org.easymock.tests2.CaptureTest.testCapture2_2446744":31,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":209,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":288,"org.easymock.tests.GenericTest.testBridgedEquals":164,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":301,"org.easymock.tests.UsageExpectAndReturnTest.longType":335,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":150,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":59,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":357,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":149,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":289,"org.easymock.tests.UsageCallCountTest.tooManyCalls":302,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":255,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":396,"org.easymock.tests.MockingTest.testNiceClassMocking":319,"org.easymock.tests.MockingTest.testClassMocking":311,"org.easymock.tests2.UsageConstraintsTest.testContains":49,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":295,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":372,"org.easymock.tests2.UsageConstraintsTest.testFind":40,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":144,"org.easymock.tests.MockTypeTest.fromEasyMockClass":190,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":126,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":66,"org.easymock.tests.UsageExpectAndReturnTest.object":341,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":420,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":72,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":283,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":169,"org.easymock.tests.UsageTest.exactCallCountByLastCall":132,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":199,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":176,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":172,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":154,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":278,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":432,"org.easymock.tests.MockClassControlTest.testHashCode":237,"org.easymock.tests2.EasyMockSupportTest.testVerify":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":472,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":177,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":404,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":64,"org.easymock.tests.UsageVarargTest.varargCharAccepted":282,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":324,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":214,"org.easymock.tests2.UsageTest.openCallCountByLastCall":487,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":423,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":115,"org.easymock.tests.DefaultClassInstantiatorTest.object":325,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":354,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":473,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":431,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":96,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":147,"org.easymock.tests.CapturesMatcherTest.test":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":112,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":235,"org.easymock.tests2.UsageTest.resumeIfFailure":490,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":186,"org.easymock.tests2.StubTest.stubWithReturnValue":375,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":69,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":340,"org.easymock.tests2.SerializationTest.testAllMockedMethod":411,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":143,"org.easymock.samples.SupportTest.voteForRemovals":370,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":148,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":213,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":494,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":174,"org.easymock.tests.UsageExpectAndThrowTest.object":271,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":57,"org.easymock.tests2.DelegateToTest.testWrongClass":428,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":15,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":16,"org.easymock.tests.UsageStrictMockTest.range":76,"org.easymock.samples.ConstructorCalledMockTest.testTax":90,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":392,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":272,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":460,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":130,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":351,"org.easymock.tests2.CaptureTest.testCaptureNone":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":323,"org.easymock.tests.UsageUnorderedTest.message":13,"org.easymock.tests.UsageVerifyTest.twoReturns":125,"org.easymock.tests.UsageVarargTest.varargByteAccepted":287,"org.easymock.tests2.ThreadingTest.testThreadSafe":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":475,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":299,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":170,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":359,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":211,"org.easymock.tests2.UsageConstraintsTest.any":47,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":247,"org.easymock.tests2.StubTest.stub":374,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":212,"org.easymock.tests.UsageExpectAndThrowTest.longType":265,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":329,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":246,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":134,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":436,"org.easymock.tests2.SerializationTest.testClass":99,"org.easymock.tests.LimitationsTest.mockNativeMethod":261,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":450,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":409,"org.easymock.tests2.NameTest.nameForMocksControl":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":452,"org.easymock.tests2.MockedExceptionTest.testMockedException":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":465,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":349,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":491,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":266,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":316,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":376,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":105,"org.easymock.tests.MockingTest.testNicePartialClassMocking":314,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":122,"org.easymock.tests2.CaptureTest.testCaptureLast":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":402,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":44,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":58,"org.easymock.tests.MockingTest.testTwoMocks":312,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":269,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":138,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":62,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":500,"org.easymock.samples.ExampleTest.removeNonExistingDocument":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":455,"org.easymock.tests.UsageStrictMockTest.differentMethods":77,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":244,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":433,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":327,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":160,"org.easymock.tests2.MockBuilderTest.testCreateMockString":109,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":466,"org.easymock.tests.UsageExpectAndThrowTest.floatType":264,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":496,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":492,"org.easymock.tests.UsageVerifyTest.twoThrows":124,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":111,"org.easymock.samples.ExampleTest.voteAgainstRemoval":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":321,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":97,"org.easymock.tests.LimitationsTest.privateConstructor":260,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":257,"org.easymock.tests2.UsageTest.defaultResetToNice":489,"org.easymock.samples.ExampleTest.voteAgainstRemovals":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":142,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":345,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":449,"org.easymock.tests.UsageVarargTest.differentLength":284,"org.easymock.tests2.CallbackTest.callback":162,"org.easymock.tests2.UsageConstraintsTest.equals":430,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":95,"org.easymock.tests.UsageTest.openCallCountByLastCall":348,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":7,"org.easymock.tests.UsageCallCountTest.tooFewCalls":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":398,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":353,"org.easymock.tests.UsageThrowableTest.throwCheckedException":254,"org.easymock.tests.MockingTest.testStrictClassMocking":310,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":401,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":454,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":397,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":400,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":498,"org.easymock.tests.ObjectMethodsTest.testHashCode":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":74,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":394,"org.easymock.tests2.NameTest.nameForNiceMock":385,"org.easymock.tests2.DependencyTest.testInterfaceMocking":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":73,"org.easymock.samples.ExampleTest.addDocument":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":480,"org.easymock.tests2.DelegateToTest.testStubDelegate":427,"org.easymock.tests2.AnswerTest.stubAnswer":497,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":106,"org.easymock.tests.UsageVarargTest.varargLongAccepted":286,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":155,"org.easymock.tests.UsageExpectAndReturnTest.floatType":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":113,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":440,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":55,"org.easymock.tests.UsageThrowableTest.noUpperLimit":251,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":307,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":387,"org.easymock.tests2.SerializationTest.test":410,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":24,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":326,"org.easymock.tests2.UsageConstraintsTest.testSame":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":333,"org.easymock.samples.SupportTest.addDocument":369,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":399,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":467,"org.easymock.tests.GenericTest.testPackageScope":230,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":198,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":439,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":317,"org.easymock.tests2.NameTest.nameForMock":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":447,"org.easymock.tests2.UsageStrictMockTest.differentMethods":86,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":380,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":274,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":229,"org.easymock.tests2.MockedExceptionTest.testRealException":373,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":193,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":206,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":249,"org.easymock.tests2.NameTest.nameForStrictMock":384,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":103,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":116,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":65,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":378,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":391,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":56,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":328,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":101,"org.easymock.tests2.UsageStrictMockTest.range":85,"org.easymock.tests2.UsageConstraintsTest.lessThan":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":435,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":471,"org.easymock.tests2.CaptureTest.testCaptureRightOne":29,"org.easymock.tests2.UsageConstraintsTest.testOr":43,"org.easymock.tests.UsageRangeTest.combination":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":80,"org.easymock.tests.UsageTest.wrongArguments":129,"org.easymock.tests2.MockBuilderTest.testWithConstructor":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":468,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":195,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":343,"org.easymock.tests.UsageVarargTest.varargShortAccepted":285,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":330,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":300,"org.easymock.tests2.UsageConstraintsTest.cmpTo":48,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":197,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":488,"org.easymock.tests2.CaptureTest.testCaptureFromStub":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":241,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":102,"org.easymock.tests.UsageTest.unexpectedCallWithArray":79,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":298,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":141,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":344,"org.easymock.tests2.CaptureTest.testCapture":503,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":127,"org.easymock.tests2.UsageConstraintsTest.constraints":38,"org.easymock.samples.ExampleTest.addAndChangeDocument":157,"org.easymock.tests.UsageStrictMockTest.testVerify":78,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":358,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests2.CompareToTest.testGreateThan":499,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":216,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":2,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":152,"org.easymock.tests.LimitationsTest.abstractClass":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":3,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":418,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":279}}]
