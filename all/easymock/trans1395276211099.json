[{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[14,15,16,2,3,17,18,19],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,14,27,28,29,30,31,32,33],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[35,36,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:39","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(float.float, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[38],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[39,40],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[4,41,7,8,9,38,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[4,41,7,8,9,38,10,11,12,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[43,42,44,45,46,47,1,48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[49,50,44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[51,52,53,54,33],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,49,75,43,42,50,76,77,44,45,78,79,34,80,81,82,39,83,46,47,84,0,85,1,48,86,87,88,89,90,91,92,5,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,35,124,36,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,22,140,51,141,142,143,144,145,146,147,23,148,149,150,151,152,24,25,153,154,155,156,26,14,20,157,15,158,16,159,2,3,17,160,161,162,163,164,165,166,167,168,169,169,170,170,171,172,173,174,175,176,18,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,27,275,52,276,277,278,279,28,280,281,29,30,282,283,31,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,32,54,33,315,316,317,318,319,320,321,322,323,19,324,325,326,327,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[5,93,94,329],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[330],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[51,150,154,155,331,270,274,52,332,281,282,283,54,33,333],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,49,75,43,42,50,76,77,45,78,79,34,80,81,82,39,83,46,47,84,85,1,48,86,88,89,90,91,92,5,93,94,95,96,97,98,99,100,101,103,104,105,106,107,110,112,113,116,117,118,119,120,122,123,35,124,36,125,128,129,130,131,132,135,137,138,139,22,140,51,141,142,143,144,145,146,147,23,148,149,150,151,152,154,155,156,26,14,15,158,16,159,2,3,17,160,161,162,163,164,165,166,167,168,171,172,173,174,175,176,18,177,178,179,180,182,184,185,191,192,193,194,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,261,270,272,273,274,27,275,52,276,277,279,28,280,281,282,283,31,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,32,54,33,321,322,323,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[59,60,61,62,63,64,65,67,68,69,70,71,49,76,77,45,78,34,82,46,47,84,0,85,89,90,91,5,93,94,95,96,97,98,99,100,101,104,109,110,112,114,117,118,119,120,122,123,35,124,36,125,128,129,130,135,137,139,140,142,143,144,145,146,147,23,148,150,151,152,154,155,26,14,15,159,160,161,162,163,164,165,166,167,168,171,172,173,174,175,176,18,177,178,179,180,183,184,185,186,187,188,189,190,198,199,201,202,203,204,205,207,208,209,210,211,212,213,224,229,230,232,237,242,250,251,252,253,261,273,274,275,277,279,281,282,283,31,295,296,298,303,308,314,54,33,321,322,323,19,325,326,328],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:124","failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,49,75,43,42,50,76,77,45,78,79,34,80,81,82,39,83,46,47,84,0,85,1,48,86,87,88,89,334,90,91,335,92,336,5,93,94,95,96,97,98,99,100,337,101,102,103,104,105,338,339,340,341,106,107,108,109,110,112,113,114,116,117,118,119,120,121,122,123,35,124,36,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,22,140,51,141,142,143,144,145,146,147,23,148,149,150,151,152,24,25,153,154,155,156,26,14,15,158,16,159,2,3,17,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,18,177,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,342,342,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,343,252,253,254,255,261,270,271,344,345,346,347,272,273,274,27,275,52,276,277,279,28,280,332,281,29,30,282,283,31,287,288,289,290,291,292,348,349,350,351,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,32,54,33,315,316,317,318,319,321,322,323,19,325,326,333],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[88,89,90,91,92,336,172],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[352,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,49,353,75,43,42,50,76,77,44,45,78,79,34,80,81,82,39,83,46,47,84,0,85,1,48,86,87,354,88,355,356,357,89,334,90,4,91,358,359,335,92,360,336,5,93,94,95,96,97,98,99,100,337,361,101,362,363,102,103,104,105,364,365,338,339,340,341,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,35,124,36,125,126,127,128,366,367,368,369,370,371,372,373,374,375,129,130,131,132,133,134,135,136,137,13,376,138,139,22,140,51,141,142,377,378,379,143,380,381,144,382,383,384,385,386,387,388,389,390,145,391,392,393,394,395,146,396,397,398,399,400,401,402,147,403,404,405,406,407,408,23,148,149,150,151,152,24,25,153,154,155,156,26,14,20,157,15,158,16,409,410,411,412,413,159,414,415,416,417,418,419,2,420,3,17,160,161,162,163,421,164,165,166,422,167,168,169,170,171,172,173,174,175,176,18,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,423,196,424,197,198,199,200,201,202,203,425,204,205,206,207,208,209,210,211,426,212,213,214,427,428,215,216,217,218,219,220,221,222,223,224,225,429,226,430,431,432,433,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,434,435,436,437,438,439,440,441,247,442,248,249,250,251,343,252,253,443,444,445,330,446,447,448,449,254,255,256,257,258,259,260,450,451,452,453,454,455,456,457,458,459,460,461,462,463,261,464,262,263,264,465,466,467,468,469,470,21,471,472,473,474,475,476,477,478,479,265,480,481,482,483,484,266,485,267,268,269,270,271,344,345,346,347,272,273,274,27,275,52,276,277,278,279,28,280,332,281,29,30,282,283,31,284,285,286,287,288,289,290,291,292,348,349,350,351,486,487,488,489,490,491,492,493,494,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,495,32,54,33,315,316,317,318,319,496,497,498,320,321,322,499,323,500,501,502,19,324,325,326,327,328,333],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[20,158,16,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[503,504,505,506,274,332],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[313,314,324,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[5,93,94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,49,75,43,42,50,76,77,44,45,78,79,34,80,81,82,39,83,46,47,84,0,85,1,48,86,87,88,89,90,91,92,336,5,93,95,96,97,98,99,100,101,102,103,104,105,338,339,340,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,35,124,36,125,126,127,128,129,130,131,132,133,134,135,136,137,138,22,140,51,141,142,143,144,145,146,147,23,148,149,150,151,152,24,25,153,154,155,156,26,14,20,157,15,158,16,159,2,3,17,160,161,162,163,164,165,166,167,169,169,170,170,172,175,176,18,177,178,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,254,255,257,258,261,262,263,264,265,266,267,268,269,270,271,344,345,346,347,272,274,27,275,52,276,277,28,280,332,281,29,30,282,283,31,284,285,286,287,288,289,290,291,292,348,349,350,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,32,54,33,315,316,317,318,319,321,322,323,19,325,326,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[4,7,8,9,10,11,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":49,"org.easymock.tests2.UsageTest.argumentsOrdered":155,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":28,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":474,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":152,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":171,"org.easymock.tests2.DelegateToTest.testReturnException":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":288,"org.easymock.tests.MockingTest.testPartialClassMocking":321,"org.easymock.tests.MockClassControlTest.testToString":436,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":352,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":227,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":7,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":77,"org.easymock.tests2.UsageTest.wrongArguments":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":221,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":408,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":350,"org.easymock.samples.ExampleTest.answerVsDelegate":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":447,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":501,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":98,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":68,"org.easymock.tests2.CaptureTest.testPrimitive":120,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":225,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":246,"org.easymock.tests.UsageTest.moreThanOneArgument":280,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":317,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":256,"org.easymock.tests.UsageTest.argumentsOrdered":283,"org.easymock.tests.UsageVarargTest.varargIntAccepted":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":11,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":418,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":368,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":467,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":195,"org.easymock.tests.ReplayStateInvalidUsageTest.times":458,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests2.DependencyTest.testClassMocking":374,"org.easymock.tests2.AnswerTest.answer":14,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":480,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":341,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":445,"org.easymock.tests2.CaptureTest.testAnd":117,"org.easymock.tests2.UsageTest.strictResetToDefault":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":217,"org.easymock.tests2.DelegateToTest.testDelegate":116,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":242,"org.easymock.tests.LimitationsTest.mockFinalMethod":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":347,"org.easymock.tests2.DependencyTest.testClassMockingSupport":375,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":313,"org.easymock.tests2.CaptureTest.testCapture1_2446744":121,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":339,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":452,"org.easymock.tests.UsageThrowableTest.throwError":183,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":446,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":428,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":419,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":397,"org.easymock.samples.PartialClassMockTest.testGetArea":172,"org.easymock.tests.MockingTest.testInterfaceMocking":499,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":453,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":263,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":386,"org.easymock.tests2.UsageTest.niceToStrict":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":89,"org.easymock.tests2.MockBuilderTest.testCreateMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":393,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":405,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":236,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":444,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":348,"org.easymock.tests.UsageOverloadedMethodTest.overloading":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":326,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":304,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":34,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":36,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":425,"org.easymock.tests.MockClassControlTest.testEquals":440,"org.easymock.tests2.EasyMockSupportClassTest.testAll":143,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":213,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":244,"org.easymock.tests2.CaptureTest.testCaptureAll":118,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":340,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":345,"org.easymock.tests.MockNameTest.defaultName":496,"org.easymock.tests2.UsageConstraintsTest.testMatches":81,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":450,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":318,"org.easymock.samples.ExampleTest.voteForRemovals":180,"org.easymock.tests.UsageVarargTest.allKinds":211,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":32,"org.easymock.samples.BasicClassMockTest.testPrintContent":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":346,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":189,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":415,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":292,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":493,"org.easymock.tests2.UsageConstraintsTest.greaterThan":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":216,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":105,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":494,"org.easymock.samples.ExampleTest.voteForRemoval":177,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":107,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":364,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":369,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":337,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":23,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":279,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":61,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":287,"org.easymock.tests2.CaptureTest.testCaptureFirst":128,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":62,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":26,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":300,"org.easymock.tests2.UsageTest.moreThanOneArgument":149,"org.easymock.tests2.CaptureTest.testCapture2_2446744":127,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":481,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":210,"org.easymock.tests.GenericTest.testBridgedEquals":427,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":252,"org.easymock.tests.UsageExpectAndReturnTest.longType":296,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":271,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":245,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":0,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":197,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":315,"org.easymock.tests.UsageCallCountTest.tooManyCalls":253,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":188,"org.easymock.tests.MockingTest.testNiceClassMocking":502,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":161,"org.easymock.tests.MockingTest.testClassMocking":498,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":442,"org.easymock.tests2.UsageConstraintsTest.testContains":79,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":135,"org.easymock.tests2.UsageConstraintsTest.testFind":75,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":200,"org.easymock.tests.MockTypeTest.fromEasyMockClass":330,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":3,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":272,"org.easymock.tests.UsageExpectAndReturnTest.object":303,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":8,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":205,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":431,"org.easymock.tests.UsageTest.exactCallCountByLastCall":31,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":201,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":309,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":325,"org.easymock.tests.MockClassControlTest.testHashCode":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests2.EasyMockSupportTest.testVerify":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":388,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":258,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":19,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":338,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":373,"org.easymock.tests.UsageVarargTest.varargCharAccepted":204,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":486,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":485,"org.easymock.tests2.UsageTest.openCallCountByLastCall":24,"org.easymock.tests.DefaultClassInstantiatorTest.object":487,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":267,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":226,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":389,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":401,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":438,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":233,"org.easymock.tests.CapturesMatcherTest.test":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":310,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":284,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":146,"org.easymock.tests2.UsageTest.resumeIfFailure":156,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":443,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":290,"org.easymock.tests2.StubTest.stubWithReturnValue":132,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":85,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":302,"org.easymock.tests2.SerializationTest.testAllMockedMethod":94,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":265,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":175,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":239,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":329,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":266,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":20,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":424,"org.easymock.tests.UsageExpectAndThrowTest.object":237,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":47,"org.easymock.tests2.DelegateToTest.testWrongClass":114,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":254,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":255,"org.easymock.samples.ConstructorCalledMockTest.testTax":169,"org.easymock.tests.UsageStrictMockTest.range":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":371,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":90,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":460,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":505,"org.easymock.tests2.CaptureTest.testCaptureNone":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":264,"org.easymock.tests.UsageUnorderedTest.message":270,"org.easymock.tests.UsageVerifyTest.twoReturns":33,"org.easymock.tests.UsageVarargTest.varargByteAccepted":209,"org.easymock.tests2.ThreadingTest.testThreadSafe":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":391,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":251,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":432,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":167,"org.easymock.tests2.CaptureTest.testCapture_2617107":119,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":483,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":224,"org.easymock.tests2.UsageConstraintsTest.any":45,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":457,"org.easymock.tests2.StubTest.stub":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndThrowTest.longType":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":289,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":491,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":456,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":140,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":159,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests.LimitationsTest.mockNativeMethod":261,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":312,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":400,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests2.NameTest.nameForMocksControl":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":402,"org.easymock.tests2.MockedExceptionTest.testMockedException":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":381,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":30,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":420,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":231,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":323,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":322,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":398,"org.easymock.tests2.CaptureTest.testCaptureLast":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":314,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":166,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":76,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":84,"org.easymock.tests.MockingTest.testTwoMocks":320,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":235,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":154,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":48,"org.easymock.samples.ExampleTest.removeNonExistingDocument":181,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":404,"org.easymock.tests.UsageStrictMockTest.differentMethods":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":489,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":108,"org.easymock.tests2.MockBuilderTest.testCreateMockString":336,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":434,"org.easymock.tests.UsageExpectAndThrowTest.floatType":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":382,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":15,"org.easymock.tests.UsageVerifyTest.twoThrows":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":376,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":145,"org.easymock.samples.ExampleTest.voteAgainstRemoval":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":262,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":104,"org.easymock.tests.LimitationsTest.privateConstructor":463,"org.easymock.tests2.UsageConstraintsTest.testNotNull":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":190,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":133,"org.easymock.tests2.UsageTest.defaultResetToNice":153,"org.easymock.samples.ExampleTest.voteAgainstRemovals":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":308,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":399,"org.easymock.tests.UsageVarargTest.differentLength":206,"org.easymock.tests2.CallbackTest.callback":17,"org.easymock.tests2.UsageConstraintsTest.equals":353,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":362,"org.easymock.tests.UsageTest.openCallCountByLastCall":29,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":223,"org.easymock.tests.UsageCallCountTest.tooFewCalls":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":163,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":351,"org.easymock.tests.UsageThrowableTest.throwCheckedException":187,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":506,"org.easymock.tests.MockingTest.testStrictClassMocking":497,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":403,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":162,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":459,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":164,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":16,"org.easymock.tests.ObjectMethodsTest.testHashCode":430,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":10,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":110,"org.easymock.tests2.NameTest.nameForNiceMock":57,"org.easymock.tests2.DependencyTest.testInterfaceMocking":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":9,"org.easymock.samples.ExampleTest.addDocument":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.DelegateToTest.testStubDelegate":113,"org.easymock.tests2.AnswerTest.stubAnswer":158,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":27,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":358,"org.easymock.tests.UsageVarargTest.varargLongAccepted":208,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.floatType":295,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":137,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":417,"org.easymock.tests.UsageThrowableTest.noUpperLimit":184,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":83,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":366,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":122,"org.easymock.tests2.SerializationTest.test":93,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":488,"org.easymock.tests2.UsageConstraintsTest.testSame":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":294,"org.easymock.samples.SupportTest.addDocument":174,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":421,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":383,"org.easymock.tests.GenericTest.testPackageScope":212,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":416,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":500,"org.easymock.tests2.NameTest.nameForMock":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":305,"org.easymock.tests2.UsageStrictMockTest.differentMethods":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":360,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":241,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":218,"org.easymock.tests2.MockedExceptionTest.testRealException":136,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":372,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":477,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":461,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":222,"org.easymock.tests2.NameTest.nameForStrictMock":56,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":357,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":99,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":370,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":490,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":46,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":88,"org.easymock.tests2.UsageStrictMockTest.range":51,"org.easymock.tests2.UsageConstraintsTest.lessThan":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":472,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":38,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":387,"org.easymock.tests2.CaptureTest.testCaptureRightOne":125,"org.easymock.tests2.UsageConstraintsTest.testOr":50,"org.easymock.tests.UsageRangeTest.combination":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":96,"org.easymock.tests.UsageTest.wrongArguments":281,"org.easymock.tests2.MockBuilderTest.testWithConstructor":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":384,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":306,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":492,"org.easymock.tests.UsageVarargTest.varargShortAccepted":207,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":343,"org.easymock.tests2.UsageConstraintsTest.cmpTo":78,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":468,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":25,"org.easymock.tests2.CaptureTest.testCaptureFromStub":126,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":451,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":355,"org.easymock.tests.UsageTest.unexpectedCallWithArray":332,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":307,"org.easymock.tests2.CaptureTest.testCapture":37,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.samples.ExampleTest.addAndChangeDocument":182,"org.easymock.tests.UsageStrictMockTest.testVerify":278,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":173,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":273,"org.easymock.tests2.CompareToTest.testGreateThan":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":344,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":193,"org.easymock.tests.LimitationsTest.abstractClass":462,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":194,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":65,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":202}}]
