[{"position":"org.easymock.internal.RecordState:163","failures":[0,1],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,2,69,70,71,3,72,73],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[75],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:116","sourceCode":"try {\n    java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[78],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"failMessage":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[80,81,82,83,84,85,86,87,88,89,4,5,6,90,91,7,7,8,8,92,93,94,95,96,97,98,99,100,9,10,11,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,0,1,137,138,139,140,141,142,143,144,145,146,74,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,77,163,12,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,13,14,15,16,194,17,18,195,196,197,198,199,200,201,19,20,202,21,22,23,24,25,27,28,29,30,203,36,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,48,49,50,53,54,235,236,237,238,239,58,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,60,61,62,63,64,65,66,67,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,68,73,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[165,211,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,288,291,292,293,294,295,329,338,351,357],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[123],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[80,81,82,83,84,85,87,88,89,4,5,6,90,91,95,96,11,107,109,112,113,114,115,117,120,123,124,125,126,127,128,131,132,133,135,136,139,141,142,146,147,148,149,150,151,152,154,155,156,157,158,159,162,77,163,12,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,184,185,186,190,191,193,13,14,15,16,194,17,18,196,197,198,199,200,201,19,20,202,21,22,23,25,29,203,36,204,205,206,217,218,220,225,230,48,49,50,53,54,58,242,243,245,250,255,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,308,311,312,313,73,320,321,322,324,325,326,327,328,329,358,359,331,332,336,337,338,339,342,343,344,345,346,347,348,351,352,355,356],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[77,163,12,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[77,163,12,360],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[292,293,351],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[361,362,363,364,307,343],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[365],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[366,367,368,139,28,29],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[130,369],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[133,370,371,372,373,374,375,376,377,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"ret","clazz":"clazz"}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[180,203,378],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[95,9,10,11,101,379,146,74,147,380,148,194,202,236,299,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,7,8,8,9,10,11,133,370,381,382,137,383,138,384,385,139,140,141,142,377,143,144,386,145,77,12,13,14,15,16,17,18,19,20,21,22,23,24,25,387,26,27,28,29,30,31,32,33,34,35,388,76,36,389,37,204,38,39,390,391,40,392,393,41,394,205,42,43,395,396,44,206,397,398,45,46,47,48,49,50,51,52,53,54,399,55,56,57,58,59,60,61,62,63,64,65,66,67,400,401,402,68,2,69,70,71,3,72,73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[77,163,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:98","sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","type":"CtReturnImpl"},"failures":[81,146,74,147,148,58,337],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[106,107,109,111,112,403,123,128,149,151,159],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[370,371,372,373,404,405,376],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[173,189],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":107,"org.easymock.tests2.UsageTest.argumentsOrdered":191,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":305,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":176,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":186,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":88,"org.easymock.tests2.DelegateToTest.testReturnException":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":208,"org.easymock.tests.MockingTest.testPartialClassMocking":48,"org.easymock.tests.MockClassControlTest.testToString":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":215,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":371,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":113,"org.easymock.tests2.UsageTest.wrongArguments":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":303,"org.easymock.samples.ExampleTest.answerVsDelegate":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":401,"org.easymock.tests2.UsageConstraintsTest.testNull":109,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":21,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":175,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":67,"org.easymock.tests2.CaptureTest.testPrimitive":152,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":234,"org.easymock.tests.UsageTest.moreThanOneArgument":306,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":262,"org.easymock.tests.UsageTest.argumentsOrdered":312,"org.easymock.tests.UsageVarargTest.varargIntAccepted":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":405,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":137,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":239,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests.ReplayStateInvalidUsageTest.times":273,"org.easymock.tests2.AnswerTest.answer":135,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":403,"org.easymock.tests2.CaptureTest.testAnd":149,"org.easymock.tests2.UsageTest.strictResetToDefault":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":334,"org.easymock.tests2.DelegateToTest.testDelegate":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":230,"org.easymock.tests.LimitationsTest.mockFinalMethod":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":211,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":358,"org.easymock.tests2.CaptureTest.testCapture1_2446744":153,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":228,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":267,"org.easymock.tests.UsageThrowableTest.throwError":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":398,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":236,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":402,"org.easymock.tests2.UsageTest.niceToStrict":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":216,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":139,"org.easymock.tests2.MockBuilderTest.testCreateMock":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":224,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":361,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":171,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":317,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":301,"org.easymock.tests.UsageOverloadedMethodTest.overloading":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":44,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":118,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":251,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":355,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":117,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":158,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.MockClassControlTest.testEquals":66,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":232,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":366,"org.easymock.tests2.CaptureTest.testCaptureAll":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":298,"org.easymock.tests2.UsageConstraintsTest.testMatches":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":263,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":265,"org.easymock.samples.ExampleTest.voteForRemovals":85,"org.easymock.tests.UsageVarargTest.allKinds":287,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":350,"org.easymock.samples.BasicClassMockTest.testPrintContent":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":299,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":294,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":212,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":380,"org.easymock.tests2.UsageConstraintsTest.greaterThan":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":333,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":72,"org.easymock.samples.ExampleTest.voteForRemoval":82,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":31,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":93,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":378,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":24,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":73,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":168,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":207,"org.easymock.tests2.CaptureTest.testCaptureFirst":162,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":169,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":247,"org.easymock.tests2.UsageTest.moreThanOneArgument":183,"org.easymock.tests2.CaptureTest.testCapture2_2446744":161,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":144,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":286,"org.easymock.tests.GenericTest.testBridgedEquals":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":324,"org.easymock.tests.UsageExpectAndReturnTest.longType":243,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":296,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":386,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":233,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":126,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":260,"org.easymock.tests.UsageCallCountTest.tooManyCalls":325,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":293,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":14,"org.easymock.tests.MockingTest.testNiceClassMocking":51,"org.easymock.tests.MockingTest.testClassMocking":46,"org.easymock.tests2.UsageConstraintsTest.testContains":116,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":318,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":383,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":11,"org.easymock.tests2.UsageConstraintsTest.testFind":108,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":357,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":103,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":341,"org.easymock.tests.UsageExpectAndReturnTest.object":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":25,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":174,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":372,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":316,"org.easymock.tests.UsageTest.exactCallCountByLastCall":313,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":370,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":256,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":277,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":337,"org.easymock.tests.MockClassControlTest.testHashCode":65,"org.easymock.tests2.EasyMockSupportTest.testVerify":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":393,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":336,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":134,"org.easymock.tests.UsageVarargTest.varargCharAccepted":280,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":196,"org.easymock.tests2.UsageTest.openCallCountByLastCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":177,"org.easymock.tests.DefaultClassInstantiatorTest.object":68,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":291,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":368,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":257,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":206,"org.easymock.tests2.UsageTest.resumeIfFailure":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":210,"org.easymock.tests2.StubTest.stubWithReturnValue":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":376,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":127,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":249,"org.easymock.tests2.SerializationTest.testAllMockedMethod":12,"org.easymock.samples.SupportTest.voteForRemovals":91,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":362,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":227,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":360,"org.easymock.tests.UsageExpectAndThrowTest.object":225,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":124,"org.easymock.tests2.DelegateToTest.testWrongClass":147,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":353,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":354,"org.easymock.samples.ConstructorCalledMockTest.testTax":7,"org.easymock.tests.UsageStrictMockTest.range":346,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":35,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":275,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":302,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":363,"org.easymock.tests2.CaptureTest.testCaptureNone":157,"org.easymock.tests.UsageUnorderedTest.message":331,"org.easymock.tests.UsageVerifyTest.twoReturns":352,"org.easymock.tests.UsageVarargTest.varargByteAccepted":285,"org.easymock.tests2.ThreadingTest.testThreadSafe":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":42,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":322,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":4,"org.easymock.tests2.CaptureTest.testCapture_2617107":151,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":329,"org.easymock.tests2.UsageConstraintsTest.any":114,"org.easymock.tests2.StubTest.stub":164,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":209,"org.easymock.tests.UsageExpectAndThrowTest.longType":218,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":71,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":271,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":180,"org.easymock.tests2.SerializationTest.testClass":77,"org.easymock.tests.LimitationsTest.mockNativeMethod":58,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":399,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":259,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":367,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests2.NameTest.nameForMocksControl":100,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":365,"org.easymock.tests2.MockedExceptionTest.testMockedException":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":37,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":310,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":219,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":19,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":142,"org.easymock.tests.MockingTest.testNicePartialClassMocking":49,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":23,"org.easymock.tests2.CaptureTest.testCaptureLast":156,"org.easymock.tests2.CompareToTest.testCompareEqual":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":359,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":112,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":18,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":125,"org.easymock.tests.MockingTest.testTwoMocks":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":223,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":190,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":129,"org.easymock.samples.ExampleTest.removeNonExistingDocument":86,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":269,"org.easymock.tests.UsageStrictMockTest.differentMethods":347,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":69,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":94,"org.easymock.tests2.MockBuilderTest.testCreateMockString":145,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":38,"org.easymock.tests.UsageExpectAndThrowTest.floatType":217,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":76,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":136,"org.easymock.tests.UsageVerifyTest.twoThrows":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":205,"org.easymock.samples.ExampleTest.voteAgainstRemoval":83,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests.LimitationsTest.privateConstructor":57,"org.easymock.tests2.UsageConstraintsTest.testNotNull":128,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":295,"org.easymock.tests2.UsageTest.defaultResetToNice":189,"org.easymock.samples.ExampleTest.voteAgainstRemovals":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":255,"org.easymock.tests.UsageVarargTest.differentLength":282,"org.easymock.tests2.CallbackTest.callback":179,"org.easymock.tests2.UsageConstraintsTest.equals":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":387,"org.easymock.tests.UsageTest.openCallCountByLastCall":309,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":328,"org.easymock.tests.UsageCallCountTest.tooFewCalls":320,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":16,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":304,"org.easymock.tests.UsageThrowableTest.throwCheckedException":292,"org.easymock.tests.MockingTest.testStrictClassMocking":45,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":364,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":17,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":214,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":15,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":194,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":1,"org.easymock.tests.ObjectMethodsTest.testHashCode":315,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":404,"org.easymock.tests2.NameTest.nameForNiceMock":99,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":96,"org.easymock.tests2.DependencyTest.testInterfaceMocking":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":373,"org.easymock.samples.ExampleTest.addDocument":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.DelegateToTest.testStubDelegate":74,"org.easymock.tests2.AnswerTest.stubAnswer":0,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":344,"org.easymock.tests.UsageVarargTest.varargLongAccepted":284,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":348,"org.easymock.tests.UsageExpectAndReturnTest.floatType":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":133,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":8,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":122,"org.easymock.tests.UsageThrowableTest.noUpperLimit":289,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":105,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":33,"org.easymock.tests2.SerializationTest.test":163,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":154,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":2,"org.easymock.tests2.UsageConstraintsTest.testSame":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":241,"org.easymock.samples.SupportTest.addDocument":90,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":39,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests2.NameTest.nameForMock":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":252,"org.easymock.tests2.UsageStrictMockTest.differentMethods":200,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":229,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":335,"org.easymock.tests2.MockedExceptionTest.testRealException":101,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":197,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":276,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":327,"org.easymock.tests2.NameTest.nameForStrictMock":98,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":102,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":22,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":34,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":123,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":70,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":138,"org.easymock.tests2.UsageStrictMockTest.range":199,"org.easymock.tests2.UsageConstraintsTest.lessThan":130,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":381,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":392,"org.easymock.tests2.CaptureTest.testCaptureRightOne":159,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":79,"org.easymock.tests2.UsageConstraintsTest.testOr":111,"org.easymock.tests.UsageRangeTest.combination":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":20,"org.easymock.tests.UsageTest.wrongArguments":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":390,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":253,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":3,"org.easymock.tests.UsageVarargTest.varargShortAccepted":283,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":323,"org.easymock.tests2.UsageConstraintsTest.cmpTo":115,"org.easymock.tests2.CompareToTest.testLessThan":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":188,"org.easymock.tests2.CaptureTest.testCaptureFromStub":160,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":266,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":384,"org.easymock.tests.UsageTest.unexpectedCallWithArray":307,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":321,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":254,"org.easymock.tests2.UsageConstraintsTest.constraints":106,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":345,"org.easymock.samples.ExampleTest.addAndChangeDocument":87,"org.easymock.tests.UsageStrictMockTest.testVerify":349,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":89,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":342,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":297,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":237,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":382,"org.easymock.tests.LimitationsTest.abstractClass":56,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":238,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":172,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":278}}]
