[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[47,48,49,50,51,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[54,55,56,57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[58,59],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:123","sourceCode":"if (java.lang.Object instanceof org.easymock.EasyMockSupport) {\n    java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n} else {\n    java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n}","type":"CtIfImpl"},"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"host","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[87,88,89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[90,91,92,93,94,95,24,33,34,36,37,39,40,44,45,25,26,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,7,22,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,15,158,159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[106],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[94,8,9,10,160,161,162,14,118,163,151,16,17,18,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[164,165,166,167,168,169,170,171,172,173],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[174],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[175,46],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[177,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[180],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[181,181,182,182,183,184,185,186,164,87,89,187,188,189,190,191,192,193,194,195,196,197,198,199,200,20,201,202,203,204,205,174,206,207,208,209,210,211,212,213,214,58,215,216,217,218,219,220,221,222,223,224,59,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,0,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[211,212,213,287,288,289,290,291,292,293,294],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:130","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[61,62,63,64,65,68,71,74,75,76,77,80,83,86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","paramTypes":"paramTypes","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageTest.argumentsOrdered":10,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":291,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":81,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":172,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":127,"org.easymock.tests2.SerializationTest.testAllMockedMethod":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":289,"org.easymock.tests.MockingTest.testPartialClassMocking":274,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.samples.SupportTest.voteForRemovals":47,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":262,"org.easymock.tests.MockClassControlTest.testToString":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":238,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":165,"org.easymock.tests2.UsageTest.wrongArguments":8,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":74,"org.easymock.tests.UsageStrictMockTest.range":118,"org.easymock.samples.ConstructorCalledMockTest.testTax":181,"org.easymock.samples.ExampleTest.answerVsDelegate":23,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":187,"org.easymock.tests2.UsageConstraintsTest.testNull":102,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":143,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":285,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":220,"org.easymock.tests2.CaptureTest.testPrimitive":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":228,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":150,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":11,"org.easymock.tests2.CaptureTest.testCaptureNone":40,"org.easymock.tests.UsageUnorderedTest.message":151,"org.easymock.tests.UsageVerifyTest.twoReturns":161,"org.easymock.tests2.ThreadingTest.testThreadSafe":91,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":245,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":184,"org.easymock.tests2.CaptureTest.testCapture_2617107":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":85,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":219,"org.easymock.tests2.StubTest.stub":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":290,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests2.SerializationTest.testClass":87,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":80,"org.easymock.tests.LimitationsTest.mockNativeMethod":269,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":68,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":60,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":265,"org.easymock.tests2.AnswerTest.answer":27,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":135,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":196,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":65,"org.easymock.tests2.CaptureTest.testAnd":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":174,"org.easymock.tests2.MockedExceptionTest.testMockedException":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":155,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests2.DelegateToTest.testDelegate":96,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":138,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":221,"org.easymock.tests.MockingTest.testNicePartialClassMocking":275,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":201,"org.easymock.tests.LimitationsTest.mockFinalMethod":270,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":63,"org.easymock.tests2.CaptureTest.testCaptureLast":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":292,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":55,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":192,"org.easymock.tests.MockingTest.testTwoMocks":273,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":54,"org.easymock.tests2.CaptureTest.testCapture1_2446744":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":141,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":70,"org.easymock.tests.UsageStrictMockTest.differentMethods":119,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":77,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":255,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":93,"org.easymock.tests2.MockBuilderTest.testCreateMockString":225,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":86,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":235,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":230,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":29,"org.easymock.tests.UsageVerifyTest.twoThrows":160,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":244,"org.easymock.samples.PartialClassMockTest.testGetArea":183,"org.easymock.samples.ExampleTest.voteAgainstRemoval":50,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":207,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":137,"org.easymock.tests.LimitationsTest.privateConstructor":268,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":211,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":218,"org.easymock.tests2.MockBuilderTest.testCreateMock":223,"org.easymock.samples.ExampleTest.voteAgainstRemovals":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":247,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":64,"org.easymock.tests2.CallbackTest.callback":24,"org.easymock.tests2.UsageConstraintsTest.equals":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":71,"org.easymock.tests.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":3,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":243,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":128,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":190,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":106,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":41,"org.easymock.tests.MockClassControlTest.testEquals":284,"org.easymock.tests2.EasyMockSupportClassTest.testAll":231,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":264,"org.easymock.tests.MockingTest.testStrictClassMocking":271,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":12,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":148,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":193,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":53,"org.easymock.tests2.CaptureTest.testCaptureAll":33,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":294,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":189,"org.easymock.tests2.UsageConstraintsTest.testMatches":108,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":30,"org.easymock.samples.ExampleTest.voteForRemovals":51,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":169,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":167,"org.easymock.samples.BasicClassMockTest.testPrintContent":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":82,"org.easymock.tests2.UsageConstraintsTest.greaterThan":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":154,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":208,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":258,"org.easymock.samples.ExampleTest.voteForRemoval":49,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":209,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":186,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":182,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":84,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":57,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":110,"org.easymock.tests.UsageThrowableTest.noUpperLimit":117,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":286,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":99,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":226,"org.easymock.tests2.SerializationTest.test":88,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":37,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":222,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":254,"org.easymock.tests2.UsageConstraintsTest.testSame":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":288,"org.easymock.tests2.CaptureTest.testCaptureFirst":45,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":236,"org.easymock.tests.GenericTest.testPackageScope":263,"org.easymock.tests2.UsageTest.moreThanOneArgument":7,"org.easymock.tests2.CaptureTest.testCapture2_2446744":44,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":179,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":83,"org.easymock.tests.GenericTest.testBridgedEquals":266,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":149,"org.easymock.tests2.UsageStrictMockTest.differentMethods":95,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":147,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":146,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":156,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":120,"org.easymock.tests2.MockedExceptionTest.testRealException":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":173,"org.easymock.tests.MockingTest.testNiceClassMocking":277,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":188,"org.easymock.tests.MockingTest.testClassMocking":272,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":58,"org.easymock.tests2.UsageConstraintsTest.testContains":105,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":213,"org.easymock.tests2.UsageConstraintsTest.testFind":101,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":152,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":217,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":227,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":203,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":215,"org.easymock.tests2.UsageStrictMockTest.range":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":72,"org.easymock.tests2.UsageConstraintsTest.lessThan":112,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":240,"org.easymock.tests2.CaptureTest.testCaptureRightOne":42,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":13,"org.easymock.tests2.UsageConstraintsTest.testOr":104,"org.easymock.tests.UsageRangeTest.combination":153,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":132,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests.MockClassControlTest.testHashCode":283,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":237,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":241,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":257,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":31,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":28,"org.easymock.tests2.UsageTest.openCallCountByLastCall":113,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":114,"org.easymock.tests.DefaultClassInstantiatorTest.object":253,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":178,"org.easymock.tests2.CaptureTest.testCaptureFromStub":43,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":216,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":140,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":197,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":66,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":75,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":131,"org.easymock.tests2.CaptureTest.testCapture":175,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":282,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":206,"org.easymock.tests2.UsageConstraintsTest.constraints":100,"org.easymock.samples.ExampleTest.addAndChangeDocument":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":139,"org.easymock.tests.CapturesMatcherTest.test":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":133,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":177,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":62,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":250,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":38,"org.easymock.tests2.UsageTest.resumeIfFailure":115,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":52,"org.easymock.tests.LimitationsTest.abstractClass":267,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":124}}]
