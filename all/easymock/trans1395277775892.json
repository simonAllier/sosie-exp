[{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[175,176,177],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[171],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[1,178,2,3,179,4,180,181,5,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,207,38,39,40,41,42,43,44,45,208,209,46,47,210,48,49,50,51,52,53,211,212,213,214,215,216,217,218,219,220,55,221,56,57,222,61,62,63,223,224,225,226,227,64,65,66,67,68,228,229,230,231,232,233,234,235,236,237,69,70,73,76,80,82,83,86,87,89,91,92,93,94,96,238,102,239,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,240,126,241,242,128,129,130,132,133,134,135,243,136,137,139,140,244,141,245,142,143,246,144,145,247,146,147,151,153,155,156,171],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[248],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[249,148,150,165,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,178,2,3,179,4,250,180,181,5,182,251,251,252,252,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,6,7,8,9,10,206,253,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,37,207,38,39,40,41,42,43,44,45,208,209,46,47,210,48,49,50,283,284,51,52,285,286,53,211,212,213,214,215,216,217,287,218,219,288,54,289,290,220,291,55,221,56,57,222,292,293,58,59,60,294,295,296,297,298,299,300,301,302,303,304,61,62,63,223,224,225,226,227,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,64,65,66,67,68,320,321,322,228,229,230,231,232,323,233,234,235,236,237,69,70,71,324,325,72,73,74,75,76,77,326,78,327,79,80,81,82,83,328,84,85,329,330,86,87,88,89,331,90,91,92,93,94,95,96,97,98,99,100,238,332,333,101,334,102,335,336,239,103,337,104,105,338,106,107,108,109,110,111,112,113,114,115,116,117,339,118,119,120,121,122,123,124,125,340,341,342,343,344,240,126,241,345,242,346,127,128,347,129,130,348,131,349,132,133,134,350,135,243,136,137,138,351,352,139,140,353,244,141,245,142,143,246,354,355,356,357,144,145,247,146,147,148,149,150,151,152,153,154,155,156,157,358,158,159,160,161,162,163,164,165,166,167,168,169,359,170,171,172,173,360,361,362,174],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[11,36,254,44,45,208,209,46,215,291,55,64,65,66,67,68,237,69,70,78,82,83,328,84,85,329,330,86,87,88,89,331,90,91,95,141,148,149,150,151,152,153,154,155,156,157,358,158,159,160,161,162,163,164,165,166,167,168,169,359,170,171,172,173,360,361,362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[40,41,210],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[363,364,365,366,367,368,369],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","sourceCode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"position":"org.easymock.internal.LastControl:48","failures":[0,1,178,2,3,4,180,5,251,251,252,252,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,6,7,8,9,10,253,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,254,255,256,257,258,259,260,261,272,273,274,37,207,38,39,40,41,42,43,44,45,208,209,46,47,210,48,49,50,51,52,53,211,212,213,214,215,216,217,218,219,54,55,56,57,58,59,60,294,295,298,61,62,63,223,224,225,226,227,64,65,66,67,68,320,321,322,69,70,71,325,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,331,90,91,92,93,94,95,96,97,98,99,100,238,332,333,101,334,102,335,336,239,103,337,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,344,240,126,241,345,242,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,247,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,361,362,174],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[111,135],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[308,309,310,311,312,314,315,316,317,318,319,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,251,251,252,252,183,184,392,10,206,253,393,261,262,394,395,396,397,398,399,275,277,278,279,280,281,282,400,401,402,403,293,58,59,60,404,405,406,407,71,408,72,73,75,76,77,326,78,409,410,327,79,80,81,411,412,413,414,415,97,416,417,98,418,419,420,421,422,423,424,425,426,99,427,428,429,430,431,100,432,433,332,333,101,104,338,434,435,436,437,119,120,121,122,124,125,438,346,439,127,440,441,128,347,129,130,442,348,131,349,443,444,174,369],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[82,328,89,150,151,153,155,156,358,167,171],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,178,2,3,179,4,181,5,182,183,184,185,188,189,191,196,201,10,206,14,15,17,22,27,261,37,207,38,39,40,41,42,43,209,210,48,284,285,286,53,217,218,219,54,220,291,221,222,58,59,60,300,301,303,304,61,62,312,228,229,230,231,232,233,234,235,236,237,71,325,72,73,74,75,76,77,78,80,82,83,328,84,329,330,86,87,88,89,91,95,96,97,98,99,100,101,102,239,104,105,338,106,107,108,109,110,111,112,114,115,116,117,339,118,119,120,121,122,123,124,125,240,241,128,129,130,132,133,350,135,243,351,352,140,244,245,246,144,145,147,151,156,157,158,159,161,164,167,168,169,359,170,174],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[161],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[11,445,210,48,283,284,285,286,289,291,56,350,351,352,142],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[151,155],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[157],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[397,446,447],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[1,178,2,3,179,4,250,180,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,10,206,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,254,261,262,263,264,265,266,267,268,269,270,271,275,276,277,278,279,280,281,282,37,207,38,39,40,41,42,43,44,45,208,209,46,47,210,48,49,50,283,284,51,52,285,286,53,211,212,213,214,215,216,217,287,218,219,54,289,290,220,291,55,221,56,57,222,292,58,59,60,296,297,298,299,300,301,302,303,304,61,62,63,223,224,225,226,227,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,64,65,66,67,68,228,229,230,231,232,323,233,234,235,236,237,69,70,71,325,72,73,74,75,76,77,326,78,327,79,80,81,82,83,328,84,85,329,330,86,87,88,89,331,90,91,92,93,94,95,96,238,332,333,101,334,102,239,103,337,104,105,338,120,121,124,125,340,341,342,343,240,126,241,242,346,127,128,347,348,131,349,132,133,134,350,135,243,136,137,138,351,352,139,140,353,244,141,245,142,143,246,354,355,356,357,144,247,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,359,170,171,172,173,360,361,362,174],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.RecordState:305","failures":[0,1,178,2,3,4,5,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,254,37,38,39,40,41,42,43,44,45,46,47,210,48,49,50,51,52,53,215,217,218,219,54,55,56,57,58,59,60,294,61,62,63,64,65,66,67,68,69,70,71,324,325,72,73,74,75,76,77,78,79,80,81,82,83,328,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,238,101,102,103,337,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,240,126,241,242,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,359,170,171,172,173,174],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[358,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[394,398],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[448],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[104,105,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[251,252,409,449,450],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,12,13,14,15,16,17,20,21,23,24,25,27,28,29,30,31,32,33,34,35,44,55,56,57,58,59,60,223,224,225,226,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,95,97,98,99,100,119,120,121,122,123,124,125,126,127,128,129,130,131,141,142,143,144,145,174],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[82,328,89,150,156],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[451],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[0,1,178,2,3,179,4,180,181,5,182,183,184,185,188,189,191,196,201,10,206,11,14,15,17,22,27,32,36,254,261,37,207,38,39,40,41,42,43,44,45,208,209,46,47,210,48,284,285,286,53,215,217,287,218,219,288,54,290,220,291,55,221,56,57,222,292,58,59,60,296,299,300,301,303,304,61,62,64,65,66,67,68,228,229,230,231,232,323,233,234,235,236,237,69,70,71,324,325,72,73,74,75,76,77,78,79,80,81,82,83,328,84,85,329,330,86,87,88,89,91,95,96,97,98,99,100,238,101,102,239,337,104,105,338,106,107,108,109,110,111,112,113,114,115,116,117,339,118,119,120,121,122,123,124,125,340,341,342,343,240,241,242,127,128,129,130,131,132,133,350,135,243,138,351,352,140,353,244,141,245,142,143,246,144,145,147,151,152,153,154,156,157,358,158,159,161,162,164,165,167,168,169,359,170,171,174],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":151,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":49,"org.easymock.tests2.UsageTest.argumentsOrdered":352,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":243,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":185,"org.easymock.tests2.DelegateToTest.testReturnException":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":212,"org.easymock.tests.MockingTest.testPartialClassMocking":58,"org.easymock.tests.MockClassControlTest.testToString":277,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":421,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":186,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":98,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":145,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":363,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":44,"org.easymock.tests2.UsageTest.wrongArguments":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":265,"org.easymock.samples.ExampleTest.answerVsDelegate":178,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":401,"org.easymock.tests2.UsageConstraintsTest.testNull":153,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":75,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":115,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":282,"org.easymock.tests2.CaptureTest.testPrimitive":84,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":46,"org.easymock.tests.UsageTest.moreThanOneArgument":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":205,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":225,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":256,"org.easymock.tests.UsageTest.argumentsOrdered":286,"org.easymock.tests.UsageVarargTest.varargIntAccepted":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":64,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":346,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":367,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":68,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":375,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":118,"org.easymock.tests.ReplayStateInvalidUsageTest.times":316,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":448,"org.easymock.tests2.AnswerTest.answer":102,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":357,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":34,"org.easymock.tests2.DelegateToTest.testDelegate":242,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":260,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":201,"org.easymock.tests.LimitationsTest.mockFinalMethod":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":271,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":324,"org.easymock.tests2.CaptureTest.testCapture1_2446744":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":355,"org.easymock.tests.UsageThrowableTest.throwError":37,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":378,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":311,"org.easymock.tests2.CompareToTest.testLessOrEqual":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":422,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":405,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":187,"org.easymock.tests2.UsageTest.niceToStrict":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":175,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":128,"org.easymock.tests2.MockBuilderTest.testCreateMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":429,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":195,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":111,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":263,"org.easymock.tests.UsageOverloadedMethodTest.overloading":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":162,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":23,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":61,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":446,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":161,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests2.EasyMockSupportClassTest.testAll":97,"org.easymock.tests.MockClassControlTest.testEquals":281,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":206,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":203,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":434,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":269,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":356,"org.easymock.tests2.UsageConstraintsTest.testMatches":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":226,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":308,"org.easymock.samples.ExampleTest.voteForRemovals":4,"org.easymock.tests.UsageVarargTest.allKinds":237,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":47,"org.easymock.samples.BasicClassMockTest.testPrintContent":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":270,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":42,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":216,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":345,"org.easymock.tests2.UsageConstraintsTest.greaterThan":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":416,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":33,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":81,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":379,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":399,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":411,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":326,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":371,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":132,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":261,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":108,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":211,"org.easymock.tests2.CaptureTest.testCaptureFirst":91,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":109,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":19,"org.easymock.tests2.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.CaptureTest.testCapture2_2446744":90,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":95,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":131,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":236,"org.easymock.tests.GenericTest.testBridgedEquals":393,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":303,"org.easymock.tests.UsageExpectAndReturnTest.longType":15,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":267,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":204,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":255,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":273,"org.easymock.tests.UsageCallCountTest.tooManyCalls":304,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":430,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":191,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":41,"org.easymock.tests.MockingTest.testNiceClassMocking":404,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":120,"org.easymock.tests.MockingTest.testClassMocking":403,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":439,"org.easymock.tests2.UsageConstraintsTest.testContains":160,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":297,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":101,"org.easymock.tests2.UsageConstraintsTest.testFind":152,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":63,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":290,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":362,"org.easymock.tests.UsageExpectAndReturnTest.object":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":114,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":364,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":307,"org.easymock.tests.UsageTest.exactCallCountByLastCall":53,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":248,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":36,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":369,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":28,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":228,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":218,"org.easymock.tests.MockClassControlTest.testHashCode":280,"org.easymock.tests2.EasyMockSupportTest.testVerify":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":424,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":258,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":217,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":354,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":360,"org.easymock.tests.UsageVarargTest.varargCharAccepted":231,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":244,"org.easymock.tests2.UsageTest.openCallCountByLastCall":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":176,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests.DefaultClassInstantiatorTest.object":262,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":320,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":305,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":425,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":193,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":437,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":39,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":79,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":279,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":377,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":29,"org.easymock.tests.ReplayStateInvalidCallsTest.times":383,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":272,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":100,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":278,"org.easymock.tests2.UsageTest.resumeIfFailure":139,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":214,"org.easymock.tests2.StubTest.stubWithReturnValue":146,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":368,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":21,"org.easymock.tests2.SerializationTest.testAllMockedMethod":338,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":294,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":198,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":295,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":335,"org.easymock.tests.UsageExpectAndThrowTest.object":196,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":168,"org.easymock.tests2.DelegateToTest.testWrongClass":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":69,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":381,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":70,"org.easymock.tests.UsageStrictMockTest.range":56,"org.easymock.samples.ConstructorCalledMockTest.testTax":251,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":413,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":285,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":264,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":373,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":8,"org.easymock.tests2.CaptureTest.testCaptureNone":87,"org.easymock.tests.UsageUnorderedTest.message":11,"org.easymock.tests.UsageVerifyTest.twoReturns":48,"org.easymock.tests.UsageVarargTest.varargByteAccepted":235,"org.easymock.tests2.ThreadingTest.testThreadSafe":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":427,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":301,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":183,"org.easymock.tests2.CaptureTest.testCapture_2617107":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":209,"org.easymock.tests2.UsageConstraintsTest.any":158,"org.easymock.tests2.StubTest.stub":247,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":274,"org.easymock.tests.UsageExpectAndThrowTest.longType":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":213,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":397,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":314,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":245,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests2.SerializationTest.testClass":104,"org.easymock.tests.LimitationsTest.mockNativeMethod":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":31,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":253,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":436,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":389,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.tests2.NameTest.nameForMocksControl":343,"org.easymock.tests2.MockedExceptionTest.testMockedException":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":417,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":190,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":60,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":72,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":130,"org.easymock.tests.MockingTest.testNicePartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":77,"org.easymock.tests2.CaptureTest.testCaptureLast":86,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":325,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":388,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":156,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":125,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":169,"org.easymock.tests.MockingTest.testTwoMocks":293,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":194,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":351,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":172,"org.easymock.samples.ExampleTest.removeNonExistingDocument":250,"org.easymock.tests.UsageStrictMockTest.differentMethods":57,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":312,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":395,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":94,"org.easymock.tests2.MockBuilderTest.testCreateMockString":349,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":418,"org.easymock.tests.UsageExpectAndThrowTest.floatType":188,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":415,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":239,"org.easymock.tests.UsageVerifyTest.twoThrows":210,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":99,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":6,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":80,"org.easymock.tests.LimitationsTest.privateConstructor":407,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":43,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":332,"org.easymock.tests2.UsageTest.defaultResetToNice":138,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":27,"org.easymock.tests.UsageVarargTest.differentLength":323,"org.easymock.tests2.CallbackTest.callback":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":409,"org.easymock.tests.UsageTest.openCallCountByLastCall":51,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":208,"org.easymock.tests.UsageCallCountTest.tooFewCalls":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":266,"org.easymock.tests.UsageThrowableTest.throwCheckedException":40,"org.easymock.tests.MockingTest.testStrictClassMocking":402,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":124,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":254,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":121,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":123,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":337,"org.easymock.tests.ObjectMethodsTest.testHashCode":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":366,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":387,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":96,"org.easymock.tests2.NameTest.nameForNiceMock":342,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":382,"org.easymock.tests2.DependencyTest.testInterfaceMocking":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":365,"org.easymock.samples.ExampleTest.addDocument":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":432,"org.easymock.tests2.DelegateToTest.testStubDelegate":126,"org.easymock.tests2.AnswerTest.stubAnswer":103,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":55,"org.easymock.tests.UsageVarargTest.varargLongAccepted":234,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":30,"org.easymock.tests.UsageExpectAndReturnTest.floatType":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":174,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":252,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":166,"org.easymock.tests.UsageThrowableTest.noUpperLimit":207,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":149,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":443,"org.easymock.tests2.SerializationTest.test":105,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":329,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":447,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":394,"org.easymock.tests2.UsageConstraintsTest.testSame":154,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":13,"org.easymock.samples.SupportTest.addDocument":181,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":372,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":419,"org.easymock.tests.GenericTest.testPackageScope":10,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":259,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":370,"org.easymock.tests2.NameTest.nameForMock":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":24,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":450,"org.easymock.tests2.UsageStrictMockTest.differentMethods":143,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":16,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":200,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":35,"org.easymock.tests2.MockedExceptionTest.testRealException":334,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":45,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":319,"org.easymock.tests2.NameTest.nameForStrictMock":341,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":441,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":177,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":76,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":444,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":396,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":167,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":127,"org.easymock.tests2.UsageStrictMockTest.range":142,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":376,"org.easymock.tests2.UsageConstraintsTest.lessThan":173,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":438,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":451,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":423,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.UsageConstraintsTest.testOr":155,"org.easymock.tests.UsageRangeTest.combination":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":73,"org.easymock.tests.UsageTest.wrongArguments":284,"org.easymock.tests2.MockBuilderTest.testWithConstructor":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":420,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":17,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":25,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":398,"org.easymock.tests.UsageVarargTest.varargShortAccepted":233,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":302,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":390,"org.easymock.tests2.UsageConstraintsTest.cmpTo":159,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":336,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":380,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":137,"org.easymock.tests2.CaptureTest.testCaptureFromStub":331,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":309,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":440,"org.easymock.tests.UsageTest.unexpectedCallWithArray":283,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":386,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":26,"org.easymock.tests2.UsageConstraintsTest.constraints":150,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":221,"org.easymock.samples.ExampleTest.addAndChangeDocument":180,"org.easymock.tests.UsageStrictMockTest.testVerify":292,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":182,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":268,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":330,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":435,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":66,"org.easymock.tests.LimitationsTest.abstractClass":406,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":18,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":67,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":229}}]
