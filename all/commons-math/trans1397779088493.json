[{"transformationPoint":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:203","failures":[],"name":"inlineConstant","type":"mutation","nodeType":"CtLocalVariableImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.math3.complex.Quaternion(((double) / double) , ((double) / double) , ((double) / double) , ((double) / double))","position":"org.apache.commons.math3.complex.Quaternion:258","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    final double[] double[] = double[][][int];\n    for (int int = 0 ; int < int ; ++int) {\n        org.apache.commons.math3.linear.RealMatrixPreservingVisitor.visit(int, int, double[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:413","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * The kinds of solutions that a {@link BracketedUnivariateSolver\n * (bracketed univariate real) root-finding algorithm} may accept as solutions.\n * This basically controls whether or not under-approximations and\n * over-approximations are allowed.\n * \n * <p>If all solutions are accepted ({@link #ANY_SIDE}), then the solution\n * that the root-finding algorithm returns for a given root may be equal to the\n * actual root, but it may also be an approximation that is slightly smaller\n * or slightly larger than the actual root. Root-finding algorithms generally\n * only guarantee that the returned solution is within the requested\n * tolerances. In certain cases however, in particular for\n * {@link org.apache.commons.math3.ode.events.EventHandler state events} of\n * {@link org.apache.commons.math3.ode.ODEIntegrator ODE solvers}, it\n * may be necessary to guarantee that a solution is returned that lies on a\n * specific side the solution.<\/p>\n * \n * @see BracketedUnivariateSolver\n * @since 3.0\n * @version $Id$\n */\npublic enum AllowedSolution {\nANY_SIDE, LEFT_SIDE, RIGHT_SIDE, BELOW_SIDE, ABOVE_SIDE;}","position":"org.apache.commons.math3.analysis.solvers.AllowedSolution:41","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    double[][int] = (double[][int]) + (double[][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:174","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"lu":"data","m":"endColumn","bp":"data","nColB":"endRow"},"name":"replace","transplant":{"sourceCode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    final double[] double[] = double[][][int];\n    final double double = this.double[][][int][int];\n    for (int int = 0 ; int < int ; int++) {\n        double[][int] /= double;\n    }\n    for (int int = 0 ; int < int ; int++) {\n        final double[] double[] = double[][][int];\n        final double double = this.double[][][int][int];\n        for (int int = 0 ; int < int ; int++) {\n            double[][int] -= (double[][int]) * double;\n        }\n    }\n}","position":"org.apache.commons.math3.linear.LUDecomposition:363","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int <= int ; ++int) {\n    final double[] double[] = double[][][int];\n    for (int int = int ; int <= int ; ++int) {\n        org.apache.commons.math3.linear.RealMatrixPreservingVisitor.visit(int, int, double[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:449","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * {@link StepNormalizer Step normalizer} modes. Determines how the step size\n * is interpreted.\n * @see StepNormalizer\n * @see StepNormalizerBounds\n * @version $Id$\n * @since 3.0\n */\npublic enum StepNormalizerMode {\nINCREMENT, MULTIPLES;}","position":"org.apache.commons.math3.ode.sampling.StepNormalizerMode:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.random.RandomDataGenerator.reSeed(long)","position":"org.apache.commons.math3.random.RandomDataImpl:461","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 3","position":"org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (T[][]) == null ? 0 : T[][].int","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:405","type":"CtReturnImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.stat.correlation.SpearmansCorrelation:197","failures":[],"name":"removeConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{"qred":"p","sdec":"p","state":"length"},"name":"add","transplant":{"sourceCode":"if (double <= (double * 0.01)) {\n    int = 190;\n    break;\n} ","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:2014","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; int++) {\n    double += (double[][int]) * (java.util.List<T>.get(int).density(double[]));\n}","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:101","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"double double = 0.008336750013465571","position":"org.apache.commons.math3.util.FastMath:1025","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (-(double)) * (double)","position":"org.apache.commons.math3.analysis.function.HarmonicOscillator:174","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"k":"i"},"name":"replace","transplant":{"sourceCode":"final double double = 1.0 / ((2 * int) + 1)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:702","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][0][int]","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:112","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((double * double) == 1.0) {\n    return java.lang.Double.double;\n} ","position":"org.apache.commons.math3.util.FastMath:1493","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.expm1(double)","position":"org.apache.commons.math3.analysis.function.Expm1:36","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * The kinds of solutions that a {@link BracketedUnivariateSolver\n * (bracketed univariate real) root-finding algorithm} may accept as solutions.\n * This basically controls whether or not under-approximations and\n * over-approximations are allowed.\n * \n * <p>If all solutions are accepted ({@link #ANY_SIDE}), then the solution\n * that the root-finding algorithm returns for a given root may be equal to the\n * actual root, but it may also be an approximation that is slightly smaller\n * or slightly larger than the actual root. Root-finding algorithms generally\n * only guarantee that the returned solution is within the requested\n * tolerances. In certain cases however, in particular for\n * {@link org.apache.commons.math3.ode.events.EventHandler state events} of\n * {@link org.apache.commons.math3.ode.ODEIntegrator ODE solvers}, it\n * may be necessary to guarantee that a solution is returned that lies on a\n * specific side the solution.<\/p>\n * \n * @see BracketedUnivariateSolver\n * @since 3.0\n * @version $Id$\n */\npublic enum AllowedSolution {\nANY_SIDE, LEFT_SIDE, RIGHT_SIDE, BELOW_SIDE, ABOVE_SIDE;}","position":"org.apache.commons.math3.analysis.solvers.AllowedSolution:41","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput)","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:153","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int[][int] = 1","position":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:60","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][(int + 1)] += (double[][int]) * (org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][int].getPartialDerivative(int[]))","position":"org.apache.commons.math3.analysis.FunctionUtils:657","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-9.040643863751471E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4945","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.asin(double)","position":"org.apache.commons.math3.analysis.function.Asin:36","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:58","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = int * (org.apache.commons.math3.linear.BlockRealMatrix.int)","position":"org.apache.commons.math3.linear.BlockRealMatrix:501","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:177","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"double double = 3.834E-20","position":"org.apache.commons.math3.util.MathArrays:586","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.getOffset(org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.((org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint)(getHyperplane())).getLocation())","position":"org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint:65","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.tan(double)","position":"org.apache.commons.math3.analysis.function.Tan:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((long)(double)) & 1) == 0 ? org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.pow(-double, double) : -org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.pow(-double, double))","position":"org.apache.commons.math3.util.FastMath:1550","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double = double","position":"org.apache.commons.math3.util.FastMath:566","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(T[].int , int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:420","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = (int * int) + int","position":"org.apache.commons.math3.linear.BlockRealMatrix:778","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.math3.optim.OptimizationData[][int] = new org.apache.commons.math3.optim.MaxEval((int - (int)));\n    double[] double[] = null;\n    if (int == 0) {\n        double[] = double[];\n    } else {\n        int int = 0;\n        while (double[] == null) {\n            if ((int++) >= org.apache.commons.math3.optim.BaseOptimizer<PAIR>.(getMaxEvaluations())) {\n                throw new org.apache.commons.math3.exception.TooManyEvaluationsException(org.apache.commons.math3.optim.BaseOptimizer<PAIR>.getMaxEvaluations());\n            } \n            double[] = org.apache.commons.math3.random.RandomVectorGenerator.nextVector();\n            for (int int = 0 ; (double[] != null) && (int < (double[].int)) ; ++int) {\n                if (((double[] != null) && ((double[][int]) < (double[][int]))) || ((double[] != null) && ((double[][int]) > (double[][int])))) {\n                    double[] = null;\n                } \n            }\n        }\n    }\n    org.apache.commons.math3.optim.OptimizationData[][int] = new org.apache.commons.math3.optim.InitialGuess(double[]);\n    final PAIR PAIR = org.apache.commons.math3.optim.BaseMultivariateOptimizer<PAIR>.optimize(org.apache.commons.math3.optim.OptimizationData[]);\n    org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer<PAIR>.store(PAIR);\n} catch (java.lang.RuntimeException java.lang.RuntimeException) {\n    java.lang.RuntimeException = java.lang.RuntimeException;\n}","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:176","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+1.279910496643312E214","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1273","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][0] = double[][int]","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:207","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[] double[] = java.util.List<double[]>.get(int)","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:177","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double = double[][1]","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:1011","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = int","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:112","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"x":"householderVectors","length":"k"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    throw new org.apache.commons.math3.exception.NoDataException();\n} ","position":"org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:188","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < int ; ++int) {\n    final double[] double[] = double[][][int];\n    double[][int] -= double * (double[][int]);\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:370","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"bspl":"theta","aspl":"theta"},"name":"replace","transplant":{"sourceCode":"final double double = 6 * (double - double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:281","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((-44.0) + (double * (152.0 - (120.0 * double))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:76","type":"CtLocalVariableImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.linear.BiDiagonalTransformer:195","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{"data":"data","row":"row"},"name":"add","transplant":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:171","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.linear.Array2DRowRealMatrix.double[][][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:172","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+0.1011524498462677","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5213","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:473","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"in":"row","nvars":"row"},"name":"replace","transplant":{"sourceCode":"final double[] double[] = new double[(((int - int) + 1) * (int - int)) / 2]","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:610","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:171","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.math3.geometry.VectorFormat:213","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.int)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:174","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"i":"iMax","previousPoints":"previousPoints","minusOne":"java.math.BigDecimal.ONE"},"name":"add","transplant":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = int == 0 ? this.java.math.BigDecimal.java.math.BigDecimal : java.math.BigDecimal[][(int - 1)]","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:87","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = int == 1 ? java.math.BigDecimal.java.math.BigDecimal : java.math.BigDecimal[][int]","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:89","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"double[][][int] = int < 0 ? null : new double[int]","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:195","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int] = org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.double[][][int].clone()","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:93","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getStartValue()","position":"org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer:173","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.newXSampleData(double[][])","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:59","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-5.905511605694905E-113","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2045","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+2.7106814809424793E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5666","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.analysis.MultivariateVectorFunction","position":"org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:50","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double / 8.0","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:123","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double) == 0 ? 0 : ((double) - double) / (double)","position":"org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:409","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * The kinds of solutions that a {@link BracketedUnivariateSolver\n * (bracketed univariate real) root-finding algorithm} may accept as solutions.\n * This basically controls whether or not under-approximations and\n * over-approximations are allowed.\n * \n * <p>If all solutions are accepted ({@link #ANY_SIDE}), then the solution\n * that the root-finding algorithm returns for a given root may be equal to the\n * actual root, but it may also be an approximation that is slightly smaller\n * or slightly larger than the actual root. Root-finding algorithms generally\n * only guarantee that the returned solution is within the requested\n * tolerances. In certain cases however, in particular for\n * {@link org.apache.commons.math3.ode.events.EventHandler state events} of\n * {@link org.apache.commons.math3.ode.ODEIntegrator ODE solvers}, it\n * may be necessary to guarantee that a solution is returned that lies on a\n * specific side the solution.<\/p>\n * \n * @see BracketedUnivariateSolver\n * @since 3.0\n * @version $Id$\n */\npublic enum AllowedSolution {\nANY_SIDE, LEFT_SIDE, RIGHT_SIDE, BELOW_SIDE, ABOVE_SIDE;}","position":"org.apache.commons.math3.analysis.solvers.AllowedSolution:41","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < int ; int++) {\n    if ((T[][][int].int) != int) {\n        throw new org.apache.commons.math3.exception.DimensionMismatchException(int , T[][][int].int);\n    } \n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:169","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"-1","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:54","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-3.348471032333413E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4308","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Strategies to use for replacing an empty cluster.\n */\npublic static enum EmptyClusterStrategy {\nLARGEST_VARIANCE, LARGEST_POINTS_NUMBER, FARTHEST_POINT, ERROR;}","position":"org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:46","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(double[][], 0, 0)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:547","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"+1.4794751934479566E-52","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2185","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = ((((double * double) + (double * double)) + (double * double)) + (double * double)) + (double * double)","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:95","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"yDotK":"a"},"name":"add","transplant":{"sourceCode":"double[][] = null","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:98","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (double >= 1.0) {\n    if (boolean || (!(boolean))) {\n        org.apache.commons.math3.ode.AbstractIntegrator.computeDerivatives(double, double[], double[][][0]);\n    } \n    if (boolean) {\n        final double[] double[] = new double[int];\n        if ((double[]) == null) {\n            for (int int = 0 ; int < (double[].int) ; ++int) {\n                double[][int] = (double) + ((double) * org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs(double[][int])));\n            }\n        } else {\n            for (int int = 0 ; int < (double[].int) ; ++int) {\n                double[][int] = (double[][int]) + ((double[][int]) * org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs(double[][int])));\n            }\n        }\n        double = org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.initializeStep(boolean, org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getOrder(), double[], double, double[], double[][][0], double[], double[][][1]);\n        boolean = false;\n    } \n    double = double;\n    if (boolean) {\n        if (((double) + (double)) >= double) {\n            double = double - (double);\n        } \n    } else {\n        if (((double) + (double)) <= double) {\n            double = double - (double);\n        } \n    }\n    for (int int = 1 ; int < int ; ++int) {\n        for (int int = 0 ; int < (double[].int) ; ++int) {\n            double double = (double[][][(int - 1)][0]) * (double[][][0][int]);\n            for (int int = 1 ; int < int ; ++int) {\n                double += (double[][][(int - 1)][int]) * (double[][][int][int]);\n            }\n            double[][int] = (double[][int]) + ((double) * double);\n        }\n        org.apache.commons.math3.ode.AbstractIntegrator.computeDerivatives(((double) + ((double[][(int - 1)]) * (double))), double[], double[][][int]);\n    }\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        double double = (double[][0]) * (double[][][0][int]);\n        for (int int = 1 ; int < int ; ++int) {\n            double += (double[][int]) * (double[][][int][int]);\n        }\n        double[][int] = (double[][int]) + ((double) * double);\n    }\n    double = org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.estimateError(double[][], double[], double[], double);\n    if (double >= 1.0) {\n        final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.min(double, org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(double, ((double) * org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.pow(double, double)))));\n        double = org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.filterStep(((double) * double), boolean, false);\n    } \n}","position":"org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:229","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = ((double) * double) + (double)","position":"org.apache.commons.math3.analysis.function.HarmonicOscillator:170","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * double) + double","position":"org.apache.commons.math3.analysis.function.HarmonicOscillator:122","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-0.25","position":"org.apache.commons.math3.util.FastMath:119","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:99","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"previousStageResult":"upper","spacing":"upper","sum":"upper"},"name":"add","transplant":{"sourceCode":"return 0.5 * (double + (double * double))","position":"org.apache.commons.math3.analysis.integration.MidPointIntegrator:138","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.geometry.euclidean.oned.Interval:66","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"confI":"v","refI":"v","ref0":"v","dimension":"length"},"name":"replace","transplant":{"sourceCode":"for (int int = 0 ; int < (this.int) ; int++) {\n    double[][int] = (double[][int]) - (double[][int]);\n}","position":"org.apache.commons.math3.optimization.direct.AbstractSimplex:172","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[].int , int);\n} ","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:375","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int > 1) {\n    double double = 1.0 / org.apache.commons.math3.util.CombinatoricsUtils.(org.apache.commons.math3.util.CombinatoricsUtils.factorial(int));\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        double[][int] *= double;\n    }\n} ","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:93","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; ++int) {\n    final double[] double[] = java.util.List<double[]>.get((int - (int + 1)));\n    final double double = 1.0 / (double - (java.util.List<java.lang.Double>.get((int - (int + 1)))));\n    if (java.lang.Double.java.lang.Double.isInfinite(double)) {\n        throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double);\n    } \n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        double[][int] = double * ((double[][int]) - (double[][int]));\n    }\n    double[] = double[];\n}","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:104","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"i":"length","facts":"dividedDifference"},"name":"add","transplant":{"sourceCode":"if ((int & 2) != 0) {\n    double[][0] = -(double[][0]);\n    double[][1] = -(double[][1]);\n} ","position":"org.apache.commons.math3.util.FastMathCalc:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.math3.analysis.differentiation.DerivativeStructure[].int) ; ++int) {\n    org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][int] = org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][int].add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(double[][int]));\n}","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:211","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"cs":"overshoot","singularValues":"scale","e":"upper","f":"overshoot","j":"j","sn":"overshoot"},"name":"replace","transplant":{"sourceCode":"double = (double * (double[][int])) + (double * (this.double[][(int + 1)]))","position":"org.apache.commons.math3.linear.SingularValueDecomposition:420","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = (double[][int]) * ((double[][int]) - (double[][int]))","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:175","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+3.861525553653117E-227","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1781","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double /= int[][int]","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:136","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"d":"point"},"name":"replace","transplant":{"sourceCode":"if (1 <= double) {\n    return 1;\n} ","position":"org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution:174","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.Localizable , java.lang.Object[])","position":"org.apache.commons.math3.util.MathUtils:252","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (3 * double) * ((1 + double) - double)","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:126","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][][int++] = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D[]{ null , org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(-(java.lang.Float.float))) , org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D(+(java.lang.Float.float))) }","position":"org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:627","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][0][int]","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:107","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"long += long[][int]","position":"org.apache.commons.math3.stat.inference.GTest:376","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(int , T[][][int].int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:352","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] -= double * (double[][int])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:372","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-2","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:97","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.twod.Vector2D","position":"org.apache.commons.math3.geometry.euclidean.twod.Segment:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"high":"rows","index":"rows"},"name":"replace","transplant":{"sourceCode":"if (int > int) {\n    int = int;\n} ","position":"org.apache.commons.math3.ode.ContinuousOutputModel:316","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixChangingVisitor.start(int, int, 0, (int - 1), 0, (int - 1))","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:463","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.util.ResizableDoubleArray.addElement(double)","position":"org.apache.commons.math3.stat.descriptive.DescriptiveStatistics:172","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.math3.exception.NumberIsTooLargeException:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return -1.0","position":"org.apache.commons.math3.util.FastMath:604","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.GTest.rootLogLikelihoodRatio(long, long, long, long)","position":"org.apache.commons.math3.stat.inference.TestUtils:425","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.math3.linear.BlockRealMatrix.blockHeight(int)","position":"org.apache.commons.math3.linear.BlockRealMatrix:941","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.double[].clone()","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:87","type":"CtAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.geometry.euclidean.twod.Segment:106","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double = 0","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:486","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.getWeight(int)","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:81","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"prod2Low":"theta2","prod1Low":"h","s12Low":"theta2","s12High":"h"},"name":"add","transplant":{"sourceCode":"double double = double + ((double + double) + double)","position":"org.apache.commons.math3.util.MathArrays:946","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double) * (((-27.0) / 32.0) + (double * ((459.0 / 32.0) + (double * (((-243.0) / 8.0) + ((double * 135.0) / 8.0))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:101","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.util.Incrementor.resetCount()","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:133","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double * ((2 * double) - 1)","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:102","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (5 - (6 * double))","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:101","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"t","b":"t","c":"t","d":"t","e":"t","fa":"t","fb":"t","fc":"t"},"name":"replace","transplant":{"sourceCode":"if (((double > 0) && (double > 0)) || ((double <= 0) && (double <= 0))) {\n    double = double;\n    double = double;\n    double = double - double;\n    double = double;\n} ","position":"org.apache.commons.math3.analysis.solvers.BrentSolver:225","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:402","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"r","b":"r"},"name":"replace","transplant":{"sourceCode":"final double double = (double - double) / 2","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:160","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()) + (double * double)","position":"org.apache.commons.math3.geometry.euclidean.twod.Segment:106","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final double[] double[] = org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.this.getLowerBound()","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:915","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = new double[int]","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:399","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.math3.geometry.partitioning.SubHyperplane.SplitSubHyperplane<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>(new org.apache.commons.math3.geometry.euclidean.threed.SubPlane(org.apache.commons.math3.geometry.euclidean.threed.Plane.copySelf() , new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>)) , new org.apache.commons.math3.geometry.euclidean.threed.SubPlane(org.apache.commons.math3.geometry.euclidean.threed.Plane.copySelf() , new org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>)))","position":"org.apache.commons.math3.geometry.euclidean.threed.SubPlane:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.text.NumberFormat","position":"org.apache.commons.math3.fraction.AbstractFormat:111","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:162","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double double = 1","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory:66","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:274","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"theta":"inverse"},"name":"add","transplant":{"sourceCode":"final double double = 4 * double","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:116","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (double[][][int][int])","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:148","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = 1 - (2 * double)","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:96","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:240","failures":[],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{"yDotK":"yDotK","i":"i"},"name":"add","transplant":{"sourceCode":"final double double = double[][][1][int]","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:113","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][10][int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:340","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[], int, double[], double[], int)","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:1060","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:177","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.math3.complex.Complex.createComplex((((double) * (org.apache.commons.math3.complex.Complex.double)) - ((double) * (org.apache.commons.math3.complex.Complex.double))), (((double) * (org.apache.commons.math3.complex.Complex.double)) + ((double) * (org.apache.commons.math3.complex.Complex.double))))","position":"org.apache.commons.math3.complex.Complex:449","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.UnivariateFunction = org.apache.commons.math3.analysis.UnivariateFunction","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:131","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((double[] == null) || (double[] == null)) {\n    throw new org.apache.commons.math3.exception.NullArgumentException();\n} ","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:78","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double > 0.0) {\n    double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(double);\n    if ((org.apache.commons.math3.linear.SchurTransformer.ShiftInfo.double) < (org.apache.commons.math3.linear.SchurTransformer.ShiftInfo.double)) {\n        double = -double;\n    } \n    double = (org.apache.commons.math3.linear.SchurTransformer.ShiftInfo.double) - ((org.apache.commons.math3.linear.SchurTransformer.ShiftInfo.double) / ((((org.apache.commons.math3.linear.SchurTransformer.ShiftInfo.double) - (org.apache.commons.math3.linear.SchurTransformer.ShiftInfo.double)) / 2.0) + double));\n    for (int int = 0 ; int <= int ; int++) {\n        double[][][int][int] -= double;\n    }\n    org.apache.commons.math3.linear.SchurTransformer.ShiftInfo.double += double;\n    org.apache.commons.math3.linear.SchurTransformer.ShiftInfo.double = org.apache.commons.math3.linear.SchurTransformer.ShiftInfo.double = org.apache.commons.math3.linear.SchurTransformer.ShiftInfo.double = 0.964;\n} ","position":"org.apache.commons.math3.linear.SchurTransformer:290","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"double double = (double - double) - double","position":"org.apache.commons.math3.optimization.direct.PowellOptimizer:237","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * (double + double)) - double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:86","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.distanceInf(double[], double[])","position":"org.apache.commons.math3.ml.distance.ChebyshevDistance:34","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (double / double) + org.apache.commons.math3.special.Beta.(org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double, double))","position":"org.apache.commons.math3.special.Beta:406","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+0.5849615335464478","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5918","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.descriptive.moment.Variance.increment(double)","position":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:115","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.976868146639626E196","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2755","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkMultiplicationCompatible(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:289","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double[][int] = 0.0","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:204","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = (java.lang.Integer == null ? 0 : org.apache.commons.math3.optim.linear.SimplexTableau.getEntry(java.lang.Integer, org.apache.commons.math3.optim.linear.SimplexTableau.getRhsOffset())) - (boolean ? 0 : double)","position":"org.apache.commons.math3.optim.linear.SimplexTableau:447","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(double[].int, double[].int)","position":"org.apache.commons.math3.linear.MatrixUtils:215","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal[][int] = java.math.BigDecimal.java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:210","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double = double + (org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.random()) * (double - double))","position":"org.apache.commons.math3.analysis.solvers.MullerSolver2:147","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:81","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"filteredH":"power","maxStep":"power"},"name":"add","transplant":{"sourceCode":"if (double < (-double)) {\n    double = -double;\n} ","position":"org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:336","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[][].int) ; ++int) {\n    double *= double;\n    final double[] double[] = double[][][int];\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        double[][int] *= double;\n    }\n}","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:157","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"shape":"offset","scale":"offset"},"name":"add","transplant":{"sourceCode":"return ((this.double) * (this.double)) * (this.double)","position":"org.apache.commons.math3.distribution.GammaDistribution:325","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((double[][int]) < (double[][int])) || ((double[][int]) > (double[][int]))) {\n    double double = 0;\n    for (int int = int ; int < (double[].int) ; ++int) {\n        final double double;\n        if ((double[][int]) < (double[][int])) {\n            double = (double[][int]) * ((double[][int]) - (double[][int]));\n        } else if ((double[][int]) > (double[][int])) {\n            double = (double[][int]) * ((double[][int]) - (double[][int]));\n        } else {\n            double = 0;\n        }\n        double += org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(double);\n    }\n    return (double) + double;\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter:165","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > 0) {\n    throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int);\n} ","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:334","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (double * ((459.0 / 32.0) + (double * (((-243.0) / 8.0) + ((double * 135.0) / 8.0)))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:83","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Goal type for an optimization problem (minimization or maximization of\n * a scalar function.\n * \n * @version $Id$\n * @since 2.0\n */\npublic enum GoalType implements org.apache.commons.math3.optim.OptimizationData {\nMAXIMIZE, MINIMIZE;}","position":"org.apache.commons.math3.optim.nonlinear.scalar.GoalType:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    for (int int = 0 ; int < int ; ++int) {\n        final T[] T[] = T[][][int];\n        T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:527","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double += ((org.apache.commons.math3.util.Pair<java.lang.Integer, java.lang.Double>.getValue()) * (org.apache.commons.math3.util.Pair<java.lang.Integer, java.lang.Double>.getKey())) * (org.apache.commons.math3.util.Pair<java.lang.Integer, java.lang.Double>.getKey())","position":"org.apache.commons.math3.distribution.EnumeratedIntegerDistribution:151","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:184","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(int)","position":"org.apache.commons.math3.random.RandomGeneratorFactory:72","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][][0].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:260","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"start":"degree","end":"degree","signChangeIndex":"degree"},"name":"replace","transplant":{"sourceCode":"if ((int - int) >= (int - int)) {\n    ++int;\n} else {\n    --int;\n}","position":"org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:314","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(int)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:392","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((double[][][int].int) < 2) {\n    throw new org.apache.commons.math3.exception.NumberIsTooSmallException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double[][][int].int , 2 , true);\n} ","position":"org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:101","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.genetics.Chromosome org.apache.commons.math3.genetics.Chromosome = org.apache.commons.math3.genetics.BinaryChromosome.newFixedLengthChromosome(java.util.List<java.lang.Integer>)","position":"org.apache.commons.math3.genetics.BinaryMutation:53","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"p":"theta05","a":"theta05","q":"theta05","b":"c","c":"theta05","s":"c","fa":"theta05","fb":"theta05","m":"theta05","fc":"cDot"},"name":"replace","transplant":{"sourceCode":"if (double == double) {\n    double = (2 * double) * double;\n    double = 1 - double;\n} else {\n    double = double / double;\n    final double double = double / double;\n    double = double * ((((2 * double) * double) * (double - double)) - ((double - double) * (double - 1)));\n    double = ((double - 1) * (double - 1)) * (double - 1);\n}","position":"org.apache.commons.math3.analysis.solvers.BrentSolver:185","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = (int) - 1 ; int > 3 ; --int) {\n    final double double = 1.0 / (int - 3);\n    double = double * ((double * double) + double);\n    double = (double[][][int][int]) + ((double * double) * double);\n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:342","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.dfp.Dfp[] = org.apache.commons.math3.dfp.DfpMath.org.apache.commons.math3.dfp.DfpMath.splitMult(org.apache.commons.math3.dfp.Dfp.getField().getLn5Split(), org.apache.commons.math3.dfp.Dfp[])","position":"org.apache.commons.math3.dfp.DfpMath:371","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.util.Pair<double[], double[]>(double[] , double[])","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:168","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>).getAngle()","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:1181","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((375.0 / 16.0) + (double * (((-625.0) / 8.0) + ((125.0 / 2.0) * double))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:77","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.getOmegaInverse()","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:95","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = java.lang.Object == null ? 0 : java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object)","position":"org.apache.commons.math3.ode.JacobianMatrices:332","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"r":"j","mant":"orders","i":"j","org.apache.commons.math3.dfp.Dfp.RADIX":"j"},"name":"replace","transplant":{"sourceCode":"int[][int] = int % int","position":"org.apache.commons.math3.dfp.DfpDec:261","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = 0","position":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:62","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final boolean boolean","position":"org.apache.commons.math3.dfp.DfpDec:215","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final boolean boolean = java.io.ObjectInput.readBoolean()","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:277","type":"CtLocalVariableImpl"},"status":-2},{"failureDictionary":{}}]
