[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = 1.0 / (double[][int])","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:946","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:238","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"rem":"startRow","n":"endRow"},"name":"add","transplant":{"sourceCode":"if (0 == int) {\n    int += 2;\n} else if (1 == int) {\n    int += 4;\n} ","position":"org.apache.commons.math3.primes.Primes:93","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int <= int ; ++int) {\n    for (int int = int ; int <= int ; ++int) {\n        final T[] T[] = T[][][int];\n        T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:559","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"+1.6374611405314333E-7","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4873","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] += (-double) * (double[][][int][(int - int)])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:117","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"+1.7010571956634521","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3588","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = (double[][][int][int]) + ((double * double) * double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:345","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = double - (double - double)","position":"org.apache.commons.math3.util.FastMath:1645","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 1.0 / org.apache.commons.math3.util.CombinatoricsUtils.(org.apache.commons.math3.util.CombinatoricsUtils.factorial(int))","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:94","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += 4","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1298","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.multiply(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:118","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((char[][int]) >= '1') && ((char[][int]) <= '9')) {\n    boolean = false;\n} ","position":"org.apache.commons.math3.dfp.DfpMath:57","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.NoDataException()","position":"org.apache.commons.math3.analysis.function.StepFunction:71","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+2.667695552814763E162","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1154","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:156","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double[][][int] = int < 0 ? null : new double[int]","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:195","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkAdditionCompatible(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:232","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix.multiply(org.apache.commons.math3.linear.RealMatrix).multiply(org.apache.commons.math3.linear.RealMatrix)","position":"org.apache.commons.math3.filter.KalmanFilter:360","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.apache.commons.math3.linear.RealMatrix = new org.apache.commons.math3.linear.Array2DRowRealMatrix(double[][])","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:70","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Enumerate for visit order with respect to plus sub-tree, minus sub-tree and cut sub-hyperplane.\n */\nenum Order {\nPLUS_MINUS_SUB, PLUS_SUB_MINUS, MINUS_PLUS_SUB, MINUS_SUB_PLUS, SUB_PLUS_MINUS, SUB_MINUS_PLUS;}","position":"org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor:54","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.random.AbstractWell.setSeed(new int[]{ ((int)(long >>> 32)) , ((int)(long & 4294967295L)) })","position":"org.apache.commons.math3.random.AbstractWell:179","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.math3.optimization.fitting.HarmonicFitter.fit(new org.apache.commons.math3.optimization.fitting.HarmonicFitter.ParameterGuesser(org.apache.commons.math3.optimization.fitting.CurveFitter<org.apache.commons.math3.analysis.function.HarmonicOscillator.Parametric>.getObservations()).guess())","position":"org.apache.commons.math3.optimization.fitting.HarmonicFitter:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    if (((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(true);\n    } \n    return new double[]{ org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(-(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()), org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.asin(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(-(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()), org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()) };\n} else if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    if (((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(true);\n    } \n    return new double[]{ org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY(), org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) , -org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.asin(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX())) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY(), org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()) };\n} else if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    if (((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(false);\n    } \n    return new double[]{ org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY(), -(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ())) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.acos(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY(), org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()) };\n} else if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    if (((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(false);\n    } \n    return new double[]{ org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ(), org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.acos(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ(), -(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY())) };\n} else if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    if (((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(false);\n    } \n    return new double[]{ org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX(), org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.acos(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX(), -(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ())) };\n} else if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    if (((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(false);\n    } \n    return new double[]{ org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ(), -(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX())) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.acos(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ(), org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) };\n} else if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    if (((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(false);\n    } \n    return new double[]{ org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX(), -(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY())) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.acos(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX(), org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()) };\n} else {\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D);\n    if (((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(false);\n    } \n    return new double[]{ org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY(), org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.acos(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()) , org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan2(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY(), -(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX())) };\n}","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:628","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = int[][int]","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:612","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:102","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"ua":"householderVectors","diagOffset":"m"},"name":"add","transplant":{"sourceCode":"if (int > 0) {\n    double[][][0][0] = 1;\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:122","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int - 1 ; int >= int ; --int) {\n    final double[] double[] = double[][][int];\n    double[][][int][int] = 1;\n    if ((double[][(int - int)]) != 0.0) {\n        for (int int = int ; int < int ; ++int) {\n            double double = 0;\n            for (int int = int ; int < int ; ++int) {\n                double -= (double[][][int][int]) * (double[][][int][(int - int)]);\n            }\n            double /= (double[][(int - int)]) * (double[][(int - int)]);\n            for (int int = int ; int < int ; ++int) {\n                double[][][int][int] += (-double) * (double[][][int][(int - int)]);\n            }\n        }\n    } \n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:105","type":"CtForImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.util.Pair<java.lang.Double, T> org.apache.commons.math3.util.Pair<java.lang.Double, T> = java.util.List<org.apache.commons.math3.util.Pair<java.lang.Double, T>>.get(int)","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:73","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(((2 * int) + 1) , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:143","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal((int + 1) , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:101","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"theta":"theta"},"name":"add","transplant":{"sourceCode":"final double double = 1 - double","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:95","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((6 * double) - double)","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:104","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.pairedT(double[], double[])","position":"org.apache.commons.math3.stat.inference.TestUtils:112","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.tTest(double[], double[])","position":"org.apache.commons.math3.stat.inference.TestUtils:220","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:428","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.math3.genetics.FixedGenerationCount:59","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double[][][2][int]","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:132","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][12][int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:342","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.dfp.Dfp.byte = org.apache.commons.math3.dfp.Dfp.byte","position":"org.apache.commons.math3.dfp.Dfp:1732","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.math3.random.AbstractWell:168","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double = double","position":"org.apache.commons.math3.optimization.univariate.BrentOptimizer:264","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (1 + (double * (double - 3)))","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:206","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"c":"Wplus","pc":"Wplus","pmc":"Wplus","numberOfPoints":"N"},"name":"replace","transplant":{"sourceCode":"final double double = int * (double - (double * double))","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory:113","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (((double)((int * (int + 1)))) / 2.0) - double","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:193","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.317044973373413","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3326","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.io.ObjectInput.readInt()","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:391","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double[] = null","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:97","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = ((double[][int]) + (double * double)) + (double * double)","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:98","type":"CtAssignmentImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:103","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NoDataException()","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:80","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.twod.Vector2D","position":"org.apache.commons.math3.geometry.euclidean.twod.Segment:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"xA":"Umin","xB":"Umin","absYB":"Umin","absYA":"Umin"},"name":"replace","transplant":{"sourceCode":"return double < double ? double : double","position":"org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:220","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.MannWhitneyUTest.calculateAsymptoticPValue(double, double[].int, double[].int)","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:235","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:155","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((byte) == (org.apache.commons.math3.dfp.Dfp.byte)) || ((byte) == (org.apache.commons.math3.dfp.Dfp.byte))","position":"org.apache.commons.math3.dfp.Dfp:882","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"-1.742885956093543E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4328","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = ((double * double) + (double * double)) + (double * double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:337","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double = org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:2040","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][(int - 1)] = (((int - int) + 2) * (double[][(int - 2)])) - ((int - 1) * (double[][(int - 1)]))","position":"org.apache.commons.math3.analysis.function.Sigmoid:199","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.util.FastMath:1654","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.linear.RealMatrix = new org.apache.commons.math3.linear.LUDecomposition(org.apache.commons.math3.linear.RealMatrix).getSolver().getInverse()","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:98","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"x":"relativeThreshold"},"name":"add","transplant":{"sourceCode":"return -double","position":"org.apache.commons.math3.analysis.function.Minus:33","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.optim.AbstractConvergenceChecker:54","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"householderVectors":"householderVectors","a":"a","hK":"hK","k":"k","m":"k","n":"m"},"name":"add","transplant":{"sourceCode":"if (double != 0.0) {\n    double[][int] -= double;\n    for (int int = int + 1 ; int < int ; ++int) {\n        double double = 0;\n        for (int int = int ; int < int ; ++int) {\n            final double[] double[] = double[][][int];\n            double -= (double[][int]) * (double[][int]);\n        }\n        double /= double * (double[][][int][int]);\n        for (int int = int ; int < int ; ++int) {\n            final double[] double[] = double[][][int];\n            double[][int] -= double * (double[][int]);\n        }\n    }\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:272","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double != 0.0) {\n    double[][int] -= double;\n    for (int int = int + 1 ; int < int ; ++int) {\n        final double[] double[] = double[][][int];\n        double double = 0;\n        for (int int = int ; int < int ; ++int) {\n            double -= (double[][int]) * (double[][int]);\n        }\n        double /= double * (double[][][int][int]);\n        for (int int = int ; int < int ; ++int) {\n            double[][int] -= double * (double[][int]);\n        }\n    }\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:336","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.linear.AbstractRealMatrix:149","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:110","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"coeffDot3":"theta","theta":"theta"},"name":"add","transplant":{"sourceCode":"final double double = double * (5 - (6 * double))","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:101","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double - 0.5","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:322","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+0.013579258695244789","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5118","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:194","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (int int = 2 ; int <= (int) ; ++int) {\n    double[][int] = -(double[][(int - 2)]);\n}","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:1162","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < (int - 1)) {\n    double = 0;\n    for (int int = int + 1 ; int < int ; ++int) {\n        final double double = double[][int];\n        double += double * double;\n    }\n    final double double = (double[][(int + 1)]) > 0 ? -org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.sqrt(double)) : org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(double);\n    double[][int] = double;\n    if (double != 0.0) {\n        double[][(int + 1)] -= double;\n        for (int int = int + 1 ; int < int ; ++int) {\n            final double[] double[] = double[][][int];\n            double double = 0;\n            for (int int = int + 1 ; int < int ; ++int) {\n                double -= (double[][int]) * (double[][int]);\n            }\n            double /= double * (double[][(int + 1)]);\n            for (int int = int + 1 ; int < int ; ++int) {\n                double[][int] -= double * (double[][int]);\n            }\n        }\n    } \n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:288","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = double[][2]","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:842","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    final double double = org.apache.commons.math3.random.RandomGenerator.nextGaussian();\n    double[][int] = double;\n    double += double * double;\n}","position":"org.apache.commons.math3.random.UnitSphereRandomVectorGenerator:68","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.java.math.BigDecimal.subtract(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:177","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.pow(2, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:175","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.TooManyEvaluationsException(org.apache.commons.math3.optim.BaseOptimizer<PAIR>.getMaxEvaluations())","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:187","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][int].int , (int * org.apache.commons.math3.linear.BlockRealMatrix.(blockWidth(int))))","position":"org.apache.commons.math3.linear.BlockRealMatrix:170","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.List<double[]>.add(double[].clone())","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:117","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<T[]>.add(T[].clone())","position":"org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator:125","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"m":"b"},"name":"add","transplant":{"sourceCode":"double[][][0] = new double[3]","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:795","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int] = double[][][int]","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:114","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (double < double) {\n    double = double;\n    double = double;\n} else {\n    double = double;\n    double = double;\n}","position":"org.apache.commons.math3.optimization.univariate.BrentOptimizer:129","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(double)","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:205","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"length":"swapR","interpolatedState":"tmpRow","v1":"tmpRow"},"name":"replace","transplant":{"sourceCode":"double[] = new double[int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:175","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int] = double[]","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:115","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+1.307674368E12","position":"org.apache.commons.math3.util.FastMathCalc:53","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:139","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!org.apache.commons.math3.linear.QRDecomposition.Solver.(isNonSingular())) {\n    throw new org.apache.commons.math3.linear.SingularMatrixException();\n} ","position":"org.apache.commons.math3.linear.QRDecomposition:346","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:152","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int)","position":"org.apache.commons.math3.distribution.EnumeratedDistribution:244","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[].int","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:311","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = int >> int","position":"org.apache.commons.math3.primes.SmallPrimes:152","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int[][int]","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:147","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * This enumeration defines the type of transform which is to be computed.\n * \n * @since 3.0\n * @version $Id$\n */\npublic enum TransformType {\nFORWARD, INVERSE;}","position":"org.apache.commons.math3.transform.TransformType:25","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.random.AbstractWell.setSeed(new int[]{ ((int)(long >>> 32)) , ((int)(long & 4294967295L)) })","position":"org.apache.commons.math3.random.AbstractWell:179","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double += (double[][][(int - 1)][int]) * (double[][][int][int])","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator:140","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = (double[][int]) - (double * ((double[][int]) - (double * ((double[][int]) + (double * ((double[][int]) + (double * (double[][int]))))))))","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:215","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = ((int * 10) / int) % 10","position":"org.apache.commons.math3.dfp.DfpDec:204","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"--int","position":"org.apache.commons.math3.util.MultidimensionalCounter:232","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final double double = double + ((double - double) * double)","position":"org.apache.commons.math3.analysis.solvers.MullerSolver:158","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double / double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:297","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int[] int[] = new int[int]","position":"org.apache.commons.math3.distribution.AbstractIntegerDistribution:207","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix(double[][], 0, 0)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:547","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.ONE":"b"},"name":"replace","transplant":{"sourceCode":"-double","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:69","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double /= double * (double[][(int + 1)])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:305","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((byte[][int]) == (org.apache.commons.math3.util.OpenIntToDoubleHashMap.byte)) && ((int[][int]) == int)) {\n    return org.apache.commons.math3.util.OpenIntToDoubleHashMap.org.apache.commons.math3.util.OpenIntToDoubleHashMap.changeIndexSign(int);\n} ","position":"org.apache.commons.math3.util.OpenIntToDoubleHashMap:306","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = 0","position":"org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter:175","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!org.apache.commons.math3.util.ArithmeticUtils.(org.apache.commons.math3.util.ArithmeticUtils.isPowerOfTwo(int))) {\n    throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , java.lang.Integer.java.lang.Integer.valueOf(double[].int));\n} ","position":"org.apache.commons.math3.transform.FastCosineTransformer:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 1) {\n    final double double = double - double;\n    double[][][6][int] = 16 * (((double[][][2][int]) - double) + (double[][][4][int]));\n    if (int > 2) {\n        final double double = 6 * (double - double);\n        double[][][7][int] = 16 * (((double[][][3][int]) - double) + (3 * (double[][][5][int])));\n        for (int int = 4 ; int <= int ; ++int) {\n            final double double = (0.5 * int) * (int - 1);\n            final double double = ((2 * double) * (int - 2)) * (int - 3);\n            double[][][(int + 4)][int] = 16 * (((double[][][int][int]) + (double * (double[][][(int + 2)][int]))) - (double * (double[][][int][int])));\n        }\n    } \n} ","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:276","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"vals":"zDot","length":"dimension"},"name":"replace","transplant":{"sourceCode":"for (int int = (this.int) - 1 ; int > 0 ; int--) {\n    double[][int] = double[][(int - 1)];\n}","position":"org.apache.commons.math3.optimization.direct.CMAESOptimizer:931","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[], int, double[], 0, int)","position":"org.apache.commons.math3.ode.FirstOrderConverter:104","type":"CtInvocationImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:59","failures":[],"name":"inlineConstant","type":"mutation","nodeType":"CtLocalVariableImpl","status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 2147483647","position":"org.apache.commons.math3.dfp.Dfp:1148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.random.RandomGenerator.nextInt(int)","position":"org.apache.commons.math3.random.SynchronizedRandomGenerator:85","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final int int = ((int << 9) ^ (int >>> 23)) & -67108865","position":"org.apache.commons.math3.random.Well44497a:99","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:259","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (((int >> int) & 1) == 1) {\n    int += int + 1;\n} ","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:222","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != int) {\n    final int int = int[][int];\n    int[][int] = int[][int];\n    int[][int] = int;\n    final double[] double[] = double[][][int];\n    double[][][int] = double[][][int];\n    double[][][int] = double[];\n} ","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:109","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"xA":"hTheta","xB":"hTheta","xC":"theta","denom":"hTheta","tmp1":"theta","tmp2":"hTheta"},"name":"add","transplant":{"sourceCode":"double double = double - ((((double - double) * double) - ((double - double) * double)) / double)","position":"org.apache.commons.math3.optimization.univariate.BracketFinder:143","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (1.0 + (double * (((-15.0) / 4.0) + (double * ((16.0 / 3.0) - ((5.0 / 2.0) * double))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:82","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.6105287075042725","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3532","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:283","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.math3.linear.RealLinearOperator:95","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:215","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"pmc":"c","java.math.BigDecimal.ONE":"c"},"name":"add","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:140","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal[][int] = java.math.BigDecimal.negate(java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:185","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"a":"ES"},"name":"add","transplant":{"sourceCode":"double double = 1.0 / double","position":"org.apache.commons.math3.special.Gamma:327","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (((double)(((2 * int) + 1))) / 6.0)","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:251","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(double[][])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:156","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"origChrom":"origChrom"},"name":"add","transplant":{"sourceCode":"java.util.List<java.lang.Integer> java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer>(org.apache.commons.math3.genetics.BinaryChromosome.getRepresentation())","position":"org.apache.commons.math3.genetics.BinaryMutation:46","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = org.apache.commons.math3.genetics.GeneticAlgorithm.org.apache.commons.math3.genetics.GeneticAlgorithm.getRandomGenerator().nextInt(org.apache.commons.math3.genetics.BinaryChromosome.getLength())","position":"org.apache.commons.math3.genetics.BinaryMutation:49","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.analysis.function.Sigmoid:190","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{"pmc":"c","java.math.BigDecimal.ONE":"c"},"name":"add","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:140","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal[][int] = java.math.BigDecimal.negate(java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:185","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"high":"endRow","low":"endColumn","index":"endColumn"},"name":"replace","transplant":{"sourceCode":"if (int < int) {\n    int = int;\n} else if (int > int) {\n    int = int;\n} ","position":"org.apache.commons.math3.ode.ContinuousOutputModel:314","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkSubMatrixIndex(int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:509","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.(degree()) + 1","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:257","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.random.AbstractWell.this(int, int, int, int, new int[]{ ((int)(long >>> 32)) , ((int)(long & 4294967295L)) })","position":"org.apache.commons.math3.random.AbstractWell:132","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (int = 1000000000 ; int > int ; int /= 10) {\n}","position":"org.apache.commons.math3.dfp.Dfp:2147","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkColumnIndex(int)","position":"org.apache.commons.math3.linear.SparseFieldMatrix:140","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int == int) {\n    int = 3;\n} else if (int == (int - 1)) {\n    int = 1;\n} else {\n    int = 2;\n    int = int;\n}","position":"org.apache.commons.math3.linear.SingularValueDecomposition:317","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutput.writeDouble(double[][][int][int])","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:375","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.geometry.partitioning.BSPTree<S>","position":"org.apache.commons.math3.geometry.partitioning.BSPTree:412","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.analysis.function.Logistic.org.apache.commons.math3.analysis.function.Logistic.value(((double) - double), double, double, double, double, double)","position":"org.apache.commons.math3.analysis.function.Logistic:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = double - double","position":"org.apache.commons.math3.util.FastMath:1657","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixPreservingVisitor.start(int, int, 0, (int - 1), 0, (int - 1))","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:478","type":"CtInvocationImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:95","failures":[],"name":"inlineConstant","type":"mutation","nodeType":"CtLocalVariableImpl","status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (double != 0.0) {\n    double[][(int + 1)] -= double;\n    for (int int = int + 1 ; int < int ; ++int) {\n        final double[] double[] = double[][][int];\n        double double = 0;\n        for (int int = int + 1 ; int < int ; ++int) {\n            double -= (double[][int]) * (double[][int]);\n        }\n        double /= double * (double[][(int + 1)]);\n        for (int int = int + 1 ; int < int ; ++int) {\n            double[][int] -= double * (double[][int]);\n        }\n    }\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:297","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"e":"v","k":"index"},"name":"add","transplant":{"sourceCode":"if ((double[][(int + 1)]) < 0) {\n    double[][int] = -(double[][int]);\n} ","position":"org.apache.commons.math3.linear.SingularValueDecomposition:166","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int > 0) {\n    final int int = org.apache.commons.math3.random.HaltonSequenceGenerator.scramble(int, int, int[][int], (int % (int[][int])));\n    double[][int] += double * int;\n    int /= int[][int];\n    double /= int[][int];\n}","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:132","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((org.apache.commons.math3.optim.OptimizationData[][int]) instanceof org.apache.commons.math3.optim.InitialGuess) {\n    org.apache.commons.math3.optim.OptimizationData[][int] = null;\n    int = int;\n    continue;\n} ","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:151","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.math3.optim.OptimizationData[][int] = new org.apache.commons.math3.optim.MaxEval((int - (int)));\n    double[] double[] = null;\n    if (int == 0) {\n        double[] = double[];\n    } else {\n        int int = 0;\n        while (double[] == null) {\n            if ((int++) >= org.apache.commons.math3.optim.BaseOptimizer<PAIR>.(getMaxEvaluations())) {\n                throw new org.apache.commons.math3.exception.TooManyEvaluationsException(org.apache.commons.math3.optim.BaseOptimizer<PAIR>.getMaxEvaluations());\n            } \n            double[] = org.apache.commons.math3.random.RandomVectorGenerator.nextVector();\n            for (int int = 0 ; (double[] != null) && (int < (double[].int)) ; ++int) {\n                if (((double[] != null) && ((double[][int]) < (double[][int]))) || ((double[] != null) && ((double[][int]) > (double[][int])))) {\n                    double[] = null;\n                } \n            }\n        }\n    }\n    org.apache.commons.math3.optim.OptimizationData[][int] = new org.apache.commons.math3.optim.InitialGuess(double[]);\n    final PAIR PAIR = org.apache.commons.math3.optim.BaseMultivariateOptimizer<PAIR>.optimize(org.apache.commons.math3.optim.OptimizationData[]);\n    org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer<PAIR>.store(PAIR);\n} catch (java.lang.RuntimeException java.lang.RuntimeException) {\n    java.lang.RuntimeException = java.lang.RuntimeException;\n}","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:176","type":"CtTryImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double double = double + double","position":"org.apache.commons.math3.util.FastMath:2551","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][2][int]","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:132","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.dfp.DfpField.FLAG_UNDERFLOW":"length"},"name":"replace","transplant":{"sourceCode":"return this.int","position":"org.apache.commons.math3.dfp.Dfp:1481","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (T[][]) == null ? 0 : T[][].int","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:405","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.setRowVector(int, org.apache.commons.math3.linear.FieldVector<T>)","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1031","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((1 - (5 * double)) + double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:131","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.double[] = double[].clone()","position":"org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer:105","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double[].clone()","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:132","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-1.13047236597869E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5570","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.linear.Array2DRowRealMatrix(double[][] , false)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:248","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final double double = 1 + ((double) / (org.apache.commons.math3.util.FastMath.double))","position":"org.apache.commons.math3.distribution.GammaDistribution:395","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = 2 * double","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:103","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 2","position":"org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.Incrementor.getCount()","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:68","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"minus":"plusOutside","plus":"plusOutside"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>.reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>)","position":"org.apache.commons.math3.geometry.partitioning.AbstractRegion:621","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.geometry.partitioning.SubHyperplane<S>","position":"org.apache.commons.math3.geometry.partitioning.BoundaryAttribute:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    double += (double[][][int][int]) * (double[][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:382","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    T = T.add(T[][][int][int].multiply(T[][int]));\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:446","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = java.util.Map<java.lang.String, java.lang.Double>.get(java.lang.String)","position":"org.apache.commons.math3.ode.ParameterJacobianWrapper:87","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer<PAIR>.store(PAIR)","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:201","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"other"},"name":"add","transplant":{"sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.math3.stat.descriptive.moment.VectorialMean)) {\n    return false;\n} ","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:96","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof org.apache.commons.math3.optim.linear.LinearObjectiveFunction) {\n    org.apache.commons.math3.optim.linear.LinearObjectiveFunction org.apache.commons.math3.optim.linear.LinearObjectiveFunction = ((org.apache.commons.math3.optim.linear.LinearObjectiveFunction)(java.lang.Object));\n    return ((double) == (org.apache.commons.math3.optim.linear.LinearObjectiveFunction.double)) && (org.apache.commons.math3.linear.RealVector.equals(org.apache.commons.math3.optim.linear.LinearObjectiveFunction.org.apache.commons.math3.linear.RealVector));\n} ","position":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction:114","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"result":"v","length":"length","resultOffset":"length","tmp2":"v"},"name":"add","transplant":{"sourceCode":"for (int int = 0 ; int < (this.int) ; ++int) {\n    double[][(int + int)] = 2 * (double[][int]);\n}","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:1452","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[].int , int);\n} ","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:354","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:435","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:155","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = int * (org.apache.commons.math3.linear.BlockFieldMatrix.int)","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1331","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:323","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"ltI":"diagonal","q":"k","ltQ":"hK","order":"diagOffset"},"name":"add","transplant":{"sourceCode":"for (int int = int ; int < int ; ++int) {\n    double[][int] -= (double[][int]) * (double[][int]);\n}","position":"org.apache.commons.math3.linear.CholeskyDecomposition:151","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][int]) != 0.0) {\n    for (int int = int ; int < int ; ++int) {\n        double double = 0;\n        for (int int = int ; int < int ; ++int) {\n            double -= (double[][][int][int]) * (double[][int]);\n        }\n        double /= (double[][(int - int)]) * (double[][int]);\n        for (int int = int ; int < int ; ++int) {\n            double[][][int][int] += (-double) * (double[][int]);\n        }\n    }\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:189","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.subtract(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:152","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"long = ((org.apache.commons.math3.util.FastMath.long[][int]) << int) | ((org.apache.commons.math3.util.FastMath.long[][(int + 1)]) >>> (64 - int))","position":"org.apache.commons.math3.util.FastMath:2033","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTest(long[][], double)","position":"org.apache.commons.math3.stat.inference.TestUtils:287","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{}}]
