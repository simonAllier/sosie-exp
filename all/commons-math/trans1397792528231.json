[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][int] = double","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:385","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.oned.Vector1D","position":"org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:94","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"index":"base","i":"index"},"name":"add","transplant":{"sourceCode":"int int = int[][int]","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:100","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.random.HaltonSequenceGenerator.scramble(int, int, int[][int], (int % (int[][int])))","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:133","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.math3.linear.FieldMatrix<org.apache.commons.math3.fraction.BigFraction> org.apache.commons.math3.linear.FieldMatrix<org.apache.commons.math3.fraction.BigFraction> = org.apache.commons.math3.linear.FieldMatrix<org.apache.commons.math3.fraction.BigFraction>.power(int)","position":"org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution:199","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = int == 1 ? java.math.BigDecimal.java.math.BigDecimal : java.math.BigDecimal[][int]","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:89","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"t":"t"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atanh()","position":"org.apache.commons.math3.analysis.function.Atanh:51","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[])","position":"org.apache.commons.math3.analysis.function.Sigmoid:215","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"sGradient":"sGradient","phiHessian":"rHessian","rHessian":"rHessian","cHessian":"cHessian"},"name":"add","transplant":{"sourceCode":"double[][][2][0] += ((double[][0]) * (double[][][2][0])) + ((double[][2]) * (double[][][2][0]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:229","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][2] += ((double[][0]) * (double[][][2][2])) + ((double[][2]) * (double[][][2][2]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:232","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double , 0 , 1)","position":"org.apache.commons.math3.stat.regression.SimpleRegression:692","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.updateHighOrderDerivativesPhase1(org.apache.commons.math3.linear.Array2DRowRealMatrix)","position":"org.apache.commons.math3.ode.nonstiff.AdamsIntegrator:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[].int","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:123","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"Rinv":"cachedV"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrix.multiply(org.apache.commons.math3.linear.RealMatrix.transpose())","position":"org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:251","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrix","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:210","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = ((int + (int)) - int) - 1","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:724","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.math3.genetics.FixedGenerationCount:58","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    if (org.apache.commons.math3.optim.nonlinear.scalar.GoalType == (org.apache.commons.math3.optim.nonlinear.scalar.GoalType.org.apache.commons.math3.optim.nonlinear.scalar.GoalType)) {\n        return double < double ? org.apache.commons.math3.optim.PointValuePair : org.apache.commons.math3.optim.PointValuePair;\n    } else {\n        return double > double ? org.apache.commons.math3.optim.PointValuePair : org.apache.commons.math3.optim.PointValuePair;\n    }\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:227","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-1","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:54","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(int , double[][][].int)","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:159","type":"CtThrowImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.inference.MannWhitneyUTest.ensureDataConformance(double[], double[])","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:129","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final int int = 71","position":"org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:307","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.math3.util.MultidimensionalCounter:258","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Available choices of update formulas for the &beta; parameter\n * in {@link NonLinearConjugateGradientOptimizer}.\n * <p>\n * The &beta; parameter is used to compute the successive conjugate\n * search directions. For non-linear conjugate gradients, there are\n * two formulas to compute &beta;:\n * <ul>\n * <li>Fletcher-Reeves formula<\/li>\n * <li>Polak-Ribi&egrave;re formula<\/li>\n * <\/ul>\n * On the one hand, the Fletcher-Reeves formula is guaranteed to converge\n * if the start point is close enough of the optimum whether the\n * Polak-Ribi&egrave;re formula may not converge in rare cases. On the\n * other hand, the Polak-Ribi&egrave;re formula is often faster when it\n * does converge. Polak-Ribi&egrave;re is often used.\n * <p>\n * @see NonLinearConjugateGradientOptimizer\n * @version $Id$\n * @deprecated As of 3.1 (to be removed in 4.0).\n * @since 2.0\n */\n@java.lang.Deprecated\npublic enum ConjugateGradientFormula {\nFLETCHER_REEVES, POLAK_RIBIERE;}","position":"org.apache.commons.math3.optimization.general.ConjugateGradientFormula:43","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Arrays.java.util.Arrays.fill(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[], org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getField().getZero())","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:207","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:93","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:91","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"absoluteThreshold","b":"absoluteThreshold","c":"absoluteThreshold","x":"absoluteThreshold"},"name":"replace","transplant":{"sourceCode":"if (((this.double) <= double) && (double < (this.double))) {\n    double double = 2 * (double - (this.double));\n    double double = ((this.double) - (this.double)) * ((this.double) - (this.double));\n    return double / double;\n} ","position":"org.apache.commons.math3.distribution.TriangularDistribution:145","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.optimization.AbstractConvergenceChecker:94","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"col":"j","dataRow":"rowI","outDataRow":"rowI","mRow":"rowI"},"name":"replace","transplant":{"sourceCode":"T[][int] = T[][int].add(T[][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:242","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:530","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = int ; int < (int + int) ; int++) {\n    double += (double[][int]) - double;\n}","position":"org.apache.commons.math3.stat.descriptive.moment.Mean:172","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] += (org.apache.commons.math3.linear.RealMatrix.getEntry(int, int)) * (double[][int])","position":"org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:177","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double double = double","position":"org.apache.commons.math3.util.OpenIntToDoubleHashMap:408","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double[].int , double[].int)","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:241","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+6.02987028472758E156","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1141","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField() , int , int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:212","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"-6.364563771711373E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4117","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = ((((double[][int]) - (double * double)) - (double * double)) - (double * double)) - (double * double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:140","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"-1.1047585095328619E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5695","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][1] = double / double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:265","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] += (double[][int]) * double","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:179","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.exp((((-0.5) * double) * double))) / ((double) * (org.apache.commons.math3.distribution.NormalDistribution.double))","position":"org.apache.commons.math3.distribution.NormalDistribution:152","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.log1p(double)","position":"org.apache.commons.math3.analysis.function.Log1p:36","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"double double = 1.0","position":"org.apache.commons.math3.distribution.PoissonDistribution:295","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:240","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (((double[]) != null) && (double <= 0.5)) {\n    final double double = (4 * double) * double;\n    final double double = (double * (double)) / 6.0;\n    final double double = double * ((6 - (9 * double)) + double);\n    final double double = double * ((6 * double) - double);\n    final double double = double * (((-3) * double) + double);\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        final double double = double[][][0][int];\n        final double double = (double[][][1][int]) + (double[][][2][int]);\n        final double double = double[][][3][int];\n        double[][int] = (((double[][int]) + (double * double)) + (double * double)) + (double * double);\n        double[][int] = ((double * double) + (double * double)) + (double * double);\n    }\n} else {\n    final double double = 4 * double;\n    final double double = double / 6.0;\n    final double double = double * ((((-double) + 5) * double) - 1);\n    final double double = double * (((double - 2) * double) - 2);\n    final double double = double * ((((-double) - 1) * double) - 1);\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        final double double = double[][][0][int];\n        final double double = (double[][][1][int]) + (double[][][2][int]);\n        final double double = double[][][3][int];\n        double[][int] = (((double[][int]) + (double * double)) + (double * double)) + (double * double);\n        double[][int] = ((double * double) + (double * double)) + (double * double);\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:100","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"double double = (double[][2]) - (double[][2])","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:988","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double[][int]) * double","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:206","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.EmptyClusterStrategy()","position":"org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:57","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][0] = (double * (double - double)) / double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:333","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixPreservingVisitor.visit(int, int, double[][][int][int])","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:481","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double += double * double","position":"org.apache.commons.math3.stat.regression.SimpleRegression:152","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.math3.stat.inference.GTest()","position":"org.apache.commons.math3.stat.inference.TestUtils:51","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Plane.org.apache.commons.math3.geometry.euclidean.threed.Vector3D","position":"org.apache.commons.math3.geometry.euclidean.threed.Plane:131","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:540","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.special.Gamma.LANCZOS_G":"theta","absX":"theta"},"name":"replace","transplant":{"sourceCode":"final double double = (double + double) + 0.5","position":"org.apache.commons.math3.special.Gamma:690","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * (2 - (3 * double))) / (double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:327","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"up":"vectorsInitialized"},"name":"add","transplant":{"sourceCode":"boolean = !boolean","position":"org.apache.commons.math3.dfp.Dfp:2364","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:157","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 2","position":"org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator:125","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:195","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"T[] T[]","position":"org.apache.commons.math3.distribution.EnumeratedDistribution:251","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:513","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double[][int] , int)","position":"org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic:298","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:388","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.ode.events.Transformer","position":"org.apache.commons.math3.ode.events.FilterType:375","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] double[] = new double[double[].int]","position":"org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:173","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Vector3D","position":"org.apache.commons.math3.geometry.euclidean.threed.Plane:213","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:539","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int) < 0) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.math3.util.OpenIntToDoubleHashMap:574","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][0] = 1","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:204","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"++int","position":"org.apache.commons.math3.util.MultidimensionalCounter:230","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double -= (double[][int]) * (double[][int])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:303","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"lsb":"degree","lsbthreshold":"degree","n":"currentDegree"},"name":"add","transplant":{"sourceCode":"int = ((int * 10) / int) % 10","position":"org.apache.commons.math3.dfp.DfpDec:204","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:393","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double[][int] = ((double - double) + double) - double","position":"org.apache.commons.math3.transform.FastFourierTransformer:308","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return PAIR[][0]","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:217","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double += double * double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:293","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealVector","position":"org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (T[].int) ; int++) {\n    T[][int] = T[][int].add(T);\n}","position":"org.apache.commons.math3.linear.ArrayFieldVector:504","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double + double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:87","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = ((double[][int]) + (double * double)) + (double * double)","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:98","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 1.0","position":"org.apache.commons.math3.distribution.ZipfDistribution:122","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.analysis.MultivariateFunction.value(double[])","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:187","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:117","failures":[],"name":"removeConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 3542","position":"org.apache.commons.math3.linear.ArrayFieldVector:941","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (int - int) - 1","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:184","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"0\"","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunction:313","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.java.lang.String.format(\"(f=%s %s)\", org.apache.commons.math3.genetics.Chromosome.getFitness(), org.apache.commons.math3.genetics.AbstractListChromosome<T>.getRepresentation())","position":"org.apache.commons.math3.genetics.AbstractListChromosome:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","position":"org.apache.commons.math3.linear.RealVectorFormat:203","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.OutOfRangeException(int , 1 , org.apache.commons.math3.random.HaltonSequenceGenerator.int[].int)","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:111","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"t":"t"},"name":"add","transplant":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate()","position":"org.apache.commons.math3.analysis.function.Logistic:226","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate().add(double)","position":"org.apache.commons.math3.analysis.function.Logistic:226","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.BoundaryAttribute<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D>.getPlusInside(), true)","position":"org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet:173","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:561","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.dfp.Dfp","position":"org.apache.commons.math3.dfp.DfpMath:331","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][2][int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:186","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"in":"ordinate"},"name":"add","transplant":{"sourceCode":"if ((double[][0]) == 0.0) {\n    double[][0] = double[][1];\n    double[][1] = 0.0;\n} ","position":"org.apache.commons.math3.util.FastMathCalc:407","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= 0) {\n    double = double[][int];\n} else {\n    double = double[][0];\n}","position":"org.apache.commons.math3.analysis.function.StepFunction:90","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int <= int ; int++) {\n    if (int < int) {\n        org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) + ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) * (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)))));\n    } \n    org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) + ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) * (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)))));\n    int++;\n}","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:991","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (double[][]) == null ? 0 : double[][].int","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:339","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.util.FastMathCalc.org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream, \"EXP_INT_TABLE_B\", org.apache.commons.math3.util.FastMath.int, org.apache.commons.math3.util.FastMath.ExpIntTable.double[])","position":"org.apache.commons.math3.util.FastMath:3709","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.random.RandomGenerator.nextInt()","position":"org.apache.commons.math3.random.SynchronizedRandomGenerator:78","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+1.8143062591552734","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3654","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:271","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.exp(((-0.5) * double))","position":"org.apache.commons.math3.distribution.MultivariateNormalDistribution:239","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(double, double)","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:195","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"y":"theta","shiftedShape":"s"},"name":"replace","transplant":{"sourceCode":"final double double = (double - double) / double","position":"org.apache.commons.math3.distribution.GammaDistribution:261","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((8 - (15 * double)) + (2 * double))","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:107","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.math3.util.MathArrays:1218","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = (double[][int]) + (double[][int])","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:214","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((double[][][][int].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int].int , int);\n} ","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:197","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:254","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+3.5549586192569994E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4433","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int);\n} ","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:276","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final double double = 1.9699272335463627E-8","position":"org.apache.commons.math3.util.FastMath:1412","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][4][int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:188","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"y":"householderVectors"},"name":"replace","transplant":{"sourceCode":"final double[] double[] = double[][][0]","position":"org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer:261","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:366","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return T","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:402","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; int++) {\n    final double double = double[][int];\n    final double double = double[][int];\n    final double double = (double * (org.apache.commons.math3.analysis.UnivariateFunction.value(double))) - double;\n    final double double = double + double;\n    double = (double - double) - double;\n    double = double;\n}","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:92","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double[][][5][int]","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:110","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][12][int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:342","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][2] = (-double) / double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:271","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.math3.linear.AbstractRealMatrix.getColumnDimension()","position":"org.apache.commons.math3.linear.AbstractRealMatrix:834","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][0] = (-double) * double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:305","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][] double[][] = new double[int][int]","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:97","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.threed.Vector3D","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:125","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.geometry.euclidean.threed.Vector3D(org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX() , org.apache.commons.math3.geometry.euclidean.threed.Vector3D , org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY() , org.apache.commons.math3.geometry.euclidean.threed.Vector3D , -(double) , org.apache.commons.math3.geometry.euclidean.threed.Vector3D)","position":"org.apache.commons.math3.geometry.euclidean.threed.Plane:238","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((double[].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[].int , int);\n} ","position":"org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:279","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    double[][int] = (double[][int]) + (double[][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:174","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"double double = 0.04168701738764507","position":"org.apache.commons.math3.util.FastMath:929","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double) * (((-27.0) / 32.0) + (double * ((459.0 / 32.0) + (double * (((-243.0) / 8.0) + ((double * 135.0) / 8.0))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:101","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final double double = (org.apache.commons.math3.special.Gamma.double) + (double * (org.apache.commons.math3.special.Gamma.double))","position":"org.apache.commons.math3.special.Gamma:544","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double + double","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:96","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.linear.Array2DRowRealMatrix:362","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.2791850600366742E-9","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5242","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][2] = ((double[][][0][0]) * (double[][][0][2])) + ((double[][][2][0]) * (double[][][2][2]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:210","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.math3.util.Decimal64(-org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.pow(-(double), (1.0 / int))))","position":"org.apache.commons.math3.util.Decimal64:444","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double / double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:299","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.random.AbstractRandomGenerator.(nextDouble()) <= 0.5","position":"org.apache.commons.math3.random.AbstractRandomGenerator:197","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][0] += double","position":"org.apache.commons.math3.analysis.function.Sigmoid:211","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.math3.dfp.Dfp:1438","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.getOffset(org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.((org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint)(getHyperplane())).getLocation())","position":"org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint:58","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"vals","c":"weight","coefficients":"weight","n":"length"},"name":"add","transplant":{"sourceCode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    for (int int = int - int ; int > 0 ; int--) {\n        this.double[][int] = (this.double[][(int - 1)]) - ((this.double[][int]) * (this.double[][int]));\n    }\n    this.double[][0] = (double[][int]) - ((this.double[][int]) * (this.double[][0]));\n}","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:208","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; int++) {\n    double += double[][int];\n    if (double <= double) {\n        double[] = java.util.List<T>.get(int).sample();\n        break;\n    } \n}","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:117","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.special.Gamma.S_LIMIT":"x","x":"x"},"name":"replace","transplant":{"sourceCode":"if ((double > 0) && (double <= double)) {\n    return 1 / (double * double);\n} ","position":"org.apache.commons.math3.special.Gamma:476","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.floor(double)","position":"org.apache.commons.math3.analysis.function.Floor:32","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double += org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(double)","position":"org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter:177","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Available choices of update formulas for the updating the parameter\n * that is used to compute the successive conjugate search directions.\n * For non-linear conjugate gradients, there are\n * two formulas:\n * <ul>\n * <li>Fletcher-Reeves formula<\/li>\n * <li>Polak-Ribière formula<\/li>\n * <\/ul>\n * \n * On the one hand, the Fletcher-Reeves formula is guaranteed to converge\n * if the start point is close enough of the optimum whether the\n * Polak-Ribière formula may not converge in rare cases. On the\n * other hand, the Polak-Ribière formula is often faster when it\n * does converge. Polak-Ribière is often used.\n * \n * @since 2.0\n */\npublic static enum Formula {\nFLETCHER_REEVES, POLAK_RIBIERE;}","position":"org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:95","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutput.writeInt(int)","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumerate for the location of a point with respect to the region.\n */\npublic static enum Location {\nINSIDE, OUTSIDE, BOUNDARY;}","position":"org.apache.commons.math3.geometry.partitioning.Region:50","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    java.io.ObjectOutput.writeDouble(double[][int]);\n}","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:238","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.this(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.org.apache.commons.math3.linear.AbstractFieldMatrix.extractField(T[][]), T[][])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:93","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = java.lang.Math.java.lang.Math.sqrt(double[][int])","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:416","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-4.8402541351522003E-36","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2222","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double * ((double * double) + double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:344","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"T[] T[]","position":"org.apache.commons.math3.distribution.EnumeratedDistribution:251","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:268","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.272789478302002","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3291","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = new double[double[].int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:175","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.linear.RealMatrix = null","position":"org.apache.commons.math3.optimization.direct.CMAESOptimizer:524","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.getOmegaInverse()","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:95","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-6.938000231893302E137","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2620","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = (double[][int]) * ((double[][int]) - (double[][int]))","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:173","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.math3.util.OpenIntToDoubleHashMap.org.apache.commons.math3.util.OpenIntToDoubleHashMap.changeIndexSign(int)","position":"org.apache.commons.math3.util.OpenIntToDoubleHashMap:307","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int] = new double[int]","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:176","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = int ; int < int ; ++int) {\n    final double double = double[][int];\n    final double[] double[] = double[][][int];\n    for (int int = 0 ; int < int ; ++int) {\n        double[][int] += double * (double[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.QRDecomposition:414","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[], double[])","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:184","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] org.apache.commons.math3.geometry.euclidean.twod.Vector2D[] = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D[(java.util.List<org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.ComparableSegment>.size()) + 2]","position":"org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:634","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[].int) != (int)) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(int[].int , int);\n} ","position":"org.apache.commons.math3.util.MultidimensionalCounter:255","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+1.3581426848077408E75","position":"org.apache.commons.math3.util.FastMathLiteralArrays:953","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.tTest(double[], double[])","position":"org.apache.commons.math3.stat.inference.TestUtils:220","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (int < (-1023)) {\n    int++;\n    long >>>= 1;\n}","position":"org.apache.commons.math3.dfp.Dfp:2485","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMaxImpl()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:236","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.genetics.FixedGenerationCount:61","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(0, 0, -1)","position":"org.apache.commons.math3.optimization.linear.SimplexTableau:193","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixChangingVisitor.start(org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(), org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(), int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:494","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][int] = double","position":"org.apache.commons.math3.linear.AbstractRealMatrix:747","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.min(double, double)","position":"org.apache.commons.math3.special.Beta:398","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.getOmegaInverse()","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:111","type":"CtLocalVariableImpl"},"status":-2},{"failureDictionary":{}}]
