[{"failures":[],"variableMapping":{"maxEvalIndex":"maxEvalIndex","i":"i","optimData":"optimData"},"name":"add","transplant":{"sourceCode":"if ((org.apache.commons.math3.optim.OptimizationData[][int]) instanceof org.apache.commons.math3.optim.MaxEval) {\n    org.apache.commons.math3.optim.OptimizationData[][int] = null;\n    int = int;\n} ","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:147","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.math3.optim.OptimizationData[][int]) instanceof org.apache.commons.math3.optim.MaxEval) {\n    org.apache.commons.math3.optim.OptimizationData[][int] = null;\n    int = int;\n    continue;\n} ","position":"org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer:148","type":"CtIfImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:528","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double[].int , double[].int)","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:241","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double[] = new double[double[].int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:176","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][int] = (double[][int]) + ((double * (double)) * ((double[][int]) + (double * ((double[][int]) + (double * ((double[][int]) + (double * (double[][int]))))))));\n    double[][int] = (((double[][int]) + (double * (double[][int]))) + (double * (double[][int]))) + (double * (double[][int]));\n}","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:208","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"jWidth":"j","outIndex":"i","jColumn":"j","i":"j","block":"rowI","out":"rowI"},"name":"replace","transplant":{"sourceCode":"T[][int++] = T[][((int * int) + int)]","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1126","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:530","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver.setup(java.lang.Integer.int, new org.apache.commons.math3.analysis.polynomials.PolynomialFunction(double[]), java.lang.Double.double, java.lang.Double.double, double)","position":"org.apache.commons.math3.analysis.solvers.LaguerreSolver:228","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((1 + double) + double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:134","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new double[]{ 0 }","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunction:266","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:133","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:336","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{"xInt":"maxDegree","org.apache.commons.math3.util.Precision.SGN_MASK_FLOAT":"maxDegree"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    int = int - int;\n} ","position":"org.apache.commons.math3.util.Precision:207","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int <= 4) {\n    double[] = null;\n} else {\n    double[] = new double[int - 4];\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        final int int = int + 5;\n        double[][int] = 1.0 / (int * int);\n        final double double = 0.5 * org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.sqrt((((double)((int + 1))) / int)));\n        for (int int = 0 ; int <= int ; ++int) {\n            double[][int] *= double / (int + 1);\n        }\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:212","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-8.638415150333099E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4843","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator(this)","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final double double = 3.145894820876798E-6","position":"org.apache.commons.math3.util.FastMath:2977","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:301","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.EigenDecomposition:540","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (1 + (double * (double - 3)))","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:206","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return double","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:212","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.optimization.GoalType","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:75","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][6][int] = 16 * (((double[][][2][int]) - double) + (double[][][4][int]))","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:278","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR":"theta","org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING":"length","agingB":"length","targetY":"h","yA":"theta","yB":"theta"},"name":"add","transplant":{"sourceCode":"if (int >= (this.int)) {\n    final int int = int - (this.int);\n    final double double = int + 1;\n    final double double = (1 << int) - 1;\n    double = ((double * double) - ((double * double) * double)) / (double + double);\n} else {\n    double = 0;\n}","position":"org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:243","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][int] = (double[][int]) + ((double * (double)) * (double[][][0][int]));\n}","position":"org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:87","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"double double = ((double)(int)) / ((double)(int))","position":"org.apache.commons.math3.distribution.HypergeometricDistribution:202","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(double[][][int][int])","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:142","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"phiHessian":"cHessian"},"name":"add","transplant":{"sourceCode":"double[][][0][1] = double[][][1][0]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:339","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][0] += (((double[][0]) * (double[][][1][0])) + ((double[][1]) * (double[][][1][0]))) + ((double[][2]) * (double[][][1][0]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:228","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    double += (double[][int]) * (double[][int]);\n}","position":"org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:251","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][0][int]","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:332","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * <em>Secant<\/em>-based root-finding methods.\n */\nprotected enum Method {\nREGULA_FALSI, ILLINOIS, PEGASUS;}","position":"org.apache.commons.math3.analysis.solvers.BaseSecantSolver:264","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; ++int) {\n    double double = 0;\n    for (int int = int ; int < int ; ++int) {\n        double -= (double[][][int][int]) * (double[][][int][(int - int)]);\n    }\n    double /= (double[][(int - int)]) * (double[][(int - int)]);\n    for (int int = int ; int < int ; ++int) {\n        double[][][int][int] += (-double) * (double[][][int][(int - int)]);\n    }\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:109","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"stages":"nCols"},"name":"add","transplant":{"sourceCode":"final double[][] double[][] = new double[int][]","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator:107","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[][] double[][] = new double[int][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:225","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"+1.037806510925293","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3082","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = 0","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:290","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"+2.645961716432205E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5742","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = (double[][(int - 1)]) - ((double[][int]) * (double[][int]))","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:210","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate().add(double).multiply(double).exp().multiply(double).add(1).pow(double).reciprocal().multiply(((double) - (double)))","position":"org.apache.commons.math3.analysis.function.Logistic:226","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (0 == int) {\n    int += 2;\n} else if (1 == int) {\n    int += 4;\n} ","position":"org.apache.commons.math3.primes.Primes:93","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int <= int ; ++int) {\n    final T[] T[] = T[][][int];\n    for (int int = int ; int <= int ; ++int) {\n        org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:512","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.getArray()","position":"org.apache.commons.math3.transform.FastFourierTransformer:445","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    double += (double[][int]) * (double[][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:241","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"n":"length"},"name":"add","transplant":{"sourceCode":"if (int == 0) {\n    throw new org.apache.commons.math3.exception.NoDataException();\n} ","position":"org.apache.commons.math3.analysis.interpolation.LoessInterpolator:227","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int[].int ; int < (int[].int) ; ++int) {\n    final long long = int[][(int - (int[].int))];\n    int[][int] = ((int)(((1812433253L * (long ^ (long >> 30))) + int) & 4294967295L));\n}","position":"org.apache.commons.math3.random.AbstractWell:162","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"sample1":"sample2","alpha":"alpha","this":"org.apache.commons.math3.stat.inference.TestUtils.T_TEST","sample2":"sample2"},"name":"add","transplant":{"sourceCode":"return (this.org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.homoscedasticTTest(double[], double[])) < double","position":"org.apache.commons.math3.stat.inference.TTest:809","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.homoscedasticTTest(double[], double[], double)","position":"org.apache.commons.math3.stat.inference.TestUtils:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"final org.apache.commons.math3.analysis.polynomials.PolynomialFunction org.apache.commons.math3.analysis.polynomials.PolynomialFunction = org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.polynomial(0)","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:137","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.polynomials.PolynomialFunction org.apache.commons.math3.analysis.polynomials.PolynomialFunction = org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.polynomial(1)","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:142","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:195","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+0.36358463764190674","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5553","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = (double[][int]) + ((double * (double)) * (double[][][0][int]))","position":"org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:88","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (int != 0) {\n    if ((long & long) != long) {\n        int |= int;\n        long = long >> int;\n    } \n    int = int >> 1;\n    long = long >> int;\n}","position":"org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:369","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((double[].int) != (double[].int)) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[].int , double[].int);\n} ","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:86","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression.include(org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.copyOf(double[], double[].int), 1.0, double)","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:176","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double[][int[][int]] = double[][int]","position":"org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:562","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    int int = 0;\n    final int int = int[][int];\n    while (int <= int) {\n        int += int;\n        ++int;\n    }\n    --int;\n    int -= int;\n    int[][int] = int;\n}","position":"org.apache.commons.math3.util.MultidimensionalCounter:225","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int);\n} ","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:273","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new org.apache.commons.math3.linear.SingularMatrixException()","position":"org.apache.commons.math3.linear.EigenDecomposition:533","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats)","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:228","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"vSize":"length","dSize":"length"},"name":"replace","transplant":{"sourceCode":"final int[] int[] = new int[int + int]","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:323","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int[] int[] = new int[double[].int]","position":"org.apache.commons.math3.analysis.differentiation.GradientFunction:55","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"x0":"x","this":"this","x1":"x","absoluteAccuracy":"x"},"name":"replace","transplant":{"sourceCode":"if ((org.apache.commons.math3.util.FastMath.abs((double - double))) <= double) {\n    return double;\n} ","position":"org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver:86","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.ceil(double)","position":"org.apache.commons.math3.analysis.function.Ceil:32","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Goal type for an optimization problem.\n * \n * @version $Id$\n * @deprecated As of 3.1 (to be removed in 4.0).\n * @since 2.0\n */\n@java.lang.Deprecated\npublic enum GoalType implements java.io.Serializable {\nMAXIMIZE, MINIMIZE;}","position":"org.apache.commons.math3.optimization.GoalType:30","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixChangingVisitor.start(int, int, 0, (int - 1), 0, (int - 1))","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:397","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return long","position":"org.apache.commons.math3.util.ArithmeticUtils:631","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:461","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"T T = org.apache.commons.math3.Field<T>.getZero()","position":"org.apache.commons.math3.linear.AbstractFieldMatrix:782","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[], 0, double[], double[].int, double[].int)","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:93","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.exception.MultiDimensionMismatchException.getWrongDimension(1)","position":"org.apache.commons.math3.linear.MatrixDimensionMismatchException:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(int , double[][][].int)","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:165","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.util.MathUtils.org.apache.commons.math3.util.MathUtils.checkNotNull(org.apache.commons.math3.stat.descriptive.moment.GeometricMean)","position":"org.apache.commons.math3.stat.descriptive.moment.GeometricMean:196","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory<? extends java.lang.Number>.getRule(int)","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:140","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.math3.util.ArithmeticUtils:415","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return long","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:109","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"double double = 1.0","position":"org.apache.commons.math3.distribution.PoissonDistribution:295","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:329","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"order":"k"},"name":"replace","transplant":{"sourceCode":"final double[] double[] = new double[int + 2]","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:1223","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = double[][][(int + 1)]","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:353","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"v1":"a1","v2":"a1"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)","position":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D:519","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.threed.Vector3D","position":"org.apache.commons.math3.geometry.euclidean.threed.RotationOrder:158","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"while ((int >>> 23) != 1) {\n    int = int << 1;\n    --int;\n}","position":"org.apache.commons.math3.util.FastMath:3197","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int <= int ; ++int) {\n    for (int int = int ; int <= int ; ++int) {\n        org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][][int][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:577","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * Available choices of update formulas for the &beta; parameter\n * in {@link NonLinearConjugateGradientOptimizer}.\n * <p>\n * The &beta; parameter is used to compute the successive conjugate\n * search directions. For non-linear conjugate gradients, there are\n * two formulas to compute &beta;:\n * <ul>\n * <li>Fletcher-Reeves formula<\/li>\n * <li>Polak-Ribi&egrave;re formula<\/li>\n * <\/ul>\n * On the one hand, the Fletcher-Reeves formula is guaranteed to converge\n * if the start point is close enough of the optimum whether the\n * Polak-Ribi&egrave;re formula may not converge in rare cases. On the\n * other hand, the Polak-Ribi&egrave;re formula is often faster when it\n * does converge. Polak-Ribi&egrave;re is often used.\n * <p>\n * @see NonLinearConjugateGradientOptimizer\n * @version $Id$\n * @deprecated As of 3.1 (to be removed in 4.0).\n * @since 2.0\n */\n@java.lang.Deprecated\npublic enum ConjugateGradientFormula {\nFLETCHER_REEVES, POLAK_RIBIERE;}","position":"org.apache.commons.math3.optimization.general.ConjugateGradientFormula:43","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkSubMatrixIndex(int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:556","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"min":"x","max":"x","x":"x"},"name":"add","transplant":{"sourceCode":"if (double < double) {\n    return 0.0;\n} else if (double >= double) {\n    return 1.0;\n} ","position":"org.apache.commons.math3.random.EmpiricalDistribution:639","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.asin(double)","position":"org.apache.commons.math3.analysis.function.Asin:36","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"m":"dimension"},"name":"replace","transplant":{"sourceCode":"final org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.linear.RealMatrix = new org.apache.commons.math3.linear.Array2DRowRealMatrix(int , int)","position":"org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution:236","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(int, int)","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:86","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Goal type for an optimization problem.\n * \n * @version $Id$\n * @deprecated As of 3.1 (to be removed in 4.0).\n * @since 2.0\n */\n@java.lang.Deprecated\npublic enum GoalType implements java.io.Serializable {\nMAXIMIZE, MINIMIZE;}","position":"org.apache.commons.math3.optimization.GoalType:30","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixChangingVisitor.start(org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(), org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(), int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:429","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = int / (org.apache.commons.math3.linear.BlockFieldMatrix.int) ; int < (1 + (int / (org.apache.commons.math3.linear.BlockFieldMatrix.int))) ; ++int) {\n    final int int = org.apache.commons.math3.linear.BlockFieldMatrix<T>.blockWidth(int);\n    final int int = int * (org.apache.commons.math3.linear.BlockFieldMatrix.int);\n    final int int = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(int, int);\n    final int int = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.min(((int + 1) * (org.apache.commons.math3.linear.BlockFieldMatrix.int)), (1 + int));\n    final T[] T[] = T[][][((int * (int)) + int)];\n    for (int int = int ; int < int ; ++int) {\n        int int = (((int - int) * int) + int) - int;\n        for (int int = int ; int < int ; ++int) {\n            T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int]);\n            ++int;\n        }\n    }\n}","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1528","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkSubMatrixIndex(int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:556","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 1 ; int <= (int) ; ++int) {\n    double[][int] = double;\n    double *= double * (double - int);\n}","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:1013","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][2] = double[][][2][1]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:237","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.math3.linear.BlockRealMatrix org.apache.commons.math3.linear.BlockRealMatrix = new org.apache.commons.math3.linear.BlockRealMatrix(1 , int)","position":"org.apache.commons.math3.linear.BlockRealMatrix:845","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:69","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+7.573375369829243E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4356","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (((double)(((2 * int) + 1))) / 6.0)","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:251","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+2.3047242164611816","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3899","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= 0) {\n    double = double[][int];\n} else {\n    double = double[][0];\n}","position":"org.apache.commons.math3.analysis.function.StepFunction:90","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+5.4375131636754E196","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1233","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = ((double * double) + (double * double)) + (double * double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:337","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double[] double[] = int >= int ? double[] : double[]","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:177","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.optim.BaseMultivariateOptimizer<PAIR>.getEvaluations()","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:207","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"-4.6694407626686244E235","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2848","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = (((double * double) + (double * double)) + (double * double)) + (double * double)","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:136","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"T[][int++] = T[][((int * int) + int)]","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1126","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:562","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.math3.complex.Complex:351","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < int ; ++int) {\n    double[][int] -= double * (double[][int]);\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:306","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"x","center":"x","this":"this","org.apache.commons.math3.util.MathUtils.TWO_PI":"x","org.apache.commons.math3.util.FastMath.PI":"x"},"name":"add","transplant":{"sourceCode":"return double - (double * (org.apache.commons.math3.util.FastMath.floor((((double + double) - double) / double))))","position":"org.apache.commons.math3.util.MathUtils:91","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan(double)","position":"org.apache.commons.math3.analysis.function.Atan:36","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iBlock":"row","jBlock":"row","blocks":"data","blockColumns":"row"},"name":"replace","transplant":{"sourceCode":"final T[] T[] = this.T[][][((int * int) + int)]","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1533","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:296","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+9.737596728980696E-10","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5201","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = (double[][int]) - (double * (double[][][0][int]))","position":"org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:93","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.end()","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1488","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[].int","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:107","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][int]) != 0.0) {\n    for (int int = int ; int < int ; ++int) {\n        double double = 0;\n        for (int int = int ; int < int ; ++int) {\n            double -= (double[][][int][int]) * (double[][int]);\n        }\n        double /= (double[][(int - int)]) * (double[][int]);\n        for (int int = int ; int < int ; ++int) {\n            double[][][int][int] += (-double) * (double[][int]);\n        }\n    }\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:189","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.linear.BlockRealMatrix:635","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.OutOfRangeException(int , 0 , int)","position":"org.apache.commons.math3.util.MultidimensionalCounter:219","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"phiHessian":"phiHessian"},"name":"add","transplant":{"sourceCode":"double[][] = new double[3][3]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:330","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][2] += ((double[][0]) * (double[][][2][2])) + ((double[][2]) * (double[][][2][2]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:232","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final int int = 71","position":"org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:307","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:168","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:297","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (java.util.List<org.apache.commons.math3.ode.ExpandableStatefulODE.SecondaryComponent>.size()) - 1","position":"org.apache.commons.math3.ode.ExpandableStatefulODE:151","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:360","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"index":"length"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.math3.linear.RealVector:1203","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.util.List<double[]>.size()) ; ++int) {\n    double[] double[] = java.util.List<double[]>.get(int);\n    for (int int = 0 ; int < (org.apache.commons.math3.analysis.polynomials.PolynomialFunction[].int) ; ++int) {\n        org.apache.commons.math3.analysis.polynomials.PolynomialFunction[][int] = org.apache.commons.math3.analysis.polynomials.PolynomialFunction[][int].add(org.apache.commons.math3.analysis.polynomials.PolynomialFunction.multiply(org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.polynomial(double[][int])));\n    }\n    org.apache.commons.math3.analysis.polynomials.PolynomialFunction = org.apache.commons.math3.analysis.polynomials.PolynomialFunction.multiply(org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.polynomial(-(java.util.List<java.lang.Double>.get(int)), 1.0));\n}","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:145","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double = boolean ? org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver<org.apache.commons.math3.analysis.UnivariateFunction>.solve(int, org.apache.commons.math3.analysis.UnivariateFunction, double, double, org.apache.commons.math3.analysis.solvers.AllowedSolution.org.apache.commons.math3.analysis.solvers.AllowedSolution) : org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver<org.apache.commons.math3.analysis.UnivariateFunction>.solve(int, org.apache.commons.math3.analysis.UnivariateFunction, double, double, org.apache.commons.math3.analysis.solvers.AllowedSolution.org.apache.commons.math3.analysis.solvers.AllowedSolution)","position":"org.apache.commons.math3.ode.events.EventState:272","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double[].clone()","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:129","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Enumerate for the location of a point with respect to the region.\n */\npublic static enum Location {\nINSIDE, OUTSIDE, BOUNDARY;}","position":"org.apache.commons.math3.geometry.partitioning.Region:50","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.math3.fitting.WeightedObservedPoint>.clear()","position":"org.apache.commons.math3.fitting.WeightedObservedPoints:111","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.math3.linear.RealMatrix.getColumnDimension()) == 1) {\n    final double[][] double[][] = new double[org.apache.commons.math3.linear.RealMatrix.getRowDimension()][org.apache.commons.math3.linear.RealMatrix.getRowDimension()];\n    for (int int = 0 ; int < (org.apache.commons.math3.linear.RealMatrix.getRowDimension()) ; int++) {\n        double[][][int][int] = org.apache.commons.math3.linear.RealMatrix.getEntry(int, 0);\n    }\n    return new org.apache.commons.math3.linear.Array2DRowRealMatrix(double[][] , false);\n} else {\n    final double[][] double[][] = new double[org.apache.commons.math3.linear.RealMatrix.getRowDimension()][1];\n    for (int int = 0 ; int < (org.apache.commons.math3.linear.RealMatrix.getColumnDimension()) ; int++) {\n        double[][][int][0] = org.apache.commons.math3.linear.RealMatrix.getEntry(int, int);\n    }\n    return new org.apache.commons.math3.linear.Array2DRowRealMatrix(double[][] , false);\n}","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:1099","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.add(java.math.BigDecimal, java.math.MathContext).multiply(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:169","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = ((((((((org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.double) * (double[][][0][int])) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.double) * (double[][][5][int]))) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.double) * (double[][][6][int]))) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.double) * (double[][][7][int]))) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.double) * (double[][][8][int]))) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.double) * (double[][][9][int]))) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.double) * (double[][][10][int]))) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.double) * (double[][][11][int]))","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator:259","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.util.MathUtils.org.apache.commons.math3.util.MathUtils.checkNotNull(double[])","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:235","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (FUNC == null) {\n    throw new org.apache.commons.math3.exception.NullArgumentException();\n} ","position":"org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:184","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.ode.ParameterConfiguration:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int != (org.apache.commons.math3.geometry.euclidean.twod.Vector2D[].int)) {\n    org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][][int] = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D[int];\n    java.lang.System.java.lang.System.arraycopy(org.apache.commons.math3.geometry.euclidean.twod.Vector2D[], 0, org.apache.commons.math3.geometry.euclidean.twod.Vector2D[][][int], 0, int);\n} ","position":"org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor:88","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((T[][]) == null) {\n    if (int > 0) {\n        throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int);\n    } \n    if (int > 0) {\n        throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int);\n    } \n    final int int = T[][].int;\n    if (int == 0) {\n        throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats);\n    } \n    final int int = T[][][0].int;\n    if (int == 0) {\n        throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats);\n    } \n    T[][] = org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.buildArray(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField(), T[][].int, int);\n    for (int int = 0 ; int < (T[][].int) ; ++int) {\n        if ((T[][][int].int) != int) {\n            throw new org.apache.commons.math3.exception.DimensionMismatchException(int , T[][][int].int);\n        } \n        java.lang.System.java.lang.System.arraycopy(T[][][int], 0, T[][][(int + int)], int, int);\n    }\n} else {\n    org.apache.commons.math3.linear.AbstractFieldMatrix<T>.setSubMatrix(T[][], int, int);\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:333","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.this(int, 1.0)","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:65","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.math3.random.RandomGenerator) != null) {\n    org.apache.commons.math3.random.RandomGenerator.setSeed(long);\n} ","position":"org.apache.commons.math3.random.RandomAdaptor:193","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"d":"zN","e":"k"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    return 1.0;\n} else if (int < 0) {\n    int = -int;\n    double = 1.0 / double;\n} ","position":"org.apache.commons.math3.util.FastMath:1615","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction[][][][int][int][int].value(double, double, double)","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:325","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"lower":"upper"},"name":"add","transplant":{"sourceCode":"return double","position":"org.apache.commons.math3.geometry.euclidean.oned.Interval:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double < (double)) || (double > (double))) {\n    return 0.0;\n} ","position":"org.apache.commons.math3.distribution.UniformRealDistribution:132","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; int++) {\n    double[][int] = (double[][int]) + double;\n}","position":"org.apache.commons.math3.linear.ArrayRealVector:362","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    if ((double[][int]) > 0) {\n        double += double[][int];\n    } \n}","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:186","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"-18","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:88","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-1","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:59","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int[][1] += int[][(int + 1)]","position":"org.apache.commons.math3.random.ISAACRandom:202","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:254","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * (double + double)) - double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:86","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"-1.548715389333397E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5566","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = org.apache.commons.math3.linear.RealMatrixChangingVisitor.visit(int, int, double[][int])","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:467","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.distribution.ChiSquaredDistribution org.apache.commons.math3.distribution.ChiSquaredDistribution","position":"org.apache.commons.math3.stat.inference.ChiSquareTest:511","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.pow(2, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:207","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double double = 0.0","position":"org.apache.commons.math3.stat.inference.ChiSquareTest:446","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    org.apache.commons.math3.stat.descriptive.moment.Mean[][int].increment(double[][int]);\n}","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:56","type":"CtForImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double + double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:97","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"yDotK":"yDotK","i":"i"},"name":"add","transplant":{"sourceCode":"final double double = double[][][0][int]","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:136","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][6][int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:190","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.start(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getRowDimension(), org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension(), int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:575","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int / (org.apache.commons.math3.linear.BlockFieldMatrix.int) ; int < (1 + (int / (org.apache.commons.math3.linear.BlockFieldMatrix.int))) ; ++int) {\n    final int int = int * (org.apache.commons.math3.linear.BlockFieldMatrix.int);\n    final int int = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(int, int);\n    final int int = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.min(((int + 1) * (org.apache.commons.math3.linear.BlockFieldMatrix.int)), (1 + int));\n    for (int int = int ; int < int ; ++int) {\n        for (int int = int / (org.apache.commons.math3.linear.BlockFieldMatrix.int) ; int < (1 + (int / (org.apache.commons.math3.linear.BlockFieldMatrix.int))) ; ++int) {\n            final int int = org.apache.commons.math3.linear.BlockFieldMatrix<T>.blockWidth(int);\n            final int int = int * (org.apache.commons.math3.linear.BlockFieldMatrix.int);\n            final int int = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(int, int);\n            final int int = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.min(((int + 1) * (org.apache.commons.math3.linear.BlockFieldMatrix.int)), (1 + int));\n            final T[] T[] = T[][][((int * (int)) + int)];\n            int int = (((int - int) * int) + int) - int;\n            for (int int = int ; int < int ; ++int) {\n                org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][int]);\n                ++int;\n            }\n        }\n    }\n}","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1444","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"org.apache.commons.math3.dfp.Dfp.NAN_STRING":"parameterName"},"name":"add","transplant":{"sourceCode":"return this.java.lang.String","position":"org.apache.commons.math3.dfp.Dfp:2072","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.math3.ode.ParameterConfiguration:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+3.430029236134205E-9","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5189","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][0] = (double * (double - (double * double))) / double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:331","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"double double = (-(org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.double)) * double","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:565","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double) * (((-125.0) / 96.0) + (double * ((375.0 / 32.0) + (double * (((-625.0) / 24.0) + ((double * 125.0) / 8.0))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:103","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.negate(java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:201","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.multiply(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:107","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return double","position":"org.apache.commons.math3.optim.univariate.UnivariatePointValuePair:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.distance(double[], org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.getPoint())","position":"org.apache.commons.math3.stat.clustering.EuclideanDoublePoint:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final double double = 0.4342944622039795","position":"org.apache.commons.math3.util.FastMath:1411","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (long * ((int + int) + 1)) / 12.0","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:180","type":"CtLocalVariableImpl"},"status":-2},{"failureDictionary":{}}]
