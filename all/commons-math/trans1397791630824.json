[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NoDataException()","position":"org.apache.commons.math3.linear.AbstractFieldMatrix:1101","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.OutOfRangeException(int , 1 , org.apache.commons.math3.random.HaltonSequenceGenerator.int[].int)","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:111","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.text.NumberFormat.setMaximumFractionDigits(0)","position":"org.apache.commons.math3.fraction.AbstractFormat:93","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.text.NumberFormat.format(org.apache.commons.math3.stat.Frequency.getCumPct(java.lang.Comparable<?>)))","position":"org.apache.commons.math3.stat.Frequency:109","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"org.apache.commons.math3.random.UniformRandomGenerator.SQRT3","java.lang.Double.NaN":"org.apache.commons.math3.random.UniformRandomGenerator.SQRT3","x":"org.apache.commons.math3.random.UniformRandomGenerator.SQRT3","y":"org.apache.commons.math3.random.UniformRandomGenerator.SQRT3"},"name":"add","transplant":{"sourceCode":"if (double == (this.org.apache.commons.math3.random.UniformRandomGenerator.double)) {\n    if ((double * double) == 1.0) {\n        return this.org.apache.commons.math3.random.UniformRandomGenerator.double;\n    } \n    if ((double * double) > 1.0) {\n        return this.org.apache.commons.math3.random.UniformRandomGenerator.double;\n    } else {\n        return 0.0;\n    }\n} ","position":"org.apache.commons.math3.util.FastMath:1492","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.math3.random.UniformRandomGenerator.double) * ((2 * (org.apache.commons.math3.random.RandomGenerator.nextDouble())) - 1.0)","position":"org.apache.commons.math3.random.UniformRandomGenerator:55","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int int = 4","position":"org.apache.commons.math3.transform.FastFourierTransformer:316","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.degree()","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:200","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"pStart":"length","pEnd":"length","qStart":"length","k":"length","outBlock":"mean","qEnd":"length","tBlock":"correlated"},"name":"replace","transplant":{"sourceCode":"for (int int = int ; int < int ; ++int) {\n    final int int = int - int;\n    int int = int - int;\n    for (int int = int ; int < int ; ++int) {\n        double[][int] = double[][int];\n        ++int;\n        int += int;\n    }\n}","position":"org.apache.commons.math3.linear.BlockRealMatrix:1231","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][int] = double[][int];\n    for (int int = 0 ; int < (org.apache.commons.math3.linear.RealMatrix.getColumnDimension()) ; ++int) {\n        double[][int] += (org.apache.commons.math3.linear.RealMatrix.getEntry(int, int)) * (double[][int]);\n    }\n}","position":"org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:174","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double[][(int + 1)] = double * (double[][(int + 1)])","position":"org.apache.commons.math3.linear.SingularValueDecomposition:409","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.descriptive.SummaryStatistics.clear()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:168","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.double[][] = double[][]","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:136","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (int int = int + 1 ; int < int ; ++int) {\n    final double double = double[][int];\n    double += double * double;\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:291","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < int ; ++int) {\n    double[][int] -= double * (double[][int]);\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:306","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    java.lang.Long java.lang.Long = java.util.TreeMap<java.lang.Comparable<?>, java.lang.Long>.get(java.lang.Comparable<?>);\n    if (java.lang.Long != null) {\n        long = java.lang.Long.longValue();\n    } \n} catch (java.lang.ClassCastException java.lang.ClassCastException) {\n    return long;\n}","position":"org.apache.commons.math3.stat.Frequency:435","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.math3.analysis.polynomials.PolynomialFunction[].int) ; ++int) {\n    org.apache.commons.math3.analysis.polynomials.PolynomialFunction[][int] = org.apache.commons.math3.analysis.polynomials.PolynomialFunction[][int].add(org.apache.commons.math3.analysis.polynomials.PolynomialFunction.multiply(org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.polynomial(double[][int])));\n}","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:147","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"java.math.BigDecimal.ONE"},"name":"add","transplant":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:93","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:132","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"double[][] double[][] = new double[3][]","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:794","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[][] double[][] = new double[3][3]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:204","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((double > (double * (double - double))) && (double < (double * (double - double)))) && (org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs(double)) < org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs(((0.5 * double) * double))))) {\n    double = double / double;\n    double = double + double;\n    if (((double - double) < double) || ((double - double) < double)) {\n        if (double <= double) {\n            double = double;\n        } else {\n            double = -double;\n        }\n    } \n} else {\n    if (double < double) {\n        double = double - double;\n    } else {\n        double = double - double;\n    }\n    double = (org.apache.commons.math3.optimization.univariate.BrentOptimizer.double) * double;\n}","position":"org.apache.commons.math3.optimization.univariate.BrentOptimizer:184","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[][].int) ; ++int) {\n    double[][][int] = new double[double[].int];\n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:205","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(double)","position":"org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:142","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate().add(double)","position":"org.apache.commons.math3.analysis.function.Logistic:226","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final double double","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:171","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][0][int]","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:106","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; int++) {\n    double[][int] /= double[][int];\n}","position":"org.apache.commons.math3.util.MathArrays:194","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.math3.analysis.polynomials.PolynomialFunction[].int) ; ++int) {\n    org.apache.commons.math3.analysis.polynomials.PolynomialFunction[][int] = org.apache.commons.math3.analysis.polynomials.PolynomialFunction[][int].add(org.apache.commons.math3.analysis.polynomials.PolynomialFunction.multiply(org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.polynomial(double[][int])));\n}","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:147","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"theta":"twoTheta"},"name":"replace","transplant":{"sourceCode":"final double double = 4 * double","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:116","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:104","type":"CtLocalVariableImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.genetics.FixedGenerationCount:61","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final int int","position":"org.apache.commons.math3.dfp.Dfp:1591","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:524","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.org.apache.commons.math3.optimization.linear.LinearObjectiveFunction = org.apache.commons.math3.optimization.linear.LinearObjectiveFunction","position":"org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:143","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.this(new org.apache.commons.math3.linear.ArrayRealVector(double[]), double)","position":"org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Set<java.lang.Integer>.addAll(org.apache.commons.math3.stat.correlation.SpearmansCorrelation.getNaNPositions(double[]))","position":"org.apache.commons.math3.stat.correlation.SpearmansCorrelation:178","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    if (((int >> int) & 1) == 1) {\n        int += int + 1;\n    } \n}","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:219","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"j":"j","mContext":"mContext"},"name":"replace","transplant":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(((2 * int) + 1) , this.java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:99","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(int , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:144","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return double + (double * (double - double))","position":"org.apache.commons.math3.stat.descriptive.rank.Percentile:304","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.calculateAsymptoticPValue(double, int)","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:322","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Double.java.lang.Double.isInfinite(double[][int])) {\n    if (java.lang.Double.java.lang.Double.isInfinite(double[][int])) {\n        org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.NoBoundsMapper();\n    } else {\n        org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.UpperBoundMapper(double[][int]);\n    }\n} else {\n    if (java.lang.Double.java.lang.Double.isInfinite(double[][int])) {\n        org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.LowerBoundMapper(double[][int]);\n    } else {\n        org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.LowerUpperBoundMapper(double[][int] , double[][int]);\n    }\n}","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:118","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.math3.linear.RealVector:1204","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.NoDataException()","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:80","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (int * 31) + org.apache.commons.math3.util.MathUtils.(org.apache.commons.math3.util.MathUtils.hash(org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMin()))","position":"org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:399","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double + double","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:96","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final int int = 64","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:398","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:417","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"a","b":"b","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.math3.util.MathArrays.distance1(double[], double[])","position":"org.apache.commons.math3.ml.distance.ManhattanDistance:34","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.distanceInf(double[], double[])","position":"org.apache.commons.math3.ml.distance.ChebyshevDistance:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(((2 * int) + 1) , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:99","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(int , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:100","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<T>.add(org.apache.commons.math3.util.Pair<T, java.lang.Double>.getKey())","position":"org.apache.commons.math3.distribution.EnumeratedDistribution:112","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.random.RandomGenerator.nextBytes(byte[])","position":"org.apache.commons.math3.random.RandomAdaptor:86","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int[][int]","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:100","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double double = org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:967","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = 1","position":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:60","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.908818244934082","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3706","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.math3.util.Incrementor()","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:42","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrix.multiply(this)","position":"org.apache.commons.math3.linear.AbstractRealMatrix:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrix","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:129","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"double[][] = new double[3][3]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:302","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][] = null","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:98","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.RealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector)","position":"org.apache.commons.math3.linear.RealVector:884","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:474","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-2.1414301981236817E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4819","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] += (-double) * (double[][][int][(int - int)])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:117","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][][0].int","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:285","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * The kinds of solutions that a {@link BracketedUnivariateSolver\n * (bracketed univariate real) root-finding algorithm} may accept as solutions.\n * This basically controls whether or not under-approximations and\n * over-approximations are allowed.\n * \n * <p>If all solutions are accepted ({@link #ANY_SIDE}), then the solution\n * that the root-finding algorithm returns for a given root may be equal to the\n * actual root, but it may also be an approximation that is slightly smaller\n * or slightly larger than the actual root. Root-finding algorithms generally\n * only guarantee that the returned solution is within the requested\n * tolerances. In certain cases however, in particular for\n * {@link org.apache.commons.math3.ode.events.EventHandler state events} of\n * {@link org.apache.commons.math3.ode.ODEIntegrator ODE solvers}, it\n * may be necessary to guarantee that a solution is returned that lies on a\n * specific side the solution.<\/p>\n * \n * @see BracketedUnivariateSolver\n * @since 3.0\n * @version $Id$\n */\npublic enum AllowedSolution {\nANY_SIDE, LEFT_SIDE, RIGHT_SIDE, BELOW_SIDE, ABOVE_SIDE;}","position":"org.apache.commons.math3.analysis.solvers.AllowedSolution:41","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.util.Incrementor.incrementCount()","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:106","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"minimalIterationCount":"nCols","maximalIterationCount":"nCols"},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NumberIsTooSmallException(int , int , false)","position":"org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:124","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][int].int , int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:292","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+2.4920010566711426","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3979","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:165","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixPreservingVisitor.start(int, int, 0, (int - 1), 0, (int - 1))","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:478","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-1.7950057534514933E-9","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5150","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean ? double : -double","position":"org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:59","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    final int int = int * (org.apache.commons.math3.linear.BlockRealMatrix.int);\n    final int int = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.min((int + (org.apache.commons.math3.linear.BlockRealMatrix.int)), int);\n    final int int = int - int;\n    for (int int = 0 ; int < int ; ++int) {\n        final int int = int * (org.apache.commons.math3.linear.BlockRealMatrix.int);\n        final int int = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.min((int + (org.apache.commons.math3.linear.BlockRealMatrix.int)), int);\n        final int int = int - int;\n        final double[] double[] = new double[int * int];\n        double[][][int] = double[];\n        int int = 0;\n        for (int int = int ; int < int ; ++int) {\n            java.lang.System.java.lang.System.arraycopy(double[][][int], int, double[], int, int);\n            int += int;\n        }\n        ++int;\n    }\n}","position":"org.apache.commons.math3.linear.BlockRealMatrix:219","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((T[].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(T[].int , int);\n} ","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:419","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.math3.linear.ArrayRealVector:392","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = null","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:194","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.math3.fraction.ProperBigFractionFormat:193","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[][] T[][] = org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.buildArray(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField(), int, int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:236","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 0","position":"org.apache.commons.math3.optimization.fitting.GaussianFitter:217","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.random.RandomGenerator.nextInt()","position":"org.apache.commons.math3.random.RandomAdaptor:143","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double *= double","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:182","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (double * ((-22.0) + (double * ((152.0 / 3.0) + (double * (-30.0))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:84","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"ois":"ois"},"name":"add","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction:146","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = java.io.ObjectInputStream.readDouble()","position":"org.apache.commons.math3.linear.MatrixUtils:885","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.abs(double)","position":"org.apache.commons.math3.analysis.function.Abs:32","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate().add(double).multiply(double).exp().multiply(double).add(1).pow(double)","position":"org.apache.commons.math3.analysis.function.Logistic:226","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"i":"row","value":"data"},"name":"replace","transplant":{"sourceCode":"final T[] T[] = T[][][int].clone()","position":"org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator:99","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:296","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:171","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.linear.Array2DRowRealMatrix.double[][][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:172","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"maxIterations":"columns","iterations":"columns"},"name":"add","transplant":{"sourceCode":"if ((++int) > int) {\n    throw new org.apache.commons.math3.exception.MaxCountExceededException(int);\n} ","position":"org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:131","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    double[][int] = org.apache.commons.math3.linear.RealMatrixChangingVisitor.visit(int, int, double[][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:400","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = (3 * double) * ((1 + double) - double)","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:126","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((1 + double) + double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:134","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"x":"y"},"name":"replace","transplant":{"sourceCode":"double[] double[] = double[].clone()","position":"org.apache.commons.math3.optimization.direct.PowellOptimizer:179","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] double[] = double[]","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:103","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"x":"x"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure org.apache.commons.math3.analysis.differentiation.DerivativeStructure = org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getField().getOne()","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:208","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.analysis.differentiation.DerivativeStructure org.apache.commons.math3.analysis.differentiation.DerivativeStructure = org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(java.util.List<java.lang.Double>.get(int))","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:214","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int >= int) {\n    org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, (int - int), org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int));\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:2361","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:292","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double + double","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:161","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+2.095732474644446E-309","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1592","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.copyOf(int[])","position":"org.apache.commons.math3.util.MultidimensionalCounter:284","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int[][int] = int","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:966","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final double[] double[] = double[][][int];\n    final double[] double[] = org.apache.commons.math3.linear.Array2DRowRealMatrix.double[][][int];\n    final double[] double[] = double[][][int];\n    for (int int = 0 ; int < int ; int++) {\n        double[][int] = (double[][int]) + (double[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:170","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return -1","position":"org.apache.commons.math3.optimization.fitting.GaussianFitter:212","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][][0].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:324","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.dfp.Dfp = org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp)","position":"org.apache.commons.math3.dfp.Dfp:1533","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.random.AbstractWell.setSeed(new int[]{ int })","position":"org.apache.commons.math3.random.AbstractWell:142","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return double","position":"org.apache.commons.math3.util.FastMath:579","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.ml.distance.DistanceMeasure","position":"org.apache.commons.math3.ml.clustering.Clusterer:66","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((int) == int) {\n    int = int - int;\n} ","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1721","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final double[] double[] = double[][][int];\n    double double = 0;\n    for (int int = 0 ; int < int ; int++) {\n        double += (double[][int]) * (double[][int]);\n    }\n    double[][][int][int] = double;\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:238","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"numArtificialVariables":"totalSize"},"name":"replace","transplant":{"sourceCode":"return (this.int) > 0 ? 2 : 1","position":"org.apache.commons.math3.optimization.linear.SimplexTableau:279","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.math3.util.MultidimensionalCounter:276","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = org.apache.commons.math3.distribution.ZipfDistribution.generalizedHarmonic(int, (double - 1))","position":"org.apache.commons.math3.distribution.ZipfDistribution:190","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) >= 5) {\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        final double double = (double[][][int][int]) / (double[][int]);\n        double += double * double;\n    }\n    double = org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.sqrt((double / (double[].int)))) * (double[][((int) - 5)]);\n} ","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:304","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double double = org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.double","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1436","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(int , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:195","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final int int = 0","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:418","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:234","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.analysis.UnivariateFunction = org.apache.commons.math3.analysis.UnivariateFunction","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:131","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.apache.commons.math3.optimization.linear.LinearObjectiveFunction = org.apache.commons.math3.optimization.linear.LinearObjectiveFunction","position":"org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:143","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+0.6218148469924927","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5987","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = (((double * double) + (double * double)) + (double * double)) + (double * double)","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:118","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(0, 1, 0))","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:645","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.this(org.apache.commons.math3.util.Pair<double[], double[]>.getFirst(), org.apache.commons.math3.util.Pair<double[], double[]>.getSecond())","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:76","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator(this)","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:90","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator(this)","position":"org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:78","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"endColumn":"columns","startRow":"rows","data":"data","startColumn":"columns","endRow":"columns","visitor":"visitor"},"name":"replace","transplant":{"sourceCode":"for (int int = int ; int <= int ; ++int) {\n    for (int int = int ; int <= int ; ++int) {\n        final T[] T[] = this.T[][][int];\n        T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:559","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    for (int int = 0 ; int < int ; ++int) {\n        final T[] T[] = T[][][int];\n        T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:527","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> = org.apache.commons.math3.optim.AbstractOptimizer<org.apache.commons.math3.optim.PointVectorValuePair, org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer>.getConvergenceChecker()","position":"org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer:106","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTest(double[], long[], double)","position":"org.apache.commons.math3.stat.inference.TestUtils:269","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.math3.stat.descriptive.moment.FourthMoment.increment(double);\n} ","position":"org.apache.commons.math3.stat.descriptive.moment.Kurtosis:101","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal((int + 1) , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:145","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < int ; ++int) {\n    double[][int] -= double * (double[][int]);\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:306","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (double == (java.lang.Double.double)) {\n    return (java.lang.Math.double) * (org.apache.commons.math3.util.FastMath.double);\n} ","position":"org.apache.commons.math3.util.FastMath:2612","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.optim.univariate.UnivariatePointValuePair:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"double double = 3.834E-20","position":"org.apache.commons.math3.util.MathArrays:586","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = 0.75 * double","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:99","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:324","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (2 * double) * (1 - (2 * double))","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:325","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"c":"theta","x":"theta"},"name":"replace","transplant":{"sourceCode":"final double double = ((1 + (double * double)) * (1 + (double * double))) * (1 + (double * double))","position":"org.apache.commons.math3.distribution.GammaDistribution:433","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = 4 * double","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:116","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (int - int) ; int++) {\n    final double double = (double[][int]) - double;\n    final double double = (double[][(int + int)]) - double;\n    final double double = (double[][int]) - (double[][(int + int)]);\n    final double double = ((double[][(int + 1)]) - (double[][int])) / double;\n    double[][int] = double * double;\n    double[][int] = double * double;\n}","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:229","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.double[].clone()","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:89","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"lowerBound":"out"},"name":"add","transplant":{"sourceCode":"return double[] == null ? null : double[].clone()","position":"org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:254","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:366","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.math3.ode.events.Transformer != org.apache.commons.math3.ode.events.Transformer) {\n    java.lang.System.java.lang.System.arraycopy(double[], 0, double[], 1, ((double[].int) - 1));\n    java.lang.System.java.lang.System.arraycopy(org.apache.commons.math3.ode.events.Transformer[], 0, org.apache.commons.math3.ode.events.Transformer[], 1, ((org.apache.commons.math3.ode.events.Transformer[].int) - 1));\n    double[][0] = double;\n    org.apache.commons.math3.ode.events.Transformer[][0] = org.apache.commons.math3.ode.events.Transformer;\n} ","position":"org.apache.commons.math3.ode.events.EventFilter:157","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T[][] = org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.buildArray(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField(), T[][].int, int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:349","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = int / 10","position":"org.apache.commons.math3.dfp.Dfp:2158","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"++int","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:228","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{"p":"Wmin"},"name":"replace","transplant":{"sourceCode":"return (1 - double) / (double * double)","position":"org.apache.commons.math3.distribution.GeometricDistribution:118","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.calculateAsymptoticPValue(double, int)","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:322","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+6.987544103716777E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4497","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:235","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+2.4769140784919128E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5464","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    final double double = double[][][0][int];\n    final double double = double[][][1][int];\n    double[][int] = ((double[][int]) + (double * double)) - (double * double);\n    double[][int] = (double * double) + (double * double);\n}","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:104","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = 0","position":"org.apache.commons.math3.random.AbstractWell:168","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"a":"theta","b":"s","cPrev":"s"},"name":"replace","transplant":{"sourceCode":"double double = double + (double / double)","position":"org.apache.commons.math3.util.ContinuedFraction:146","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (3 * double) * ((1 + double) - double)","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:126","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return -0.0","position":"org.apache.commons.math3.util.FastMath:2641","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.GTest.gTestDataSetsComparison(long[], long[])","position":"org.apache.commons.math3.stat.inference.TestUtils:437","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.AbstractRealMatrix.operate(((org.apache.commons.math3.linear.ArrayRealVector)(org.apache.commons.math3.linear.RealVector)).getDataRef()) , false)","position":"org.apache.commons.math3.linear.AbstractRealMatrix:687","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:296","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = (long & 2147483648L) != 0","position":"org.apache.commons.math3.util.FastMath:2153","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix.setEntry(int, int, double)","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:94","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"i":"i"},"name":"add","transplant":{"sourceCode":"double double = int / 8.0","position":"org.apache.commons.math3.util.FastMathCalc:109","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][1][int]","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:113","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final double double = (((double) * double) + ((double) * double)) + ((double) * double)","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:882","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double - (double[][int])) / ((double[][(int + 1)]) - (double[][int]))","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:321","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"scaled":"v3","scaledDerivative":"v3"},"name":"replace","transplant":{"sourceCode":"this.double[] = double[]","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:135","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = null","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:155","type":"CtAssignmentImpl"},"status":0},{"failureDictionary":{}}]
