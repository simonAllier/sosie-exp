[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final double double = (org.apache.commons.math3.special.Gamma.double) + (double * (org.apache.commons.math3.special.Gamma.double))","position":"org.apache.commons.math3.special.Gamma:544","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double / (double)","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:293","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = int & (int)","position":"org.apache.commons.math3.util.OpenIntToDoubleHashMap:208","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.math3.exception.NumberIsTooSmallException:78","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:745","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator(this)","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"plusCode":"org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY","minusCode":"org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY","org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY":"org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.math3.geometry.partitioning.Region.Location == org.apache.commons.math3.geometry.partitioning.Region.Location ? org.apache.commons.math3.geometry.partitioning.Region.Location : this.org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location","position":"org.apache.commons.math3.geometry.partitioning.AbstractRegion:274","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double < ((double) - double)) || (double > ((double) + double))) {\n    return org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location;\n} else if ((double > ((double) + double)) && (double < ((double) - double))) {\n    return org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location;\n} else {\n    return org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location;\n}","position":"org.apache.commons.math3.geometry.euclidean.oned.Interval:121","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((6 * double) - double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:113","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"evaluations":"evaluations"},"name":"add","transplant":{"sourceCode":"org.apache.commons.math3.util.Incrementor.resetCount()","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:133","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.math3.util.Incrementor.incrementCount();\n} catch (org.apache.commons.math3.exception.MaxCountExceededException org.apache.commons.math3.exception.MaxCountExceededException) {\n    throw new org.apache.commons.math3.exception.TooManyEvaluationsException(org.apache.commons.math3.exception.MaxCountExceededException.getMax());\n}","position":"org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:215","type":"CtTryImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor:43","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = org.apache.commons.math3.stat.regression.SimpleRegression.getSlope()","position":"org.apache.commons.math3.stat.regression.SimpleRegression:376","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getCovariance()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:121","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(int , T[].int)","position":"org.apache.commons.math3.linear.BlockFieldMatrix:799","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:221","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+3.8174968984748894E-54","position":"org.apache.commons.math3.util.FastMathLiteralArrays:657","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.genetics.AbstractListChromosome<T>.getRepresentation().size()","position":"org.apache.commons.math3.genetics.AbstractListChromosome:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-4.135121057126514E24","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2359","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] = org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])","position":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:53","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = double[][][0].int","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:937","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][3][int]","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:335","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.homoscedasticTTest(org.apache.commons.math3.stat.descriptive.StatisticalSummary, org.apache.commons.math3.stat.descriptive.StatisticalSummary)","position":"org.apache.commons.math3.stat.inference.TestUtils:103","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.t(org.apache.commons.math3.stat.descriptive.StatisticalSummary, org.apache.commons.math3.stat.descriptive.StatisticalSummary)","position":"org.apache.commons.math3.stat.inference.TestUtils:164","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"-1.8842098029339485E-137","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1988","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = double + (double * (double + (double * ((double * double) + (double * double)))))","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:336","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((char[][int]) == '0') {\n    int--;\n} else {\n    break;\n}","position":"org.apache.commons.math3.dfp.Dfp:476","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:277","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][int] = (double * (double[][int])) - (double * (double[][int]))","position":"org.apache.commons.math3.linear.SingularValueDecomposition:407","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = (int) - 1 ; int > 3 ; --int) {\n    final double double = 1.0 / (int - 3);\n    double = double * ((double * double) + double);\n    double = (double[][][int][int]) + ((double * double) * double);\n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:342","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"h":"theta","theta":"theta"},"name":"add","transplant":{"sourceCode":"final double double = (double * double) * double","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:94","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:99","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NotANumberException()","position":"org.apache.commons.math3.distribution.EnumeratedDistribution:121","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(int , T[][][int].int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:352","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = 3542","position":"org.apache.commons.math3.linear.ArrayFieldVector:941","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:418","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"-3.197037359731606E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4375","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = 1.0 / (int * int)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:218","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int))","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:412","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T[][][int][int] = T","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:379","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((double > 1.0E15) || ((int > 1) && (double > double))) {\n    double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.abs(org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.filterStep(((double) * (double)), boolean, false));\n    boolean = true;\n    boolean = false;\n} else {\n    double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max((4 * double), 1.0);\n    final double double = 1.0 / ((2 * int) + 1);\n    double double = (double) / org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.pow((double / (double)), double));\n    final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.pow(double, double);\n    double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max((double / (double)), org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.min((1 / double), double));\n    double[][int] = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.abs(org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.filterStep(((double) * double), boolean, true));\n    double[][int] = (int[][int]) / (double[][int]);\n    switch (int - int) {\n        case -1 :\n            if ((int > 1) && (!boolean)) {\n                if (double <= 1.0) {\n                    boolean = false;\n                } else {\n                    final double double = (((double)(int[][int])) * (int[][(int + 1)])) / ((int[][0]) * (int[][0]));\n                    if (double > (double * double)) {\n                        boolean = true;\n                        boolean = false;\n                        int = int;\n                        if ((int > 1) && ((double[][(int - 1)]) < ((double) * (double[][int])))) {\n                            --int;\n                        } \n                        double = double[][int];\n                    } \n                }\n            } \n            break;\n        case 0 :\n            if (double <= 1.0) {\n                boolean = false;\n            } else {\n                final double double = ((double)(int[][(int + 1)])) / (int[][0]);\n                if (double > (double * double)) {\n                    boolean = true;\n                    boolean = false;\n                    if ((int > 1) && ((double[][(int - 1)]) < ((double) * (double[][int])))) {\n                        --int;\n                    } \n                    double = double[][int];\n                } \n            }\n            break;\n        case 1 :\n            if (double > 1.0) {\n                boolean = true;\n                if ((int > 1) && ((double[][(int - 1)]) < ((double) * (double[][int])))) {\n                    --int;\n                } \n                double = double[][int];\n            } \n            boolean = false;\n            break;\n        default :\n            if ((boolean || (boolean)) && (double <= 1.0)) {\n                boolean = false;\n            } \n            break;\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:692","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((1 + double) + double)","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:128","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"lambda":"length"},"name":"replace","transplant":{"sourceCode":"if ((this.int) <= 0) {\n    throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(this.int);\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:571","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((PAIR[].int) == 0) {\n    throw java.lang.RuntimeException;\n} ","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:211","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return double[][][int][int]","position":"org.apache.commons.math3.stat.regression.RegressionResults:409","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.util.Incrementor.incrementCount()","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:106","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunction:369","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:373","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+3.953806005373127E-272","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1680","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.linear.RealMatrix.multiply(org.apache.commons.math3.linear.RealMatrix).multiply(org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.getX())","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:97","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"+1.2639113706171572E250","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2879","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] = double","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:149","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.math3.analysis.polynomials.PolynomialFunction org.apache.commons.math3.analysis.polynomials.PolynomialFunction = org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.polynomial(1)","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:142","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.analysis.polynomials.PolynomialFunction org.apache.commons.math3.analysis.polynomials.PolynomialFunction = org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.polynomial(0)","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:137","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double * ((6 * double) - double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:113","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (((-3) * double) + double)","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:105","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkRowIndex(int)","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1207","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[][][int][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:307","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = org.apache.commons.math3.util.OpenIntToDoubleHashMap.org.apache.commons.math3.util.OpenIntToDoubleHashMap.probe(int, int)","position":"org.apache.commons.math3.util.OpenIntToDoubleHashMap:189","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.threed.Vector3D","position":"org.apache.commons.math3.geometry.euclidean.threed.Segment:50","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"startRow":"length","org.apache.commons.math3.linear.BlockFieldMatrix.BLOCK_SIZE":"length"},"name":"replace","transplant":{"sourceCode":"final int int = int / (this.int)","position":"org.apache.commons.math3.linear.BlockFieldMatrix:670","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][][0].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:260","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"a1":"b","b2":"t","a2":"q","b3":"t","a3":"oneOverN","b1":"t"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(double).add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(double)).add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(double))","position":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure:1100","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate().add(double).multiply(double).exp().multiply(double).add(1).pow(double)","position":"org.apache.commons.math3.analysis.function.Logistic:226","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double[] double[] = org.apache.commons.math3.optim.PointValuePair[][0].getPointRef()","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:197","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int / 2","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:76","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"trustRegionCenterInterpolationPointIndex":"j","k":"i"},"name":"replace","transplant":{"sourceCode":"if (int == int) {\n    continue;\n} ","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:769","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixPreservingVisitor.visit(int, int, double[][][int][int])","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:481","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double double = org.apache.commons.math3.optim.linear.SimplexTableau.getEntry(java.lang.Integer, java.lang.Integer)","position":"org.apache.commons.math3.optim.linear.SimplexSolver:235","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField() , T[][] , false)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:246","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"long long = ((long)(int)) + ((long)(int))","position":"org.apache.commons.math3.util.ArithmeticUtils:52","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = ((long)(int)) * int","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:176","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"v":"r","w":"r"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.math3.linear.RealVector.append(org.apache.commons.math3.linear.RealVector)","position":"org.apache.commons.math3.linear.RealVector:1552","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealVector","position":"org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent:115","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+0.40220457315444946","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5611","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][2] = double[][][2][0]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:312","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"y1":"Wplus","y2":"Wplus","y3":"Wplus"},"name":"add","transplant":{"sourceCode":"final double double = 1 - ((double * double) / (double * double))","position":"org.apache.commons.math3.analysis.solvers.RiddersSolver:102","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (((double)((int * (int + 1)))) / 2.0) - double","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:193","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((int < 0) | (int > (int - 1))) {\n    for (int int = int ; int < int ; int++) {\n        double[][][int][int] = double[][][int][int];\n    }\n} ","position":"org.apache.commons.math3.linear.EigenDecomposition:932","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    final double double = double[][][0][int];\n    final double double = double[][][1][int];\n    double[][int] = ((double[][int]) + (double * double)) - (double * double);\n    double[][int] = (double * double) + (double * double);\n}","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:104","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return int - 1","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:342","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((long[][int]) < (org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.long[][int])) {\n    return -1;\n} else if ((long[][int]) > (org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.long[][int])) {\n    return +1;\n} ","position":"org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:267","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+0.5478278398513794","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5851","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:297","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"double[] double[] = new double[2]","position":"org.apache.commons.math3.dfp.Dfp:2506","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.util.Pair<double[], double[]>.getFirst()","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:156","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+8.472965161251656E-169","position":"org.apache.commons.math3.util.FastMathLiteralArrays:393","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double += double * double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:293","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"for (int int = int ; int >= 0 ; --int) {\n    for (int int = 0 ; int < (T[][][int].int) ; ++int) {\n        T[][][int][int] = T[][][int][int].add(T[][int].multiply(T[][int]));\n    }\n    T[][int] = T[][int].multiply(T);\n    if (int > 0) {\n        T[][int] = T[][int].add(T[][int].multiply(T[][(int - 1)]));\n    } \n}","position":"org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator:194","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    T = T.add(T[][int].multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.T[][][int][int]));\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:300","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:88","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.genetics.AbstractListChromosome<T>.getRepresentation().size()","position":"org.apache.commons.math3.genetics.AbstractListChromosome:76","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:77","failures":[],"name":"removeConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.math3.util.MathUtils:177","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.threed.Vector3D","position":"org.apache.commons.math3.geometry.euclidean.threed.Segment:57","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = (double * (double[][int])) + (double * double)","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:785","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:240","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"size":"rowCount"},"name":"replace","transplant":{"sourceCode":"final double[][] double[][] = new double[int][1]","position":"org.apache.commons.math3.optimization.direct.CMAESOptimizer:1323","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[][] double[][] = new double[int][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:196","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double double = double * double","position":"org.apache.commons.math3.util.FastMath:940","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.util.Incrementor.setMaximalCount(int)","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:132","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> = ((org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>)(org.apache.commons.math3.geometry.partitioning.SubHyperplane<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>))","position":"org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:839","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:513","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.List<org.apache.commons.math3.stat.clustering.Cluster<T>>","position":"org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:373","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.analysis.function.HarmonicOscillator.org.apache.commons.math3.analysis.function.HarmonicOscillator.value((((double) * double) + (double)), double)","position":"org.apache.commons.math3.analysis.function.HarmonicOscillator:62","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"endColumn":"startRow","startRow":"endRow","data":"data","startColumn":"startColumn","endRow":"endRow","visitor":"visitor"},"name":"add","transplant":{"sourceCode":"for (int int = int ; int <= int ; ++int) {\n    for (int int = int ; int <= int ; ++int) {\n        final T[] T[] = T[][][int];\n        T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:559","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int <= int ; ++int) {\n    final T[] T[] = T[][][int];\n    for (int int = int ; int <= int ; ++int) {\n        T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:494","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"h":"s","theta":"fourTheta2","theta2":"fourTheta2"},"name":"add","transplant":{"sourceCode":"final double double = double * ((4.0 / 3.0) + (double * ((-22.0) + (double * ((152.0 / 3.0) + (double * (-30.0)))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:102","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((1 - (5 * double)) + double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:131","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"maxEvalIndex":"maxEval"},"name":"add","transplant":{"sourceCode":"if (int == (-1)) {\n    throw new org.apache.commons.math3.exception.MathIllegalStateException();\n} ","position":"org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer:159","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.util.Incrementor.setMaximalCount(int)","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:132","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"x":"z","length":"length","y":"z","z":"x"},"name":"add","transplant":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][int] = (double[][int]) - (double[][int]);\n}","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:102","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[], 0, double[], double[].int, double[].int)","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:93","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * {@link StepNormalizer Step normalizer} modes. Determines how the step size\n * is interpreted.\n * @see StepNormalizer\n * @see StepNormalizerBounds\n * @version $Id$\n * @since 3.0\n */\npublic enum StepNormalizerMode {\nINCREMENT, MULTIPLES;}","position":"org.apache.commons.math3.ode.sampling.StepNormalizerMode:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer<PAIR>.clear()","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:166","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"long = int == 0 ? 0 : org.apache.commons.math3.util.FastMath.long[][(int - 1)]","position":"org.apache.commons.math3.util.FastMath:2036","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int <= int ; ++int) {\n    double[][int] *= double / (int + 1);\n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:220","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final double double = 1.0","position":"org.apache.commons.math3.util.FastMath:1731","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:264","type":"CtLocalVariableImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:187","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"+4.906094420881007E-35","position":"org.apache.commons.math3.util.FastMathLiteralArrays:701","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] = double","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:143","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"maxIterations":"count","java.lang.Integer.MAX_VALUE":"count"},"name":"add","transplant":{"sourceCode":"final int int = int < 0 ? this.int : int","position":"org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:181","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:128","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+5.13345647019085E-10","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5127","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutput.writeInt(int)","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    double += (double[][int]) * (double[][int]);\n}","position":"org.apache.commons.math3.util.MathArrays:872","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][][int][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:544","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][int] = (((double[][int]) + (double * (double[][int]))) + (double * (double[][int]))) + (double * (double[][int]))","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:211","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:90","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((T[].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(T[].int , int);\n} ","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:419","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[] = double[]","position":"org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:400","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((T[][]) == null) {\n    if (int > 0) {\n        throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int);\n    } \n    if (int > 0) {\n        throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int);\n    } \n    final int int = T[][].int;\n    if (int == 0) {\n        throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats);\n    } \n    final int int = T[][][0].int;\n    if (int == 0) {\n        throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats);\n    } \n    T[][] = org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.buildArray(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField(), T[][].int, int);\n    for (int int = 0 ; int < (T[][].int) ; ++int) {\n        if ((T[][][int].int) != int) {\n            throw new org.apache.commons.math3.exception.DimensionMismatchException(int , T[][][int].int);\n        } \n        java.lang.System.java.lang.System.arraycopy(T[][][int], 0, T[][][(int + int)], int, int);\n    }\n} else {\n    org.apache.commons.math3.linear.AbstractFieldMatrix<T>.setSubMatrix(T[][], int, int);\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:333","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"-5.1088103279787804E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4405","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int++] += (double[][int]) * (double[][int])","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:73","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.math3.geometry.euclidean.threed.Line org.apache.commons.math3.geometry.euclidean.threed.Line = org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane)","position":"org.apache.commons.math3.geometry.euclidean.threed.SubPlane:101","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[][][0], 0, double[], 0, double[].int)","position":"org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:90","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"wSubN0ToRR":"b","r":"k","destEvenStartIndex":"k","grR":"b","dataR":"hK","hrR":"b","wSubN0ToRI":"b","hrI":"b"},"name":"add","transplant":{"sourceCode":"double[][(int + int)] = (double + (double * double)) - (double * double)","position":"org.apache.commons.math3.transform.FastFourierTransformer:341","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][(int + 1)] -= double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:298","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.math3.util.FastMathCalc:264","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double += (double[][int]) * (double[][int])","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:405","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((int == 0) || (int == 0)) {\n    throw new org.apache.commons.math3.exception.NoDataException();\n} ","position":"org.apache.commons.math3.util.MathArrays:1407","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Random.setSeed(((long)(int)))","position":"org.apache.commons.math3.random.JDKRandomGenerator:35","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final double double = 1.5707963267948966","position":"org.apache.commons.math3.util.FastMath:1843","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.exp(-(org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()))","position":"org.apache.commons.math3.analysis.function.Sigmoid:172","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * Lexicographic combinations iterator.\n * <p>\n * Implementation follows Algorithm T in <i>The Art of Computer Programming<\/i>\n * Internet Draft (PRE-FASCICLE 3A), \"A Draft of Section 7.2.1.3 Generating All\n * Combinations<\/a>, D. Knuth, 2004.<\/p>\n * <p>\n * The degenerate cases {@code k == 0} and {@code k == n} are NOT handled by this\n * implementation.  If constructor arguments satisfy {@code k == 0}\n * or {@code k >= n}, no exception is generated, but the iterator is empty.\n * <\/p>\n * \n */\nprivate static class LexicographicIterator implements java.util.Iterator<int[]> {\n    /** \n     * Size of subsets returned by the iterator\n     */\nprivate final int k;\n\n    /** \n     * c[1], ..., c[k] stores the next combination; c[k + 1], c[k + 2] are\n     * sentinels.\n     * <p>\n     * Note that c[0] is \"wasted\" but this makes it a little easier to\n     * follow the code.\n     * <\/p>\n     */\nprivate final int[] c;\n\n    /** \n     * Return value for {@link #hasNext()}\n     */\nprivate boolean more = true;\n\n    /** \n     * Marker: smallest index such that c[j + 1] > j\n     */\nprivate int j;\n\n    /** \n     * Construct a CombinationIterator to enumerate k-sets from n.\n     * <p>\n     * NOTE: If {@code k === 0} or {@code k >= n}, the Iterator will be empty\n     * (that is, {@link #hasNext()} will return {@code false} immediately.\n     * <\/p>\n     * \n     * @param n size of the set from which subsets are enumerated\n     * @param k size of the subsets to enumerate\n     */\npublic LexicographicIterator(int n ,int k) {\n        this.int = int;\n        int[] = new int[int + 3];\n        if ((int == 0) || (int >= int)) {\n            boolean = false;\n            return ;\n        } \n        for (int int = 1 ; int <= int ; int++) {\n            int[][int] = int - 1;\n        }\n        int[][(int + 1)] = int;\n        int[][(int + 2)] = 0;\n        int = int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\npublic boolean hasNext() {\n        return boolean;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\npublic int[] next() {\n        if (!(boolean)) {\n            throw new java.util.NoSuchElementException();\n        } \n        final int[] int[] = new int[int];\n        java.lang.System.java.lang.System.arraycopy(int[], 1, int[], 0, int);\n        int int = 0;\n        if ((int) > 0) {\n            int = int;\n            int[][int] = int;\n            (int)--;\n            return int[];\n        } \n        if (((int[][1]) + 1) < (int[][2])) {\n            int[][1] = (int[][1]) + 1;\n            return int[];\n        } else {\n            int = 2;\n        }\n        boolean boolean = false;\n        while (!boolean) {\n            int[][((int) - 1)] = (int) - 2;\n            int = (int[][int]) + 1;\n            if (int == (int[][((int) + 1)])) {\n                (int)++;\n            } else {\n                boolean = true;\n            }\n        }\n        if ((int) > (int)) {\n            boolean = false;\n            return int[];\n        } \n        int[][int] = int;\n        (int)--;\n        return int[];\n    }\n\n    /** \n     * Not supported.\n     */\npublic void remove() {\n        throw new java.lang.UnsupportedOperationException();\n    }\n}","position":"org.apache.commons.math3.util.Combinations:135","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = new double[double[].int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:178","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+0.29619067907333374","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5457","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    double[][][0][0] = 1;\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:122","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setMaxImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])","position":"org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:245","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return -1.0","position":"org.apache.commons.math3.util.FastMath:604","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.(getWeight(0)) * (org.apache.commons.math3.analysis.UnivariateFunction.value(0.0))","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:73","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+0.21214580535888672","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5346","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[][] double[][] = new double[3][3]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:204","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (double <= (double[][int])) {\n    return org.apache.commons.math3.ode.events.Transformer[][int].transformed(double);\n} ","position":"org.apache.commons.math3.ode.events.EventFilter:180","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = double[][int]","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:187","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"h":"cDot23","theta":"cDot23","theta2":"cDot23"},"name":"replace","transplant":{"sourceCode":"final double double = double * (((-5.0) / 48.0) + (double * (((-5.0) / 16.0) + ((double * 5.0) / 12.0))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:104","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:108","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.crossProduct(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>, org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>)","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:287","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction[][][][int][int][int] = new org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction(org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction.computeSplineCoefficients(double[]))","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:295","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"sum":"sum"},"name":"add","transplant":{"sourceCode":"return double","position":"org.apache.commons.math3.ml.distance.CanberraDistance:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (2 * double) * ((org.apache.commons.math3.stat.inference.GTest.(entropy(long[])) + org.apache.commons.math3.stat.inference.GTest.(entropy(long[]))) - org.apache.commons.math3.stat.inference.GTest.(entropy(long[][])))","position":"org.apache.commons.math3.stat.inference.GTest:388","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Integer == null) {\n    throw new org.apache.commons.math3.optimization.linear.UnboundedSolutionException();\n} ","position":"org.apache.commons.math3.optimization.linear.SimplexSolver:176","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][0][int]","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:88","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-1.8592937532754405E-9","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5696","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = int - int","position":"org.apache.commons.math3.util.MultidimensionalCounter:237","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return (double - (double)) / ((double) - (double))","position":"org.apache.commons.math3.distribution.UniformRealDistribution:146","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.fitting.WeightedObservedPoint:75","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.stat.descriptive.moment.Mean[][int] = new org.apache.commons.math3.stat.descriptive.moment.Mean()","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:43","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    java.io.ObjectOutput.writeDouble(double[][int]);\n}","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:157","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixChangingVisitor.start(int, int, 0, (int - 1), 0, (int - 1))","position":"org.apache.commons.math3.linear.AbstractRealMatrix:820","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][][0].int","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:285","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:418","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.ONE":"h","stepa":"theta"},"name":"replace","transplant":{"sourceCode":"final double double = (this.double) / double","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1706","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * double) * (double)","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:94","type":"CtLocalVariableImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:103","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet()","position":"org.apache.commons.math3.geometry.euclidean.threed.Plane:386","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][int] = new org.apache.commons.math3.analysis.differentiation.DerivativeStructure(double[].int , 1 , int , double[][int]);\n}","position":"org.apache.commons.math3.analysis.differentiation.GradientFunction:46","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"secondary":"point","i":"length","ba":"y"},"name":"add","transplant":{"sourceCode":"if (int > 0) {\n    double[][][int][(int - 1)] = double[][(int - 1)];\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:147","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.math3.analysis.differentiation.DerivativeStructure[].int) ; ++int) {\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        int[][int] = 1;\n        double[][][int][int] = org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][int].getPartialDerivative(int[]);\n        int[][int] = 0;\n    }\n}","position":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:58","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"prod2Low":"theta","prod3Low":"theta","prod1Low":"theta","s123Low":"theta","s12Low":"theta","s123High":"theta"},"name":"add","transplant":{"sourceCode":"double double = double + ((((double + double) + double) + double) + double)","position":"org.apache.commons.math3.util.MathArrays:1043","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((-44.0) + (double * (152.0 - (120.0 * double))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:76","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:643","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = null","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:121","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats)","position":"org.apache.commons.math3.linear.MatrixUtils:318","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double * org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.cos(double))","position":"org.apache.commons.math3.analysis.function.HarmonicOscillator:159","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{}}]
