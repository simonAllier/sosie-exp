[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.analysis.MultivariateVectorFunction = ((org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient)(org.apache.commons.math3.optim.OptimizationData)).getObjectiveFunctionGradient()","position":"org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer:96","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.pow(double, double)","position":"org.apache.commons.math3.analysis.function.Pow:32","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final double double = 0.66","position":"org.apache.commons.math3.optimization.direct.CMAESOptimizer:845","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.getWeight(int)","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:81","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"exponent":"begin"},"name":"replace","transplant":{"sourceCode":"if (int < (-1074)) {\n    return 0;\n} ","position":"org.apache.commons.math3.dfp.Dfp:2460","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate(double[], int, int))","position":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:181","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.MathArithmeticException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats)","position":"org.apache.commons.math3.util.MathUtils:134","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double - (double[][int])) / ((double[][(int + 1)]) - (double[][int]))","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:323","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"theta":"theta"},"name":"add","transplant":{"sourceCode":"final double double = double * ((375.0 / 16.0) + (double * (((-625.0) / 8.0) + ((125.0 / 2.0) * double))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:77","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (2 - (3 * double))","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:205","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"y":"absoluteThreshold"},"name":"add","transplant":{"sourceCode":"if (double > 0) {\n    return 0.0;\n} ","position":"org.apache.commons.math3.util.FastMath:1474","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.optimization.AbstractConvergenceChecker:94","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(org.apache.commons.math3.dfp.DfpField.int)","position":"org.apache.commons.math3.dfp.Dfp:1070","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.descriptive.moment.Mean[][int].increment(double[][int])","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:57","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.getTree(false).getCut()) == null) {\n    org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.setBarycenter(org.apache.commons.math3.geometry.euclidean.oned.Vector1D.org.apache.commons.math3.geometry.euclidean.oned.Vector1D);\n    org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.setSize((((java.lang.Boolean)(org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.getTree(false).getAttribute())) ? java.lang.Double.double : 0));\n} else {\n    double double = 0.0;\n    double double = 0.0;\n    for (final org.apache.commons.math3.geometry.euclidean.oned.Interval org.apache.commons.math3.geometry.euclidean.oned.Interval : org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.asList()) {\n        double += org.apache.commons.math3.geometry.euclidean.oned.Interval.getSize();\n        double += (org.apache.commons.math3.geometry.euclidean.oned.Interval.getSize()) * (org.apache.commons.math3.geometry.euclidean.oned.Interval.getBarycenter());\n    }\n    org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.setSize(double);\n    if (java.lang.Double.java.lang.Double.isInfinite(double)) {\n        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.setBarycenter(org.apache.commons.math3.geometry.euclidean.oned.Vector1D.org.apache.commons.math3.geometry.euclidean.oned.Vector1D);\n    } else if (double >= (org.apache.commons.math3.util.Precision.double)) {\n        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.setBarycenter(new org.apache.commons.math3.geometry.euclidean.oned.Vector1D((double / double)));\n    } else {\n        org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.setBarycenter(((org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint)(org.apache.commons.math3.geometry.partitioning.AbstractRegion<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.getTree(false).getCut().getHyperplane())).getLocation());\n    }\n}","position":"org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet:139","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    for (int int = 0 ; int < int ; ++int) {\n        java.io.ObjectOutput.writeDouble(double[][][int][int]);\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:163","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"hj":"hj","jacobian":"hj","sHessian":"jacobian"},"name":"add","transplant":{"sourceCode":"double[][][0][1] = (((double[][][0][0]) * (double[][][0][1])) + ((double[][][1][0]) * (double[][][1][1]))) + ((double[][][2][0]) * (double[][][2][1]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:209","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][1] = (((double[][][2][0]) * (double[][][0][1])) + ((double[][][2][1]) * (double[][][1][1]))) + ((double[][][2][2]) * (double[][][2][1]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:215","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"x":"x"},"name":"add","transplant":{"sourceCode":"return double","position":"org.apache.commons.math3.fitting.WeightedObservedPoint:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double == 0) {\n    return double * double;\n} ","position":"org.apache.commons.math3.util.FastMath:3376","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-3","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:85","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.stat.ranking.NaturalRanking.rank(double[])","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:182","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+1.3725786770437066E105","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2545","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = double[][int]","position":"org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:175","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.lang.String>.add((\"x\" + int))","position":"org.apache.commons.math3.optim.linear.SimplexTableau:184","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction:146","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Double.MIN_VALUE":"rnorm","d":"rnorm","direction":"rnorm"},"name":"add","transplant":{"sourceCode":"if (double == 0) {\n    return double < 0 ? -(this.double) : this.double;\n} ","position":"org.apache.commons.math3.util.FastMath:3259","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent:103","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) - (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int))))","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:2228","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.t(double, org.apache.commons.math3.stat.descriptive.StatisticalSummary)","position":"org.apache.commons.math3.stat.inference.TestUtils:147","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.math3.fraction.Fraction(2 , 5)","position":"org.apache.commons.math3.fraction.Fraction:72","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutput.writeDouble(double)","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:230","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+5.3774170051560117E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4926","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.exception.MathIllegalStateException.getContext()","position":"org.apache.commons.math3.exception.TooManyIterationsException:38","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return ((double) * (double)) * (double)","position":"org.apache.commons.math3.distribution.GammaDistribution:325","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.optim.univariate.SearchInterval:94","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:184","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.Integer> java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer>(int)","position":"org.apache.commons.math3.genetics.BinaryChromosome:70","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    if ((int < 0) | (int > (int - 1))) {\n        for (int int = int ; int < int ; int++) {\n            double[][][int][int] = double[][][int][int];\n        }\n    } \n}","position":"org.apache.commons.math3.linear.EigenDecomposition:931","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; int++) {\n    final org.apache.commons.math3.distribution.MultivariateNormalDistribution org.apache.commons.math3.distribution.MultivariateNormalDistribution = new org.apache.commons.math3.distribution.MultivariateNormalDistribution(double[][][int] , double[][][][int]);\n    java.util.List<org.apache.commons.math3.util.Pair<java.lang.Double, org.apache.commons.math3.distribution.MultivariateNormalDistribution>>.add(new org.apache.commons.math3.util.Pair<java.lang.Double, org.apache.commons.math3.distribution.MultivariateNormalDistribution>(double[][int] , org.apache.commons.math3.distribution.MultivariateNormalDistribution));\n}","position":"org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution:88","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 1.0","position":"org.apache.commons.math3.distribution.ZipfDistribution:122","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.tTest(double[], double[])","position":"org.apache.commons.math3.stat.inference.TestUtils:220","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final int int = (int - int) / int","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1653","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:323","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+2.0619101524353027","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3785","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.optimization.fitting.WeightedObservedPoint:66","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal((int + 1) , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:196","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double double = org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.double","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:439","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.genetics.Chromosome","position":"org.apache.commons.math3.genetics.ChromosomePair:50","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (int * int) + (int)","position":"org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:313","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:152","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = int ; int <= int ; ++int) {\n    final double[] double[] = double[][][int];\n    for (int int = int ; int <= int ; ++int) {\n        double[][int] = org.apache.commons.math3.linear.RealMatrixChangingVisitor.visit(int, int, double[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:431","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int <= int ; ++int) {\n    for (int int = int ; int <= int ; ++int) {\n        final T[] T[] = T[][][int];\n        T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:559","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final double[][] double[][] = new double[int * int][int * int]","position":"org.apache.commons.math3.optimization.direct.CMAESOptimizer:1306","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[][] double[][] = new double[int + 1][]","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:198","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.math3.exception.util.LocalizedFormats(\"out of range root of unity index {0} (must be in [{1};{2}])\")","position":"org.apache.commons.math3.exception.util.LocalizedFormats:281","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][0] = (((double[][][1][0]) * (double[][][0][0])) + ((double[][][1][1]) * (double[][][1][0]))) + ((double[][][2][1]) * (double[][][2][0]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:211","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (double < double) {\n    int = int;\n    double = org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double;\n    int = 0;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, org.apache.commons.math3.linear.ArrayRealVector.getEntry(int));\n        final double double = org.apache.commons.math3.linear.ArrayRealVector.getEntry(int);\n        double += double * double;\n        for (int int = 0 ; int <= int ; int++) {\n            if (int < int) {\n                org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) + ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) * (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)))));\n            } \n            org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) + ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) * (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)))));\n            int++;\n        }\n    }\n    for (int int = 0 ; int < int ; int++) {\n        double double = org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double;\n        for (int int = 0 ; int < int ; int++) {\n            double += (org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int)) * (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int));\n        }\n        double *= org.apache.commons.math3.linear.ArrayRealVector.getEntry(int);\n        for (int int = 0 ; int < int ; int++) {\n            org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) + (double * (org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int)))));\n        }\n    }\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:982","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.ml.distance.DistanceMeasure.compute(org.apache.commons.math3.ml.clustering.Clusterable.getPoint(), org.apache.commons.math3.ml.clustering.Clusterable.getPoint())","position":"org.apache.commons.math3.ml.clustering.Clusterer:78","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double double = org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver<org.apache.commons.math3.analysis.UnivariateFunction>.computeObjectiveValue(double)","position":"org.apache.commons.math3.analysis.solvers.BrentSolver:102","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:69","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+0.3540347218513489","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5539","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] = 1","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:188","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.stat.inference.MannWhitneyUTest.concatenateSamples(double[], double[])","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:131","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"order":"length"},"name":"replace","transplant":{"sourceCode":"double[] double[] = new double[1 + (this.int)]","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:1265","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = new double[(double[].int) + (double[].int)]","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:90","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.ml.clustering.DBSCANClusterer<T>.this(double, int, new org.apache.commons.math3.ml.distance.EuclideanDistance())","position":"org.apache.commons.math3.ml.clustering.DBSCANClusterer:86","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][][][int].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int].int , int);\n} ","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:218","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"-1.9600580584843318E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5623","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double -= (double[][int]) * (double[][int])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:367","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-6.4304548177935305E-6","position":"org.apache.commons.math3.special.Gamma:127","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][int]) > (double[][int])) {\n    double = (double[][int]) * ((double[][int]) - (double[][int]));\n} else {\n    double = 0;\n}","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:174","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix = new org.apache.commons.math3.linear.LUDecomposition(org.apache.commons.math3.linear.RealMatrix).getSolver().getInverse()","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:81","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"+7.130134251490065E-128","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2010","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][2] = double[][][2][1]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:341","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Available choices of update formulas for the updating the parameter\n * that is used to compute the successive conjugate search directions.\n * For non-linear conjugate gradients, there are\n * two formulas:\n * <ul>\n * <li>Fletcher-Reeves formula<\/li>\n * <li>Polak-Ribière formula<\/li>\n * <\/ul>\n * \n * On the one hand, the Fletcher-Reeves formula is guaranteed to converge\n * if the start point is close enough of the optimum whether the\n * Polak-Ribière formula may not converge in rare cases. On the\n * other hand, the Polak-Ribière formula is often faster when it\n * does converge. Polak-Ribière is often used.\n * \n * @since 2.0\n */\npublic static enum Formula {\nFLETCHER_REEVES, POLAK_RIBIERE;}","position":"org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:95","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.random.AbstractWell.setSeed(new int[]{ int })","position":"org.apache.commons.math3.random.AbstractWell:142","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"index":"length"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(int);\n} ","position":"org.apache.commons.math3.util.ResizableDoubleArray:963","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][int] = new org.apache.commons.math3.analysis.differentiation.DerivativeStructure(double[].int , 1 , int , double[][int]);\n}","position":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:48","type":"CtForImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.linear.BiDiagonalTransformer:370","failures":[],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.double = double","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:134","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.RealVector = org.apache.commons.math3.linear.RealVector.add(org.apache.commons.math3.linear.RealMatrix.operate(org.apache.commons.math3.linear.RealVector))","position":"org.apache.commons.math3.filter.KalmanFilter:380","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.optim.BaseOptimizer<PAIR>.getMaxEvaluations()","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:168","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.newCovarianceData(double[][])","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:61","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} ","position":"org.apache.commons.math3.util.OpenIntToDoubleHashMap:543","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][][][int][int].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int][int].int , int);\n} ","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:233","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"jWidth":"i","lStart":"n","mBlock":"coefficients","jWidth3":"n","jWidth2":"n","jWidth4":"n","k":"i","lEnd":"n","outBlock":"c","tBlock":"coefficients"},"name":"replace","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    double double = 0;\n    int int = int;\n    int int = int;\n    while (int < (int - 3)) {\n        double += ((((double[][int]) * (double[][int])) + ((double[][(int + 1)]) * (double[][(int + int)]))) + ((double[][(int + 2)]) * (double[][(int + int)]))) + ((double[][(int + 3)]) * (double[][(int + int)]));\n        int += 4;\n        int += int;\n    }\n    while (int < int) {\n        double += (double[][int++]) * (double[][int]);\n        int += int;\n    }\n    double[][int] += double;\n    ++int;\n}","position":"org.apache.commons.math3.linear.BlockRealMatrix:566","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int - int ; int > 0 ; int--) {\n    double[][int] = (double[][(int - 1)]) - ((double[][int]) * (double[][int]));\n}","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:209","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * ((4 * double) - 5)) + 1","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:100","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkColumnIndex(int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:377","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"order":"row"},"name":"replace","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NumberIsTooLargeException(int , 1 , true)","position":"org.apache.commons.math3.analysis.FunctionUtils:628","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:274","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (double * double) * (double)","position":"org.apache.commons.math3.stat.regression.SimpleRegression:757","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = T[][][0].int","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:165","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final double double = 1.0","position":"org.apache.commons.math3.util.FastMath:1731","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * (double)) / 8.0","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:105","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = int % (org.apache.commons.math3.linear.BlockRealMatrix.int)","position":"org.apache.commons.math3.linear.BlockRealMatrix:676","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.getNumberOfPoints()","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:70","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == int) {\n    double[][][int][int] = 0.0;\n} else {\n    double double = org.apache.commons.math3.linear.RealMatrix.getEntry(int, int);\n    double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.abs((double * org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.sqrt((((int) - 2) / (1 - (double * double)))))));\n    double[][][int][int] = 2 * (org.apache.commons.math3.distribution.TDistribution.cumulativeProbability(-double));\n}","position":"org.apache.commons.math3.stat.correlation.PearsonsCorrelation:169","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = int","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:112","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.dfp.Dfp.int = ((this.int) - (int[].int)) + 1","position":"org.apache.commons.math3.dfp.Dfp:2387","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:213","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"columns":"row"},"name":"add","transplant":{"sourceCode":"return int","position":"org.apache.commons.math3.linear.SparseFieldMatrix:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int * (int)) + int","position":"org.apache.commons.math3.linear.OpenMapRealMatrix:306","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"rdnext":"theta05","i":"dimension","rednew":"theta05","isav":"dimension"},"name":"replace","transplant":{"sourceCode":"if (int == (int + 1)) {\n    double = double;\n} ","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:2158","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    final double double = double[][][0][int];\n    final double double = double[][][1][int];\n    final double double = double[][][2][int];\n    final double double = double[][][3][int];\n    double[][int] = double + (double * (double + (double * ((double * double) + (double * double)))));\n    double[][int] = ((double * double) + (double * double)) + (double * double);\n    if ((int) > 3) {\n        double double = 0;\n        double double = double[][][int][int];\n        for (int int = (int) - 1 ; int > 3 ; --int) {\n            final double double = 1.0 / (int - 3);\n            double = double * ((double * double) + double);\n            double = (double[][][int][int]) + ((double * double) * double);\n        }\n        double[][int] += double * double;\n        double[][int] += ((double * double) + (double * double)) / (double);\n    } \n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:330","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"householderVectors":"householderVectors","a":"a","hK":"hK","k":"n","m":"m","n":"k"},"name":"add","transplant":{"sourceCode":"if (double != 0.0) {\n    double[][int] -= double;\n    for (int int = int + 1 ; int < int ; ++int) {\n        final double[] double[] = double[][][int];\n        double double = 0;\n        for (int int = int ; int < int ; ++int) {\n            double -= (double[][int]) * (double[][int]);\n        }\n        double /= double * (double[][][int][int]);\n        for (int int = int ; int < int ; ++int) {\n            double[][int] -= double * (double[][int]);\n        }\n    }\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:336","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < int ; ++int) {\n    final double[] double[] = double[][][int];\n    double double = 0;\n    for (int int = int ; int < int ; ++int) {\n        double -= (double[][int]) * (double[][int]);\n    }\n    double /= double * (double[][][int][int]);\n    for (int int = int ; int < int ; ++int) {\n        double[][int] -= double * (double[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:338","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+6.101012058093429E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4506","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:515","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = 60","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1103","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int /= int[][int]","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:135","type":"CtOperatorAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.util.MultidimensionalCounter:259","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.threed.Vector3D","position":"org.apache.commons.math3.geometry.euclidean.threed.RotationOrder:158","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.geometry.euclidean.threed.Vector3D((((((-double) * double) - (((double * double) - (double * double)) * double)) - (((double * double) - (double * double)) * double)) * double) , (((((-double) * double) - (((double * double) - (double * double)) * double)) - (((double * double) - (double * double)) * double)) * double) , (((((-double) * double) - (((double * double) - (double * double)) * double)) - (((double * double) - (double * double)) * double)) * double))","position":"org.apache.commons.math3.geometry.euclidean.threed.Plane:367","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.math3.linear.AbstractRealMatrix.getColumnDimension()","position":"org.apache.commons.math3.linear.AbstractRealMatrix:757","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:134","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:145","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:184","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+5.377173488599035E239","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1332","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double += org.apache.commons.math3.util.Pair<java.lang.Double, T>.getFirst()","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:80","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"dataI":"v","dataR":"v","n":"length"},"name":"replace","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int += 4) {\n    final int int = int + 1;\n    final int int = int + 2;\n    final int int = int + 3;\n    final double double = double[][int];\n    final double double = double[][int];\n    final double double = double[][int];\n    final double double = double[][int];\n    final double double = double[][int];\n    final double double = double[][int];\n    final double double = double[][int];\n    final double double = double[][int];\n    double[][int] = ((double + double) + double) + double;\n    double[][int] = ((double + double) + double) + double;\n    double[][int] = (double - double) + (double - double);\n    double[][int] = (double - double) + (double - double);\n    double[][int] = ((double - double) + double) - double;\n    double[][int] = ((double - double) + double) - double;\n    double[][int] = (double - double) + (double - double);\n    double[][int] = (double - double) + (double - double);\n}","position":"org.apache.commons.math3.transform.FastFourierTransformer:257","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    org.apache.commons.math3.stat.descriptive.moment.Mean[][int].increment(double[][int]);\n}","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:56","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"a1":"theta","b23":"hTheta","a23":"theta","c23":"theta","c1":"theta","b1":"hTheta"},"name":"add","transplant":{"sourceCode":"final double double = ((double * double) + (double * double)) + (double * double)","position":"org.apache.commons.math3.geometry.euclidean.threed.Plane:361","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (double * ((-22.0) + (double * ((152.0 / 3.0) + (double * (-30.0))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:84","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:93","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (1.0 + double)","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:103","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * {@link StepNormalizer Step normalizer} modes. Determines how the step size\n * is interpreted.\n * @see StepNormalizer\n * @see StepNormalizerBounds\n * @version $Id$\n * @since 3.0\n */\npublic enum StepNormalizerMode {\nINCREMENT, MULTIPLES;}","position":"org.apache.commons.math3.ode.sampling.StepNormalizerMode:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutput.writeObject(org.apache.commons.math3.linear.Array2DRowRealMatrix)","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:247","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"new org.apache.commons.math3.stat.ranking.TiesStrategy()","position":"org.apache.commons.math3.stat.ranking.TiesStrategy:50","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.java.math.BigDecimal.subtract(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:177","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int *= int","position":"org.apache.commons.math3.util.ArithmeticUtils:653","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][][][int][int].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int][int].int , int);\n} ","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:242","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.validateSampleData(double[][], double[])","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:57","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double[][int]) - (double[][int])","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:255","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][][int][0] = 1.0","position":"org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:200","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double - double) / 2","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:160","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.util.Incrementor.getCount()","position":"org.apache.commons.math3.optim.AbstractOptimizer:116","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:141","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"hj":"hj","jacobian":"cHessian","cHessian":"cHessian"},"name":"add","transplant":{"sourceCode":"double[][][1][1] = (((double[][][0][1]) * (double[][][0][1])) + ((double[][][1][1]) * (double[][][1][1]))) + ((double[][][2][1]) * (double[][][2][1]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:222","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][0] = ((double[][][0][2]) * (double[][][0][0])) + ((double[][][2][2]) * (double[][][2][0]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:221","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"r":"r","deltaY":"r","start":"start"},"name":"add","transplant":{"sourceCode":"final double double = (this.org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()) + (double * double)","position":"org.apache.commons.math3.geometry.euclidean.twod.Segment:106","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX()) + (double * double)","position":"org.apache.commons.math3.geometry.euclidean.twod.Segment:105","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-5.262093550784066E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:6001","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double + double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:289","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double[][(int - 1)] = (((int - int) + 2) * (double[][(int - 2)])) - ((int - 1) * (double[][(int - 1)]))","position":"org.apache.commons.math3.analysis.function.Sigmoid:199","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][(int - 2)] = ((int - 1) * (double[][(int - 1)])) + ((int - (2 * int)) * (double[][(int - 3)]))","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:1676","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"populationSize":"iMax","sampleSize":"iMax"},"name":"add","transplant":{"sourceCode":"double double = int / int","position":"org.apache.commons.math3.distribution.HypergeometricDistribution:202","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.getWeight(int)","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:94","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"theta":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.ONE_PLUS_INV_SQRT_2"},"name":"replace","transplant":{"sourceCode":"final double double = (4 * double) * double","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:101","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:116","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double = java.lang.Math.java.lang.Math.min(((org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.double) * double), ((org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.double) * double))","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1145","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.ulp().multiply(java.math.BigDecimal.java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:138","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final double[] double[] = new double[(int * (int + 1)) / 2]","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:505","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] double[] = java.util.List<double[]>.get(int)","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:177","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.LowerBoundMapper(double[][int])","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:129","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Double.java.lang.Double.isInfinite(double[][int])) {\n    if (java.lang.Double.java.lang.Double.isInfinite(double[][int])) {\n        org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.NoBoundsMapper();\n    } else {\n        org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.UpperBoundMapper(double[][int]);\n    }\n} else {\n    if (java.lang.Double.java.lang.Double.isInfinite(double[][int])) {\n        org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.LowerBoundMapper(double[][int]);\n    } else {\n        org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.LowerUpperBoundMapper(double[][int] , double[][int]);\n    }\n}","position":"org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter:117","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (double < (double)) {\n    return 0;\n} ","position":"org.apache.commons.math3.distribution.ParetoDistribution:171","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 1 / double","position":"org.apache.commons.math3.analysis.function.Inverse:35","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+2.8108219632627907E-129","position":"org.apache.commons.math3.util.FastMathLiteralArrays:484","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.random.RandomGenerator.nextLong()","position":"org.apache.commons.math3.random.SynchronizedRandomGenerator:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    final int int = int + 5;\n    double[][int] = 1.0 / (int * int);\n    final double double = 0.5 * org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.sqrt((((double)((int + 1))) / int)));\n    for (int int = 0 ; int <= int ; ++int) {\n        double[][int] *= double / (int + 1);\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:216","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) + (double * (org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int)))))","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:973","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] = org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])","position":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:53","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    double[][][int][int] = 1;\n}","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:181","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.threed.Vector3D","position":"org.apache.commons.math3.geometry.euclidean.threed.RotationOrder:158","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (int int = int ; int < int ; ++int) {\n    double[][int] -= ((double[][int]) * (double[][int])) + ((double[][int]) * (double[][int]));\n}","position":"org.apache.commons.math3.linear.TriDiagonalTransformer:246","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][int] = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.abs(double[][int]);\n}","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:130","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (1 + ((org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node) == null ? 0 : org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node.size())) + ((org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node) == null ? 0 : org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node.size())","position":"org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:264","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:162","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Goal type for an optimization problem (minimization or maximization of\n * a scalar function.\n * \n * @version $Id$\n * @since 2.0\n */\npublic enum GoalType implements org.apache.commons.math3.optim.OptimizationData {\nMAXIMIZE, MINIMIZE;}","position":"org.apache.commons.math3.optim.nonlinear.scalar.GoalType:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Arrays.java.util.Arrays.fill(double[], 0.0)","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:196","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = (double * ((4 * double) - 5)) + 1","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:100","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (5 - (6 * double))","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:101","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (((double[]) != null) && (double <= 0.5)) {\n    final double double = (4 * double) * double;\n    final double double = (double * (double)) / 6.0;\n    final double double = double * ((6 - (9 * double)) + double);\n    final double double = double * ((6 * double) - double);\n    final double double = double * (((-3) * double) + double);\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        final double double = double[][][0][int];\n        final double double = (double[][][1][int]) + (double[][][2][int]);\n        final double double = double[][][3][int];\n        double[][int] = (((double[][int]) + (double * double)) + (double * double)) + (double * double);\n        double[][int] = ((double * double) + (double * double)) + (double * double);\n    }\n} else {\n    final double double = 4 * double;\n    final double double = double / 6.0;\n    final double double = double * ((((-double) + 5) * double) - 1);\n    final double double = double * (((double - 2) * double) - 2);\n    final double double = double * ((((-double) - 1) * double) - 1);\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        final double double = double[][][0][int];\n        final double double = (double[][][1][int]) + (double[][][2][int]);\n        final double double = double[][][3][int];\n        double[][int] = (((double[][int]) + (double * double)) + (double * double)) + (double * double);\n        double[][int] = ((double * double) + (double * double)) + (double * double);\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:100","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.math3.util.Pair<java.lang.Double[], java.lang.Double[]>(new java.lang.Double[]{ 0.0 } , new java.lang.Double[]{ 2.0 })","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory:41","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.util.Pair<java.math.BigDecimal[], java.math.BigDecimal[]>(java.math.BigDecimal[] , java.math.BigDecimal[])","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:214","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"x":"x","length":"length","y":"x"},"name":"add","transplant":{"sourceCode":"if (((double[].int) == 0) || ((double[].int) == 0)) {\n    throw new org.apache.commons.math3.exception.NoDataException();\n} ","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:78","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression.include(org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.copyOf(double[], double[].int), 1.0, double)","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:176","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{}}]
