[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.math3.analysis.solvers.UnivariateSolver org.apache.commons.math3.analysis.solvers.UnivariateSolver = new org.apache.commons.math3.analysis.solvers.BrentSolver(double)","position":"org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:81","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor:55","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.math3.linear.RealVector.ebeMultiply(org.apache.commons.math3.linear.RealVector)","position":"org.apache.commons.math3.linear.RealVector:1427","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealVector","position":"org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent:123","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"parameters":"result"},"name":"replace","transplant":{"sourceCode":"if (double[] == null) {\n    return null;\n} ","position":"org.apache.commons.math3.stat.regression.RegressionResults:171","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation org.apache.commons.math3.stat.descriptive.moment.StandardDeviation = new org.apache.commons.math3.stat.descriptive.moment.StandardDeviation()","position":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:258","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.math3.ml.clustering.CentroidCluster<T>> java.util.List<org.apache.commons.math3.ml.clustering.CentroidCluster<T>> = org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer<T>.cluster(java.util.Collection<T>)","position":"org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer:92","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"j":"j","mContext":"mContext"},"name":"add","transplant":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal((int + 1) , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:145","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(int , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:100","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+0.16607704758644104","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5289","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Number","position":"org.apache.commons.math3.exception.NumberIsTooLargeException:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+8.5029538631631E-93","position":"org.apache.commons.math3.util.FastMathLiteralArrays:568","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][2] = (double * double) + (double * double)","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:308","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.util.MathUtils.org.apache.commons.math3.util.MathUtils.checkNotNull(double[])","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunction:150","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = ((double[][int]) - (double[][int])) - double","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:193","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkRowIndex(int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:366","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[][][int], 0, double[][][(int + int)], int, int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:294","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return double[][]","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:221","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.stat.ranking.NaturalRanking.rank(double[])","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:132","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final double[] double[] = org.apache.commons.math3.optimization.direct.CMAESOptimizer.this.getUpperBound()","position":"org.apache.commons.math3.optimization.direct.CMAESOptimizer:1046","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:106","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:155","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":0},{"failures":[],"variableMapping":{"s":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.ONE_MINUS_INV_SQRT_2","theta":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.ONE_MINUS_INV_SQRT_2"},"name":"replace","transplant":{"sourceCode":"final double double = (3 * double) * (1 + double)","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:127","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:107","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"double double = (double[][int]) / (double[][int])","position":"org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:569","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs(double[][int])) + org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs(double[][int]))","position":"org.apache.commons.math3.ml.distance.CanberraDistance:37","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; ++int) {\n    double double = 0;\n    for (int int = int ; int < int ; ++int) {\n        double -= (double[][][int][int]) * (double[][][int][(int - int)]);\n    }\n    double /= (double[][(int - int)]) * (double[][(int - int)]);\n    for (int int = int ; int < int ; ++int) {\n        double[][][int][int] += (-double) * (double[][][int][(int - int)]);\n    }\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:109","type":"CtForImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:175","failures":[],"name":"inlineConstant","type":"mutation","nodeType":"CtLocalVariableImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.end()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:565","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.AbstractFieldMatrix<T>.walkInRowOrder(org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>)","position":"org.apache.commons.math3.linear.AbstractFieldMatrix:924","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"long long = ((long)(int)) * ((long)(int))","position":"org.apache.commons.math3.util.ArithmeticUtils:530","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = ((long)(int)) * int","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:176","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Strategies for handling NaN values in rank transformations.\n * <ul>\n * <li>MINIMAL - NaNs are treated as minimal in the ordering, equivalent to\n * (that is, tied with) <code>Double.NEGATIVE_INFINITY<\/code>.<\/li>\n * <li>MAXIMAL - NaNs are treated as maximal in the ordering, equivalent to\n * <code>Double.POSITIVE_INFINITY<\/code><\/li>\n * <li>REMOVED - NaNs are removed before the rank transform is applied<\/li>\n * <li>FIXED - NaNs are left \"in place,\" that is the rank transformation is\n * applied to the other elements in the input array, but the NaN elements\n * are returned unchanged.<\/li>\n * <li>FAILED - If any NaN is encountered in the input array, an appropriate\n * exception is thrown<\/li>\n * <\/ul>\n * \n * @since 2.0\n * @version $Id$\n */\npublic enum NaNStrategy {\nMINIMAL, MAXIMAL, REMOVED, FIXED, FAILED;}","position":"org.apache.commons.math3.stat.ranking.NaNStrategy:38","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.util.Incrementor.resetCount()","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:133","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    org.apache.commons.math3.stat.descriptive.moment.Mean[][int].increment(double[][int]);\n}","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:56","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+2.3525345191912968E288","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1444","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][0] = double[][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:136","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = int & 8388607","position":"org.apache.commons.math3.util.FastMath:3163","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][].int","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:280","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.fitting.AbstractCurveFitter<OPTIM>.getOptimizer(java.util.Collection<org.apache.commons.math3.fitting.WeightedObservedPoint>)","position":"org.apache.commons.math3.fitting.AbstractCurveFitter:64","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    double double = int == 0 ? -double : java.lang.Double[][(int - 1)].doubleValue();\n    double double = int == 1 ? -0.5 : java.lang.Double[][int].doubleValue();\n    double double = org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory.double;\n    double double = (org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory.double) * double;\n    double double = org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory.double;\n    double double = (org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory.double) * double;\n    for (int int = 1 ; int < int ; int++) {\n        final double double = int + 1;\n        final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt((2 / double));\n        final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt((int / double));\n        final double double = ((double * double) * double) - (double * double);\n        final double double = ((double * double) * double) - (double * double);\n        double = double;\n        double = double;\n        double = double;\n        double = double;\n    }\n    double double = 0.5 * (double + double);\n    double double = org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory.double;\n    double double = (org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory.double) * double;\n    boolean boolean = false;\n    while (!boolean) {\n        boolean = (double - double) <= java.lang.Math.(java.lang.Math.ulp(double));\n        double = org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory.double;\n        double = (org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory.double) * double;\n        for (int int = 1 ; int < int ; int++) {\n            final double double = int + 1;\n            final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt((2 / double));\n            final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt((int / double));\n            final double double = ((double * double) * double) - (double * double);\n            double = double;\n            double = double;\n        }\n        if (!boolean) {\n            if ((double * double) < 0) {\n                double = double;\n                double = double;\n                double = double;\n            } else {\n                double = double;\n                double = double;\n                double = double;\n            }\n            double = 0.5 * (double + double);\n        } \n    }\n    final double double = double * double;\n    final double double = 2 / (double * double);\n    java.lang.Double[][int] = double;\n    java.lang.Double[][int] = double;\n    final int int = int - int;\n    java.lang.Double[][int] = -double;\n    java.lang.Double[][int] = double;\n}","position":"org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory:87","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][int] = 1","position":"org.apache.commons.math3.analysis.function.Sigmoid:195","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix.setEntry(int[][int], int, double[][][int][int])","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:169","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"pmc":"pmb","java.math.BigDecimal.ONE":"pmb"},"name":"replace","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:140","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:162","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double[][][0][int]","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:88","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][4][int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:188","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"x":"expected","y":"expected"},"name":"replace","transplant":{"sourceCode":"if ((double[] == null) || (double[] == null)) {\n    return !((double[] == null) ^ (double[] == null));\n} ","position":"org.apache.commons.math3.util.MathArrays:1235","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTest(double[], long[], double)","position":"org.apache.commons.math3.stat.inference.TestUtils:269","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double[][(int + int)] = double - ((double * double) + (double * double))","position":"org.apache.commons.math3.transform.FastFourierTransformer:345","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] = new org.apache.commons.math3.analysis.differentiation.DerivativeStructure[double[].int]","position":"org.apache.commons.math3.analysis.differentiation.GradientFunction:45","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"-2","position":"org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:47","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-1","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:59","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.math3.geometry.euclidean.threed.Rotation((((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double)) - ((((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double)) + ((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double))) + ((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double)))) , ((((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double)) + ((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double))) + (((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double)) - ((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double)))) , ((((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double)) + ((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double))) + (((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double)) - ((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double)))) , ((((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double)) + ((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double))) + (((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double)) - ((org.apache.commons.math3.geometry.euclidean.threed.Rotation.double) * (double)))) , false)","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:901","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int].int , int)","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:204","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.math3.dfp.Dfp.equals(org.apache.commons.math3.dfp.Dfp.getZero())) {\n    org.apache.commons.math3.dfp.Dfp = org.apache.commons.math3.dfp.Dfp.org.apache.commons.math3.dfp.Dfp.copysign(org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp.getZero()), this);\n} else {\n    org.apache.commons.math3.dfp.Dfp = org.apache.commons.math3.dfp.Dfp.subtract(org.apache.commons.math3.dfp.Dfp);\n}","position":"org.apache.commons.math3.dfp.DfpDec:349","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedTime())","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:139","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"minusOne"},"name":"add","transplant":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:93","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = int == 0 ? java.math.BigDecimal : java.math.BigDecimal[][(int - 1)]","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:87","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final int int = 97","position":"org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple:306","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:473","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"q":"mean","k":"length","n":"length"},"name":"replace","transplant":{"sourceCode":"if (int > 2) {\n    double[][(int - 2)] = ((int - 1) * (double[][(int - 1)])) + (((int - 1) - (2 * int)) * (double[][(int - 3)]));\n} else if (int == 2) {\n    double[][0] = double[][1];\n} ","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:1403","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][int] = (double[][int]) + ((double[][int]) * (org.apache.commons.math3.random.NormalizedRandomGenerator.nextNormalizedDouble()));\n}","position":"org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator:85","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    double = org.apache.commons.math3.analysis.function.Gaussian.Parametric.value(double, double[]);\n} catch (org.apache.commons.math3.exception.NotStrictlyPositiveException org.apache.commons.math3.exception.NotStrictlyPositiveException) {\n}","position":"org.apache.commons.math3.optimization.fitting.GaussianFitter:89","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.math3.optim.OptimizationData[].int) ; int++) {\n    if ((org.apache.commons.math3.optim.OptimizationData[][int]) instanceof org.apache.commons.math3.optim.MaxEval) {\n        org.apache.commons.math3.optim.OptimizationData[][int] = null;\n        int = int;\n    } \n    if ((org.apache.commons.math3.optim.OptimizationData[][int]) instanceof org.apache.commons.math3.optim.InitialGuess) {\n        org.apache.commons.math3.optim.OptimizationData[][int] = null;\n        int = int;\n        continue;\n    } \n}","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:146","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (int > 0) {\n    double[][][int][(int - 1)] = double[][(int - 1)];\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:147","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][(int - 1)] = double[][(int - 1)]","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:148","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"+1.3106298446655273","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3321","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][7][int] = 16 * (((double[][][3][int]) - double) + (3 * (double[][][5][int])))","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:282","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumerate for the location of a point with respect to the region.\n */\npublic static enum Location {\nINSIDE, OUTSIDE, BOUNDARY;}","position":"org.apache.commons.math3.geometry.partitioning.Region:50","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.util.MathUtils.org.apache.commons.math3.util.MathUtils.checkNotNull(T[][])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:160","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.util.FastMathLiteralArrays.LN_MANT":"y"},"name":"replace","transplant":{"sourceCode":"return double[][].clone()","position":"org.apache.commons.math3.util.FastMathLiteralArrays:6174","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[][]","position":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:66","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"-9.177488027521808E-9","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5629","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][int] = double[][int]","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:259","type":"CtAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.analysis.function.Sigmoid:191","failures":[],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.math3.stat.ranking.NaturalRanking:348","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:171","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.abs(double), org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.abs(double))","position":"org.apache.commons.math3.optimization.SimplePointChecker:138","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:288","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.math3.exception.util.ExceptionContext:172","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:591","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node","position":"org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:187","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] = 1","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:101","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-1.3210039516811888E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5288","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[].int) != (double[].int)) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[].int , double[].int);\n} ","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:66","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance[][org.apache.commons.math3.stat.correlation.StorelessCovariance.indexOf(int, int)]","position":"org.apache.commons.math3.stat.correlation.StorelessCovariance:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:151","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-7.962256961838823E292","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2977","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(T[].int , int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:440","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"h"},"name":"add","transplant":{"sourceCode":"double double = 1.0 / double","position":"org.apache.commons.math3.special.Gamma:327","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * double) * (double)","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:94","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double double = org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:434","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:254","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (this == java.lang.Object) {\n    return true;\n} ","position":"org.apache.commons.math3.stat.Frequency:668","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.distance1(double[], double[])","position":"org.apache.commons.math3.ml.distance.ManhattanDistance:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Describes the type of iteration performed by the\n * {@link #iterator() iterator}.\n */\npublic static enum IterationOrder {\nLEXICOGRAPHIC;}","position":"org.apache.commons.math3.util.Combinations:43","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[] == null) || (double[] == null)) {\n    throw new org.apache.commons.math3.exception.NullArgumentException();\n} ","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:74","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"point":"point","points":"neighbors"},"name":"add","transplant":{"sourceCode":"java.util.List<T>.add(T)","position":"org.apache.commons.math3.ml.clustering.Cluster:50","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.List<T>.size()) >= (int)) {\n    final org.apache.commons.math3.ml.clustering.Cluster<T> org.apache.commons.math3.ml.clustering.Cluster<T> = new org.apache.commons.math3.ml.clustering.Cluster<T>();\n    java.util.List<org.apache.commons.math3.ml.clustering.Cluster<T>>.add(org.apache.commons.math3.ml.clustering.DBSCANClusterer<T>.expandCluster(org.apache.commons.math3.ml.clustering.Cluster<T>, T, java.util.List<T>, java.util.Collection<T>, java.util.Map<org.apache.commons.math3.ml.clustering.Clusterable, org.apache.commons.math3.ml.clustering.DBSCANClusterer.PointStatus>));\n} else {\n    java.util.Map<org.apache.commons.math3.ml.clustering.Clusterable, org.apache.commons.math3.ml.clustering.DBSCANClusterer.PointStatus>.put(T, org.apache.commons.math3.ml.clustering.DBSCANClusterer.PointStatus.org.apache.commons.math3.ml.clustering.DBSCANClusterer.PointStatus);\n}","position":"org.apache.commons.math3.ml.clustering.DBSCANClusterer:148","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = (31 * int) + int","position":"org.apache.commons.math3.complex.Quaternion:292","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.int","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:180","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = -(org.apache.commons.math3.geometry.euclidean.threed.Rotation.getQ0())","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:941","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrixPreservingVisitor.end()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:419","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = int / (org.apache.commons.math3.linear.BlockFieldMatrix.int) ; int < (1 + (int / (org.apache.commons.math3.linear.BlockFieldMatrix.int))) ; ++int) {\n    final int int = org.apache.commons.math3.linear.BlockFieldMatrix<T>.blockWidth(int);\n    final int int = int * (org.apache.commons.math3.linear.BlockFieldMatrix.int);\n    final int int = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(int, int);\n    final int int = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.min(((int + 1) * (org.apache.commons.math3.linear.BlockFieldMatrix.int)), (1 + int));\n    final T[] T[] = T[][][((int * (int)) + int)];\n    for (int int = int ; int < int ; ++int) {\n        int int = (((int - int) * int) + int) - int;\n        for (int int = int ; int < int ; ++int) {\n            org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][int]);\n            ++int;\n        }\n    }\n}","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1558","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.ml.distance.DistanceMeasure.compute(org.apache.commons.math3.ml.clustering.Clusterable.getPoint(), org.apache.commons.math3.ml.clustering.Clusterable.getPoint())","position":"org.apache.commons.math3.ml.clustering.Clusterer:78","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[]) == null) {\n    double[] = new double[double[].int];\n    double[] = new double[double[].int];\n    double[] = new double[double[].int];\n    double[] = new double[double[].int];\n} ","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:174","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+4.231000988846797E177","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1189","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(this, org.apache.commons.math3.linear.Array2DRowRealMatrix)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:219","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = (((double[][int]) + (double * (double[][int]))) + (double * (double[][int]))) + (double * (double[][int]))","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:217","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-2","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:105","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Number","position":"org.apache.commons.math3.exception.MathIllegalNumberException:59","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"xMatrix":"cachedB","xAug":"ba"},"name":"add","transplant":{"sourceCode":"this.org.apache.commons.math3.linear.RealMatrix = new org.apache.commons.math3.linear.Array2DRowRealMatrix(double[][] , false)","position":"org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:203","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(double[][])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:156","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.math3.genetics.FixedGenerationCount:69","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.newCovarianceData(double[][])","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:61","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][int] = double * ((double[][int]) - (double[][int]));\n}","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:110","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.dfp.Dfp","position":"org.apache.commons.math3.dfp.DfpMath:859","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (double[][][int][int])","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:148","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+3.2542391242036633E233","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2840","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField() , org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.copyOut() , false)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:218","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"while (true) {\n    final org.apache.commons.math3.analysis.differentiation.DerivativeStructure org.apache.commons.math3.analysis.differentiation.DerivativeStructure = org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver.computeObjectiveValueAndDerivative(double);\n    double = double - ((org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()) / (org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(1)));\n    if (org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs((double - double))) <= double) {\n        return double;\n    } \n    double = double;\n}","position":"org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver:83","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.cos(double)","position":"org.apache.commons.math3.analysis.function.Cos:36","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final double double = double[][][7][int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:337","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][1][int]","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:106","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"columns":"columns","visitor":"visitor","rows":"columns"},"name":"add","transplant":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixChangingVisitor.start(int, int, 0, (int - 1), 0, (int - 1))","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:463","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    for (int int = 0 ; int < int ; ++int) {\n        final double[] double[] = double[][][int];\n        double[][int] = org.apache.commons.math3.linear.RealMatrixChangingVisitor.visit(int, int, double[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:464","type":"CtForImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:103","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return double","position":"org.apache.commons.math3.util.FastMath:2947","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.pow(double, int)","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:204","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.double[] = null","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:135","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = null","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:121","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.math3.geometry.euclidean.twod.Line == null) {\n    org.apache.commons.math3.geometry.euclidean.twod.Line = new org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex.getLocation() , org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.Vertex.getLocation());\n} ","position":"org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:200","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = int[][int]","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:119","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * {@link StepNormalizer Step normalizer} modes. Determines how the step size\n * is interpreted.\n * @see StepNormalizer\n * @see StepNormalizerBounds\n * @version $Id$\n * @since 3.0\n */\npublic enum StepNormalizerMode {\nINCREMENT, MULTIPLES;}","position":"org.apache.commons.math3.ode.sampling.StepNormalizerMode:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.descriptive.moment.Variance.clear()","position":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:138","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (-int) - 1","position":"org.apache.commons.math3.util.OpenIntToDoubleHashMap:332","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:181","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.math3.geometry.partitioning.AbstractRegion:393","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][0] += (((double[][0]) * (double[][][0][0])) + ((double[][1]) * (double[][][0][0]))) + ((double[][2]) * (double[][][0][0]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:227","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<double[]>.add((int - int), double[])","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:102","type":"CtInvocationImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    double[][int] = java.io.ObjectInput.readDouble();\n}","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:187","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * This enumeration defines the various types of normalizations that can be\n * applied to discrete cosine transforms (DCT). The exact definition of these\n * normalizations is detailed below.\n * \n * @see FastCosineTransformer\n * @version $Id$\n * @since 3.0\n */\npublic enum DctNormalization {\nSTANDARD_DCT_I, ORTHOGONAL_DCT_I;}","position":"org.apache.commons.math3.transform.DctNormalization:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.newXSampleData(double[][])","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:59","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix.setEntry(int, int, double)","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:95","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats)","position":"org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:336","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * (org.apache.commons.math3.analysis.UnivariateFunction.value(0.0))) - double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:96","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:174","failures":[],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int >= int) {\n    throw new org.apache.commons.math3.exception.NumberIsTooLargeException(int , int , false);\n} ","position":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure:121","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:478","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"--int","position":"org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP:319","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][] = double[][]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:121","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"double double = double + ((org.apache.commons.math3.optim.univariate.BracketFinder.double) * (double - double))","position":"org.apache.commons.math3.optim.univariate.BracketFinder:131","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * (2 - (3 * double))) / (double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:327","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(((double * double) - double))","position":"org.apache.commons.math3.analysis.solvers.MullerSolver2:136","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.divide(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:121","type":"CtAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:90","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final double double","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:171","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs(double[][int])) + org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs(double[][int]))","position":"org.apache.commons.math3.ml.distance.CanberraDistance:37","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:110","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += ((int) - int) - 2","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:787","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:184","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.genetics.FixedGenerationCount:61","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][int] = org.apache.commons.math3.random.RandomGenerator.nextGaussian()","position":"org.apache.commons.math3.distribution.MultivariateNormalDistribution:211","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = 0","position":"org.apache.commons.math3.analysis.differentiation.GradientFunction:59","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"+1.7260616357651607E137","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1096","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][4][int] = 16 * ((double[][][0][int]) - double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:270","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int <= int ; int++) {\n    double[][int] = 0.0;\n}","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:203","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((double[]) != null) && (double <= 0.5)) {\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        double[][int] = (double[][int]) + ((double * (double)) * ((double[][int]) + (double * ((double[][int]) + (double * ((double[][int]) + (double * (double[][int]))))))));\n        double[][int] = (((double[][int]) + (double * (double[][int]))) + (double * (double[][int]))) + (double * (double[][int]));\n    }\n} else {\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        double[][int] = (double[][int]) - (double * ((double[][int]) - (double * ((double[][int]) + (double * ((double[][int]) + (double * (double[][int]))))))));\n        double[][int] = (((double[][int]) + (double * (double[][int]))) + (double * (double[][int]))) + (double * (double[][int]));\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:207","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (!org.apache.commons.math3.geometry.euclidean.threed.Vector3D.(isNaN())) && ((java.lang.Double.(java.lang.Double.isInfinite(double)) || java.lang.Double.(java.lang.Double.isInfinite(double))) || java.lang.Double.(java.lang.Double.isInfinite(double)))","position":"org.apache.commons.math3.geometry.euclidean.threed.Vector3D:389","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.Integer>.set(int, ((org.apache.commons.math3.genetics.BinaryChromosome.getRepresentation().get(int)) == 0 ? 1 : 0))","position":"org.apache.commons.math3.genetics.BinaryMutation:51","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"binCount":"dimension","min":"f","delta":"f","binUpperBounds":"v"},"name":"replace","transplant":{"sourceCode":"for (int int = 0 ; int < ((this.int) - 1) ; int++) {\n    double[][int] = double + (double * (int + 1));\n}","position":"org.apache.commons.math3.random.EmpiricalDistribution:547","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    double[][int] *= double;\n}","position":"org.apache.commons.math3.random.UnitSphereRandomVectorGenerator:75","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final double double = 0.4342944622039795","position":"org.apache.commons.math3.util.FastMath:1411","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((6 * double) - double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:113","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+0.5795059204101562","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5908","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] += (org.apache.commons.math3.linear.RealMatrix.getEntry(int, int)) * (double[][int])","position":"org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:177","type":"CtOperatorAssignmentImpl"},"status":-2},{"failureDictionary":{}}]
