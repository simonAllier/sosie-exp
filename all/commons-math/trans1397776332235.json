[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double[][int] *= double","position":"org.apache.commons.math3.linear.QRDecomposition:443","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.start(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getRowDimension(), org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension(), int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:575","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.double[][].int) ; ++int) {\n    double[][][int] = org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.double[][][int].clone();\n}","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:92","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"col":"idx","pos":"idx","in":"idx","base_pos":"idx"},"name":"replace","transplant":{"sourceCode":"int = ((int + int) - 1) - int","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:631","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"--int","position":"org.apache.commons.math3.util.MultidimensionalCounter:232","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()) > 0.9999999999)) {\n    throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(true);\n} ","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:655","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = new double[(double[].int) + (double[].int)]","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:90","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * {@link StepNormalizer Step normalizer} modes. Determines how the step size\n * is interpreted.\n * @see StepNormalizer\n * @see StepNormalizerBounds\n * @version $Id$\n * @since 3.0\n */\npublic enum StepNormalizerMode {\nINCREMENT, MULTIPLES;}","position":"org.apache.commons.math3.ode.sampling.StepNormalizerMode:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.checkInterpolation()","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:172","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.math3.optimization.direct.CMAESOptimizer:809","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(int[], 0, int[], 0, java.lang.Math.java.lang.Math.min(int[].int, int[].int))","position":"org.apache.commons.math3.random.AbstractWell:159","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new double[]{ 0 }","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunction:266","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:133","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = 64","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:398","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:458","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (double < ((org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.double) * double)) {\n    int = 0;\n} ","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1079","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:198","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(int)","position":"org.apache.commons.math3.linear.BlockRealMatrix:1085","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = 0","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:290","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction org.apache.commons.math3.optim.linear.LinearObjectiveFunction = ((org.apache.commons.math3.optim.linear.LinearObjectiveFunction)(java.lang.Object))","position":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction:115","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = org.apache.commons.math3.linear.OpenMapRealVector.getEntry(org.apache.commons.math3.util.OpenIntToDoubleHashMap.Iterator.key())","position":"org.apache.commons.math3.linear.OpenMapRealVector:747","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"T T = T","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1335","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.linear.Array2DRowRealMatrix(int , int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:145","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double += double[][int]","position":"org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer:351","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double / 6.0","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:117","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+4.740753295616865E-138","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1986","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double -= (double[][int]) * (double[][int])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:367","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][2] = ((double[][][0][2]) * (double[][][0][2])) + ((double[][][2][2]) * (double[][][2][2]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:224","type":"CtAssignmentImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][7][int] = 16 * (((double[][][3][int]) - double) + (3 * (double[][][5][int])))","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:282","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"double[] double[] = new double[3]","position":"org.apache.commons.math3.util.FastMath:2313","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = new double[int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:379","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return -1.0","position":"org.apache.commons.math3.util.FastMath:604","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrixChangingVisitor.end()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:470","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.reinitialize(double[], boolean, org.apache.commons.math3.ode.EquationsMapper, org.apache.commons.math3.ode.EquationsMapper[])","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:134","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix.scalarMultiply(-1)","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:860","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.apache.commons.math3.linear.RealMatrix = new org.apache.commons.math3.linear.Array2DRowRealMatrix(double[][])","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:70","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-1.5843229740595697E205","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2775","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    final double double = double + (0.25 * (double - double));\n    double[][][5][int] = 16 * ((double[][][1][int]) - double);\n    if (int > 1) {\n        final double double = double - double;\n        double[][][6][int] = 16 * (((double[][][2][int]) - double) + (double[][][4][int]));\n        if (int > 2) {\n            final double double = 6 * (double - double);\n            double[][][7][int] = 16 * (((double[][][3][int]) - double) + (3 * (double[][][5][int])));\n            for (int int = 4 ; int <= int ; ++int) {\n                final double double = (0.5 * int) * (int - 1);\n                final double double = ((2 * double) * (int - 2)) * (int - 3);\n                double[][][(int + 4)][int] = 16 * (((double[][][int][int]) + (double * (double[][][(int + 2)][int]))) - (double * (double[][][int][int])));\n            }\n        } \n    } \n} ","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:272","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"ntrits":"zLen","state":"i"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    int = 60;\n    break;\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:1097","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][][][int][int].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int][int].int , int);\n} ","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:242","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"tmp1":"b_two_j_p_1","two":"b_two_j_p_1","mContext":"mContext"},"name":"add","transplant":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.divide(java.math.BigDecimal, this.java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:208","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.multiply(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:106","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"ipt":"dimension","n":"dimension","jpt":"dimension"},"name":"replace","transplant":{"sourceCode":"if (int > int) {\n    final int int = int;\n    int = int - int;\n    int = int;\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:1651","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[], 0, double[], int, int)","position":"org.apache.commons.math3.ode.FirstOrderConverter:111","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+2.965546585110978E236","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2849","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][2][int]","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:89","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"xLen":"n","hLen":"n"},"name":"replace","transplant":{"sourceCode":"if ((int == 0) || (int == 0)) {\n    throw new org.apache.commons.math3.exception.NoDataException();\n} ","position":"org.apache.commons.math3.util.MathArrays:1407","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    java.io.ObjectOutput.writeDouble(double[][int]);\n}","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:238","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"nact":"seed","state":"seed","n":"seed"},"name":"add","transplant":{"sourceCode":"if (int >= (int - 1)) {\n    int = 190;\n    break;\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:2027","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Random.setSeed(((long)(int)))","position":"org.apache.commons.math3.random.JDKRandomGenerator:35","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (double == (-1)) {\n    return java.lang.Double.double;\n} ","position":"org.apache.commons.math3.util.FastMath:1364","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.tanh(double)","position":"org.apache.commons.math3.analysis.function.Tanh:36","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"java.math.BigDecimal.ONE":"tmp1"},"name":"replace","transplant":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:91","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.subtract(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:152","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"pa":"java.math.BigDecimal.ONE","pma":"tmp2"},"name":"replace","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:123","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.java.math.BigDecimal.subtract(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:177","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"work1":"v","work3":"v","diag":"v","dxNorm":"f","solvedCols":"index","permutation":"base"},"name":"replace","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    int int = int[][int];\n    double[][int] = ((double[][int]) * (double[][int])) / double;\n}","position":"org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:735","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int > 0) {\n    final int int = org.apache.commons.math3.random.HaltonSequenceGenerator.scramble(int, int, int[][int], (int % (int[][int])));\n    double[][int] += double * int;\n    int /= int[][int];\n    double /= int[][int];\n}","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:132","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+1.2736636153072213E-90","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2096","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][1] = (((double[][][2][0]) * (double[][][0][1])) + ((double[][][2][1]) * (double[][][1][1]))) + ((double[][][2][2]) * (double[][][2][1]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:215","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"step":"c23"},"name":"replace","transplant":{"sourceCode":"final double double = double / 2.0","position":"org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator:250","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:132","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.math3.linear.ArrayRealVector:814","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.math3.optim.OptimizationData[][int]) instanceof org.apache.commons.math3.optim.MaxEval) {\n    org.apache.commons.math3.optim.OptimizationData[][int] = null;\n    int = int;\n} ","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:147","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:194","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 31 + org.apache.commons.math3.util.MathUtils.(org.apache.commons.math3.util.MathUtils.hash(org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean()))","position":"org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics:395","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((double[].int) == 0) {\n    throw new org.apache.commons.math3.exception.NoDataException();\n} ","position":"org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:153","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    final double double = double[][][0][int];\n    final double double = double[][][1][int];\n    final double double = double[][][2][int];\n    final double double = double[][][3][int];\n    double[][int] = double + (double * (double + (double * ((double * double) + (double * double)))));\n    double[][int] = ((double * double) + (double * double)) + (double * double);\n    if ((int) > 3) {\n        double double = 0;\n        double double = double[][][int][int];\n        for (int int = (int) - 1 ; int > 3 ; --int) {\n            final double double = 1.0 / (int - 3);\n            double = double * ((double * double) + double);\n            double = (double[][][int][int]) + ((double * double) * double);\n        }\n        double[][int] += double * double;\n        double[][int] += ((double * double) + (double * double)) / (double);\n    } \n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:330","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double[].int , 2)","position":"org.apache.commons.math3.stat.correlation.SpearmansCorrelation:168","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:113","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:167","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.pairedT(double[], double[])","position":"org.apache.commons.math3.stat.inference.TestUtils:112","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"index":"length","parameters":"length"},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NumberIsTooLargeException(int , int , false)","position":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure:122","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(T[].int , int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:440","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = 0.75 * double","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:99","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.util.Incrementor.incrementCount()","position":"org.apache.commons.math3.optim.BaseOptimizer:203","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[].clone()","position":"org.apache.commons.math3.optimization.SimpleBounds:62","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"double[][] = new double[int][int]","position":"org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer:285","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][] = new double[double[][].int][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:289","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.math3.fitting.WeightedObservedPoint org.apache.commons.math3.fitting.WeightedObservedPoint = org.apache.commons.math3.fitting.WeightedObservedPoint[][int]","position":"org.apache.commons.math3.fitting.GaussianCurveFitter:388","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = 2 * double","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:103","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.stat.regression.RegressionResults.ADJRSQ_IDX":"index","globalFitInfo":"points"},"name":"add","transplant":{"sourceCode":"return this.double[][int]","position":"org.apache.commons.math3.stat.regression.RegressionResults:380","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[][int]","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:161","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:323","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.text.NumberFormat java.text.NumberFormat = java.text.NumberFormat.java.text.NumberFormat.getNumberInstance(java.util.Locale)","position":"org.apache.commons.math3.fraction.AbstractFormat:92","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.NumberFormat java.text.NumberFormat = org.apache.commons.math3.util.CompositeFormat.org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(java.util.Locale)","position":"org.apache.commons.math3.complex.ComplexFormat:331","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.util.MultidimensionalCounter:265","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-2","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:107","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:476","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"high":"i","index":"i"},"name":"add","transplant":{"sourceCode":"if (int > int) {\n    int = int;\n} ","position":"org.apache.commons.math3.ode.ContinuousOutputModel:316","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Double.java.lang.Double.isInfinite(double[][int])) {\n    org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.LowerBoundMapper(double[][int]);\n} else {\n    org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.LowerUpperBoundMapper(double[][int] , double[][int]);\n}","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:127","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.stat.inference.TTest.checkSampleData(double[])","position":"org.apache.commons.math3.stat.inference.TTest:317","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = (((((org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double) * double) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double) * double)) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double) * double)) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double) * double)) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double) * double)","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:191","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"nordsieckTmp":"nordsieck","nordsieck":"nordsieck"},"name":"add","transplant":{"sourceCode":"this.org.apache.commons.math3.linear.Array2DRowRealMatrix = org.apache.commons.math3.linear.Array2DRowRealMatrix","position":"org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator:284","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.Array2DRowRealMatrix = ((org.apache.commons.math3.linear.Array2DRowRealMatrix)(java.io.ObjectInput.readObject()))","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:279","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = (double) / 2","position":"org.apache.commons.math3.distribution.FDistribution:146","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.math3.optim.OptimizationData[][int] = new org.apache.commons.math3.optim.MaxEval((int - (int)));\n    double[] double[] = null;\n    if (int == 0) {\n        double[] = double[];\n    } else {\n        int int = 0;\n        while (double[] == null) {\n            if ((int++) >= org.apache.commons.math3.optim.BaseOptimizer<PAIR>.(getMaxEvaluations())) {\n                throw new org.apache.commons.math3.exception.TooManyEvaluationsException(org.apache.commons.math3.optim.BaseOptimizer<PAIR>.getMaxEvaluations());\n            } \n            double[] = org.apache.commons.math3.random.RandomVectorGenerator.nextVector();\n            for (int int = 0 ; (double[] != null) && (int < (double[].int)) ; ++int) {\n                if (((double[] != null) && ((double[][int]) < (double[][int]))) || ((double[] != null) && ((double[][int]) > (double[][int])))) {\n                    double[] = null;\n                } \n            }\n        }\n    }\n    org.apache.commons.math3.optim.OptimizationData[][int] = new org.apache.commons.math3.optim.InitialGuess(double[]);\n    final PAIR PAIR = org.apache.commons.math3.optim.BaseMultivariateOptimizer<PAIR>.optimize(org.apache.commons.math3.optim.OptimizationData[]);\n    org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer<PAIR>.store(PAIR);\n} catch (java.lang.RuntimeException java.lang.RuntimeException) {\n    java.lang.RuntimeException = java.lang.RuntimeException;\n}","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:176","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixPreservingVisitor.visit(int, int, double[][int])","position":"org.apache.commons.math3.linear.BlockRealMatrix:1384","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    double[][int] = double[][][int][int];\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:234","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[].int","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:186","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!boolean) {\n    if ((java.util.Collection<org.apache.commons.math3.stat.descriptive.SummaryStatistics>.size()) < 2) {\n        throw new org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , java.util.Collection<org.apache.commons.math3.stat.descriptive.SummaryStatistics>.size() , 2);\n    } \n    for (final org.apache.commons.math3.stat.descriptive.SummaryStatistics org.apache.commons.math3.stat.descriptive.SummaryStatistics : java.util.Collection<org.apache.commons.math3.stat.descriptive.SummaryStatistics>) {\n        if ((org.apache.commons.math3.stat.descriptive.SummaryStatistics.getN()) <= 1) {\n            throw new org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , ((int)(org.apache.commons.math3.stat.descriptive.SummaryStatistics.getN())) , 2);\n        } \n    }\n} ","position":"org.apache.commons.math3.stat.inference.OneWayAnova:279","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[][] double[][] = org.apache.commons.math3.linear.Array2DRowRealMatrix.double[][]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:228","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:197","failures":[],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = 1 - double","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:90","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:250","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T T = T.subtract(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()).abs()","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:822","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double = (double[][int]) * ((double[][int]) - (double[][int]))","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:175","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][int]) < (double[][int])) {\n    double = (double[][int]) * ((double[][int]) - (double[][int]));\n} else if ((double[][int]) > (double[][int])) {\n    double = (double[][int]) * ((double[][int]) - (double[][int]));\n} else {\n    double = 0;\n}","position":"org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter:170","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((long[].int) != (long[].int)) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(long[].int , long[].int);\n} ","position":"org.apache.commons.math3.stat.inference.GTest:355","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:292","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"theta":"exp","hTheta":"exp"},"name":"add","transplant":{"sourceCode":"final double double = double * (double * (((-5.0) / 16.0) + ((double * 5.0) / 12.0)))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:86","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = 1 / (1 + double)","position":"org.apache.commons.math3.analysis.function.Sigmoid:189","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.random.AbstractWell.this(int, int, int, int, new int[]{ ((int)(long >>> 32)) , ((int)(long & 4294967295L)) })","position":"org.apache.commons.math3.random.AbstractWell:132","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double = double + double","position":"org.apache.commons.math3.util.FastMath:1774","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] double[] = new double[(org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()) + 1]","position":"org.apache.commons.math3.analysis.function.HarmonicOscillator:168","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"nfm":"nRows","trustRegionCenterInterpolationPointIndex":"length","n":"length"},"name":"add","transplant":{"sourceCode":"if ((this.int) == int) {\n    this.int = int - int;\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:1716","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.lang.System.java.lang.System.arraycopy(T[][][int], 0, T[][][int], 0, T[][][int].int);\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:594","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == (java.lang.String.length())) {\n    break;\n} ","position":"org.apache.commons.math3.dfp.Dfp:441","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal((int + 1) , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:101","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+1.772256261139753E-144","position":"org.apache.commons.math3.util.FastMathLiteralArrays:449","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.computeCoefficients();\n} ","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:160","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.geometry.euclidean.threed.SubLine.this(org.apache.commons.math3.geometry.euclidean.threed.Segment.getLine(), org.apache.commons.math3.geometry.euclidean.threed.SubLine.org.apache.commons.math3.geometry.euclidean.threed.SubLine.buildIntervalSet(org.apache.commons.math3.geometry.euclidean.threed.Segment.getStart(), org.apache.commons.math3.geometry.euclidean.threed.Segment.getEnd()))","position":"org.apache.commons.math3.geometry.euclidean.threed.SubLine:64","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = T[][][0].int","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:345","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(0, 1, 0));\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(0, 0, 1));\n    if (((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().getReal()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().getReal()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(true);\n    } \n    return org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.buildArray(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().negate().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY()), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().asin(), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().negate().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ()));\n} else if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(1, 0, 0));\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(0, 0, 1));\n    if (((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().getReal()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().getReal()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(true);\n    } \n    return org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.buildArray(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX()), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().asin().negate(), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ()));\n} else if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(1, 0, 0));\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(1, 0, 0));\n    if (((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().getReal()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().getReal()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(false);\n    } \n    return org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.buildArray(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ().negate()), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().acos(), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ()));\n} else if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(1, 0, 0));\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(1, 0, 0));\n    if (((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().getReal()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().getReal()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(false);\n    } \n    return org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.buildArray(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY()), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().acos(), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().negate()));\n} else if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(0, 1, 0));\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(0, 1, 0));\n    if (((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().getReal()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().getReal()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(false);\n    } \n    return org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.buildArray(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ()), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().acos(), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ().negate()));\n} else if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(0, 1, 0));\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(0, 1, 0));\n    if (((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().getReal()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().getReal()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(false);\n    } \n    return org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.buildArray(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().negate()), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().acos(), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX()));\n} else if (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder == (org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.org.apache.commons.math3.geometry.euclidean.threed.RotationOrder)) {\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(0, 0, 1));\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(0, 0, 1));\n    if (((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ().getReal()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ().getReal()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(false);\n    } \n    return org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.buildArray(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().negate()), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ().acos(), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY()));\n} else {\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(0, 0, 1));\n    final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T> = org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.applyInverseTo(org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.vector(0, 0, 1));\n    if (((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ().getReal()) < (-0.9999999999)) || ((org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ().getReal()) > 0.9999999999)) {\n        throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(false);\n    } \n    return org.apache.commons.math3.geometry.euclidean.threed.FieldRotation<T>.buildArray(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX()), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ().acos(), org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getY().atan2(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getX().negate()));\n}","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:558","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.setData(org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getDataRef())","position":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:277","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double[] = double[]","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:408","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.math3.util.Pair<java.lang.Double, T>.getFirst()) < 0) {\n    throw new org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.util.Pair<java.lang.Double, T>.getFirst());\n} ","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:77","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][0] += double","position":"org.apache.commons.math3.analysis.function.Sigmoid:211","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+0.0","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5104","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    double[][int] = org.apache.commons.math3.linear.RealMatrixChangingVisitor.visit(int, int, double[][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:400","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"double double = -1.0","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:439","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = 1.0 / (int - 3)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:343","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node = this ; (org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node.org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node) != null ; org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node = org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node.org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node) {\n    if (org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node != (org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node.org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node.org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node)) {\n        return org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node.org.apache.commons.math3.geometry.partitioning.utilities.AVLTree<T>.Node;\n    } \n}","position":"org.apache.commons.math3.geometry.partitioning.utilities.AVLTree:309","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int].int , int)","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:198","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:374","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"r":"x","n":"length"},"name":"replace","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    double[][int] = -(double[][int]);\n}","position":"org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:199","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double += double[][int];\n}","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:140","type":"CtForImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.random.HaltonSequenceGenerator:157","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = (java.math.BigDecimal.compareTo(java.math.BigDecimal)) <= 0","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:139","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"java.lang.Double.POSITIVE_INFINITY":"x","x":"x"},"name":"add","transplant":{"sourceCode":"if ((double * double) < 1.0) {\n    return double;\n} else {\n    return 0.0;\n}","position":"org.apache.commons.math3.util.FastMath:1534","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.cos(double)","position":"org.apache.commons.math3.analysis.function.Cos:36","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (double < (org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double)) {\n    double = (double - double) / double;\n} else {\n    double = double / (double + double);\n}","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:1926","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:166","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"interpolator":"interpolator","nordsieck":"nordsieck"},"name":"add","transplant":{"sourceCode":"org.apache.commons.math3.linear.Array2DRowRealMatrix = new org.apache.commons.math3.linear.Array2DRowRealMatrix(org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef() , true)","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:90","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.reinitialize(double, double, double[], org.apache.commons.math3.linear.Array2DRowRealMatrix)","position":"org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator:217","type":"CtInvocationImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int][int].int , int)","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:243","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Enumerate for the location of a point with respect to the region.\n */\npublic static enum Location {\nINSIDE, OUTSIDE, BOUNDARY;}","position":"org.apache.commons.math3.geometry.partitioning.Region:50","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:515","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"maxIterations":"j","iterations":"j"},"name":"replace","transplant":{"sourceCode":"if ((++int) > int) {\n    throw new org.apache.commons.math3.exception.MaxCountExceededException(int);\n} ","position":"org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:131","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:515","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = int","position":"org.apache.commons.math3.linear.SchurTransformer:243","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(double)","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:253","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return double[] == null ? null : double[].clone()","position":"org.apache.commons.math3.optim.PointValuePair:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[].clone()","position":"org.apache.commons.math3.optimization.SimpleBounds:62","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"householderVectors":"polynomials","h":"polynomials","m":"dimension"},"name":"replace","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    if (int > 0) {\n        double[][][int][(int - 1)] = this.double[][][int][(int - 1)];\n    } \n    for (int int = int ; int < int ; ++int) {\n        double[][][int][int] = this.double[][][int][int];\n    }\n}","position":"org.apache.commons.math3.linear.HessenbergTransformer:147","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int <= (int) ; ++int) {\n    for (int int = 0 ; int < int ; ++int) {\n        double[][][int][int] = java.io.ObjectInput.readDouble();\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:395","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"-2.607907890164073E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5676","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][1] = double[][][1][0]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:339","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int <= int) {\n    throw new org.apache.commons.math3.exception.NumberIsTooSmallException(int , int , false);\n} ","position":"org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression:122","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][][int][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:543","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"double double = 1.0 / (double - (double * double))","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:908","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (((-3) * double) + double)","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:105","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"maxIterations":"columns"},"name":"replace","transplant":{"sourceCode":"if (int < 1) {\n    throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(int);\n} ","position":"org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:137","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    double[][int] = org.apache.commons.math3.linear.RealMatrixChangingVisitor.visit(int, int, double[][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:400","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.List<T>.add(T)","position":"org.apache.commons.math3.ml.clustering.Cluster:50","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.math3.ml.clustering.Cluster<T>>.add(org.apache.commons.math3.ml.clustering.DBSCANClusterer<T>.expandCluster(org.apache.commons.math3.ml.clustering.Cluster<T>, T, java.util.List<T>, java.util.Collection<T>, java.util.Map<org.apache.commons.math3.ml.clustering.Clusterable, org.apache.commons.math3.ml.clustering.DBSCANClusterer.PointStatus>))","position":"org.apache.commons.math3.ml.clustering.DBSCANClusterer:151","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int < (int[].int)) && ((int[][int]) >= 0)) {\n    int = int[][int];\n} else {\n    int = org.apache.commons.math3.stat.descriptive.rank.Percentile.partition(double[], int, int, org.apache.commons.math3.stat.descriptive.rank.Percentile.medianOf3(double[], int, int));\n    if (int < (int[].int)) {\n        int[][int] = int;\n    } \n}","position":"org.apache.commons.math3.stat.descriptive.rank.Percentile:327","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] = 1","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:182","type":"CtAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:104","failures":[],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+2.2678858131411216E-256","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1714","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][2] += ((double[][0]) * (double[][][2][2])) + ((double[][2]) * (double[][][2][2]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:232","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+0.40871500968933105","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5621","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.analysis.differentiation.DerivativeStructure org.apache.commons.math3.analysis.differentiation.DerivativeStructure = org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])","position":"org.apache.commons.math3.analysis.differentiation.GradientFunction:51","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp.newInstance(((byte)(1)), org.apache.commons.math3.dfp.Dfp.byte))","position":"org.apache.commons.math3.dfp.DfpMath:548","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][0] = (double * double) / (double * double)","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:269","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+1.61949812578045E-182","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1883","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][2] = ((double[][][0][0]) * (double[][][0][2])) + ((double[][][2][0]) * (double[][][2][2]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:210","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(this, ((int + int) - 1))","position":"org.apache.commons.math3.linear.AbstractRealMatrix:438","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, int, int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:314","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{}}]
