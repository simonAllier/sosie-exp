[{"failures":[],"variableMapping":{"rHessian":"subMatrix"},"name":"replace","transplant":{"sourceCode":"double[][] = new double[3][3]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:302","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][] = new double[double[][].int][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:289","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.checkOrder(double[])","position":"org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator:92","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double - 0.5","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:322","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(int , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:144","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(((2 * int) + 1) , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:99","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.9674885272979736","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3737","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:364","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double /= int[][int]","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:136","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    for (int int = 0 ; int < int ; ++int) {\n        org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][][int][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:542","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.math3.geometry.partitioning.BoundaryAttribute<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> org.apache.commons.math3.geometry.partitioning.BoundaryAttribute<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D> = ((org.apache.commons.math3.geometry.partitioning.BoundaryAttribute<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>)(org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>.getAttribute()))","position":"org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:820","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.geometry.euclidean.twod.Vector2D org.apache.commons.math3.geometry.euclidean.twod.Vector2D = new org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double , double)","position":"org.apache.commons.math3.geometry.euclidean.twod.Segment:108","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double[] double[] = org.apache.commons.math3.stat.inference.MannWhitneyUTest.concatenateSamples(double[], double[])","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:131","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.stat.inference.MannWhitneyUTest.mannWhitneyU(double[], double[])","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:228","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.stat.inference.TTest.tTest(org.apache.commons.math3.stat.StatUtils.org.apache.commons.math3.stat.StatUtils.mean(double[]), double, org.apache.commons.math3.stat.StatUtils.org.apache.commons.math3.stat.StatUtils.variance(double[]), double[].int)","position":"org.apache.commons.math3.stat.inference.TTest:451","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = int >= int ? double[] : double[]","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:96","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumerate representing the location of an element with respect to an\n * {@link Hyperplane hyperplane} of a space.\n * @version $Id$\n * @since 3.0\n */\npublic enum Side {\nPLUS, MINUS, BOTH, HYPER;}","position":"org.apache.commons.math3.geometry.partitioning.Side:24","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.math3.optim.OptimizationData[][int]) instanceof org.apache.commons.math3.optim.MaxEval) {\n    org.apache.commons.math3.optim.OptimizationData[][int] = null;\n    int = int;\n} ","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:147","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = -1","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1822","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:263","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.math3.util.FastMath:613","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:335","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(int, double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:845","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (4 * double) * double","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:101","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][][int][int] = (double * (double[][][int][int])) - (double * double)","position":"org.apache.commons.math3.linear.SchurTransformer:188","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] double[] = new double[double[].int]","position":"org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator:84","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = org.apache.commons.math3.geometry.euclidean.threed.Plane.org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()","position":"org.apache.commons.math3.geometry.euclidean.threed.Plane:352","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.util.Incrementor.resetCount()","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:133","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs(double)) < double) || (org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs(double)) <= org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs(double)))) {\n    double = double;\n    double = double;\n} else {\n    double double = double / double;\n    double double;\n    double double;\n    if (double == double) {\n        double = (2 * double) * double;\n        double = 1 - double;\n    } else {\n        double = double / double;\n        final double double = double / double;\n        double = double * ((((2 * double) * double) * (double - double)) - ((double - double) * (double - 1)));\n        double = ((double - 1) * (double - 1)) * (double - 1);\n    }\n    if (double > 0) {\n        double = -double;\n    } else {\n        double = -double;\n    }\n    double = double;\n    double = double;\n    if ((double >= (((1.5 * double) * double) - org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs((double * double))))) || (double >= org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.abs(((0.5 * double) * double))))) {\n        double = double;\n        double = double;\n    } else {\n        double = double / double;\n    }\n}","position":"org.apache.commons.math3.analysis.solvers.BrentSolver:173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:90","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"+8.223012393018281E36","position":"org.apache.commons.math3.util.FastMathLiteralArrays:865","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double -= (double[][][int][int]) * (double[][][int][(int - int)])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:112","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((char[][int]) >= '1') && ((char[][int]) <= '9')) {\n    boolean = false;\n} ","position":"org.apache.commons.math3.dfp.DfpField:540","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (3 * double) * double","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:109","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:259","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"beta","org.apache.commons.math3.distribution.ExponentialDistribution.EXPONENTIAL_SA_QI":"hK"},"name":"add","transplant":{"sourceCode":"double += double[][0]","position":"org.apache.commons.math3.distribution.ExponentialDistribution:227","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] += (-double) * (double[][int])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:198","type":"CtOperatorAssignmentImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:167","failures":[],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * This enumeration defines the various types of normalizations that can be\n * applied to discrete cosine transforms (DCT). The exact definition of these\n * normalizations is detailed below.\n * \n * @see FastCosineTransformer\n * @version $Id$\n * @since 3.0\n */\npublic enum DctNormalization {\nSTANDARD_DCT_I, ORTHOGONAL_DCT_I;}","position":"org.apache.commons.math3.transform.DctNormalization:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.checkInterpolation()","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:172","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"T[][int] = T[][int].add(T[][int].multiply(T[][(int - 1)]))","position":"org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator:201","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][(int + 1)] -= double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:298","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = ((double[][0]) - double) + (double[][1])","position":"org.apache.commons.math3.util.FastMath:1409","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint(org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> , org.apache.commons.math3.geometry.partitioning.Region<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>)","position":"org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint:52","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((double[].int) == 0) {\n    throw new org.apache.commons.math3.exception.NoDataException();\n} ","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:124","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; int++) {\n    double[][int] = ((double[][int]) * double) + double;\n    double[][int] *= double;\n}","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:163","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = int","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:170","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.ode.EquationsMapper.insertEquationData(org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedSecondaryDerivatives(int), double[][][int])","position":"org.apache.commons.math3.ode.MultistepIntegrator:384","type":"CtInvocationImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:155","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.optim.BaseOptimizer<org.apache.commons.math3.optim.PointValuePair>.getConvergenceChecker()","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:443","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.subtract(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:137","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Specification for indicating that some operation applies\n * before or after a given index.\n */\npublic static enum Position {\nHEAD, TAIL;}","position":"org.apache.commons.math3.util.MathArrays:1433","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.util.Incrementor.setMaximalCount(int)","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:132","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+1.3856534957885742","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3378","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:495","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[] == null) || (double[] == null)) {\n    throw new org.apache.commons.math3.exception.NullArgumentException();\n} ","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:78","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+0.31204116344451904","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5479","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][0] = ((double[][][0][2]) * (double[][][0][0])) + ((double[][][2][2]) * (double[][][2][0]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:221","type":"CtAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.genetics.FixedGenerationCount:59","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-2.4006971787803736E189","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2739","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = org.apache.commons.math3.genetics.GeneticAlgorithm.org.apache.commons.math3.genetics.GeneticAlgorithm.getRandomGenerator().nextInt(org.apache.commons.math3.genetics.BinaryChromosome.getLength())","position":"org.apache.commons.math3.genetics.BinaryMutation:49","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int >= int) {\n    throw new org.apache.commons.math3.exception.NumberIsTooLargeException(int , int , false);\n} ","position":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure:121","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < int) {\n    char char;\n    do {\n        char = java.lang.String.charAt(int++);\n    } while (java.lang.Character.(java.lang.Character.isWhitespace(char)) && (int < int) );\n    java.text.ParsePosition.setIndex(int);\n    if (int < int) {\n        char = char;\n    } \n} ","position":"org.apache.commons.math3.fraction.AbstractFormat:162","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"for (int int = 1 ; int < int ; int++) {\n    double = (2.0 * ((double[][(int + 1)]) - (double[][(int - 1)]))) - ((double[][(int - 1)]) * (double[][(int - 1)]));\n    double[][int] = (double[][int]) / double;\n    double[][int] = (((3.0 * ((((double[][(int + 1)]) * (double[][(int - 1)])) - ((double[][int]) * ((double[][(int + 1)]) - (double[][(int - 1)])))) + ((double[][(int - 1)]) * (double[][int])))) / ((double[][(int - 1)]) * (double[][int]))) - ((double[][(int - 1)]) * (double[][(int - 1)]))) / double;\n}","position":"org.apache.commons.math3.analysis.interpolation.SplineInterpolator:95","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double != 0.0) {\n    double[][(int + 1)] -= double;\n    for (int int = int + 1 ; int < int ; ++int) {\n        final double[] double[] = double[][][int];\n        double double = 0;\n        for (int int = int + 1 ; int < int ; ++int) {\n            double -= (double[][int]) * (double[][int]);\n        }\n        double /= double * (double[][(int + 1)]);\n        for (int int = int + 1 ; int < int ; ++int) {\n            double[][int] -= double * (double[][int]);\n        }\n    }\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:297","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:318","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+2.0624330192486066E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5626","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.optim.univariate.SearchInterval:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.math3.geometry.euclidean.twod.Vector2D == null) && (!boolean)) {\n    throw new org.apache.commons.math3.exception.MathInternalError();\n} ","position":"org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:735","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double != 0.0) {\n    double[][(int + 1)] -= double;\n    for (int int = int + 1 ; int < int ; ++int) {\n        final double[] double[] = double[][][int];\n        double double = 0;\n        for (int int = int + 1 ; int < int ; ++int) {\n            double -= (double[][int]) * (double[][int]);\n        }\n        double /= double * (double[][(int + 1)]);\n        for (int int = int + 1 ; int < int ; ++int) {\n            double[][int] -= double * (double[][int]);\n        }\n    }\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:297","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:214","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][][][int][int].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int][int].int , int);\n} ","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:236","type":"CtIfImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:167","failures":[],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{"index":"index","parameters":"weights"},"name":"add","transplant":{"sourceCode":"return this.double[][int]","position":"org.apache.commons.math3.stat.regression.RegressionResults:157","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[][int]","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:128","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * This enumeration defines the various types of normalizations that can be\n * applied to discrete Fourier transforms (DFT). The exact definition of these\n * normalizations is detailed below.\n * \n * @see FastFourierTransformer\n * @version $Id$\n * @since 3.0\n */\npublic enum DftNormalization {\nSTANDARD, UNITARY;}","position":"org.apache.commons.math3.transform.DftNormalization:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final double[] double[] = double[][][int];\n    final double[] double[] = org.apache.commons.math3.linear.Array2DRowRealMatrix.double[][][int];\n    final double[] double[] = double[][][int];\n    for (int int = 0 ; int < int ; int++) {\n        double[][int] = (double[][int]) + (double[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:170","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Specification for indicating that some operation applies\n * before or after a given index.\n */\npublic static enum Position {\nHEAD, TAIL;}","position":"org.apache.commons.math3.util.MathArrays:1433","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][][][int][int].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int][int].int , int);\n} ","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:233","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = org.apache.commons.math3.distribution.PascalDistribution.getNumberOfSuccesses()","position":"org.apache.commons.math3.distribution.PascalDistribution:181","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(this, org.apache.commons.math3.linear.Array2DRowRealMatrix)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:165","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer<FUNC>.parseOptimizationData(org.apache.commons.math3.optimization.OptimizationData[])","position":"org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:202","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.calculateAbsoluteDifferences(double[])","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:180","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1820","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:168","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+0.42544645071029663","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5647","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][(int + 1)] -= double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:298","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"coeffDot3","c":"coeffDot3","t":"coeffDot3"},"name":"replace","transplant":{"sourceCode":"double double = -((double - double) - double)","position":"org.apache.commons.math3.util.FastMath:1769","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * ((4 * double) - 5)) + 1","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:100","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"samples":"list"},"name":"replace","transplant":{"sourceCode":"return java.util.List<org.apache.commons.math3.util.Pair<T, java.lang.Double>>","position":"org.apache.commons.math3.distribution.EnumeratedDistribution:180","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<org.apache.commons.math3.util.Pair<java.lang.Double, T>>","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:162","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:170","type":"CtAssignmentImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:119","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][][][int].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int].int , int);\n} ","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:197","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<java.lang.Integer>.add(org.apache.commons.math3.stat.ranking.NaturalRanking.IntDoublePair[][int].getPosition())","position":"org.apache.commons.math3.stat.ranking.NaturalRanking:243","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.apache.commons.math3.linear.RealMatrix = new org.apache.commons.math3.linear.Array2DRowRealMatrix(double[][])","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:70","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final T[] T[] = org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.buildArray(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField(), int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:422","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.linear.FieldMatrix<T> org.apache.commons.math3.linear.FieldMatrix<T> = org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.createFieldMatrix(T[][0].getField(), int, 1)","position":"org.apache.commons.math3.linear.MatrixUtils:369","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int >= ((int) - 1)) {\n    break generationLoop;\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:458","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[][]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:263","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.io.ObjectOutput.writeBoolean(true)","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:237","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[], (int * int), double[], int, int)","position":"org.apache.commons.math3.linear.BlockRealMatrix:1087","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"+1.3106298446655273","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3321","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][1] = (((double[][][0][1]) * (double[][][0][1])) + ((double[][][1][1]) * (double[][][1][1]))) + ((double[][][2][1]) * (double[][][2][1]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:222","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final double double = double[][int];\n    final double double = double[][int];\n    if (double < double) {\n        throw new org.apache.commons.math3.exception.NumberIsTooSmallException(double , double , true);\n    } \n}","position":"org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:282","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    org.apache.commons.math3.stat.descriptive.moment.Mean[][int].increment(double[][int]);\n}","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:56","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double += double[][int];\n}","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:140","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"q0":"rho2","normProduct":"rho2"},"name":"add","transplant":{"sourceCode":"double double = 1.0 / ((2.0 * double) * double)","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:349","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double + double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:291","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+5.4679180659102885E135","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2615","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:90","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double = double * (double - (double * double))","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1366","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getDimension()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int].int , int)","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:213","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:366","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"y0":"currentState","length":"length","y1":"interpolatedState","h":"coeffDot23","yDot0":"interpolatedState"},"name":"add","transplant":{"sourceCode":"for (int int = 0 ; int < (this.int) ; ++int) {\n    double[][int] = (double[][int]) + (double * (double[][int]));\n}","position":"org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:277","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    final double double = double[][][0][int];\n    final double double = (double[][][1][int]) + (double[][][2][int]);\n    final double double = double[][][3][int];\n    double[][int] = (((double[][int]) + (double * double)) + (double * double)) + (double * double);\n    double[][int] = ((double * double) + (double * double)) + (double * double);\n}","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:121","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0.0","position":"org.apache.commons.math3.distribution.AbstractRealDistribution:287","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrixPreservingVisitor.end()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:455","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:229","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.7991060813894693E185","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2729","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:152","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = 1 + (double * (((-15.0) / 2.0) + (double * (16.0 - (10.0 * double)))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:74","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:395","failures":[],"name":"inlineConstant","type":"mutation","nodeType":"CtLocalVariableImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((double > 0) || ((1 / double) > 0)) {\n    return (java.lang.Math.double) * (org.apache.commons.math3.util.FastMath.double);\n} ","position":"org.apache.commons.math3.util.FastMath:2659","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final double double = 1.0","position":"org.apache.commons.math3.util.FastMath:1731","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:249","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(double[].int , double[].int)","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:67","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new double[]{ 0 }","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunction:266","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.optimization.fitting.HarmonicFitter.fit(new org.apache.commons.math3.optimization.fitting.HarmonicFitter.ParameterGuesser(org.apache.commons.math3.optimization.fitting.CurveFitter<org.apache.commons.math3.analysis.function.HarmonicOscillator.Parametric>.getObservations()).guess())","position":"org.apache.commons.math3.optimization.fitting.HarmonicFitter:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:291","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor:43","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+1.664279766968299E-81","position":"org.apache.commons.math3.util.FastMathLiteralArrays:594","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double += double * double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:267","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = double[].int","position":"org.apache.commons.math3.linear.SingularValueDecomposition:578","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:369","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage()","position":"org.apache.commons.math3.exception.MathArithmeticException:75","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.exception.util.ExceptionContext.getMessage()","position":"org.apache.commons.math3.exception.MathArithmeticException:69","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((double[][][][int].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int].int , int);\n} ","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:200","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.fitting.WeightedObservedPoint:75","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.math3.linear.ArrayRealVector(double[] , false)","position":"org.apache.commons.math3.linear.AbstractRealMatrix:704","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int][int].int , int)","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:240","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"randomGenerator":"randomGenerator"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.math3.random.RandomGenerator.nextInt()","position":"org.apache.commons.math3.random.RandomAdaptor:143","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.random.RandomGenerator.nextInt(int)","position":"org.apache.commons.math3.random.RandomAdaptor:159","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"theta":"coeffDot3","hTheta":"coeffDot3"},"name":"replace","transplant":{"sourceCode":"final double double = double * (double * ((-22.0) + (double * ((152.0 / 3.0) + (double * (-30.0))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:84","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (5 - (6 * double))","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:101","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.UpperBoundMapper(double[][int])","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:124","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.UpperBoundMapper(double[][int])","position":"org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter:123","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = int","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:893","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction org.apache.commons.math3.optim.linear.LinearObjectiveFunction = ((org.apache.commons.math3.optim.linear.LinearObjectiveFunction)(java.lang.Object))","position":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction:115","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = double[].int","position":"org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:196","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:479","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Strategies for handling tied values in rank transformations.\n * <ul>\n * <li>SEQUENTIAL - Ties are assigned ranks in order of occurrence in the original array,\n * for example (1,3,4,3) is ranked as (1,2,4,3)<\/li>\n * <li>MINIMUM - Tied values are assigned the minimum applicable rank, or the rank\n * of the first occurrence. For example, (1,3,4,3) is ranked as (1,2,4,2)<\/li>\n * <li>MAXIMUM - Tied values are assigned the maximum applicable rank, or the rank\n * of the last occurrence. For example, (1,3,4,3) is ranked as (1,3,4,3)<\/li>\n * <li>AVERAGE - Tied values are assigned the average of the applicable ranks.\n * For example, (1,3,4,3) is ranked as (1,2.5,4,2.5)<\/li>\n * <li>RANDOM - Tied values are assigned a random integer rank from among the\n * applicable values. The assigned rank will always be an integer, (inclusively)\n * between the values returned by the MINIMUM and MAXIMUM strategies.<\/li>\n * <\/ul>\n * \n * @since 2.0\n * @version $Id$\n */\npublic enum TiesStrategy {\nSEQUENTIAL, MINIMUM, MAXIMUM, AVERAGE, RANDOM;}","position":"org.apache.commons.math3.stat.ranking.TiesStrategy:39","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn(double[][])","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:103","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Collection<org.apache.commons.math3.ode.sampling.StepHandler>.clear()","position":"org.apache.commons.math3.ode.AbstractIntegrator:119","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = int","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:112","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    double double = 0;\n    for (int int = 0 ; int < int ; ++int) {\n        double += org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.abs(double[][((int * int) + int)]);\n    }\n    double[][int] += double;\n}","position":"org.apache.commons.math3.linear.BlockRealMatrix:634","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.distance(double[], double[])","position":"org.apache.commons.math3.ml.distance.EuclideanDistance:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((double[][0]) * (double[][1])) < 0) {\n    int = 2;\n    int = 1;\n} else {\n    double[][2] = org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver<org.apache.commons.math3.analysis.UnivariateFunction>.computeObjectiveValue(double[][2]);\n    if (org.apache.commons.math3.util.Precision.org.apache.commons.math3.util.Precision.equals(double[][2], 0.0, 1)) {\n        return double[][2];\n    } \n    if (((double[][1]) * (double[][2])) < 0) {\n        int = 3;\n        int = 2;\n    } else {\n        throw new org.apache.commons.math3.exception.NoBracketingException(double[][0] , double[][2] , double[][0] , double[][2]);\n    }\n}","position":"org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:145","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final double[] double[] = double[][][int];\n    double double = 0;\n    for (int int = 0 ; int < int ; int++) {\n        double += (double[][int]) * (double[][int]);\n    }\n    double[][int] = double;\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:358","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    T T = org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField().getZero();\n    for (int int = 0 ; int < int ; ++int) {\n        T = T.add(T[][][int][int].multiply(T[][int]));\n    }\n    T[][int] = T;\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:444","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"+3.102559332875688E297","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1465","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][0] = (((double[][][0][0]) * (double[][][0][0])) + ((double[][][1][0]) * (double[][][1][0]))) + ((double[][][2][0]) * (double[][][2][0]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:208","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"error1":"coeffDot2","error2":"coeffDot2"},"name":"replace","transplant":{"sourceCode":"double double = double + (0.01 * double)","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator:278","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = 1 - double","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:90","type":"CtLocalVariableImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:155","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.MathArithmeticException()","position":"org.apache.commons.math3.util.ArithmeticUtils:532","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(int[].int , int)","position":"org.apache.commons.math3.util.MultidimensionalCounter:256","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.OneWayAnova.anovaFValue(java.util.Collection<double[]>)","position":"org.apache.commons.math3.stat.inference.TestUtils:342","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = new double[]{ double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] , double[][][][int][int][int] }","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:253","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 2 ; int < (double[].int) ; ++int) {\n    double[][int] = double * (double[][(int - 2)]);\n}","position":"org.apache.commons.math3.analysis.function.HarmonicOscillator:175","type":"CtForImpl"},"status":0},{"failureDictionary":{}}]
