[{"failures":[],"variableMapping":{"tmp1":"b_j","tmp2":"b_j","mContext":"mContext"},"name":"add","transplant":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.subtract(java.math.BigDecimal, this.java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:110","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.multiply(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:108","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.stat.inference.TTest.checkSignificanceLevel(double)","position":"org.apache.commons.math3.stat.inference.TTest:182","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = 0","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:354","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"scale","org.apache.commons.math3.util.FastMath.LN_2_B":"shift","c":"scale","exp":"i"},"name":"replace","transplant":{"sourceCode":"double = double + (double * int)","position":"org.apache.commons.math3.util.FastMath:1334","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = ((double[][int]) * double) + double","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:164","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double[][][int][int] = double","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:149","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < int ; ++int) {\n    final int int = int[][int];\n    final double double = (double[][][int][int]) - (double * (double[][][int][int]));\n    double[][][int][int] = double;\n    double[][][int][int] = double;\n}","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:151","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"T = T.multiply(org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D<T>.getZ())","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:290","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = ((double[][int]) - (double[][int])) - double","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:193","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:359","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.linear.Array2DRowRealMatrix.double[][][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:172","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.fitting.WeightedObservedPoint org.apache.commons.math3.fitting.WeightedObservedPoint = org.apache.commons.math3.fitting.WeightedObservedPoint[][0]","position":"org.apache.commons.math3.fitting.HarmonicFitter:236","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:399","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return double[][int]","position":"org.apache.commons.math3.complex.RootsOfUnity:177","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.random.RandomGenerator.nextDouble()","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:114","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Collections.java.util.Collections.sort(java.util.List<org.apache.commons.math3.util.Pair<java.lang.Double, java.lang.Integer>>, java.util.Comparator<org.apache.commons.math3.util.Pair<java.lang.Double, java.lang.Integer>>)","position":"org.apache.commons.math3.util.MathArrays:725","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction:134","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.io.ObjectOutput.writeInt(int)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:372","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int <= (int) ; ++int) {\n    for (int int = 0 ; int < int ; ++int) {\n        java.io.ObjectOutput.writeDouble(double[][][int][int]);\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:373","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.doOptimize()","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.optimize(int, org.apache.commons.math3.analysis.UnivariateFunction, org.apache.commons.math3.optimization.GoalType, double, double, (double + (0.5 * (double - double))))","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:144","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    for (int int = 0 ; int < int ; ++int) {\n        org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][][int][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:542","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    final T[] T[] = T[][][int];\n    for (int int = 0 ; int < int ; ++int) {\n        T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:461","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == (-1023)) {\n    if (double == 0) {\n        return double;\n    } \n    boolean = true;\n    double *= 1.8014398509481984E16;\n    long = java.lang.Double.java.lang.Double.doubleToRawLongBits(double);\n    int = ((int)(((long >> 52) & 2047))) - 1023;\n} ","position":"org.apache.commons.math3.util.FastMath:2865","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixPreservingVisitor.start(org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(), org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(), int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:512","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+0.15359249711036682","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5274","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = T[][][0].int","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:345","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final double[] double[] = new double[(int * (int - 1)) / 2]","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:503","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = new double[int]","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:126","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (long < 0) {\n    if (long >= ((java.lang.Long.long) / long)) {\n        long = long * long;\n    } else {\n        throw new org.apache.commons.math3.exception.MathArithmeticException();\n    }\n} else if (long > 0) {\n    if (((java.lang.Long.long) / long) <= long) {\n        long = long * long;\n    } else {\n        throw new org.apache.commons.math3.exception.MathArithmeticException();\n    }\n} else {\n    long = 0;\n}","position":"org.apache.commons.math3.util.ArithmeticUtils:554","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.math3.random.RandomGenerator) != null) {\n    org.apache.commons.math3.random.RandomGenerator.setSeed(long);\n} ","position":"org.apache.commons.math3.random.RandomAdaptor:193","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator:263","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"transformationPoint":"org.apache.commons.math3.geometry.euclidean.twod.Segment:85","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"T.multiply(org.apache.commons.math3.geometry.euclidean.threed.Rotation.getQ3()).add(T.multiply(org.apache.commons.math3.geometry.euclidean.threed.Rotation.getQ0()))","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:979","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:185","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = (int) - (((int) - 1) * (org.apache.commons.math3.linear.BlockRealMatrix.int))","position":"org.apache.commons.math3.linear.BlockRealMatrix:599","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = double * (double[][(int - 2)])","position":"org.apache.commons.math3.analysis.function.HarmonicOscillator:176","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+7.041568925985714E96","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1003","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double *= double","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:158","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * (2 - (3 * double))) / (double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:327","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+8.979279989292184E-9","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5413","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.getOffset(org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D, org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>.((org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint)(getHyperplane())).getLocation())","position":"org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint:58","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"nP":"pma","tmp1":"pa"},"name":"replace","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.multiply(java.math.BigDecimal)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:174","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:123","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+0.040196798741817474","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5146","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][1] = ((-(double)) * (double)) * org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.sin(double))","position":"org.apache.commons.math3.analysis.function.HarmonicOscillator:173","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.IOException.initCause(java.lang.IllegalAccessException)","position":"org.apache.commons.math3.linear.MatrixUtils:904","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][0] = (double * double) + (double * double)","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:303","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp.getField() , double)","position":"org.apache.commons.math3.dfp.Dfp:588","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = (double - double) - double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:89","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double[].clone()","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:129","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.math3.util.OpenIntToDoubleHashMap:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final T[] T[] = T[][][int];\n    final T[] T[] = T[][][int];\n    for (int int = 0 ; int < int ; int++) {\n        T T = org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField().getZero();\n        for (int int = 0 ; int < int ; int++) {\n            T = T.add(T[][int].multiply(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.T[][][int][int]));\n        }\n        T[][int] = T;\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:295","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"scaled":"scaled","n":"length"},"name":"add","transplant":{"sourceCode":"double[] = new double[int]","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:269","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Specialized step handler storing the first step.\n */\nprivate class NordsieckInitializer implements org.apache.commons.math3.ode.sampling.StepHandler {\n    /** \n     * Steps counter.\n     */\nprivate int count;\n\n    /** \n     * First steps times.\n     */\nprivate final double[] t;\n\n    /** \n     * First steps states.\n     */\nprivate final double[][] y;\n\n    /** \n     * First steps derivatives.\n     */\nprivate final double[][] yDot;\n\n    /** \n     * Simple constructor.\n     * @param nSteps number of steps of the multistep method (excluding the one being computed)\n     * @param n problem dimension\n     */\npublic NordsieckInitializer(final int nSteps ,final int n) {\n        this.int = 0;\n        this.double[] = new double[int];\n        this.double[][] = new double[int][int];\n        this.double[][] = new double[int][int];\n    }\n\n    /** \n     * {@inheritDoc}\n     */\npublic void handleStep(org.apache.commons.math3.ode.sampling.StepInterpolator interpolator, boolean isLast) throws org.apache.commons.math3.exception.MaxCountExceededException {\n        final double double = org.apache.commons.math3.ode.sampling.StepInterpolator.getPreviousTime();\n        final double double = org.apache.commons.math3.ode.sampling.StepInterpolator.getCurrentTime();\n        if ((int) == 0) {\n            org.apache.commons.math3.ode.sampling.StepInterpolator.setInterpolatedTime(double);\n            double[][0] = double;\n            final org.apache.commons.math3.ode.ExpandableStatefulODE org.apache.commons.math3.ode.ExpandableStatefulODE = org.apache.commons.math3.ode.AbstractIntegrator.getExpandable();\n            final org.apache.commons.math3.ode.EquationsMapper org.apache.commons.math3.ode.EquationsMapper = org.apache.commons.math3.ode.ExpandableStatefulODE.getPrimaryMapper();\n            org.apache.commons.math3.ode.EquationsMapper.insertEquationData(org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedState(), double[][][int]);\n            org.apache.commons.math3.ode.EquationsMapper.insertEquationData(org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedDerivatives(), double[][][int]);\n            int int = 0;\n            for (final org.apache.commons.math3.ode.EquationsMapper org.apache.commons.math3.ode.EquationsMapper : org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers()) {\n                org.apache.commons.math3.ode.EquationsMapper.insertEquationData(org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedSecondaryState(int), double[][][int]);\n                org.apache.commons.math3.ode.EquationsMapper.insertEquationData(org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedSecondaryDerivatives(int), double[][][int]);\n                ++int;\n            }\n        } \n        ++(int);\n        org.apache.commons.math3.ode.sampling.StepInterpolator.setInterpolatedTime(double);\n        double[][int] = double;\n        final org.apache.commons.math3.ode.ExpandableStatefulODE org.apache.commons.math3.ode.ExpandableStatefulODE = org.apache.commons.math3.ode.AbstractIntegrator.getExpandable();\n        final org.apache.commons.math3.ode.EquationsMapper org.apache.commons.math3.ode.EquationsMapper = org.apache.commons.math3.ode.ExpandableStatefulODE.getPrimaryMapper();\n        org.apache.commons.math3.ode.EquationsMapper.insertEquationData(org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedState(), double[][][int]);\n        org.apache.commons.math3.ode.EquationsMapper.insertEquationData(org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedDerivatives(), double[][][int]);\n        int int = 0;\n        for (final org.apache.commons.math3.ode.EquationsMapper org.apache.commons.math3.ode.EquationsMapper : org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers()) {\n            org.apache.commons.math3.ode.EquationsMapper.insertEquationData(org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedSecondaryState(int), double[][][int]);\n            org.apache.commons.math3.ode.EquationsMapper.insertEquationData(org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedSecondaryDerivatives(int), double[][][int]);\n            ++int;\n        }\n        if ((int) == ((double[].int) - 1)) {\n            double = double[][0];\n            double = ((double[][((double[].int) - 1)]) - (double[][0])) / ((double[].int) - 1);\n            double[] = double[][][0].clone();\n            for (int int = 0 ; int < (double[].int) ; ++int) {\n                double[][int] *= double;\n            }\n            org.apache.commons.math3.linear.Array2DRowRealMatrix = org.apache.commons.math3.ode.MultistepIntegrator.initializeHighOrderDerivatives(double, double[], double[][], double[][]);\n            throw new org.apache.commons.math3.ode.MultistepIntegrator.InitializationCompletedMarkerException();\n        } \n    }\n\n    /** \n     * {@inheritDoc}\n     */\npublic void init(double t0, double[] y0, double time) {\n    }\n}","position":"org.apache.commons.math3.ode.MultistepIntegrator:341","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 1000","position":"org.apache.commons.math3.dfp.DfpDec:174","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.util.List<java.lang.Double>.size()","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:101","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"yval":"init"},"name":"add","transplant":{"sourceCode":"return new double[]{ double[][0] , double[][1] }","position":"org.apache.commons.math3.analysis.interpolation.LoessInterpolator:242","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[].clone()","position":"org.apache.commons.math3.optim.InitialGuess:45","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    for (int int = int - int ; int > 0 ; int--) {\n        double[][int] = (double[][(int - 1)]) - ((double[][int]) * (double[][int]));\n    }\n    double[][0] = (double[][int]) - ((double[][int]) * (double[][0]));\n}","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:208","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[][][0], 0, double[], 0, double[].int)","position":"org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:95","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final double double = (double[][0]) + (double[][1])","position":"org.apache.commons.math3.util.FastMathCalc:346","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = double[][int]","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:187","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < org.apache.commons.math3.analysis.differentiation.DSCompiler.(getSize()) ; ++int) {\n    double[][(int + int)] = org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.linearCombination(double, double[][(int + int)], double, double[][(int + int)], double, double[][(int + int)]);\n}","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:695","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(int , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:195","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.optimization.direct.PowellOptimizer.this(double, double, org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(double), org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(double), org.apache.commons.math3.optimization.ConvergenceChecker<org.apache.commons.math3.optimization.PointValuePair>)","position":"org.apache.commons.math3.optimization.direct.PowellOptimizer:91","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal[] java.math.BigDecimal[] = new java.math.BigDecimal[int]","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:81","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = double / double","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:917","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double < ((double) - double)) || (double > ((double) + double))) {\n    return org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location;\n} else if ((double > ((double) + double)) && (double < ((double) - double))) {\n    return org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location;\n} else {\n    return org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location;\n}","position":"org.apache.commons.math3.geometry.euclidean.oned.Interval:121","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"hiPrec":"a"},"name":"add","transplant":{"sourceCode":"if (double[] != null) {\n    double[][0] /= 2.85040095144011776E17;\n    double[][1] /= 2.85040095144011776E17;\n} ","position":"org.apache.commons.math3.util.FastMath:870","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[], double[])","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:105","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"length":"length","point":"point"},"name":"add","transplant":{"sourceCode":"final org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] org.apache.commons.math3.analysis.differentiation.DerivativeStructure[] = new org.apache.commons.math3.analysis.differentiation.DerivativeStructure[double[].int]","position":"org.apache.commons.math3.analysis.differentiation.GradientFunction:45","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[][] double[][] = new double[org.apache.commons.math3.analysis.differentiation.DerivativeStructure[].int][double[].int]","position":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:56","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1587","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.stat.ranking.NaturalRanking.rank(double[])","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:182","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"x":"n2","y":"n2"},"name":"add","transplant":{"sourceCode":"long long = ((long)(int)) + ((long)(int))","position":"org.apache.commons.math3.util.ArithmeticUtils:52","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final long long = ((long)(int)) * int","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:176","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"p":"realEigenvalues","k":"n","n":"k"},"name":"add","transplant":{"sourceCode":"if (int > 1) {\n    double[][(int - 1)] = (((int - int) + 2) * (double[][(int - 2)])) - ((int - 1) * (double[][(int - 1)]));\n} else {\n    double[][0] = 0;\n}","position":"org.apache.commons.math3.analysis.function.Sigmoid:198","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int != int) {\n    double[][int] = double[][int];\n    double[][int] = double;\n    for (int int = 0 ; int < int ; int++) {\n        double = double[][][int][int];\n        double[][][int][int] = double[][][int][int];\n        double[][][int][int] = double;\n    }\n} ","position":"org.apache.commons.math3.linear.EigenDecomposition:687","type":"CtIfImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutput.writeInt(int)","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:162","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"ret":"fx","t":"fx"},"name":"replace","transplant":{"sourceCode":"double = 0.5 * double","position":"org.apache.commons.math3.distribution.TDistribution:144","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double[][((-int) - 2)]","position":"org.apache.commons.math3.analysis.function.StepFunction:89","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-1.4286309367843356E-12","position":"org.apache.commons.math3.transform.FastFourierTransformer:98","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal[][int] = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:182","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Specification of ordering direction.\n */\npublic static enum OrderDirection {\nINCREASING, DECREASING;}","position":"org.apache.commons.math3.util.MathArrays:295","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int);\n} ","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:276","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"long++","position":"org.apache.commons.math3.util.FastMath:2097","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T T = org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField().getZero()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:299","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:100","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Double.java.lang.Double.isNaN(double)) {\n    double = 0;\n    for (int int = 0 ; int < int ; ++int) {\n        double += (double[][int]) * (double[][int]);\n    }\n} ","position":"org.apache.commons.math3.util.MathArrays:868","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.exception.MathIllegalStateException.getContext()","position":"org.apache.commons.math3.exception.ConvergenceException:49","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"ppa":"tmp2","b_j_p_1":"b_j","mContext":"mContext"},"name":"replace","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.divide(java.math.BigDecimal, this.java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.multiply(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:118","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double[][][3][int]","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:90","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][4][int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:188","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = ((((((org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double) * double) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double) * double)) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double) * double)) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double) * double)) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double) * double)) + ((org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.double) * double)","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:194","type":"CtAssignmentImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:174","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{"this":"t"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.math3.analysis.differentiation.DerivativeStructure.rootN(3)","position":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure:614","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate().add(double).multiply(double).exp().multiply(double).add(1).pow(double).reciprocal().multiply(((double) - (double))).add(double)","position":"org.apache.commons.math3.analysis.function.Logistic:226","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (!org.apache.commons.math3.util.Precision.(org.apache.commons.math3.util.Precision.equalsIncludingNaN(double[][int], double[][int]))) {\n    return false;\n} ","position":"org.apache.commons.math3.util.MathArrays:1268","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.exception.OutOfRangeException.this(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats, java.lang.Number, java.lang.Number, java.lang.Number)","position":"org.apache.commons.math3.exception.OutOfRangeException:46","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Describes the type of iteration performed by the\n * {@link #iterator() iterator}.\n */\npublic static enum IterationOrder {\nLEXICOGRAPHIC;}","position":"org.apache.commons.math3.util.Combinations:43","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.newCovarianceData(double[][])","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:61","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][int] = (double[][int]) + ((double * (double)) * (double[][][0][int]));\n}","position":"org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:87","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((double[]) != null) && (double <= 0.5)) {\n    final double double = (4 * double) * double;\n    final double double = (double * (double)) / 6.0;\n    final double double = double * ((6 - (9 * double)) + double);\n    final double double = double * ((6 * double) - double);\n    final double double = double * (((-3) * double) + double);\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        final double double = double[][][0][int];\n        final double double = (double[][][1][int]) + (double[][][2][int]);\n        final double double = double[][][3][int];\n        double[][int] = (((double[][int]) + (double * double)) + (double * double)) + (double * double);\n        double[][int] = ((double * double) + (double * double)) + (double * double);\n    }\n} else {\n    final double double = 4 * double;\n    final double double = double / 6.0;\n    final double double = double * ((((-double) + 5) * double) - 1);\n    final double double = double * (((double - 2) * double) - 2);\n    final double double = double * ((((-double) - 1) * double) - 1);\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        final double double = double[][][0][int];\n        final double double = (double[][][1][int]) + (double[][][2][int]);\n        final double double = double[][][3][int];\n        double[][int] = (((double[][int]) + (double * double)) + (double * double)) + (double * double);\n        double[][int] = ((double * double) + (double * double)) + (double * double);\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:100","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"divisor":"z","divident":"z"},"name":"replace","transplant":{"sourceCode":"return 1 - (double / double)","position":"org.apache.commons.math3.distribution.TriangularDistribution:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 2 * (org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double))","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:259","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += int","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1245","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer<FUNC>.optimizeInternal(int, FUNC, org.apache.commons.math3.optimization.GoalType, new org.apache.commons.math3.optimization.InitialGuess(double[]), new org.apache.commons.math3.optimization.SimpleBounds(double[] , double[]))","position":"org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-6024911025449780478L","position":"org.apache.commons.math3.exception.MathArithmeticException:36","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][][0].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:142","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"new org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory()","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:36","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory.this(java.math.MathContext.java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:50","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((double[].int) != 2) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[].int , 2);\n} ","position":"org.apache.commons.math3.analysis.function.Sigmoid:147","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * (org.apache.commons.math3.analysis.UnivariateFunction.value(0.0))) - double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:96","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.linear.BiDiagonalTransformer:186","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(double)","position":"org.apache.commons.math3.analysis.function.Logistic:73","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.linear.SparseFieldVector<T>.getDimension() , int)","position":"org.apache.commons.math3.linear.SparseFieldVector:524","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-2.4459827842685974E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5441","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][2] = double[][][2][0]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:340","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-2","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:102","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Arrays.java.util.Arrays.fill(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[], org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getField().getZero())","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:207","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (double) + org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.exp(double))","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:237","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(double, double)","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:155","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double[][int] = (double[][int]) + ((double) * ((double[][int]) - (double[][int])))","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:227","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:125","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"-5.45287716696021E84","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2498","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][0] = (((double[][][1][0]) * (double[][][0][0])) + ((double[][][1][1]) * (double[][][1][0]))) + ((double[][][2][1]) * (double[][][2][0]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:211","type":"CtAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:429","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:157","failures":[],"name":"inlineConstant","type":"mutation","nodeType":"CtLocalVariableImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(java.util.List<org.apache.commons.math3.stat.descriptive.SummaryStatistics>.isEmpty())) {\n    java.util.List<org.apache.commons.math3.stat.descriptive.SummaryStatistics>.clear();\n} ","position":"org.apache.commons.math3.random.EmpiricalDistribution:434","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<org.apache.commons.math3.util.Pair<java.lang.Double, T>>","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:162","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (this.boolean[].int) ; int++) {\n    if (!(this.boolean[][int])) {\n        ++int;\n    } \n}","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:940","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    T T = org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField().getZero();\n    for (int int = 0 ; int < int ; ++int) {\n        T = T.add(T[][][int][int].multiply(T[][int]));\n    }\n    T[][int] = T;\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:444","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+2.5610814094543457","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4007","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMean()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:105","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"-5.763495903609913E-231","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1773","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] = 1","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:188","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; ++int) {\n    double -= (double[][][int][int]) * (double[][int]);\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:192","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"out":"out"},"name":"replace","transplant":{"sourceCode":"java.io.ObjectOutput.writeBoolean(false)","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:235","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput)","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:153","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"+0.2852376699447632","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5442","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][0] = (double[][int]) - ((double[][int]) * (double[][0]))","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:212","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * (double + double)) - double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:86","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"v":"initialStateEstimateVector","this":"initialStateEstimateVector"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.math3.linear.RealVector.mapMultiply(((this.org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector)) / (org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector))))","position":"org.apache.commons.math3.linear.RealVector:685","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealVector","position":"org.apache.commons.math3.filter.DefaultProcessModel:159","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Double.java.lang.Double.compare(double, org.apache.commons.math3.stat.ranking.NaturalRanking.IntDoublePair.double)","position":"org.apache.commons.math3.stat.ranking.NaturalRanking:454","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][][][int][int].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int][int].int , int);\n} ","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:236","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-9","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:89","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.genetics.AbstractListChromosome<T>.getRepresentation().size()","position":"org.apache.commons.math3.genetics.AbstractListChromosome:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"T[][][0][0] = T.subtract(T.multiply(T).add(T.multiply(T)).add(T.multiply(T)).subtract(T[][][0][0]).multiply(0.5))","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:1104","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:477","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.polynomials.PolynomialFunction = org.apache.commons.math3.analysis.polynomials.PolynomialFunction.multiply(org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.polynomial(-(java.util.List<java.lang.Double>.get(int)), 1.0))","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:150","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double[] = null","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:156","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[]) == null) {\n    double[] = new double[double[].int];\n    double[] = new double[double[].int];\n    double[] = new double[double[].int];\n    double[] = new double[double[].int];\n} ","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:174","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction org.apache.commons.math3.optim.linear.LinearObjectiveFunction = ((org.apache.commons.math3.optim.linear.LinearObjectiveFunction)(java.lang.Object))","position":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction:115","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.geometry.euclidean.threed.Vector3D org.apache.commons.math3.geometry.euclidean.threed.Vector3D = org.apache.commons.math3.geometry.euclidean.threed.Vector3D.org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D, org.apache.commons.math3.geometry.euclidean.threed.Plane.org.apache.commons.math3.geometry.euclidean.threed.Vector3D)","position":"org.apache.commons.math3.geometry.euclidean.threed.Plane:324","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"lInc":"i","qStart":"i","k":"i","l":"i","outBlock":"secondary","qEnd":"i","tBlock":"secondary"},"name":"add","transplant":{"sourceCode":"for (int int = int ; int < int ; ++int) {\n    double[][int] = double[][int];\n    ++int;\n    int += int;\n}","position":"org.apache.commons.math3.linear.BlockRealMatrix:1234","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    double[][][int][(int - 1)] = double[][(int - 1)];\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:147","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * This enumeration defines the various types of normalizations that can be\n * applied to discrete sine transforms (DST). The exact definition of these\n * normalizations is detailed below.\n * \n * @see FastSineTransformer\n * @version $Id$\n * @since 3.0\n */\npublic enum DstNormalization {\nSTANDARD_DST_I, ORTHOGONAL_DST_I;}","position":"org.apache.commons.math3.transform.DstNormalization:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.util.MathUtils.org.apache.commons.math3.util.MathUtils.checkNotNull(double[])","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:235","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((org.apache.commons.math3.linear.RealMatrix.getColumnDimension()) == 1) {\n    final double[][] double[][] = new double[org.apache.commons.math3.linear.RealMatrix.getRowDimension()][org.apache.commons.math3.linear.RealMatrix.getRowDimension()];\n    for (int int = 0 ; int < (org.apache.commons.math3.linear.RealMatrix.getRowDimension()) ; int++) {\n        double[][][int][int] = org.apache.commons.math3.linear.RealMatrix.getEntry(int, 0);\n    }\n    return new org.apache.commons.math3.linear.Array2DRowRealMatrix(double[][] , false);\n} else {\n    final double[][] double[][] = new double[org.apache.commons.math3.linear.RealMatrix.getRowDimension()][1];\n    for (int int = 0 ; int < (org.apache.commons.math3.linear.RealMatrix.getColumnDimension()) ; int++) {\n        double[][][int][0] = org.apache.commons.math3.linear.RealMatrix.getEntry(int, int);\n    }\n    return new org.apache.commons.math3.linear.Array2DRowRealMatrix(double[][] , false);\n}","position":"org.apache.commons.math3.optimization.direct.CMAESOptimizer:1229","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrix","position":"org.apache.commons.math3.filter.DefaultProcessModel:144","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"parameters":"mapped"},"name":"add","transplant":{"sourceCode":"if (double[] == null) {\n    return null;\n} ","position":"org.apache.commons.math3.stat.regression.RegressionResults:213","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:167","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.random.BitsStreamGenerator.clear()","position":"org.apache.commons.math3.random.AbstractWell:169","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"columns":"i","rawData":"data"},"name":"add","transplant":{"sourceCode":"for (int int = 0 ; int < (double[][].int) ; ++int) {\n    final int int = double[][][int].int;\n    if (int != int) {\n        throw new org.apache.commons.math3.exception.DimensionMismatchException(int , int);\n    } \n}","position":"org.apache.commons.math3.linear.BlockRealMatrix:209","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[][][int], 0, double[][][int], 0, double[][][int].int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:532","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(org.apache.commons.math3.linear.OpenMapRealMatrix.computeKey(int, int))","position":"org.apache.commons.math3.linear.OpenMapRealMatrix:247","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int / 2","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:76","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+2.739090595934893E-119","position":"org.apache.commons.math3.util.FastMathLiteralArrays:507","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.function.Sigmoid.this(0, 1)","position":"org.apache.commons.math3.analysis.function.Sigmoid:53","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"rho":"oneMinusTheta","errbig":"oneMinusTheta"},"name":"replace","transplant":{"sourceCode":"final double double = double / double","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:522","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:323","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"exponent":"seed"},"name":"add","transplant":{"sourceCode":"if (int < 0) {\n    int--;\n} ","position":"org.apache.commons.math3.dfp.Dfp:2442","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.random.AbstractWell.setSeed(new int[]{ int })","position":"org.apache.commons.math3.random.AbstractWell:142","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"yDotK":"yDotK","i":"i"},"name":"add","transplant":{"sourceCode":"final double double = double[][][0][int]","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:105","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][12][int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:342","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.5464049837965422E-246","position":"org.apache.commons.math3.util.FastMathLiteralArrays:214","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += org.apache.commons.math3.optim.BaseMultivariateOptimizer<PAIR>.getEvaluations()","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:207","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double double = (double) - (double)","position":"org.apache.commons.math3.analysis.function.Sigmoid:190","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = (double[].int) - int","position":"org.apache.commons.math3.linear.BlockRealMatrix:913","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Number","position":"org.apache.commons.math3.exception.OutOfRangeException:71","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{}}]
