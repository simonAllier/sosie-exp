[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-1.3345148716925826E-23","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2250","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int[]) != null ? ((int[][int]) * int) % int : int","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"j":"i"},"name":"add","transplant":{"sourceCode":"final double double = (0.5 * int) * (int - 1)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:285","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][0][int]","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:136","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-1.6958057665854177E-49","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2190","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int[][int]","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:147","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:435","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:103","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"ret":"c","c":"c"},"name":"add","transplant":{"sourceCode":"char = char","position":"org.apache.commons.math3.fraction.AbstractFormat:170","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = java.lang.String.charAt(int++)","position":"org.apache.commons.math3.fraction.AbstractFormat:165","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"XTOIX":"cachedU"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.math3.linear.LUDecomposition(org.apache.commons.math3.linear.RealMatrix).getSolver().getInverse()","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:113","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrix","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:129","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getRowDimension()","position":"org.apache.commons.math3.linear.AbstractFieldMatrix:795","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.RuntimeException = java.lang.RuntimeException","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:203","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(+(org.apache.commons.math3.util.Precision.double), org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(-double, +double))","position":"org.apache.commons.math3.ode.events.Transformer:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] = double","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:143","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:1465","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    final int int = int + 5;\n    double[][int] = 1.0 / (int * int);\n    final double double = 0.5 * org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.sqrt((((double)((int + 1))) / int)));\n    for (int int = 0 ; int <= int ; ++int) {\n        double[][int] *= double / (int + 1);\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:216","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = int[][int]","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:612","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((double[]) != null) && (double <= 0.5)) {\n    final double double = (double * (double)) / 8.0;\n    final double double = (4 * double) * double;\n    final double double = double * ((8 - (15 * double)) + (2 * double));\n    final double double = (3 * double) * ((5 * double) - double);\n    final double double = (3 * double) * double;\n    final double double = double * (((-3) * double) + double);\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        final double double = double[][][0][int];\n        final double double = double[][][1][int];\n        final double double = double[][][2][int];\n        final double double = double[][][3][int];\n        double[][int] = ((((double[][int]) + (double * double)) + (double * double)) + (double * double)) + (double * double);\n        double[][int] = (((double * double) + (double * double)) + (double * double)) + (double * double);\n    }\n} else {\n    final double double = double / 8.0;\n    final double double = (4 * double) * double;\n    final double double = double * ((1 - (7 * double)) + (2 * double));\n    final double double = (3 * double) * ((1 + double) - double);\n    final double double = (3 * double) * (1 + double);\n    final double double = double * ((1 + double) + double);\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        final double double = double[][][0][int];\n        final double double = double[][][1][int];\n        final double double = double[][][2][int];\n        final double double = double[][][3][int];\n        double[][int] = ((((double[][int]) - (double * double)) - (double * double)) - (double * double)) - (double * double);\n        double[][int] = (((double * double) + (double * double)) + (double * double)) + (double * double);\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:104","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.math3.linear.RealMatrix.getRowDimension()","position":"org.apache.commons.math3.linear.MatrixUtils:844","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = new double[int]","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:286","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+1.772256261139753E-144","position":"org.apache.commons.math3.util.FastMathLiteralArrays:449","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] = org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][int].getPartialDerivative(int[])","position":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:61","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = T[][].int","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:340","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"h":"theta2","theta":"theta2","theta2":"theta"},"name":"add","transplant":{"sourceCode":"final double double = (double) * ((4.0 / 3.0) + (double * ((-22.0) + (double * ((152.0 / 3.0) + (double * (-30.0)))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:102","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double) * (((-125.0) / 96.0) + (double * ((375.0 / 32.0) + (double * (((-625.0) / 24.0) + ((double * 125.0) / 8.0))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:103","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"iBlock":"row","jBlock":"row","blocks":"data","blockColumns":"row"},"name":"replace","transplant":{"sourceCode":"final T[] T[] = this.T[][][((int * int) + int)]","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1533","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:424","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:1821","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.exception.MaxCountExceededException.this(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats, java.lang.Number)","position":"org.apache.commons.math3.exception.MaxCountExceededException:42","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-3.517594695450786E-279","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1661","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.checkInterpolation()","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:172","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:184","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.geometry.euclidean.threed.Line org.apache.commons.math3.geometry.euclidean.threed.Line = new org.apache.commons.math3.geometry.euclidean.threed.Line(org.apache.commons.math3.geometry.euclidean.threed.Vector3D , org.apache.commons.math3.geometry.euclidean.threed.Vector3D)","position":"org.apache.commons.math3.geometry.euclidean.threed.SubLine:140","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int) < 0) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.math3.util.OpenIntToFieldHashMap:559","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal[][int] = java.math.BigDecimal.negate(java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:185","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 1.0","position":"org.apache.commons.math3.distribution.ZipfDistribution:122","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrixChangingVisitor.end()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:404","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Describes the type of iteration performed by the\n * {@link #iterator() iterator}.\n */\npublic static enum IterationOrder {\nLEXICOGRAPHIC;}","position":"org.apache.commons.math3.util.Combinations:43","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.copy(this, org.apache.commons.math3.stat.descriptive.moment.StandardDeviation)","position":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:260","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = (int) - 1 ; int > 3 ; --int) {\n    final double double = 1.0 / (int - 3);\n    double = double * ((double * double) + double);\n    double = (double[][][int][int]) + ((double * double) * double);\n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:342","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"final int int = 2","position":"org.apache.commons.math3.primes.PollardRho:74","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:396","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.math3.util.Decimal64(org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atanh(double))","position":"org.apache.commons.math3.util.Decimal64:595","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.ParsePosition.setIndex(int)","position":"org.apache.commons.math3.fraction.AbstractFormat:167","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"x":"x","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.tanh(double)","position":"org.apache.commons.math3.analysis.function.Tanh:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.signum(double)","position":"org.apache.commons.math3.analysis.function.Signum:32","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"break","position":"org.apache.commons.math3.dfp.Dfp:2025","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] = double","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:244","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.distribution.NormalDistribution.this(org.apache.commons.math3.random.RandomGenerator, double, double, org.apache.commons.math3.distribution.NormalDistribution.double)","position":"org.apache.commons.math3.distribution.NormalDistribution:101","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan(double)","position":"org.apache.commons.math3.analysis.function.Atan:36","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (java.lang.Double.(java.lang.Double.isNaN(double)) && java.lang.Double.(java.lang.Double.isNaN(double))) || org.apache.commons.math3.util.Precision.(org.apache.commons.math3.util.Precision.equals(double, double, 1))","position":"org.apache.commons.math3.util.Precision:257","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.analysis.UnivariateFunction.value(double)","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:83","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * This enumeration defines the various types of normalizations that can be\n * applied to discrete Fourier transforms (DFT). The exact definition of these\n * normalizations is detailed below.\n * \n * @see FastFourierTransformer\n * @version $Id$\n * @since 3.0\n */\npublic enum DftNormalization {\nSTANDARD, UNITARY;}","position":"org.apache.commons.math3.transform.DftNormalization:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.ensureDataConformance(double[], double[])","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:175","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:286","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double[][int]) - (double[][(int + int)])","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm:232","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"T[][int] = T[][int].subtract(T[][int].multiply(T))","position":"org.apache.commons.math3.linear.FieldLUDecomposition:409","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T = T.add(T[][int].multiply(T[][int]))","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:427","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:123","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.divide(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:153","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int[])","position":"org.apache.commons.math3.analysis.differentiation.GradientFunction:58","type":"CtAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.util.MultidimensionalCounter:173","failures":[],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-3.118741081244705E266","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2917","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((((-double) + 5) * double) - 1)","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:118","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumerate for rounding modes.\n */\npublic enum RoundingMode {\nROUND_DOWN, ROUND_UP, ROUND_HALF_UP, ROUND_HALF_DOWN, ROUND_HALF_EVEN, ROUND_HALF_ODD, ROUND_CEIL, ROUND_FLOOR;}","position":"org.apache.commons.math3.dfp.DfpField:30","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Arrays.java.util.Arrays.fill(double[], 0.0)","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:196","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = 1 + (double * (((-15.0) / 2.0) + (double * (16.0 - (10.0 * double)))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:74","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((4.0 / 3.0) + (double * ((-22.0) + (double * ((152.0 / 3.0) + (double * (-30.0)))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:102","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, (org.apache.commons.math3.optimization.linear.SimplexTableau.(getSlackVariableOffset()) - 1), org.apache.commons.math3.optimization.linear.SimplexTableau.org.apache.commons.math3.optimization.linear.SimplexTableau.getInvertedCoefficientSum(org.apache.commons.math3.linear.RealVector))","position":"org.apache.commons.math3.optimization.linear.SimplexTableau:204","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][][int][int] = double[][int];\n    if (int < int) {\n        if (int > 0) {\n            double[][][int][(int - 1)] = double[][(int - 1)];\n        } \n    } else {\n        if (int < ((double[].int) - 1)) {\n            double[][][int][(int + 1)] = double[][int];\n        } \n    }\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:144","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.math3.ode.events.Transformer","position":"org.apache.commons.math3.ode.events.FilterType:293","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.OneWayAnova.anovaTest(java.util.Collection<double[]>, double)","position":"org.apache.commons.math3.stat.inference.TestUtils:365","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"p":"rows","ks":"rows","kase":"rows","k":"rows"},"name":"add","transplant":{"sourceCode":"if (int == (int - 1)) {\n    int = 1;\n} else {\n    int = 2;\n    int = int;\n}","position":"org.apache.commons.math3.linear.SingularValueDecomposition:319","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.start(int, int, 0, (int - 1), 0, (int - 1))","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:526","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == int) {\n    for (int int = 0 ; int < int ; ++int) {\n        int int = int[][int];\n        double[][int] *= (double[][int]) / double;\n    }\n    double = 0;\n    for (int int = 0 ; int < int ; ++int) {\n        int int = int[][int];\n        double double = 0;\n        for (int int = 0 ; int < int ; ++int) {\n            double += (double[][][int][int]) * (double[][int[][int]]);\n        }\n        double double = ((double[][int]) - double) / (double[][int]);\n        double[][int] = double;\n        double += double * double;\n    }\n    double = double / (double * double);\n} ","position":"org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:658","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[], 0, double[], 0, int)","position":"org.apache.commons.math3.ode.FirstOrderConverter:103","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    org.apache.commons.math3.linear.ArrayRealVector.setEntry(((-int) - 1), org.apache.commons.math3.linear.ArrayRealVector.getEntry(((-int) - 1)));\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:1417","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double += double * double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:293","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.oned.Interval.getInf()","position":"org.apache.commons.math3.geometry.euclidean.oned.Interval:58","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[].int","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:192","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+1.6438980102539062","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3553","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = java.io.ObjectInput.readDouble()","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:271","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.boolean = false","position":"org.apache.commons.math3.linear.SymmLQ:565","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:197","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.fraction.Fraction.this(double, double, java.lang.Integer.int, int)","position":"org.apache.commons.math3.fraction.Fraction:124","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrixPreservingVisitor.end()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:519","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.util.Decimal64.org.apache.commons.math3.util.Decimal64 = new org.apache.commons.math3.util.Decimal64(1.0)","position":"org.apache.commons.math3.util.Decimal64:60","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int[] int[] = new int[int]","position":"org.apache.commons.math3.util.MultidimensionalCounter:222","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"delta":"x2"},"name":"add","transplant":{"sourceCode":"final double double = double / 2","position":"org.apache.commons.math3.distribution.PoissonDistribution:315","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double + double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:289","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.ode.ExpandableStatefulODE.setCompleteState(double[])","position":"org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator:320","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal[][int] = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:186","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"work":"coefficients","lmDiag":"out","nSing":"length","solvedCols":"length"},"name":"replace","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    if (((double[][int]) == 0) && (int == int)) {\n        int = int;\n    } \n    if (int < int) {\n        double[][int] = 0;\n    } \n}","position":"org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer:872","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[], 0, double[], 0, double[].int)","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:164","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Status of a point during the clustering process.\n */\nprivate enum PointStatus {\nNOISE, PART_OF_CLUSTER;}","position":"org.apache.commons.math3.ml.clustering.DBSCANClusterer:68","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<T>.get(int).reseedRandomGenerator(((int + 1) + long))","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:146","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+2.14643574308864E14","position":"org.apache.commons.math3.util.FastMathLiteralArrays:813","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:128","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"x":"expected","y":"expected"},"name":"add","transplant":{"sourceCode":"return !((double[] == null) ^ (double[] == null))","position":"org.apache.commons.math3.util.MathArrays:1236","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTest(double[], long[], double)","position":"org.apache.commons.math3.stat.inference.TestUtils:269","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"na":"h","za":"theta","xs":"theta2"},"name":"add","transplant":{"sourceCode":"double double = -((double - double) + double)","position":"org.apache.commons.math3.util.FastMath:2924","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double) * (((-125.0) / 96.0) + (double * ((375.0 / 32.0) + (double * (((-625.0) / 24.0) + ((double * 125.0) / 8.0))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:103","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][1] = -org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.sin(double[][int]))","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:1161","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    T[][int] = T[][int].subtract(T[][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:269","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.linear.RealVector.isNaN()","position":"org.apache.commons.math3.linear.RealVector:1601","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][1] = (double * double) / (double * double)","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:270","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.special.Gamma.LANCZOS_G":"oneMinusThetaH","absX":"oneMinusThetaH"},"name":"replace","transplant":{"sourceCode":"final double double = (double + double) + 0.5","position":"org.apache.commons.math3.special.Gamma:690","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:102","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.math3.distribution.TDistribution:236","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:268","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = (double) * (org.apache.commons.math3.distribution.LogNormalDistribution.double)","position":"org.apache.commons.math3.distribution.LogNormalDistribution:242","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkRowIndex(int)","position":"org.apache.commons.math3.linear.SparseFieldMatrix:168","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * {@link StepNormalizer Step normalizer} modes. Determines how the step size\n * is interpreted.\n * @see StepNormalizer\n * @see StepNormalizerBounds\n * @version $Id$\n * @since 3.0\n */\npublic enum StepNormalizerMode {\nINCREMENT, MULTIPLES;}","position":"org.apache.commons.math3.ode.sampling.StepNormalizerMode:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkColumnIndex(int)","position":"org.apache.commons.math3.linear.SparseFieldMatrix:140","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+1.5503435134887695","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3493","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][1] += ((double[][0]) * (double[][][2][1])) + ((double[][2]) * (double[][][2][1]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:231","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = org.apache.commons.math3.optimization.linear.SimplexTableau.getEntry(0, int)","position":"org.apache.commons.math3.optimization.linear.SimplexSolver:76","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double / double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:295","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-5.848862070736576E-9","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4503","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][1] = (((double[][][0][1]) * (double[][][0][1])) + ((double[][][1][1]) * (double[][][1][1]))) + ((double[][][2][1]) * (double[][][2][1]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:222","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+3.468049324128309E-82","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2115","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    final T[] T[] = T[][][int];\n    for (int int = 0 ; int < int ; ++int) {\n        org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:476","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][int] += double[][int];\n    for (int int = 0 ; int <= int ; ++int) {\n        double[][int++] += (double[][int]) * (double[][int]);\n    }\n}","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:70","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:360","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.geometry.partitioning.Region.Location org.apache.commons.math3.geometry.partitioning.Region.Location = org.apache.commons.math3.geometry.partitioning.AbstractRegion<S, T>.checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree<S>.getPlus(), org.apache.commons.math3.geometry.Vector<S>)","position":"org.apache.commons.math3.geometry.partitioning.AbstractRegion:273","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * (org.apache.commons.math3.analysis.UnivariateFunction.value(double))) - double","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:95","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    for (int int = 0 ; int < int ; ++int) {\n        int = (int * 31) + (((11 * (int + 1)) + (17 * (int + 1))) * (org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getEntry(int, int).hashCode()));\n    }\n}","position":"org.apache.commons.math3.linear.AbstractFieldMatrix:1018","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkRowIndex(int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:366","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double) * (((-125.0) / 96.0) + (double * ((375.0 / 32.0) + (double * (((-625.0) / 24.0) + ((double * 125.0) / 8.0))))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:103","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(this, int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:511","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.math3.linear.RealVector org.apache.commons.math3.linear.RealVector = org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.calculateResiduals()","position":"org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression:157","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) > 3) {\n    double double = 0;\n    double double = double[][][int][int];\n    for (int int = (int) - 1 ; int > 3 ; --int) {\n        final double double = 1.0 / (int - 3);\n        double = double * ((double * double) + double);\n        double = (double[][][int][int]) + ((double * double) * double);\n    }\n    double[][int] += double * double;\n    double[][int] += ((double * double) + (double * double)) / (double);\n} ","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:339","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.dfp.Dfp[][1] = org.apache.commons.math3.dfp.Dfp[][0].getZero()","position":"org.apache.commons.math3.dfp.DfpMath:113","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:215","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+2.55409795397022E-208","position":"org.apache.commons.math3.util.FastMathLiteralArrays:302","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:90","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"rowDimension":"rowDimension"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.math3.linear.DiagonalMatrix(int)","position":"org.apache.commons.math3.linear.DiagonalMatrix:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.linear.Array2DRowRealMatrix(int , int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:145","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Goal type for an optimization problem (minimization or maximization of\n * a scalar function.\n * \n * @version $Id$\n * @since 2.0\n */\npublic enum GoalType implements org.apache.commons.math3.optim.OptimizationData {\nMAXIMIZE, MINIMIZE;}","position":"org.apache.commons.math3.optim.nonlinear.scalar.GoalType:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.computeJacobian()","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:197","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"+1.3594057956219485E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5694","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int[])","position":"org.apache.commons.math3.analysis.differentiation.GradientFunction:58","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (int < (char[].int)) {\n    char[][int++] = char[][int++];\n}","position":"org.apache.commons.math3.dfp.Dfp:2124","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][1] += ((double[][0]) * (double[][][2][1])) + ((double[][2]) * (double[][][2][1]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:231","type":"CtOperatorAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:175","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-2},{"failures":[],"variableMapping":{"start":"currentState","newStart":"currentState"},"name":"add","transplant":{"sourceCode":"this.double[] = double[].clone()","position":"org.apache.commons.math3.fitting.leastsquares.AbstractLeastSquaresOptimizer:105","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] = double[].clone()","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:143","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NumberIsTooSmallException(int , int , false)","position":"org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator:124","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][5][int] = 16 * ((double[][][1][int]) - double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:274","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.complex.ComplexFormat.this(java.lang.String, org.apache.commons.math3.util.CompositeFormat.org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat())","position":"org.apache.commons.math3.complex.ComplexFormat:108","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    double[][int] = (double[][int]) + (double[][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:174","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double += ((((double - (double * double)) - (double * double)) - (double * double)) - (double * double)) / double","position":"org.apache.commons.math3.util.FastMath:650","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.evaluate(double[], double[], double)","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:97","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"double double = 0.0","position":"org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization:160","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][0][int]","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:119","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return T.multiply(T).add(T.multiply(T)).add(T.multiply(T)).sqrt().asin().multiply(2)","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:449","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor:57","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"+0.2763880491256714","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5430","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = double * (double[][(int - 2)])","position":"org.apache.commons.math3.analysis.function.HarmonicOscillator:176","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"for (int int = 1 ; int < (double[].int) ; ++int) {\n    double[][int] *= double;\n    double *= org.apache.commons.math3.util.FastMath.double;\n}","position":"org.apache.commons.math3.analysis.function.Sinc:196","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; ++int) {\n    final double double = double[][int];\n    double += double * double;\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:330","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (double <= (org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.double)) {\n    throw new org.apache.commons.math3.exception.ConvergenceException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double);\n} ","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:533","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:221","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final double[] double[] = new double[((((int) - int) + 1) * ((int) - int)) / 2]","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:610","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = new double[double[].int]","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:100","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.math3.analysis.polynomials.PolynomialFunction[].int) ; ++int) {\n    org.apache.commons.math3.analysis.polynomials.PolynomialFunction[][int] = org.apache.commons.math3.analysis.polynomials.PolynomialFunction[][int].add(org.apache.commons.math3.analysis.polynomials.PolynomialFunction.multiply(org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.polynomial(double[][int])));\n}","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:147","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double[] double[] = new double[int]","position":"org.apache.commons.math3.optimization.direct.NelderMeadSimplex:258","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location","position":"org.apache.commons.math3.geometry.euclidean.oned.Interval:126","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.special.Beta:464","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-2},{"failures":[],"variableMapping":{"tmp":"s","currentCost":"s","previousCost":"c"},"name":"replace","transplant":{"sourceCode":"if (((0.1 * double) >= double) || (double < 0.1)) {\n    double = 0.1;\n} ","position":"org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:461","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final double double = org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.getPoint(int);\n    final double double = org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.getWeight(int);\n    final double double = org.apache.commons.math3.analysis.UnivariateFunction.value(double);\n    final double double = org.apache.commons.math3.analysis.UnivariateFunction.value(-double);\n    final double double = (double * (double + double)) - double;\n    final double double = double + double;\n    double = (double - double) - double;\n    double = double;\n}","position":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:79","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.math3.geometry.partitioning.BSPTree<S> != null) {\n    org.apache.commons.math3.geometry.partitioning.BSPTree<S>.org.apache.commons.math3.geometry.partitioning.BSPTree<S> = org.apache.commons.math3.geometry.partitioning.BSPTree<S>;\n    if (boolean) {\n        org.apache.commons.math3.geometry.partitioning.BSPTree<S>.org.apache.commons.math3.geometry.partitioning.BSPTree<S> = org.apache.commons.math3.geometry.partitioning.BSPTree<S>;\n    } else {\n        org.apache.commons.math3.geometry.partitioning.BSPTree<S>.org.apache.commons.math3.geometry.partitioning.BSPTree<S> = org.apache.commons.math3.geometry.partitioning.BSPTree<S>;\n    }\n} ","position":"org.apache.commons.math3.geometry.partitioning.BSPTree:394","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][1] += (((double[][0]) * (double[][][1][1])) + ((double[][1]) * (double[][][1][1]))) + ((double[][2]) * (double[][][1][1]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:230","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * This enumeration defines the various types of normalizations that can be\n * applied to discrete cosine transforms (DCT). The exact definition of these\n * normalizations is detailed below.\n * \n * @see FastCosineTransformer\n * @version $Id$\n * @since 3.0\n */\npublic enum DctNormalization {\nSTANDARD_DCT_I, ORTHOGONAL_DCT_I;}","position":"org.apache.commons.math3.transform.DctNormalization:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.text.NumberFormat.setMaximumFractionDigits(0)","position":"org.apache.commons.math3.fraction.AbstractFormat:93","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"tmp1":"a","two":"b","mContext":"mContext"},"name":"add","transplant":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.divide(java.math.BigDecimal, this.java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:208","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.add(java.math.BigDecimal, java.math.MathContext).multiply(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:130","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"nreq":"k"},"name":"add","transplant":{"sourceCode":"final double[] double[] = new double[(int * (int + 1)) / 2]","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:505","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = double[][][(int + 1)]","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:353","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+9.760860120877624E-4","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5105","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double / (double)","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:294","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"tmp1":"tmp1","mContext":"mContext"},"name":"add","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.pow(2, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:207","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < int ; int++) {\n    final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(((2 * int) + 1) , java.math.MathContext);\n    final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(int , java.math.MathContext);\n    final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal((int + 1) , java.math.MathContext);\n    java.math.BigDecimal = java.math.BigDecimal.multiply(java.math.BigDecimal, java.math.MathContext);\n    java.math.BigDecimal = java.math.BigDecimal.multiply(java.math.BigDecimal, java.math.MathContext);\n    java.math.BigDecimal = java.math.BigDecimal.multiply(java.math.BigDecimal, java.math.MathContext);\n    java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.subtract(java.math.BigDecimal, java.math.MathContext);\n    java.math.BigDecimal = java.math.BigDecimal.divide(java.math.BigDecimal, java.math.MathContext);\n    java.math.BigDecimal = java.math.BigDecimal;\n    java.math.BigDecimal = java.math.BigDecimal;\n}","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:142","type":"CtForImpl"},"status":-2},{"failureDictionary":{}}]
