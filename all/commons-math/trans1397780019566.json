[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = int + 1 ; int < (int) ; ++int) {\n    double double = double[][][int][int];\n    final double double = (double * double) + (double * (double[][int]));\n    double[][int] = ((-double) * double) + (double * (double[][int]));\n    double[][][int][int] = double;\n}","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:790","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(double)","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:253","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = (org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int)) / double","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:2321","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final PAIR PAIR = org.apache.commons.math3.optim.BaseMultivariateOptimizer<PAIR>.optimize(org.apache.commons.math3.optim.OptimizationData[])","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:200","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+5.606492666349878E-9","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5222","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:277","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    final double double = double[][int];\n    final double double = double[][int];\n    final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.abs((double - double));\n    final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.abs(double), org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.abs(double));\n    if ((double > (double * org.apache.commons.math3.optimization.AbstractConvergenceChecker<PAIR>.(getRelativeThreshold()))) && (double > org.apache.commons.math3.optimization.AbstractConvergenceChecker<PAIR>.(getAbsoluteThreshold()))) {\n        return false;\n    } \n}","position":"org.apache.commons.math3.optimization.SimplePointChecker:134","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[] double[] = null","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:180","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double[][] double[][] = org.apache.commons.math3.linear.Array2DRowRealMatrix.double[][]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:228","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"-8","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:88","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-1","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:59","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final double double = 10.0 / double","position":"org.apache.commons.math3.special.Beta:367","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * (2 - (3 * double))) / (double)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:327","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"hdiag":"Wmax","d1":"Wmax","beta":"Wmax"},"name":"replace","transplant":{"sourceCode":"final double double = (double * double) + (double * double)","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:903","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (((double)((int * (int + 1)))) / 2.0) - double","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:321","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final T T = T.subtract(org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()).abs()","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:822","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:165","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > int) {\n    int = ((int * (int + 1)) / 2) + int;\n} else {\n    int = ((int * (int + 1)) / 2) + int;\n}","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:979","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][][][int].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int].int , int);\n} ","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:203","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double[] double[] = org.apache.commons.math3.util.Pair<double[], double[]>.getSecond()","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:157","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = org.apache.commons.math3.util.Pair<T[], T[]>.getFirst()","position":"org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory:140","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"v4":"v2"},"name":"add","transplant":{"sourceCode":"double[] = null","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:124","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][int] = (double[][int]) + ((double * (double)) * ((double[][int]) + (double * ((double[][int]) + (double * ((double[][int]) + (double * (double[][int]))))))));\n    double[][int] = (((double[][int]) + (double * (double[][int]))) + (double * (double[][int]))) + (double * (double[][int]));\n}","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:208","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, org.apache.commons.math3.linear.ArrayRealVector.getEntry(int));\n    org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) - (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int))));\n}","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:745","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.end()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:582","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double[][] double[][] = new double[int][int]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:169","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.linear.AbstractRealMatrix.createMatrix(int, int)","position":"org.apache.commons.math3.linear.AbstractRealMatrix:83","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+2.265440168347286E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4440","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = double","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:407","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int > 0) && (!org.apache.commons.math3.util.CompositeFormat.(org.apache.commons.math3.util.CompositeFormat.parseFixedstring(java.lang.String, java.lang.String, java.text.ParsePosition)))) {\n    return null;\n} ","position":"org.apache.commons.math3.geometry.VectorFormat:260","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 1 ; int < int ; int++) {\n    if ((double[][][int].int) != int) {\n        throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][int].int , int);\n    } \n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:116","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.genetics.AbstractListChromosome<T>.this(java.util.Arrays.java.util.Arrays.asList(T[]))","position":"org.apache.commons.math3.genetics.AbstractListChromosome:52","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.genetics.RandomKey<T>.this(java.util.Arrays.java.util.Arrays.asList(java.lang.Double[]))","position":"org.apache.commons.math3.genetics.RandomKey:92","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (double == (-1.0)) {\n    return java.lang.Math.double;\n} ","position":"org.apache.commons.math3.util.FastMath:2786","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = int - int","position":"org.apache.commons.math3.util.MultidimensionalCounter:237","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (((double) < (-0.1)) || ((double) > 0.1)) {\n    return 2 * org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.asin(org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(((((double) * (double)) + ((double) * (double))) + ((double) * (double))))));\n} else if ((double) < 0) {\n    return 2 * org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.acos(-(double)));\n} ","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:510","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.acos(double)","position":"org.apache.commons.math3.analysis.function.Acos:36","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int == int) {\n    break;\n} ","position":"org.apache.commons.math3.linear.SchurTransformer:325","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][][int][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:544","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()","position":"org.apache.commons.math3.linear.DiagonalMatrix:144","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal[] java.math.BigDecimal[] = org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory<java.math.BigDecimal>.getRuleInternal((int - 1)).getFirst()","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:77","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:220","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int","position":"org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver:171","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:438","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * The kinds of solutions that a {@link BracketedUnivariateSolver\n * (bracketed univariate real) root-finding algorithm} may accept as solutions.\n * This basically controls whether or not under-approximations and\n * over-approximations are allowed.\n * \n * <p>If all solutions are accepted ({@link #ANY_SIDE}), then the solution\n * that the root-finding algorithm returns for a given root may be equal to the\n * actual root, but it may also be an approximation that is slightly smaller\n * or slightly larger than the actual root. Root-finding algorithms generally\n * only guarantee that the returned solution is within the requested\n * tolerances. In certain cases however, in particular for\n * {@link org.apache.commons.math3.ode.events.EventHandler state events} of\n * {@link org.apache.commons.math3.ode.ODEIntegrator ODE solvers}, it\n * may be necessary to guarantee that a solution is returned that lies on a\n * specific side the solution.<\/p>\n * \n * @see BracketedUnivariateSolver\n * @since 3.0\n * @version $Id$\n */\npublic enum AllowedSolution {\nANY_SIDE, LEFT_SIDE, RIGHT_SIDE, BELOW_SIDE, ABOVE_SIDE;}","position":"org.apache.commons.math3.analysis.solvers.AllowedSolution:41","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(this, org.apache.commons.math3.linear.Array2DRowRealMatrix)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:219","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[] = org.apache.commons.math3.linear.RealMatrix.operate(double[])","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:338","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.oned.Vector1D","position":"org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:94","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int , double[].int)","position":"org.apache.commons.math3.stat.correlation.Covariance:246","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double[].int , double[].int)","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:241","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] += (double[][int]) * double","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:213","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double[][][int][int] += (-double) * (double[][][int][(int - int)])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:117","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double -= (double[][][int][int]) * (double[][][int][(int - int)])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:112","type":"CtOperatorAssignmentImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.linear.BiDiagonalTransformer:281","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Enumerate for the location of a point with respect to the region.\n */\npublic static enum Location {\nINSIDE, OUTSIDE, BOUNDARY;}","position":"org.apache.commons.math3.geometry.partitioning.Region:50","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 4 ; int <= int ; ++int) {\n    final double double = (0.5 * int) * (int - 1);\n    final double double = ((2 * double) * (int - 2)) * (int - 3);\n    double[][][(int + 4)][int] = 16 * (((double[][][int][int]) + (double * (double[][][(int + 2)][int]))) - (double * (double[][][int][int])));\n}","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:284","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"n":"row"},"name":"replace","transplant":{"sourceCode":"if (int <= 0) {\n    throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(int);\n} ","position":"org.apache.commons.math3.random.AbstractRandomGenerator:157","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkRowIndex(int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:376","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"T[] T[] = org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.buildArray(org.apache.commons.math3.Field<T>, T[].int)","position":"org.apache.commons.math3.linear.ArrayFieldVector:476","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:267","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][] = double[][]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:121","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double = double","position":"org.apache.commons.math3.analysis.solvers.RiddersSolver:137","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][0][int]","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:332","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Specification of expansion algorithm.\n * @since 3.1\n */\npublic static enum ExpansionMode {\nMULTIPLICATIVE, ADDITIVE;}","position":"org.apache.commons.math3.util.ResizableDoubleArray:153","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(double)","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:287","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double = double + double","position":"org.apache.commons.math3.util.FastMath:2831","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] -= double * (double[][int])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:346","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new double[]{ 0 }","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunction:266","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[].clone()","position":"org.apache.commons.math3.optim.nonlinear.vector.Target:53","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator:86","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+1.1712579802975851E287","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1441","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] -= double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:362","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double[][][0][int]","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:105","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][9][int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:339","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    double double = org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double;\n    for (int int = 0 ; int < int ; int++) {\n        double += (org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int)) * (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int));\n    }\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) + (double * (org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int)))));\n    }\n}","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:1020","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double - (double[][int])) / ((double[][(int + 1)]) - (double[][int]))","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:323","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:91","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.subtract(java.math.BigDecimal.multiply(java.math.BigDecimal, java.math.MathContext), java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:173","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int[][int] = int[][int]","position":"org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:902","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.subtract(java.math.BigDecimal.multiply(java.math.BigDecimal, java.math.MathContext), java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:173","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.analysis.function.Gaussian.Parametric.validateParameters(double[])","position":"org.apache.commons.math3.analysis.function.Gaussian:131","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int + 5","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:217","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.optim.linear.SimplexTableau:323","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = (double[][int]) * ((double[][int]) - (double[][int]))","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:173","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double = double","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:165","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case REGULA_FALSI :\n    if (double == double) {\n        throw new org.apache.commons.math3.exception.ConvergenceException();\n    } \n    break;","position":"org.apache.commons.math3.analysis.solvers.BaseSecantSolver:193","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T[][] = org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.buildArray(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField(), T[][].int, int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:349","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE":"org.apache.commons.math3.geometry.partitioning.Region.Location.OUTSIDE","lower":"lower","upper":"point","point":"tolerance","tolerance":"tolerance","org.apache.commons.math3.geometry.partitioning.Region.Location.BOUNDARY":"org.apache.commons.math3.geometry.partitioning.Region.Location.INSIDE"},"name":"add","transplant":{"sourceCode":"if ((double > ((this.double) + double)) && (double < (double - double))) {\n    return this.org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location;\n} else {\n    return this.org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location;\n}","position":"org.apache.commons.math3.geometry.euclidean.oned.Interval:123","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double < ((double) - double)) || (double > ((double) + double))) {\n    return org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location;\n} else if ((double > ((double) + double)) && (double < ((double) - double))) {\n    return org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location;\n} else {\n    return org.apache.commons.math3.geometry.partitioning.Region.Location.org.apache.commons.math3.geometry.partitioning.Region.Location;\n}","position":"org.apache.commons.math3.geometry.euclidean.oned.Interval:121","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer<FUNC>.optimizeInternal(int, FUNC, org.apache.commons.math3.optimization.GoalType, new org.apache.commons.math3.optimization.InitialGuess(double[]), new org.apache.commons.math3.optimization.SimpleBounds(double[] , double[]))","position":"org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][int] += (double[][int]) * double;\n}","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:178","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = int + 1 ; int < int ; ++int) {\n    double += (double[][][int][int]) * (double[][int]);\n}","position":"org.apache.commons.math3.linear.TriDiagonalTransformer:115","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < int ; ++int) {\n    final double double = double[][int];\n    double += double * double;\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:291","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.HALF":"theta","xoptsq":"theta"},"name":"add","transplant":{"sourceCode":"double double = (-double) * double","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:565","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((459.0 / 16.0) + (double * (((-729.0) / 8.0) + ((135.0 / 2.0) * double))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:75","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    return org.apache.commons.math3.linear.ArrayFieldVector<T>.add(((org.apache.commons.math3.linear.ArrayFieldVector<T>)(org.apache.commons.math3.linear.FieldVector<T>)));\n} catch (java.lang.ClassCastException java.lang.ClassCastException) {\n    org.apache.commons.math3.linear.ArrayFieldVector<T>.checkVectorDimensions(org.apache.commons.math3.linear.FieldVector<T>);\n    T[] T[] = org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.buildArray(org.apache.commons.math3.Field<T>, T[].int);\n    for (int int = 0 ; int < (T[].int) ; int++) {\n        T[][int] = T[][int].add(org.apache.commons.math3.linear.FieldVector<T>.getEntry(int));\n    }\n    return new org.apache.commons.math3.linear.ArrayFieldVector<T>(org.apache.commons.math3.Field<T> , T[] , false);\n}","position":"org.apache.commons.math3.linear.ArrayFieldVector:440","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.log1p(double)","position":"org.apache.commons.math3.analysis.function.Log1p:36","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (double[]) == null ? null : double[].clone()","position":"org.apache.commons.math3.optim.BaseMultivariateOptimizer:115","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:185","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"+1.2435453481209945E-123","position":"org.apache.commons.math3.util.FastMathLiteralArrays:497","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double += double * double","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:307","type":"CtOperatorAssignmentImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:191","failures":[],"name":"removeConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"T[] = org.apache.commons.math3.linear.BlockFieldMatrix<T>.T[][][++int]","position":"org.apache.commons.math3.linear.BlockFieldMatrix:854","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[] == null) || (double[] == null)) {\n    throw new org.apache.commons.math3.exception.NullArgumentException();\n} ","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:74","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-6","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:103","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[].int","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:123","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.math3.dfp.Dfp:2129","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealVector","position":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = int - 1 ; int >= int ; --int) {\n    double[][][int][int] = 1;\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:181","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int - 1 ; int >= int ; --int) {\n    final double[] double[] = double[][][(int - int)];\n    double[][][int][int] = 1;\n    if ((double[][int]) != 0.0) {\n        for (int int = int ; int < int ; ++int) {\n            double double = 0;\n            for (int int = int ; int < int ; ++int) {\n                double -= (double[][][int][int]) * (double[][int]);\n            }\n            double /= (double[][(int - int)]) * (double[][int]);\n            for (int int = int ; int < int ; ++int) {\n                double[][][int][int] += (-double) * (double[][int]);\n            }\n        }\n    } \n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:186","type":"CtForImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.analysis.function.StepFunction:85","failures":[],"name":"inlineConstant","type":"mutation","nodeType":"CtLocalVariableImpl","status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return -0.0","position":"org.apache.commons.math3.util.FastMath:2641","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrixChangingVisitor.end()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:404","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 2","position":"org.apache.commons.math3.linear.SingularValueDecomposition:322","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (((double)((int * (int + 1)))) / 2.0) - double","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:321","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrix","position":"org.apache.commons.math3.linear.ArrayRealVector:592","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<T>","position":"org.apache.commons.math3.genetics.AbstractListChromosome:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (double >= double) {\n    throw new org.apache.commons.math3.exception.NumberIsTooLargeException(double , double , false);\n} ","position":"org.apache.commons.math3.analysis.FunctionUtils:434","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; ++int) {\n    double[][int] -= double * (double[][int]);\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:345","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"phiHessian":"phiHessian"},"name":"add","transplant":{"sourceCode":"double[][][1][2] = double[][][2][1]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:341","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][1] = (double * (double - (double * double))) / double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:334","type":"CtAssignmentImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < int ; ++int) {\n    final int int = int[][int];\n    final double double = double * (double[][][int][int]);\n    double[][][int][int] = double;\n    double[][][int][int] -= ((double[][][int][int]) * (double[][][int][int])) * double;\n    for (int int = int + 1 ; int < int ; ++int) {\n        final int int = int[][int];\n        final double double = (double[][][int][int]) - (double * (double[][][int][int]));\n        double[][][int][int] = double;\n        double[][][int][int] = double;\n    }\n}","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:146","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double double = org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()","position":"org.apache.commons.math3.analysis.function.HarmonicOscillator:167","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.fitting.HarmonicFitter.fit(new org.apache.commons.math3.fitting.HarmonicFitter.ParameterGuesser(org.apache.commons.math3.fitting.CurveFitter<org.apache.commons.math3.analysis.function.HarmonicOscillator.Parametric>.getObservations()).guess())","position":"org.apache.commons.math3.fitting.HarmonicFitter:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+1.1166706085205078","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3157","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] -= double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:362","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double += double","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:484","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = char","position":"org.apache.commons.math3.fraction.AbstractFormat:170","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Strategies for handling tied values in rank transformations.\n * <ul>\n * <li>SEQUENTIAL - Ties are assigned ranks in order of occurrence in the original array,\n * for example (1,3,4,3) is ranked as (1,2,4,3)<\/li>\n * <li>MINIMUM - Tied values are assigned the minimum applicable rank, or the rank\n * of the first occurrence. For example, (1,3,4,3) is ranked as (1,2,4,2)<\/li>\n * <li>MAXIMUM - Tied values are assigned the maximum applicable rank, or the rank\n * of the last occurrence. For example, (1,3,4,3) is ranked as (1,3,4,3)<\/li>\n * <li>AVERAGE - Tied values are assigned the average of the applicable ranks.\n * For example, (1,3,4,3) is ranked as (1,2.5,4,2.5)<\/li>\n * <li>RANDOM - Tied values are assigned a random integer rank from among the\n * applicable values. The assigned rank will always be an integer, (inclusively)\n * between the values returned by the MINIMUM and MAXIMUM strategies.<\/li>\n * <\/ul>\n * \n * @since 2.0\n * @version $Id$\n */\npublic enum TiesStrategy {\nSEQUENTIAL, MINIMUM, MAXIMUM, AVERAGE, RANDOM;}","position":"org.apache.commons.math3.stat.ranking.TiesStrategy:39","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.copy(this, org.apache.commons.math3.stat.descriptive.moment.StandardDeviation)","position":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:260","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    final double[] double[] = double[][][int];\n    double double = 0;\n    for (int int = 0 ; int < int ; int++) {\n        double += (double[][int]) * (double[][int]);\n    }\n    double[][int] = double;\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:358","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = -int","position":"org.apache.commons.math3.util.ArithmeticUtils:280","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][1] = (((double[][][2][0]) * (double[][][0][1])) + ((double[][][2][1]) * (double[][][1][1]))) + ((double[][][2][2]) * (double[][][2][1]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:215","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((double[][int]) <= 0) {\n    throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(double[][int]);\n} ","position":"org.apache.commons.math3.util.MathArrays:485","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[].int) != (double[].int)) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[].int , double[].int);\n} ","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:66","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.geometry.euclidean.twod.Vector2D.ZERO":"start"},"name":"replace","transplant":{"sourceCode":"return this.org.apache.commons.math3.geometry.euclidean.twod.Vector2D","position":"org.apache.commons.math3.geometry.euclidean.twod.Vector2D:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.twod.Vector2D","position":"org.apache.commons.math3.geometry.euclidean.twod.Segment:51","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Strategies for handling tied values in rank transformations.\n * <ul>\n * <li>SEQUENTIAL - Ties are assigned ranks in order of occurrence in the original array,\n * for example (1,3,4,3) is ranked as (1,2,4,3)<\/li>\n * <li>MINIMUM - Tied values are assigned the minimum applicable rank, or the rank\n * of the first occurrence. For example, (1,3,4,3) is ranked as (1,2,4,2)<\/li>\n * <li>MAXIMUM - Tied values are assigned the maximum applicable rank, or the rank\n * of the last occurrence. For example, (1,3,4,3) is ranked as (1,3,4,3)<\/li>\n * <li>AVERAGE - Tied values are assigned the average of the applicable ranks.\n * For example, (1,3,4,3) is ranked as (1,2.5,4,2.5)<\/li>\n * <li>RANDOM - Tied values are assigned a random integer rank from among the\n * applicable values. The assigned rank will always be an integer, (inclusively)\n * between the values returned by the MINIMUM and MAXIMUM strategies.<\/li>\n * <\/ul>\n * \n * @since 2.0\n * @version $Id$\n */\npublic enum TiesStrategy {\nSEQUENTIAL, MINIMUM, MAXIMUM, AVERAGE, RANDOM;}","position":"org.apache.commons.math3.stat.ranking.TiesStrategy:39","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.util.Incrementor.incrementCount()","position":"org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:106","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][(int + int)] = 1.0 / java.lang.Math.(java.lang.Math.sqrt(double[][int]))","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:628","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkSubMatrixIndex(int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:509","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"d":"offset"},"name":"replace","transplant":{"sourceCode":"if (1 <= double) {\n    return 1;\n} ","position":"org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution:174","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (double) + double","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:181","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    org.apache.commons.math3.linear.RealMatrix.setRowVector(int, org.apache.commons.math3.linear.ArrayRealVector[][int]);\n}","position":"org.apache.commons.math3.linear.EigenDecomposition:253","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:271","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.math3.linear.AbstractRealMatrix.getColumnDimension()","position":"org.apache.commons.math3.linear.AbstractRealMatrix:819","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:474","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = 31","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunction:368","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][][0].int","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:112","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.math3.optimization.PointValuePair org.apache.commons.math3.optimization.PointValuePair = org.apache.commons.math3.optimization.PointValuePair[][0]","position":"org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex:161","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:152","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.stat.correlation.StorelessCovariance.getElement(int, int)","position":"org.apache.commons.math3.stat.correlation.StorelessCovariance:136","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.getOmegaInverse()","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:111","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:139","failures":[],"name":"negateConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"long long = long + (long << 32)","position":"org.apache.commons.math3.util.FastMath:2139","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final T[] T[] = T[][][int]","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:240","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"yDotK":"yDotK","interpolator":"interpolator","length":"length"},"name":"add","transplant":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.double[][].int) ; ++int) {\n    double[][][int] = org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.double[][][int].clone();\n}","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:92","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.storeTime(double);\n    if (boolean) {\n        java.lang.System.java.lang.System.arraycopy(double[], 0, double[][][0], 0, double[].int);\n    } \n    final double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.min(double, org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(double, ((double) * org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.pow(double, double)))));\n    final double double = (double) * double;\n    final double double = (double) + double;\n    final boolean boolean = boolean ? double >= double : double <= double;\n    double = org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.filterStep(double, boolean, boolean);\n    final double double = (double) + double;\n    final boolean boolean = boolean ? double >= double : double <= double;\n    if (boolean) {\n        double = double - (double);\n    } \n} ","position":"org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:306","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.genetics.FixedGenerationCount:61","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator(this)","position":"org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator:78","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator(this)","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"inverted":"vectorsInitialized"},"name":"replace","transplant":{"sourceCode":"boolean = !boolean","position":"org.apache.commons.math3.analysis.solvers.BaseSecantSolver:184","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:197","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"medianResidual":"power","n":"length","robustnessWeights":"interpolatedDerivatives","residuals":"interpolatedDerivatives"},"name":"replace","transplant":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    final double double = (double[][int]) / (6 * double);\n    if (double >= 1) {\n        double[][int] = 0;\n    } else {\n        final double double = 1 - (double * double);\n        double[][int] = double * double;\n    }\n}","position":"org.apache.commons.math3.analysis.interpolation.LoessInterpolator:351","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    final double double = (double[][int]) * double;\n    double[][int] += double;\n    double[][int] += int * double;\n}","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:205","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , int)","position":"org.apache.commons.math3.util.CombinatoricsUtils:304","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixChangingVisitor.start(org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(), org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(), int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:494","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"i":"dimension","j":"dimension"},"name":"replace","transplant":{"sourceCode":"return int < int ? ((int * (int + 1)) / 2) + int : ((int * (int + 1)) / 2) + int","position":"org.apache.commons.math3.stat.correlation.StorelessCovariance:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 2 * (int)","position":"org.apache.commons.math3.ode.FirstOrderConverter:92","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NullArgumentException()","position":"org.apache.commons.math3.analysis.function.StepFunction:67","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(int[].int , int[].int)","position":"org.apache.commons.math3.transform.FastFourierTransformer:567","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return double","position":"org.apache.commons.math3.analysis.solvers.MullerSolver:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor:55","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.math3.linear.BlockFieldMatrix<T> org.apache.commons.math3.linear.BlockFieldMatrix<T> = new org.apache.commons.math3.linear.BlockFieldMatrix<T>(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.getField() , int , int)","position":"org.apache.commons.math3.linear.BlockFieldMatrix:328","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.optim.BaseMultivariateOptimizer<PAIR>.getUpperBound()","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:170","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.util.FastMathLiteralArrays.EXP_FRAC_A":"mapped"},"name":"add","transplant":{"sourceCode":"return double[].clone()","position":"org.apache.commons.math3.util.FastMathLiteralArrays:6158","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:151","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"index":"base","i":"j"},"name":"add","transplant":{"sourceCode":"int int = int[][int]","position":"org.apache.commons.math3.linear.RectangularCholeskyDecomposition:100","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.random.HaltonSequenceGenerator.scramble(int, int, int[][int], (int % (int[][int])))","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:133","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"double double = 1","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory:62","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(java.io.ObjectInput)","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:260","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+1.1426473877336358E-245","position":"org.apache.commons.math3.util.FastMathLiteralArrays:216","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double += org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(double)","position":"org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter:177","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+9.981031744879876E-224","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1788","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(long)++","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:76","type":"CtUnaryOperatorImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.distribution.FDistribution:152","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failureDictionary":{}}]
