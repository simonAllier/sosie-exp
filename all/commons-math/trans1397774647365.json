[{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * This enumeration defines the type of transform which is to be computed.\n * \n * @since 3.0\n * @version $Id$\n */\npublic enum TransformType {\nFORWARD, INVERSE;}","position":"org.apache.commons.math3.transform.TransformType:25","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][][int][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:543","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"-9","position":"org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction:54","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-1","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:59","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return T","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D:380","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.ulp(double)","position":"org.apache.commons.math3.analysis.function.Ulp:32","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"-1.6104730195920897E-7","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4942","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:271","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double = (double[][int]) * ((double[][int]) - (double[][int]))","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:175","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"j":"iterations","perturb":"iterations"},"name":"replace","transplant":{"sourceCode":"return (((int << 2) + int) + int) + 1","position":"org.apache.commons.math3.util.OpenIntToDoubleHashMap:323","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.math3.util.IterationEvent:54","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-1.145160459652136E283","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2958","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:162","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+1.9350945949554443","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3720","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.start(int, int, 0, (int - 1), 0, (int - 1))","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:475","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) - (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int))))","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:2223","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    double[] = null;\n} else {\n    double[] = new double[int];\n    for (int int = 0 ; int < int ; ++int) {\n        double[][int] = java.io.ObjectInput.readDouble();\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:183","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"pmc":"pma","java.math.BigDecimal.ONE":"pa"},"name":"add","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:140","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:123","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.tTest(double[], double[])","position":"org.apache.commons.math3.stat.inference.TestUtils:220","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.t(double[], double[])","position":"org.apache.commons.math3.stat.inference.TestUtils:155","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double += double * double","position":"org.apache.commons.math3.analysis.interpolation.LoessInterpolator:310","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    T = T.add(T[][][int][int].multiply(T[][int]));\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:446","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+9.859622328905143E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4590","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][2] = double / (double)","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:261","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double = double","position":"org.apache.commons.math3.analysis.solvers.BrentSolver:215","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:167","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.stat.regression.ModelSpecificationException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , 0 , 1)","position":"org.apache.commons.math3.stat.regression.SimpleRegression:309","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.math3.random.HaltonSequenceGenerator:139","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{"ratio":"ratio"},"name":"add","transplant":{"sourceCode":"double double = double","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:156","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (long[][int]) - (double * (double[][int]))","position":"org.apache.commons.math3.stat.inference.ChiSquareTest:109","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final double double = 1.997844754509471E-9","position":"org.apache.commons.math3.util.FastMath:2952","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][1][int]","position":"org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator:106","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal((int + 1) , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:101","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(int , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:195","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][][int][int] = 1","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:182","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += org.apache.commons.math3.optim.BaseMultivariateOptimizer<PAIR>.getEvaluations()","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:207","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.math3.linear.RealVectorFormat:257","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.exception.util.ExceptionContext","position":"org.apache.commons.math3.exception.MathIllegalArgumentException:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int) < 0) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.math3.util.OpenIntToDoubleHashMap:546","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixPreservingVisitor.start(org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(), org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(), int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:447","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int >= (org.apache.commons.math3.random.MersenneTwister.int)) {\n    int[][0] = int[][((org.apache.commons.math3.random.MersenneTwister.int) - 1)];\n    int = 1;\n} ","position":"org.apache.commons.math3.random.MersenneTwister:197","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.Mapper[][int] = new org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.LowerUpperBoundMapper(double[][int] , double[][int])","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:132","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"rho":"referenceTime","org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.ONE_OVER_EIGHT":"interpolatedTime"},"name":"replace","transplant":{"sourceCode":"final double double = (double * (this.double)) * double","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:517","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double) - (double)","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:192","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"dif":"upper","lower":"upper","upper":"upper"},"name":"add","transplant":{"sourceCode":"return double + (double * (double - double))","position":"org.apache.commons.math3.stat.descriptive.rank.Percentile:304","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.geometry.euclidean.oned.Interval:66","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double)","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:1086","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = double[][][int].clone()","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:92","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"this.double = double","position":"org.apache.commons.math3.geometry.partitioning.AbstractRegion:422","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.optimization.fitting.CurveFitter<org.apache.commons.math3.analysis.function.HarmonicOscillator.Parametric>.fit(new org.apache.commons.math3.analysis.function.HarmonicOscillator.Parametric(), double[])","position":"org.apache.commons.math3.optimization.fitting.HarmonicFitter:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final double double = org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:876","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:250","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor:41","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.math3.dfp.Dfp = new org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp)","position":"org.apache.commons.math3.dfp.DfpMath:235","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = double[][][int][int]","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:341","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = double[][int]","position":"org.apache.commons.math3.optimization.general.GaussNewtonOptimizer:147","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][int] = org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][int].add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(double[][int]))","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:212","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double[][][3][int]","position":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:124","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][9][int]","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator:339","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (int == 0) {\n    throw new org.apache.commons.math3.exception.ZeroException();\n} ","position":"org.apache.commons.math3.fitting.GaussianCurveFitter:345","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutput.writeInt(int)","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.math3.geometry.partitioning.BSPTree<S>.org.apache.commons.math3.geometry.partitioning.BSPTree<S> = this;\n} else {\n    org.apache.commons.math3.geometry.partitioning.BSPTree<S>.org.apache.commons.math3.geometry.partitioning.BSPTree<S> = this;\n}","position":"org.apache.commons.math3.geometry.partitioning.BSPTree:569","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = double * (((long) * (double[][int++])) - ((double[][int]) * (double[][int])))","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:93","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"n":"rows"},"name":"replace","transplant":{"sourceCode":"if (int == 2) {\n    return 2;\n} ","position":"org.apache.commons.math3.primes.Primes:78","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.math3.linear.SparseFieldMatrix:147","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.util.FastMathLiteralArrays.LN_MANT":"out"},"name":"replace","transplant":{"sourceCode":"return double[][].clone()","position":"org.apache.commons.math3.util.FastMathLiteralArrays:6174","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[][]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:534","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"max":"startRow","rh":"startColumn","trial":"startRow"},"name":"replace","transplant":{"sourceCode":"if (int == 0) {\n    int = int - 1;\n    continue;\n} ","position":"org.apache.commons.math3.dfp.Dfp:1801","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.start(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getRowDimension(), org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension(), int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:510","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.min(double, (double + double))","position":"org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils:117","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.RealMatrix","position":"org.apache.commons.math3.filter.DefaultProcessModel:154","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"jWidth":"n","mBlock":"stateVariation","sum":"t","l":"n","lEnd":"n","n":"n","tBlock":"stateVariation"},"name":"add","transplant":{"sourceCode":"while (int < int) {\n    double += (double[][int++]) * (double[][int]);\n    int += int;\n}","position":"org.apache.commons.math3.linear.BlockRealMatrix:578","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean && boolean) {\n    double[] = new double[int];\n    org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(double);\n} else {\n    double[] = null;\n}","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:284","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"-32767","position":"org.apache.commons.math3.dfp.Dfp:105","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:149","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(double)","position":"org.apache.commons.math3.analysis.function.Sqrt:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double == 0) {\n    if ((double) < 1) {\n        throw new org.apache.commons.math3.exception.NumberIsTooSmallException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double , 1 , false);\n    } \n    return 0;\n} else if (double == 1) {\n    if ((double) < 1) {\n        throw new org.apache.commons.math3.exception.NumberIsTooSmallException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double , 1 , false);\n    } \n    return 0;\n} else {\n    double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.log(double);\n    double double = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.log1p(-double);\n    return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.exp((((((double) - 1) * double) + (((double) - 1) * double)) - (double)));\n}","position":"org.apache.commons.math3.distribution.BetaDistribution:142","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.printState(30)","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1881","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int[].int) != (int)) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(int[].int , int);\n} ","position":"org.apache.commons.math3.util.MultidimensionalCounter:255","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.5851251724785243E286","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1439","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (double) + double","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter:181","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:251","failures":[],"name":"conditionalBoundary","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NullArgumentException()","position":"org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction:156","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.NoDataException()","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:80","type":"CtThrowImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:108","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Specification of ordering direction.\n */\npublic static enum OrderDirection {\nINCREASING, DECREASING;}","position":"org.apache.commons.math3.util.MathArrays:295","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.copy(this, org.apache.commons.math3.stat.descriptive.moment.StandardDeviation)","position":"org.apache.commons.math3.stat.descriptive.moment.StandardDeviation:260","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final double double = (double) + double","position":"org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator:302","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = 1 / org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.sqrt(double))","position":"org.apache.commons.math3.random.UnitSphereRandomVectorGenerator:74","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+2.2867884635925293","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3891","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[]","position":"org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter:151","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:222","failures":[],"name":"removeConditional","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+1.5855598449707031","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3516","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][2][1] = (double * (double - double)) / double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:335","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == (-1)) {\n    int = 680;\n    break;\n} ","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1158","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.random.RandomAdaptor(org.apache.commons.math3.random.RandomGenerator)","position":"org.apache.commons.math3.random.RandomAdaptor:59","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"p":"endColumn","ks":"endColumn","kase":"startColumn","k":"startColumn"},"name":"add","transplant":{"sourceCode":"if (int == (int - 1)) {\n    int = 1;\n} else {\n    int = 2;\n    int = int;\n}","position":"org.apache.commons.math3.linear.SingularValueDecomposition:319","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int <= int ; ++int) {\n    for (int int = int ; int <= int ; ++int) {\n        final T[] T[] = T[][][int];\n        T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:559","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+1.2195076420741757E-249","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1730","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((double[][][][int][int].int) != int) {\n    throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int][int].int , int);\n} ","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:239","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (int) - 1","position":"org.apache.commons.math3.dfp.Dfp:1172","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((double * double) < ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) - (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)))) {\n    double = ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) - (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int))) / double;\n    int = (-int) - 1;\n} ","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:1334","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:157","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"pmc":"c","java.math.BigDecimal.ONE":"c"},"name":"replace","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:140","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (double > 0.0) {\n    double[][(int + int)] = 1.0 / java.lang.Math.(java.lang.Math.sqrt(double));\n} else {\n    double[][(int + int)] = 0.0;\n}","position":"org.apache.commons.math3.stat.regression.MillerUpdatingRegression:637","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.MathArrays.org.apache.commons.math3.util.MathArrays.distance(double[], double[])","position":"org.apache.commons.math3.ml.distance.EuclideanDistance:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+0.10555580258369446","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5218","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.optim.BaseMultivariateOptimizer<PAIR>.getLowerBound()","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:169","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(((2 * int) + 1) , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:99","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(int , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:100","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return -org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.sinQ(double, double))","position":"org.apache.commons.math3.util.FastMath:2332","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    double[][int] *= double;\n}","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:95","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+2.3709316816226527E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5690","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; (double[] != null) && (int < (double[].int)) ; ++int) {\n    if (((double[] != null) && ((double[][int]) < (double[][int]))) || ((double[] != null) && ((double[][int]) > (double[][int])))) {\n        double[] = null;\n    } \n}","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:190","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"T.add(T[][int].multiply(T[][int])).add(T[][(int + int)].multiply(T[][(int + 1)]))","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1338","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T[][int] = T","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:449","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((double) <= 1) {\n    return java.lang.Double.double;\n} ","position":"org.apache.commons.math3.distribution.ParetoDistribution:221","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.atan(double)","position":"org.apache.commons.math3.analysis.function.Atan:36","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = (double) / double","position":"org.apache.commons.math3.linear.SymmLQ:694","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator(this)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:235","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"-4.7559175309753334E156","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2664","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][2] = double[][][2][1]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:237","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int","position":"org.apache.commons.math3.dfp.Dfp:2093","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.max(double, double)","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:155","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException:60","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.random.RandomGenerator.nextLong()","position":"org.apache.commons.math3.random.RandomAdaptor:173","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"data":"polynomials","d":"polynomials"},"name":"replace","transplant":{"sourceCode":"this.double[][] = double[][]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:121","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][] = null","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:193","type":"CtAssignmentImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator:102","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.math3.ode.JacobianMatrices.MismatchedEquations()","position":"org.apache.commons.math3.ode.JacobianMatrices:172","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(double[][][][int].int , int)","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:201","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"valueCoeff":"t","deltaX":"t"},"name":"add","transplant":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure = org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:215","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure = org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(double[][int]).multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure).add(double[][int])","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:110","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"double double","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:1000","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:100","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"iterc":"i","itermax":"j","state":"j"},"name":"add","transplant":{"sourceCode":"if (int == int) {\n    int = 190;\n    break;\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:2006","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixPreservingVisitor.visit(int, int, double[][int])","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:416","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double[][((int) - 1)] = double","position":"org.apache.commons.math3.random.EmpiricalDistribution:550","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.math3.ode.EquationsMapper:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.math3.util.ContinuedFraction:133","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(this, int, int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:306","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"a":"theta","b":"theta"},"name":"replace","transplant":{"sourceCode":"final double double = (double - 1.0) + (double - 1.0)","position":"org.apache.commons.math3.special.Beta:279","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((1 - (7 * double)) + (2 * double))","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:125","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.linear.IterativeLinearSolver.solveInPlace(org.apache.commons.math3.linear.RealLinearOperator, org.apache.commons.math3.linear.RealVector, org.apache.commons.math3.linear.RealVector)","position":"org.apache.commons.math3.linear.IterativeLinearSolver:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][][0].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:260","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Goal type for an optimization problem (minimization or maximization of\n * a scalar function.\n * \n * @version $Id$\n * @since 2.0\n */\npublic enum GoalType implements org.apache.commons.math3.optim.OptimizationData {\nMAXIMIZE, MINIMIZE;}","position":"org.apache.commons.math3.optim.nonlinear.scalar.GoalType:28","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:478","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int[][int] = 1","position":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:60","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = org.apache.commons.math3.analysis.differentiation.DSCompiler.org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int, int, int[][], int[])","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:471","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.math3.distribution.ChiSquaredDistribution(org.apache.commons.math3.random.RandomDataGenerator.getRandomGenerator() , double , org.apache.commons.math3.distribution.ChiSquaredDistribution.double)","position":"org.apache.commons.math3.random.RandomDataGenerator:539","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = ((double[].int) * (double[].int)) - double","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:233","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter:164","failures":[],"name":"inlineConstant","type":"mutation","nodeType":"CtLocalVariableImpl","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.this(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.org.apache.commons.math3.linear.AbstractFieldMatrix.extractField(T[][]), T[][])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:93","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.this(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.org.apache.commons.math3.linear.AbstractFieldMatrix.extractField(T[][]), T[][], boolean)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:135","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = double[][][0].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:142","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setSumLogImpl(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])","position":"org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:262","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"ois":"ois"},"name":"add","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction:146","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = java.io.ObjectInputStream.readDouble()","position":"org.apache.commons.math3.linear.MatrixUtils:885","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+1.2708985520400816E62","position":"org.apache.commons.math3.util.FastMathLiteralArrays:923","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.random.AbstractWell.this(int, int, int, int, new int[]{ ((int)(long >>> 32)) , ((int)(long & 4294967295L)) })","position":"org.apache.commons.math3.random.AbstractWell:132","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"+1.1844011798406507E244","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1342","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = double * ((double[][int]) - (double[][int]))","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:111","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.util.Precision.EPSILON":"error","imagEigenvalues":"scale","this":"this","norm":"error","p":"error","q":"error","r":"error","realEigenvalues":"errfac","s":"error","matrixT":"polynomials","z":"error","idx":"currentDegree","org.apache.commons.math3.linear.EigenDecomposition.EPSILON":"error"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.math3.util.Precision.equals(double, 0.0)) {\n    int int = int;\n    double[][][int][int] = 1.0;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        double double = (double[][][int][int]) - double;\n        double = 0.0;\n        for (int int = int ; int <= int ; int++) {\n            double = double + ((double[][][int][int]) * (double[][][int][int]));\n        }\n        if ((org.apache.commons.math3.util.Precision.compareTo(double[][int], 0.0, double)) < 0.0) {\n            double = double;\n            double = double;\n        } else {\n            int = int;\n            if (org.apache.commons.math3.util.Precision.equals(double[][int], 0.0)) {\n                if (double != 0.0) {\n                    double[][][int][int] = (-double) / double;\n                } else {\n                    double[][][int][int] = (-double) / (double * double);\n                }\n            } else {\n                double double = double[][][int][(int + 1)];\n                double double = double[][][(int + 1)][int];\n                double = (((this.double[][int]) - double) * ((this.double[][int]) - double)) + ((double[][int]) * (double[][int]));\n                double double = ((double * double) - (double * double)) / double;\n                double[][][int][int] = double;\n                if ((org.apache.commons.math3.util.FastMath.abs(double)) > (org.apache.commons.math3.util.FastMath.abs(double))) {\n                    double[][][(int + 1)][int] = ((-double) - (double * double)) / double;\n                } else {\n                    double[][][(int + 1)][int] = ((-double) - (double * double)) / double;\n                }\n            }\n            double double = org.apache.commons.math3.util.FastMath.abs(double[][][int][int]);\n            if (((double * double) * double) > 1) {\n                for (int int = int ; int <= int ; int++) {\n                    double[][][int][int] = (double[][][int][int]) / double;\n                }\n            } \n        }\n    }\n} else if (double < 0.0) {\n    int int = int - 1;\n    if ((org.apache.commons.math3.util.FastMath.abs(double[][][int][(int - 1)])) > (org.apache.commons.math3.util.FastMath.abs(double[][][(int - 1)][int]))) {\n        double[][][(int - 1)][(int - 1)] = double / (double[][][int][(int - 1)]);\n        double[][][(int - 1)][int] = (-((double[][][int][int]) - double)) / (double[][][int][(int - 1)]);\n    } else {\n        final org.apache.commons.math3.complex.Complex org.apache.commons.math3.complex.Complex = org.apache.commons.math3.util.FastMath.cdiv(0.0, -(double[][][(int - 1)][int]), ((double[][][(int - 1)][(int - 1)]) - double), double);\n        double[][][(int - 1)][(int - 1)] = org.apache.commons.math3.complex.Complex.getReal();\n        double[][][(int - 1)][int] = org.apache.commons.math3.complex.Complex.getImaginary();\n    }\n    double[][][int][(int - 1)] = 0.0;\n    double[][][int][int] = 1.0;\n    for (int int = int - 2 ; int >= 0 ; int--) {\n        double double = 0.0;\n        double double = 0.0;\n        for (int int = int ; int <= int ; int++) {\n            double = double + ((double[][][int][int]) * (double[][][int][(int - 1)]));\n            double = double + ((double[][][int][int]) * (double[][][int][int]));\n        }\n        double double = (double[][][int][int]) - double;\n        if ((org.apache.commons.math3.util.Precision.compareTo(double[][int], 0.0, double)) < 0.0) {\n            double = double;\n            double = double;\n            double = double;\n        } else {\n            int = int;\n            if (org.apache.commons.math3.util.Precision.equals(double[][int], 0.0)) {\n                final org.apache.commons.math3.complex.Complex org.apache.commons.math3.complex.Complex = org.apache.commons.math3.util.FastMath.cdiv(-double, -double, double, double);\n                double[][][int][(int - 1)] = org.apache.commons.math3.complex.Complex.getReal();\n                double[][][int][int] = org.apache.commons.math3.complex.Complex.getImaginary();\n            } else {\n                double double = double[][][int][(int + 1)];\n                double double = double[][][(int + 1)][int];\n                double double = ((((this.double[][int]) - double) * ((this.double[][int]) - double)) + ((double[][int]) * (double[][int]))) - (double * double);\n                final double double = (((this.double[][int]) - double) * 2.0) * double;\n                if ((org.apache.commons.math3.util.Precision.equals(double, 0.0)) && (org.apache.commons.math3.util.Precision.equals(double, 0.0))) {\n                    double = (double * double) * (((((org.apache.commons.math3.util.FastMath.abs(double)) + (org.apache.commons.math3.util.FastMath.abs(double))) + (org.apache.commons.math3.util.FastMath.abs(double))) + (org.apache.commons.math3.util.FastMath.abs(double))) + (org.apache.commons.math3.util.FastMath.abs(double)));\n                } \n                final org.apache.commons.math3.complex.Complex org.apache.commons.math3.complex.Complex = org.apache.commons.math3.util.FastMath.cdiv((((double * double) - (double * double)) + (double * double)), (((double * double) - (double * double)) - (double * double)), double, double);\n                double[][][int][(int - 1)] = org.apache.commons.math3.complex.Complex.getReal();\n                double[][][int][int] = org.apache.commons.math3.complex.Complex.getImaginary();\n                if ((org.apache.commons.math3.util.FastMath.abs(double)) > ((org.apache.commons.math3.util.FastMath.abs(double)) + (org.apache.commons.math3.util.FastMath.abs(double)))) {\n                    double[][][(int + 1)][(int - 1)] = (((-double) - (double * (double[][][int][(int - 1)]))) + (double * (double[][][int][int]))) / double;\n                    double[][][(int + 1)][int] = (((-double) - (double * (double[][][int][int]))) - (double * (double[][][int][(int - 1)]))) / double;\n                } else {\n                    final org.apache.commons.math3.complex.Complex org.apache.commons.math3.complex.Complex = org.apache.commons.math3.util.FastMath.cdiv(((-double) - (double * (double[][][int][(int - 1)]))), ((-double) - (double * (double[][][int][int]))), double, double);\n                    double[][][(int + 1)][(int - 1)] = org.apache.commons.math3.complex.Complex.getReal();\n                    double[][][(int + 1)][int] = org.apache.commons.math3.complex.Complex.getImaginary();\n                }\n            }\n            double double = org.apache.commons.math3.util.FastMath.max(org.apache.commons.math3.util.FastMath.abs(double[][][int][(int - 1)]), org.apache.commons.math3.util.FastMath.abs(double[][][int][int]));\n            if (((double * double) * double) > 1) {\n                for (int int = int ; int <= int ; int++) {\n                    double[][][int][(int - 1)] = (double[][][int][(int - 1)]) / double;\n                    double[][][int][int] = (double[][][int][int]) / double;\n                }\n            } \n        }\n    }\n} ","position":"org.apache.commons.math3.linear.EigenDecomposition:804","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) >= 5) {\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        final double double = (double[][][int][int]) / (double[][int]);\n        double += double * double;\n    }\n    double = org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.sqrt((double / (double[].int)))) * (double[][((int) - 5)]);\n} ","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:304","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) == (org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double)) {\n    double = java.lang.Math.java.lang.Math.min(((org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double) * (double)), org.apache.commons.math3.linear.ArrayRealVector.getEntry(int));\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:1637","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance = ((org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance)(java.lang.Object))","position":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:142","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer:346","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char = java.lang.String.charAt(int++)","position":"org.apache.commons.math3.fraction.AbstractFormat:165","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.math3.optimization.PointVectorValuePair","position":"org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer:487","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrixPreservingVisitor.start(org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension(), org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension(), int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:447","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:106","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.threed.Vector3D","position":"org.apache.commons.math3.geometry.euclidean.threed.RotationOrder:172","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.geometry.euclidean.threed.Vector3D((((((-double) * double) - (((double * double) - (double * double)) * double)) - (((double * double) - (double * double)) * double)) * double) , (((((-double) * double) - (((double * double) - (double * double)) * double)) - (((double * double) - (double * double)) * double)) * double) , (((((-double) * double) - (((double * double) - (double * double)) * double)) - (((double * double) - (double * double)) * double)) * double))","position":"org.apache.commons.math3.geometry.euclidean.threed.Plane:367","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.util.FastMathCalc.org.apache.commons.math3.util.FastMathCalc.splitReciprocal(double[], double[])","position":"org.apache.commons.math3.util.FastMathCalc:268","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.math3.linear.RealMatrix) == null) {\n    final int int = double[][].int;\n    final int int = double[][][0].int;\n    double[][] double[][] = new double[int][int];\n    for (int int = 0 ; int < (double[].int) ; ++int) {\n        double[][][int][int] = double[][int];\n        if (int < int) {\n            if (int > 0) {\n                double[][][int][(int - 1)] = double[][(int - 1)];\n            } \n        } else {\n            if (int < ((double[].int) - 1)) {\n                double[][][int][(int + 1)] = double[][int];\n            } \n        }\n    }\n    org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(double[][]);\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:139","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.8127576600610336E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5465","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double[][][int][int]","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:356","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.368173360824585","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3365","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage()","position":"org.apache.commons.math3.exception.MathIllegalStateException:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.math3.linear.FieldVector<T> instanceof org.apache.commons.math3.linear.SparseFieldVector<?>) {\n    return org.apache.commons.math3.linear.SparseFieldVector<T>.outerProduct(((org.apache.commons.math3.linear.SparseFieldVector<T>)(org.apache.commons.math3.linear.FieldVector<T>)));\n} else {\n    final int int = org.apache.commons.math3.linear.FieldVector<T>.getDimension();\n    org.apache.commons.math3.linear.FieldMatrix<T> org.apache.commons.math3.linear.FieldMatrix<T> = new org.apache.commons.math3.linear.SparseFieldMatrix<T>(org.apache.commons.math3.Field<T> , int , int);\n    org.apache.commons.math3.util.OpenIntToFieldHashMap<T>.Iterator org.apache.commons.math3.util.OpenIntToFieldHashMap<T>.Iterator = org.apache.commons.math3.util.OpenIntToFieldHashMap<T>.iterator();\n    while (org.apache.commons.math3.util.OpenIntToFieldHashMap<T>.Iterator.hasNext()) {\n        org.apache.commons.math3.util.OpenIntToFieldHashMap<T>.Iterator.advance();\n        int int = org.apache.commons.math3.util.OpenIntToFieldHashMap<T>.Iterator.key();\n        org.apache.commons.math3.FieldElement<T> org.apache.commons.math3.FieldElement<T> = org.apache.commons.math3.util.OpenIntToFieldHashMap<T>.Iterator.value();\n        for (int int = 0 ; int < int ; int++) {\n            org.apache.commons.math3.linear.FieldMatrix<T>.setEntry(int, int, org.apache.commons.math3.FieldElement<T>.multiply(org.apache.commons.math3.linear.FieldVector<T>.getEntry(int)));\n        }\n    }\n    return org.apache.commons.math3.linear.FieldMatrix<T>;\n}","position":"org.apache.commons.math3.linear.SparseFieldVector:393","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    int int = 0;\n    for (int int = 0 ; int < int ; ++int) {\n        if (((int >> int) & 1) == 1) {\n            int += int + 1;\n        } \n    }\n    if (int >= double) {\n        ++int;\n    } \n}","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:215","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double double = double","position":"org.apache.commons.math3.optimization.univariate.BracketFinder:202","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (double[].int) ; ++int) {\n    org.apache.commons.math3.analysis.differentiation.DerivativeStructure[][int] = new org.apache.commons.math3.analysis.differentiation.DerivativeStructure(double[].int , 1 , int , double[][int]);\n}","position":"org.apache.commons.math3.analysis.differentiation.GradientFunction:46","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"double double = org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:858","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:251","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(double[][][int], 0, double[][][int], 0, double[][][int].int)","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:532","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"-1.029980741248172E-7","position":"org.apache.commons.math3.util.FastMathLiteralArrays:4472","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int[])","position":"org.apache.commons.math3.analysis.differentiation.GradientFunction:58","type":"CtAssignmentImpl"},"status":-2},{"failureDictionary":{}}]
