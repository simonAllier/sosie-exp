[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure).add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)).add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure))","position":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure:1073","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate().add(double).multiply(double).exp().multiply(double).add(1).pow(double)","position":"org.apache.commons.math3.analysis.function.Logistic:226","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.String = \"0\"","position":"org.apache.commons.math3.fraction.BigFraction:1135","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.double[][] = double[][]","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:136","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final double[] double[] = org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.this.getLowerBound()","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:915","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.optim.BaseMultivariateOptimizer<PAIR>.getStartPoint()","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:171","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"jWidth":"sz","iHeight":"sz"},"name":"add","transplant":{"sourceCode":"final double[] double[] = new double[int * int]","position":"org.apache.commons.math3.linear.BlockRealMatrix:229","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = new double[int]","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:399","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"upper":"relativeThreshold","x":"relativeThreshold"},"name":"add","transplant":{"sourceCode":"if (double >= (this.double)) {\n    return 1;\n} ","position":"org.apache.commons.math3.distribution.UniformRealDistribution:143","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.optimization.AbstractConvergenceChecker:87","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.linear.FieldMatrixPreservingVisitor<T>.visit(int, int, T[][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:515","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:530","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"ua":"householderVectors","diagOffset":"m"},"name":"add","transplant":{"sourceCode":"if (int > 0) {\n    double[][][0][0] = 1;\n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:122","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; ++int) {\n    double -= (double[][][int][int]) * (double[][][int][(int - int)]);\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:111","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{"abscissa":"location"},"name":"add","transplant":{"sourceCode":"final double double = org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()","position":"org.apache.commons.math3.geometry.euclidean.twod.Line:253","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (((org.apache.commons.math3.geometry.euclidean.oned.Vector1D)(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>)).getX()) - (org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX())","position":"org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:58","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"m":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction.AINV"},"name":"replace","transplant":{"sourceCode":"double[] double[] = double[][][2]","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:941","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction.double[][][int]","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:403","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.math3.ml.clustering.DoublePoint:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.inference.TestUtils.org.apache.commons.math3.stat.inference.TTest.tTest(double, org.apache.commons.math3.stat.descriptive.StatisticalSummary, double)","position":"org.apache.commons.math3.stat.inference.TestUtils:192","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.math3.optim.PointValuePair org.apache.commons.math3.optim.PointValuePair = org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoint(int)","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:194","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][][0].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:260","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:93","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = int == 0 ? java.math.BigDecimal : java.math.BigDecimal[][(int - 1)]","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:87","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final double[] double[] = double[][][int]","position":"org.apache.commons.math3.linear.QRDecomposition:166","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate().add(double).multiply(double).exp().multiply(double).add(1).pow(double).reciprocal().multiply(((double) - (double)))","position":"org.apache.commons.math3.analysis.function.Logistic:226","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.math3.util.Pair<java.lang.Double[], java.lang.Double[]>(new java.lang.Double[]{ 0.0 } , new java.lang.Double[]{ 2.0 })","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory:41","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.util.Pair<java.math.BigDecimal[], java.math.BigDecimal[]>(java.math.BigDecimal[] , java.math.BigDecimal[])","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:214","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.130435759928337E-140","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1981","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !((boolean) ^ (((org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint)(org.apache.commons.math3.geometry.partitioning.Hyperplane<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D>)).boolean))","position":"org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:87","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance:55","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-4","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:88","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.divide(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:121","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"-9.185071463667081E-9","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5637","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int][int] = double","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:244","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:140","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:161","type":"CtAssignmentImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkSubMatrixIndex(int, int, int, int)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:491","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (double > double) {\n    throw new org.apache.commons.math3.exception.NumberIsTooLargeException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double , double , true);\n} ","position":"org.apache.commons.math3.distribution.LogNormalDistribution:235","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(java.io.ObjectInput)","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:260","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[] double[] = new double[int]","position":"org.apache.commons.math3.util.MathArrays:1307","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMinImpl()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics:219","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.linear.AbstractFieldMatrix<T>.checkAdditionCompatible(org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:232","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final int int : int[]) {\n    org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix, int);\n}","position":"org.apache.commons.math3.linear.MatrixUtils:556","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{"pa":"ppa","tmp1":"ppa","mContext":"mContext"},"name":"replace","transplant":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.multiply(java.math.BigDecimal, this.java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:107","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal = java.math.BigDecimal.divide(java.math.BigDecimal, java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:111","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.acos(double)","position":"org.apache.commons.math3.analysis.function.Acos:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.math.BigDecimal java.math.BigDecimal = java.math.BigDecimal.java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:132","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+0.052318163216114044","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5159","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][1] = double[][][1][0]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:235","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (double == 0) {\n    long long = java.lang.Double.java.lang.Double.doubleToRawLongBits(double);\n    if ((long & -9223372036854775808L) != 0) {\n        long long = ((long)(double));\n        if (((double < 0) && (double == long)) && ((long & 1) == 1)) {\n            return java.lang.Double.double;\n        } \n        if (((double > 0) && (double == long)) && ((long & 1) == 1)) {\n            return -0.0;\n        } \n    } \n    if (double < 0) {\n        return java.lang.Double.double;\n    } \n    if (double > 0) {\n        return 0.0;\n    } \n    return java.lang.Double.double;\n} ","position":"org.apache.commons.math3.util.FastMath:1456","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][int] = 1","position":"org.apache.commons.math3.analysis.differentiation.JacobianFunction:60","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"initialTrustRegionRadius":"x"},"name":"add","transplant":{"sourceCode":"double double = 2 * double","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:2398","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:286","type":"CtLocalVariableImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.stat.descriptive.moment.VectorialMean:103","failures":[],"name":"returnValue","type":"mutation","nodeType":"CtReturnImpl","status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"double[][] double[][] = new double[3][]","position":"org.apache.commons.math3.geometry.euclidean.threed.Rotation:794","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[][] double[][] = org.apache.commons.math3.linear.Array2DRowRealMatrix.double[][]","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:228","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][1] = (((double[][][0][0]) * (double[][][0][1])) + ((double[][][1][0]) * (double[][][1][1]))) + ((double[][][2][0]) * (double[][][2][1]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:209","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[], int, int)) {\n    org.apache.commons.math3.stat.descriptive.summary.Sum org.apache.commons.math3.stat.descriptive.summary.Sum = new org.apache.commons.math3.stat.descriptive.summary.Sum();\n    double double = int;\n    double double = (org.apache.commons.math3.stat.descriptive.summary.Sum.evaluate(double[], int, int)) / double;\n    double double = 0;\n    for (int int = int ; int < (int + int) ; int++) {\n        double += (double[][int]) - double;\n    }\n    return double + (double / double);\n} ","position":"org.apache.commons.math3.stat.descriptive.moment.Mean:163","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<double[]>.add(double[].clone())","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:117","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"+2.8614950293715483E-8","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5963","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double + double","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:291","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"index":"p","parameters":"p"},"name":"add","transplant":{"sourceCode":"if (int >= int) {\n    throw new org.apache.commons.math3.exception.NumberIsTooLargeException(int , int , false);\n} ","position":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure:121","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int - 1 ; int >= int ; --int) {\n    double[][][int][int] = 1;\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:181","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.util.List<java.lang.Double>.size()","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:101","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][1] = double[][][1][0]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:322","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"c":"main","length":"length"},"name":"replace","transplant":{"sourceCode":"final int int = (this.int) + 1","position":"org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator:204","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:94","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats , double)","position":"org.apache.commons.math3.distribution.ParetoDistribution:130","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutput.writeDouble(double[][][int][int])","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:165","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final double double = double * (((-3) * double) + double)","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:110","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((1 - (5 * double)) + double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:131","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.org.apache.commons.math3.exception.util.LocalizedFormats)","position":"org.apache.commons.math3.complex.ComplexFormat:68","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = double[][][0].int","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:93","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final double double = double[][int[][((int[].int) - 1)]]","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:436","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate().add(double).multiply(double).exp().multiply(double).add(1).pow(double).reciprocal().multiply(((double) - (double)))","position":"org.apache.commons.math3.analysis.function.Logistic:226","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"order":"tS"},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NumberIsTooLargeException(int , 1 , true)","position":"org.apache.commons.math3.analysis.FunctionUtils:628","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.NotStrictlyPositiveException(int)","position":"org.apache.commons.math3.util.MultidimensionalCounter:184","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int == (java.lang.Integer.int)) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} ","position":"org.apache.commons.math3.fraction.Fraction:628","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVarianceImpl()","position":"org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics:311","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal(int , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:100","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.math.BigDecimal java.math.BigDecimal = new java.math.BigDecimal((int + 1) , java.math.MathContext)","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:145","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.linear.BiDiagonalTransformer.transformToUpperBiDiagonal()","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:76","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.copy(this, org.apache.commons.math3.stat.descriptive.moment.ThirdMoment)","position":"org.apache.commons.math3.stat.descriptive.moment.ThirdMoment:126","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (int) ; ++int) {\n    final T[] T[] = T[][][((int * (int)) + int)];\n    final int int = int * (org.apache.commons.math3.linear.BlockFieldMatrix.int);\n    final int int = org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.min((int + (org.apache.commons.math3.linear.BlockFieldMatrix.int)), int);\n    for (int int = int ; int < int ; ++int) {\n        int int = int - int;\n        T T = T;\n        int int = int;\n        while (int < (int - 3)) {\n            T = T.add(T[][int].multiply(T[][int])).add(T[][(int + int)].multiply(T[][(int + 1)])).add(T[][(int + int)].multiply(T[][(int + 2)])).add(T[][(int + int)].multiply(T[][(int + 3)]));\n            int += int;\n            int += 4;\n        }\n        while (int < int) {\n            T = T.add(T[][int].multiply(T[][int++]));\n            int += int;\n        }\n        T[][int] = T[][int].add(T);\n    }\n}","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1329","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.math3.stat.clustering.Cluster:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < int) {\n    double = (double - double) / (((double + double) - double) - double);\n    double = (double * (int + ((org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double) * double))) / int;\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:2165","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest:216","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Specification of ordering direction.\n */\npublic static enum OrderDirection {\nINCREASING, DECREASING;}","position":"org.apache.commons.math3.util.MathArrays:295","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer<PAIR>.store(PAIR)","position":"org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer:201","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"errorCovariance":"Omega","measurementMatrix":"Omega","identity":"OmegaInverse","kalmanGain":"Omega"},"name":"add","transplant":{"sourceCode":"this.org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.linear.RealMatrix.subtract(org.apache.commons.math3.linear.RealMatrix.multiply(this.org.apache.commons.math3.linear.RealMatrix)).multiply(this.org.apache.commons.math3.linear.RealMatrix)","position":"org.apache.commons.math3.filter.KalmanFilter:385","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix = new org.apache.commons.math3.linear.LUDecomposition(org.apache.commons.math3.linear.RealMatrix).getSolver().getInverse()","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:81","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"final int[] int[] = new int[6]","position":"org.apache.commons.math3.util.ResizableDoubleArray:1197","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int[] int[] = new int[double[].int]","position":"org.apache.commons.math3.analysis.differentiation.GradientFunction:55","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[] = new double[int]","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator:373","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * ((-44.0) + (double * (152.0 - (120.0 * double))))","position":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:76","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double * (org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.double)","position":"org.apache.commons.math3.ode.nonstiff.GillStepInterpolator:107","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"double[][][1][int] = double","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:260","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > 0) {\n    final double double = double + (0.25 * (double - double));\n    double[][][5][int] = 16 * ((double[][][1][int]) - double);\n    if (int > 1) {\n        final double double = double - double;\n        double[][][6][int] = 16 * (((double[][][2][int]) - double) + (double[][][4][int]));\n        if (int > 2) {\n            final double double = 6 * (double - double);\n            double[][][7][int] = 16 * (((double[][][3][int]) - double) + (3 * (double[][][5][int])));\n            for (int int = 4 ; int <= int ; ++int) {\n                final double double = (0.5 * int) * (int - 1);\n                final double double = ((2 * double) * (int - 2)) * (int - 3);\n                double[][][(int + 4)][int] = 16 * (((double[][][int][int]) + (double * (double[][][(int + 2)][int]))) - (double * (double[][][int][int])));\n            }\n        } \n    } \n} ","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:272","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.optimization.direct.CMAESOptimizer.org.apache.commons.math3.optimization.direct.CMAESOptimizer.sqrt(org.apache.commons.math3.linear.RealMatrix)","position":"org.apache.commons.math3.optimization.direct.CMAESOptimizer:805","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double double = 0","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:340","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double -= double * double","position":"org.apache.commons.math3.stat.regression.SimpleRegression:229","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.this(org.apache.commons.math3.util.Pair<double[], double[]>.getFirst(), org.apache.commons.math3.util.Pair<double[], double[]>.getSecond())","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator:76","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException(true)","position":"org.apache.commons.math3.geometry.euclidean.threed.FieldRotation:520","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][int] = org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int[])","position":"org.apache.commons.math3.analysis.differentiation.GradientFunction:58","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.special.Gamma.LANCZOS_G":"sumRankX","absX":"sumRankX"},"name":"replace","transplant":{"sourceCode":"final double double = (double + double) + 0.5","position":"org.apache.commons.math3.special.Gamma:690","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = double - (((double[].int) * ((double[].int) + 1)) / 2)","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:148","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+2.8407720200442806E99","position":"org.apache.commons.math3.util.FastMathLiteralArrays:1009","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][2] = double[][][2][1]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:237","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"double += double * double","position":"org.apache.commons.math3.optimization.direct.BOBYQAOptimizer:995","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Number","position":"org.apache.commons.math3.exception.NumberIsTooLargeException:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double = double * ((double + 0.5) + 0.5)","position":"org.apache.commons.math3.special.Gamma:572","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.RealMatrix = org.apache.commons.math3.linear.MatrixUtils.org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(double[][])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:156","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new org.apache.commons.math3.exception.NumberIsTooSmallException(int , org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.int , true)","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:2383","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.math3.exception.DimensionMismatchException(int , double[][][].int)","position":"org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction:177","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.math3.dfp.Dfp[][0] = org.apache.commons.math3.dfp.DfpField.newDfp(new java.lang.String(char[] , 0 , int))","position":"org.apache.commons.math3.dfp.DfpMath:76","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    double[][int] = (double[][int]) + (double[][int]);\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:174","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+1.3775582313537598","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3372","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.math3.analysis.differentiation.DerivativeStructure = org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(double[][int]).multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure).add(double[][int]);\n}","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm:109","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (org.apache.commons.math3.util.FastMath.int) ; int++) {\n    org.apache.commons.math3.util.FastMathCalc.org.apache.commons.math3.util.FastMathCalc.expint(int, double[]);\n    org.apache.commons.math3.util.FastMath.ExpIntTable.double[][(int + (org.apache.commons.math3.util.FastMath.int))] = double[][0];\n    org.apache.commons.math3.util.FastMath.ExpIntTable.double[][(int + (org.apache.commons.math3.util.FastMath.int))] = double[][1];\n    if (int != 0) {\n        org.apache.commons.math3.util.FastMathCalc.org.apache.commons.math3.util.FastMathCalc.splitReciprocal(double[], double[]);\n        org.apache.commons.math3.util.FastMath.ExpIntTable.double[][((org.apache.commons.math3.util.FastMath.int) - int)] = double[][0];\n        org.apache.commons.math3.util.FastMath.ExpIntTable.double[][((org.apache.commons.math3.util.FastMath.int) - int)] = double[][1];\n    } \n}","position":"org.apache.commons.math3.util.FastMath:3741","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.validateCovarianceData(double[][], double[][])","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return double[]","position":"org.apache.commons.math3.fitting.HarmonicFitter:348","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][0][2] = double[][][2][0]","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:236","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"index":"length"},"name":"add","transplant":{"sourceCode":"return int >= 0 ? int : 0","position":"org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator:146","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double[].int","position":"org.apache.commons.math3.random.CorrelatedRandomVectorGenerator:148","type":"CtReturnImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:327","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"+6.440430933947252E-58","position":"org.apache.commons.math3.util.FastMathLiteralArrays:2173","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(double)","position":"org.apache.commons.math3.analysis.function.Power:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.double = int","position":"org.apache.commons.math3.linear.AbstractRealMatrix:257","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < (int - 1)) {\n    double = 0;\n    for (int int = int + 1 ; int < int ; ++int) {\n        final double double = double[][int];\n        double += double * double;\n    }\n    final double double = (double[][(int + 1)]) > 0 ? -org.apache.commons.math3.util.FastMath.(org.apache.commons.math3.util.FastMath.sqrt(double)) : org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.sqrt(double);\n    double[][int] = double;\n    if (double != 0.0) {\n        double[][(int + 1)] -= double;\n        for (int int = int + 1 ; int < int ; ++int) {\n            final double[] double[] = double[][][int];\n            double double = 0;\n            for (int int = int + 1 ; int < int ; ++int) {\n                double -= (double[][int]) * (double[][int]);\n            }\n            double /= double * (double[][(int + 1)]);\n            for (int int = int + 1 ; int < int ; ++int) {\n                double[][int] -= double * (double[][int]);\n            }\n        }\n    } \n} ","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:288","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.math.BigDecimal[][int] = java.math.BigDecimal","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory:186","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (double <= double) {\n    double[] = java.util.List<T>.get(int).sample();\n    break;\n} ","position":"org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution:119","type":"CtIfImpl"},"status":-2},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:286","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = 20","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:439","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:438","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = int ; int <= int ; ++int) {\n    for (int int = int ; int <= int ; ++int) {\n        org.apache.commons.math3.linear.RealMatrixPreservingVisitor.visit(int, int, double[][][int][int]);\n    }\n}","position":"org.apache.commons.math3.linear.Array2DRowRealMatrix:514","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < int ; ++int) {\n    final double[] double[] = double[][][int];\n    double double = 0;\n    for (int int = int + 1 ; int < int ; ++int) {\n        double -= (double[][int]) * (double[][int]);\n    }\n    double /= double * (double[][(int + 1)]);\n    for (int int = int + 1 ; int < int ; ++int) {\n        double[][int] -= double * (double[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:299","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (this.boolean) {\n    this.org.apache.commons.math3.linear.RealVector = new org.apache.commons.math3.linear.ArrayRealVector(this.org.apache.commons.math3.linear.RealLinearOperator.getRowDimension());\n    this.org.apache.commons.math3.linear.RealVector.set(0.0);\n} else {\n    this.org.apache.commons.math3.linear.RealVector = org.apache.commons.math3.linear.RealVector;\n}","position":"org.apache.commons.math3.linear.SymmLQ:622","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.this(org.apache.commons.math3.linear.AbstractFieldMatrix<T>.org.apache.commons.math3.linear.AbstractFieldMatrix.extractField(T[][]), T[][], boolean)","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:135","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.List<org.apache.commons.math3.fitting.WeightedObservedPoint>.add(new org.apache.commons.math3.fitting.WeightedObservedPoint(double , double , double))","position":"org.apache.commons.math3.fitting.WeightedObservedPoints:68","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<org.apache.commons.math3.optimization.fitting.WeightedObservedPoint>.add(new org.apache.commons.math3.optimization.fitting.WeightedObservedPoint(double , double , double))","position":"org.apache.commons.math3.optimization.fitting.CurveFitter:110","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double = (-1.2975133253453532E-11) + (double * double)","position":"org.apache.commons.math3.special.Erf:164","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][(int + 1)] -= double","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:298","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double *= double","position":"org.apache.commons.math3.analysis.interpolation.HermiteInterpolator:182","type":"CtOperatorAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(int)","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:392","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator.this(int, int)","position":"org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator:63","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"index":"i","n":"i"},"name":"replace","transplant":{"sourceCode":"int int = int + int","position":"org.apache.commons.math3.linear.OpenMapRealVector:399","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int + 2","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:202","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][1][0] = (((double[][][0][1]) * (double[][][0][0])) + ((double[][][1][1]) * (double[][][1][0]))) + ((double[][][2][1]) * (double[][][2][0]))","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:220","type":"CtAssignmentImpl"},"status":0},{"transformationPoint":"org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator:74","failures":[],"name":"math","type":"mutation","nodeType":"CtBinaryOperatorImpl","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double[][(int + int)] = (double[][(int + int)]) - (double[][(int + int)])","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:764","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.end()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:565","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.math3.util.MathArrays:289","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.newCovarianceData(double[][])","position":"org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression:61","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-9.133484280193855E-9","position":"org.apache.commons.math3.util.FastMathLiteralArrays:5333","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double -= (double[][int]) * (double[][int])","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:367","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.math3.geometry.euclidean.twod.Vector2D.ZERO":"start"},"name":"replace","transplant":{"sourceCode":"return this.org.apache.commons.math3.geometry.euclidean.twod.Vector2D","position":"org.apache.commons.math3.geometry.euclidean.twod.Vector2D:176","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.geometry.euclidean.twod.Vector2D","position":"org.apache.commons.math3.geometry.euclidean.twod.Segment:51","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"double = double[][0]","position":"org.apache.commons.math3.analysis.function.StepFunction:96","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (long * ((int + int) + 1)) / 12.0","position":"org.apache.commons.math3.stat.inference.MannWhitneyUTest:180","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()","position":"org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates:284","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"x2":"h"},"name":"add","transplant":{"sourceCode":"final double double = 1.0 / (double - 1)","position":"org.apache.commons.math3.analysis.differentiation.DSCompiler:1608","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double double = (double * (double)) / 8.0","position":"org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator:105","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"(int)--","position":"org.apache.commons.math3.dfp.Dfp:675","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.math3.genetics.FixedGenerationCount:58","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-4.391824838015402E-9","position":"org.apache.commons.math3.util.FastMathLiteralArrays:6124","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int + 1 ; int < int ; ++int) {\n    final double[] double[] = double[][][int];\n    double double = 0;\n    for (int int = int ; int < int ; ++int) {\n        double -= (double[][int]) * (double[][int]);\n    }\n    double /= double * (double[][][int][int]);\n    for (int int = int ; int < int ; ++int) {\n        double[][int] -= double * (double[][int]);\n    }\n}","position":"org.apache.commons.math3.linear.BiDiagonalTransformer:338","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"T = org.apache.commons.math3.stat.clustering.Cluster<T>.getCenter().centroidOf(org.apache.commons.math3.stat.clustering.Cluster<T>.getPoints())","position":"org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer:203","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.math3.fitting.WeightedObservedPoint:75","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean = boolean","position":"org.apache.commons.math3.ode.events.EventState:351","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.boolean","position":"org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator:133","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.math3.util.Pair<java.lang.Double[], java.lang.Double[]>(new java.lang.Double[]{ 0.0 } , new java.lang.Double[]{ 2.0 })","position":"org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory:41","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.math3.util.Pair<double[], double[]>(double[] , double[])","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:168","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterc":"n","itermax":"n","state":"n"},"name":"replace","transplant":{"sourceCode":"if (int == int) {\n    int = 190;\n    break;\n} ","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:2006","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; ++int) {\n    for (int int = 0 ; int < int ; ++int) {\n        java.io.ObjectOutput.writeDouble(double[][][int][int]);\n    }\n}","position":"org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator:163","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"+1.2264227867126465","position":"org.apache.commons.math3.util.FastMathLiteralArrays:3253","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double = double","position":"org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator:165","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 0) {\n    return new org.apache.commons.math3.geometry.partitioning.BSPTree<org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D>(java.lang.Boolean.java.lang.Boolean);\n} ","position":"org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:177","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.math3.util.FastMath.org.apache.commons.math3.util.FastMath.rint(double)","position":"org.apache.commons.math3.analysis.function.Rint:32","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"final int int = 31","position":"org.apache.commons.math3.analysis.polynomials.PolynomialFunction:368","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.math3.linear.Array2DRowFieldMatrix<T>.getColumnDimension()","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:540","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"do {\n    final int int = org.apache.commons.math3.optim.BaseOptimizer<org.apache.commons.math3.optim.PointValuePair>.getEvaluations();\n    final int int = int - int;\n    final int int = int - 1;\n    final int int = int - 1;\n    double double = 0;\n    double double = 0;\n    if (int <= (2 * int)) {\n        if ((int >= 1) && (int <= int)) {\n            double = double;\n            if ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) == (org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double)) {\n                double = -double;\n            } \n            org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, int, double);\n        } else if (int > int) {\n            double = org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int);\n            double = -(double);\n            if ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) == (org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double)) {\n                double = java.lang.Math.java.lang.Math.min(((org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double) * (double)), org.apache.commons.math3.linear.ArrayRealVector.getEntry(int));\n            } \n            if ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) == (org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double)) {\n                double = java.lang.Math.java.lang.Math.max(((-(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double)) * (double)), org.apache.commons.math3.linear.ArrayRealVector.getEntry(int));\n            } \n            org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, int, double);\n        } \n    } else {\n        final int int = (int - int) / int;\n        int = (int - (int * int)) - int;\n        int = int + int;\n        if (int > int) {\n            final int int = int;\n            int = int - int;\n            int = int;\n        } \n        final int int = int - 1;\n        final int int = int - 1;\n        org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, int, org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int));\n        org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, int, org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int));\n    }\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, java.lang.Math.java.lang.Math.min(java.lang.Math.java.lang.Math.max(double[][int], ((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) + (org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int)))), double[][int]));\n        if ((org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int)) == (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int))) {\n            org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, double[][int]);\n        } \n        if ((org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int)) == (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int))) {\n            org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, double[][int]);\n        } \n    }\n    final double double = org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(org.apache.commons.math3.linear.ArrayRealVector.toArray());\n    final double double = boolean ? double : -double;\n    final int int = org.apache.commons.math3.optim.BaseOptimizer<org.apache.commons.math3.optim.PointValuePair>.getEvaluations();\n    org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, double);\n    if (int == 1) {\n        double = double;\n        int = 0;\n    } else if (double < (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int))) {\n        int = int;\n    } \n    if (int <= ((2 * int) + 1)) {\n        if ((int >= 2) && (int <= (int + 1))) {\n            org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((double - double) / double));\n            if (int < (int + int)) {\n                final double double = (org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double) / double;\n                org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(0, int, -double);\n                org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, int, double);\n                org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((int + int), int, ((-(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double)) * double));\n            } \n        } else if (int >= (int + 2)) {\n            final int int = ((int * (int + 1)) / 2) - 1;\n            final double double = (double - double) / double;\n            final double double = double - double;\n            org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, (((org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double) * (double - (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)))) / double));\n            org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((((org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)) * double) - (double * double)) / double));\n            if (((double * double) < (org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double)) && (double < (org.apache.commons.math3.linear.ArrayRealVector.getEntry((int - int))))) {\n                org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, org.apache.commons.math3.linear.ArrayRealVector.getEntry((int - int)));\n                org.apache.commons.math3.linear.ArrayRealVector.setEntry((int - int), double);\n                if ((int) == int) {\n                    int = int - int;\n                } \n                org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((int - int), int, double);\n                org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, int, double);\n            } \n            org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(0, int, ((-(double + double)) / (double * double)));\n            org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, int, ((-(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double)) / (org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry((int - int), int))));\n            org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((int - int), int, ((-(org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(0, int))) - (org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int))));\n            org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(0, int, (java.lang.Math.(java.lang.Math.sqrt(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double)) / (double * double)));\n            org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, int, (java.lang.Math.(java.lang.Math.sqrt(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.double)) / double));\n            org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry((int - int), int, ((-(org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(0, int))) - (org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, int))));\n        } \n    } else {\n        org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(0, int, double);\n        org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, int, double);\n        org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, int, -double);\n        org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int, int, -double);\n        final int int = (((int * (int - 1)) / 2) + int) - 1;\n        final double double = (org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, (int - 1))) * (org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int, (int - 1)));\n        org.apache.commons.math3.linear.ArrayRealVector.setEntry(int, ((((double - (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int))) - (org.apache.commons.math3.linear.ArrayRealVector.getEntry(int))) + double) / double));\n    }\n} while (org.apache.commons.math3.optim.BaseOptimizer<org.apache.commons.math3.optim.PointValuePair>.(getEvaluations()) < int )","position":"org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer:1618","type":"CtDoImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final double[] double[] = org.apache.commons.math3.util.Pair<double[], double[]>.getSecond()","position":"org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory:157","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"constantTerm","u":"constantTerm","mean":"constantTerm"},"name":"replace","transplant":{"sourceCode":"return (this.double) * (double + double)","position":"org.apache.commons.math3.distribution.ExponentialDistribution:236","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector)) + (double)","position":"org.apache.commons.math3.optim.linear.LinearObjectiveFunction:106","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"jWidth":"i","outIndex":"j","array":"rowI","jColumn":"i","i":"j","block":"rowI"},"name":"replace","transplant":{"sourceCode":"T[][((int * int) + int)] = T[][int++]","position":"org.apache.commons.math3.linear.BlockFieldMatrix:1152","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"T[][int] = org.apache.commons.math3.linear.FieldMatrixChangingVisitor<T>.visit(int, int, T[][int])","position":"org.apache.commons.math3.linear.Array2DRowFieldMatrix:562","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return T","position":"org.apache.commons.math3.util.OpenIntToFieldHashMap:438","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"double[][][int] = new double[int]","position":"org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator:176","type":"CtAssignmentImpl"},"status":-2},{"failureDictionary":{}}]
