[{"failures":[0,1,2],"variableMapping":{"_mask":"codepoint","holder":"codepoint"},"name":"replace","transplant":{"sourceCode":"return (int & int) != 0","position":"org.apache.commons.lang3.BitField:123","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int >= (java.lang.Character.char)) && (int <= (java.lang.Character.char))) {\n    return true;\n} else {\n    return false;\n}","position":"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover:34","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.lang3.math.Fraction:285","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:1176","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>(java.lang.Object[].int)","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:330","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.StringUtils.(org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.String)) && ((int == 2) || (int == 3))) {\n    return new java.util.Locale(java.lang.String);\n} else {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n}","position":"org.apache.commons.lang3.LocaleUtils:130","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"char[] = org.apache.commons.lang3.text.StrBuilder.char[]","position":"org.apache.commons.lang3.text.StrSubstitutor:860","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException((\"No child initializer with name \" + java.lang.String))","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:345","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short[]","position":"org.apache.commons.lang3.Conversion:1267","type":"CtReturnImpl"},"status":-2},{"failures":[3],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.ClassCastException()","position":"org.apache.commons.lang3.builder.CompareToBuilder:283","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArithmeticException(\"The numerator must not be negative\")","position":"org.apache.commons.lang3.math.Fraction:180","type":"CtThrowImpl"},"status":-1},{"failures":[4,5,6,7],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"addInitializer() must not be called after start()!\")","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:146","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.builder.ReflectionToStringBuilder.org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.util.Collection<java.lang.String>.toArray())","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:317","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4354","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Float[].int) ; int++) {\n    final java.lang.Float java.lang.Float = java.lang.Float[][int];\n    float[][int] = java.lang.Float == null ? float : java.lang.Float.floatValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3394","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{"ignoredLen":"len","pos":"len"},"name":"replace","transplant":{"sourceCode":"if (int > 0) {\n    int += int;\n    continue;\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:794","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, int, int)","position":"org.apache.commons.lang3.text.StrBuilder:1710","type":"CtInvocationImpl"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 11","position":"org.apache.commons.lang3.Conversion:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((int)(long))","position":"org.apache.commons.lang3.mutable.MutableLong:182","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"type":"type"},"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:568","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    for (java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getActualTypeArguments()) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)) {\n            return true;\n        } \n    }\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1434","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Long.java.lang.Long.valueOf(-1L)","position":"org.apache.commons.lang3.math.NumberUtils:38","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (long > long) {\n    long = long;\n} ","position":"org.apache.commons.lang3.math.NumberUtils:1205","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.text.StrSubstitutor:869","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NoSuchMethodException((((\"No such accessible method: \" + java.lang.String) + \"() on object: \") + (java.lang.Object.getClass().getName())))","position":"org.apache.commons.lang3.reflect.MethodUtils:189","type":"CtThrowImpl"},"status":-2},{"failures":[17],"binaryOperator":"(char[].int) + (char[].int)","name":"math","position":"org.apache.commons.lang3.ArrayUtils:3797","type":"mutation","status":-1},{"failures":[18],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.ClassUtils:236","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.DiffBuilder:596","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","position":"org.apache.commons.lang3.SerializationUtils:180","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\")","position":"org.apache.commons.lang3.BooleanUtils:1084","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"CsvEscaper should never reach the [1] index\")","position":"org.apache.commons.lang3.StringEscapeUtils:262","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl(org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.reflect.Type, \"componentType is null\"))","position":"org.apache.commons.lang3.reflect.TypeUtils:1559","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T[] T[] = java.lang.reflect.Array.((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, ((T[].int) + (T[].int)))))","position":"org.apache.commons.lang3.ArrayUtils:3724","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Long.java.lang.Long.valueOf(-1L)","position":"org.apache.commons.lang3.math.NumberUtils:38","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.text.StrBuilder:520","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int) == 0) {\n    throw new java.lang.ArithmeticException(\"Unable to invert zero.\");\n} ","position":"org.apache.commons.lang3.math.Fraction:490","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String.getChars(0, int, char[], int)","position":"org.apache.commons.lang3.text.StrBuilder:517","type":"CtInvocationImpl"},"status":-2},{"failures":[19],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.StringUtils:6075","type":"mutation","status":-1},{"failures":[20,21,22],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?>[] = org.apache.commons.lang3.ArrayUtils.java.lang.Class<?>[]","position":"org.apache.commons.lang3.ClassUtils:518","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"for (int int = int ; int >= 0 ; --int) {\n    if ((java.lang.CharSequence.charAt(int)) == int) {\n        return int;\n    } \n}","position":"org.apache.commons.lang3.CharSequenceUtils:127","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.CharSequence.length()) == 0) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1381","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"long long = long[][0]","position":"org.apache.commons.lang3.math.NumberUtils:793","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    break;\n} ","position":"org.apache.commons.lang3.ArrayUtils:5283","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"type":"type"},"name":"add","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:408","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:514","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"pattern":"pattern"},"name":"add","transplant":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String.length())","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:153","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.getInstance(java.lang.String, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.DateFormatUtils:319","type":"CtLocalVariableImpl"},"status":-2},{"failures":[23],"binaryOperator":"(boolean[][(int + int)] ? 1 : 0) << int","name":"math","position":"org.apache.commons.lang3.Conversion:1162","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.toString()","position":"org.apache.commons.lang3.text.StrSubstitutor:479","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.apache.commons.lang3.EnumUtils:120","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])","position":"org.apache.commons.lang3.reflect.MethodUtils:132","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n    if (boolean) {\n        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n    } \n    int += int;\n    final int int = int;\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String java.lang.String = null;\n    if (org.apache.commons.lang3.text.StrMatcher != null) {\n        final char[] char[] = java.lang.String.toCharArray();\n        int int = 0;\n        for (int int = 0 ; int < (char[].int) ; int++) {\n            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                break;\n            } \n            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                java.lang.String = java.lang.String.substring(0, int);\n                java.lang.String = java.lang.String.substring((int + int));\n                break;\n            } \n        }\n    } \n    if (java.util.List<java.lang.String> == null) {\n        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n    } \n    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n    java.util.List<java.lang.String>.add(java.lang.String);\n    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n    if (java.lang.String == null) {\n        java.lang.String = java.lang.String;\n    } \n    if (java.lang.String != null) {\n        final int int = java.lang.String.length();\n        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n        boolean = true;\n        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n        int = (int + int) - (int - int);\n        int += int;\n        int += int;\n        int += int;\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    } \n    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n    break;\n} else {\n    int--;\n    int += int;\n}","position":"org.apache.commons.lang3.text.StrSubstitutor:799","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int == 1) {\n    int++;\n    final java.lang.String java.lang.String = java.util.ArrayList<java.lang.String>.get(int);\n    if (java.lang.String != null) {\n        java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String);\n    } \n} ","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:425","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(java.lang.reflect.TypeVariable<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:465","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.math.Fraction:849","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.tuple.Pair:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.exception.ExceptionContext.getFormattedExceptionMessage(java.lang.String)","position":"org.apache.commons.lang3.exception.ContextedRuntimeException:251","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?> == null) {\n    return !(java.lang.Class<?>.isPrimitive());\n} ","position":"org.apache.commons.lang3.ClassUtils:629","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.reflect.TypeUtils:1381","type":"mutation","status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type[] java.lang.reflect.Type[] = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType)","position":"org.apache.commons.lang3.reflect.TypeUtils:611","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object.wait()","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:305","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.CharSequence.length()","position":"org.apache.commons.lang3.CharSequenceUtils:167","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.CharSet:178","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = { \"rawtypes\" , \"unchecked\" })\nprivate enum ComparableComparator implements java.util.Comparator {\nINSTANCE;\n    /** \n     * Comparable based compare implementation.\n     * \n     * @param obj1 left hand side of comparison\n     * @param obj2 right hand side of comparison\n     * @return negative, 0, positive comparison value\n     */\n@java.lang.Override\n    public int compare(final java.lang.Object obj1, final java.lang.Object obj2) {\n        return ((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Object);\n    }\n}","position":"org.apache.commons.lang3.Range:481","type":"CtEnumImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.CharSequence == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} ","position":"org.apache.commons.lang3.text.StrBuilder:496","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = java.lang.String","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:306","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n    return int;\n} ","position":"org.apache.commons.lang3.StringUtils:1550","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof java.util.Map.Entry<?, ?>) {\n    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n    java.util.Map<java.lang.Object, java.lang.Object>.put(java.util.Map.Entry<?, ?>.getKey(), java.util.Map.Entry<?, ?>.getValue());\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object));\n    if ((java.lang.Object[].int) < 2) {\n        throw new java.lang.IllegalArgumentException(((((\"Array element \" + int) + \", \\'\") + java.lang.Object) + \"\\', has a length less than 2\"));\n    } \n    java.util.Map<java.lang.Object, java.lang.Object>.put(java.lang.Object[][0], java.lang.Object[][1]);\n} else {\n    throw new java.lang.IllegalArgumentException(((((\"Array element \" + int) + \", \\'\") + java.lang.Object) + \"\\', is neither of type Map.Entry nor an Array\"));\n}","position":"org.apache.commons.lang3.ArrayUtils:244","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(short[], java.lang.Short.shortValue(), int)","position":"org.apache.commons.lang3.ArrayUtils:5463","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Field[] java.lang.reflect.Field[] = java.lang.Class<?>.getDeclaredFields()","position":"org.apache.commons.lang3.reflect.FieldUtils:216","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int = int >= (int) ? (int) - 1 : int","position":"org.apache.commons.lang3.text.StrBuilder:2423","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.text.StrSubstitutor:870","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[24],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = (int * 4) + int","position":"org.apache.commons.lang3.Conversion:1519","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (int * 8) + int","position":"org.apache.commons.lang3.Conversion:1331","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.PrintStream.println(java.lang.String)","position":"org.apache.commons.lang3.exception.ExceptionUtils:464","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((double >= 0), \"Both range values must be non-negative.\")","position":"org.apache.commons.lang3.RandomUtils:140","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = null","position":"org.apache.commons.lang3.reflect.ConstructorUtils:252","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((int >= 0) && (int < int)) {\n    int = org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[], int, int, org.apache.commons.lang3.text.StrBuilder, java.util.List<java.lang.String>);\n    if (int >= int) {\n        org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n    } \n}","position":"org.apache.commons.lang3.text.StrTokenizer:644","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"final int int = (java.lang.String.indexOf(java.lang.String)) + (java.lang.String.length())","position":"org.apache.commons.lang3.builder.ToStringStyle:357","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:2820","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T[] T[] = org.apache.commons.lang3.ArrayUtils.((T[])(org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(T[], java.lang.Class<?>)))","position":"org.apache.commons.lang3.ArrayUtils:4017","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    if ((int < (int)) || (int > (int))) {\n        return false;\n    } \n} else {\n    if ((int >= (int)) && (int <= (int))) {\n        return false;\n    } \n}","position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:104","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","position":"org.apache.commons.lang3.ObjectUtils:294","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.lang3.CharRange:342","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"allowSigns":"canPass"},"name":"add","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.lang3.math.NumberUtils:1385","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = (org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()) <= (org.apache.commons.lang3.concurrent.TimedSemaphore.int)) || ((int) < org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()))","position":"org.apache.commons.lang3.concurrent.TimedSemaphore:303","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.lang3.StringUtils:5818","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.StrBuilder:2072","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, long[].int)","position":"org.apache.commons.lang3.builder.ToStringStyle:1013","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return short","position":"org.apache.commons.lang3.math.NumberUtils:994","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 9","position":"org.apache.commons.lang3.Conversion:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.util.Arrays.java.util.Arrays.hashCode(((float[])(java.lang.Object)));\n} ","position":"org.apache.commons.lang3.AnnotationUtils:360","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setDefaultFullDetail(true)","position":"org.apache.commons.lang3.AnnotationUtils:56","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setUseIdentityHashCode(false)","position":"org.apache.commons.lang3.AnnotationUtils:60","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.ArrayUtils:872","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getField(java.lang.String);\n    org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.isTrue((java.lang.reflect.Field == null), (\"Reference to field %s is ambiguous relative to %s\" + \"; a matching field exists on two or more implemented interfaces.\"), java.lang.String, java.lang.Class<?>);\n    java.lang.reflect.Field = java.lang.reflect.Field;\n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n}","position":"org.apache.commons.lang3.reflect.FieldUtils:123","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>()","position":"org.apache.commons.lang3.ClassUtils:129","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.lang3.StringUtils:1640","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"startCutoff":"len","java.util.Calendar.SUNDAY":"strLen"},"name":"replace","transplant":{"sourceCode":"if (int < int) {\n    int += 7;\n} ","position":"org.apache.commons.lang3.time.DateUtils:1208","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(org.apache.commons.lang3.text.StrBuilder.char[], 0, char[], int, int)","position":"org.apache.commons.lang3.text.StrBuilder:680","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.set(new java.util.WeakHashMap<java.lang.Object, java.lang.Object>())","position":"org.apache.commons.lang3.builder.ToStringStyle:189","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.java.lang.ThreadLocal<java.util.Set<org.apache.commons.lang3.builder.IDKey>>.remove()","position":"org.apache.commons.lang3.builder.HashCodeBuilder:495","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, \"typeArgMappings is null\")","position":"org.apache.commons.lang3.reflect.TypeUtils:1473","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.lang3.ClassPathUtils:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int = int - 1","position":"org.apache.commons.lang3.time.DateUtils:1195","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int += int","position":"org.apache.commons.lang3.ArrayUtils:6080","type":"CtOperatorAssignmentImpl"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"variableMapping":{"cal":"calendar"},"name":"add","transplant":{"sourceCode":"java.util.Calendar.clear()","position":"org.apache.commons.lang3.time.FastDateParser:314","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Calendar == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} ","position":"org.apache.commons.lang3.time.DateUtils:1688","type":"CtIfImpl"},"status":-1},{"failures":[65],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int))","position":"org.apache.commons.lang3.StringUtils:2852","type":"CtInvocationImpl"},"status":-1},{"failures":[66],"variableMapping":{"bits":"i","this":"this","sb":"sb"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","position":"org.apache.commons.lang3.Conversion:1443","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","position":"org.apache.commons.lang3.Conversion:1525","type":"CtInvocationImpl"},"status":-1},{"failures":[67],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int += 7","position":"org.apache.commons.lang3.time.DateUtils:1209","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = java.util.Calendar.int","position":"org.apache.commons.lang3.time.DateUtils:1174","type":"CtAssignmentImpl"},"status":-1},{"failures":[68],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.this.toString()","position":"org.apache.commons.lang3.text.StrBuilder:2831","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"\"","position":"org.apache.commons.lang3.text.StrBuilder:2179","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += int","position":"org.apache.commons.lang3.ArrayUtils:6080","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this","position":"org.apache.commons.lang3.builder.CompareToBuilder:972","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"str":"str"},"name":"add","transplant":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:6310","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String, null)","position":"org.apache.commons.lang3.text.WordUtils:381","type":"CtReturnImpl"},"status":0},{"failures":[],"binaryOperator":"int < 0","name":"conditionalBoundary","position":"org.apache.commons.lang3.StringUtils:2144","type":"mutation","status":0},{"failures":[],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.lang3.Conversion:1363","type":"mutation","status":0},{"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"variableMapping":{"offset":"i"},"name":"replace","transplant":{"sourceCode":"int -= 15","position":"org.apache.commons.lang3.time.DateUtils:1058","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int[][0] = int","position":"org.apache.commons.lang3.time.FastDatePrinter:346","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"source":"source"},"name":"add","transplant":{"sourceCode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String)","position":"org.apache.commons.lang3.text.StrSubstitutor:394","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern.matcher(java.lang.String.substring(int))","position":"org.apache.commons.lang3.time.FastDateParser:308","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String.java.lang.String.format(java.lang.String, java.lang.Object[]))","position":"org.apache.commons.lang3.text.StrBuilder:562","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","position":"org.apache.commons.lang3.ArrayUtils:2275","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int + (org.apache.commons.lang3.RandomUtils.java.util.Random.nextInt((int - int)))","position":"org.apache.commons.lang3.RandomUtils:93","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type[][int] = java.lang.reflect.Type","position":"org.apache.commons.lang3.reflect.TypeUtils:1384","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"FastDateFormat[\" + (org.apache.commons.lang3.time.FastDatePrinter.getPattern())) + \",\") + (org.apache.commons.lang3.time.FastDatePrinter.getLocale())) + \",\") + (org.apache.commons.lang3.time.FastDatePrinter.getTimeZone().getID()))","name":"math","position":"org.apache.commons.lang3.time.FastDateFormat:588","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.CharSet != null) {\n    return org.apache.commons.lang3.CharSet;\n} ","position":"org.apache.commons.lang3.CharSet:144","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.Conversion:1086","type":"CtLocalVariableImpl"},"status":-2},{"failures":[129],"variableMapping":{"value":"out","operand":"out"},"name":"add","transplant":{"sourceCode":"short += short","position":"org.apache.commons.lang3.mutable.MutableShort:138","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short = ((short)((short & (~int)) | int))","position":"org.apache.commons.lang3.Conversion:1128","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"str":"str","startIndex":"startIndex","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String.charAt(0), int)","position":"org.apache.commons.lang3.text.StrBuilder:2465","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String.charAt(0), int)","position":"org.apache.commons.lang3.text.StrBuilder:2341","type":"CtReturnImpl"},"status":-2},{"failures":[130,131],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int))) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int)))) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int)))","position":"org.apache.commons.lang3.time.DateUtils:183","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 'a'","position":"org.apache.commons.lang3.Conversion:541","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'd';\n    } else {\n        return '5';\n    }\n} else {\n    if (boolean[][int]) {\n        return '9';\n    } else {\n        return '1';\n    }\n}","position":"org.apache.commons.lang3.Conversion:429","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.lang3.CharRange:341","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.CharSequenceUtils.org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, 0, java.lang.CharSequence, 0, java.lang.CharSequence.length())","position":"org.apache.commons.lang3.StringUtils:836","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.Object.getClass().getName())","position":"org.apache.commons.lang3.ObjectUtils:368","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object.getClass().getName()).append('@')","position":"org.apache.commons.lang3.ObjectUtils:320","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.builder.ToStringBuilder.(getObject()) == null) {\n    return org.apache.commons.lang3.builder.ToStringBuilder.getStyle().getNullText();\n} ","position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:684","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int >= (int) ? int : int + 100","position":"org.apache.commons.lang3.time.FastDateParser:393","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"numerator":"hashCode","denominator":"hashCode"},"name":"add","transplant":{"sourceCode":"return (this.int) / (this.int)","position":"org.apache.commons.lang3.math.Fraction:407","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.time.FormatCache:262","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"obj"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.math.Fraction) == false) {\n    return false;\n} ","position":"org.apache.commons.lang3.math.Fraction:848","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Object == this) || ((java.lang.Object instanceof java.lang.reflect.ParameterizedType) && org.apache.commons.lang3.reflect.TypeUtils.(org.apache.commons.lang3.reflect.TypeUtils.equals(this, ((java.lang.reflect.ParameterizedType)(java.lang.Object)))))","position":"org.apache.commons.lang3.reflect.TypeUtils:200","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += 7","position":"org.apache.commons.lang3.time.DateUtils:1215","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Inner class to output a two digit month.<\/p>\n */\nprivate static class TwoDigitMonthField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    static final org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField INSTANCE = new org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField();\n\n    /** \n     * Constructs an instance of {@code TwoDigitMonthField}.\n     */\nTwoDigitMonthField() {\n        java.lang.Object.super();\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 2;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.appendTo(java.lang.StringBuffer, ((java.util.Calendar.get(java.util.Calendar.int)) + 1));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n        java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:960","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{"srcPos":"length","nHexs":"length"},"name":"replace","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n} ","position":"org.apache.commons.lang3.Conversion:1431","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.Boolean[].int) ; int++) {\n    final java.lang.Boolean java.lang.Boolean = java.lang.Boolean[][int];\n    boolean[][int] = java.lang.Boolean == null ? boolean : java.lang.Boolean.booleanValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3462","type":"CtForImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType()","position":"org.apache.commons.lang3.ArrayUtils:3735","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.String java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1))","position":"org.apache.commons.lang3.math.NumberUtils:525","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"byte[][(int + int)] = ((byte)(255 & (int >> int)))","position":"org.apache.commons.lang3.Conversion:1332","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType, org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.ParameterizedType), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} else {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n}","position":"org.apache.commons.lang3.reflect.TypeUtils:857","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"arraySeparator":"fieldName"},"name":"add","transplant":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:1793","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (long[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long[][int]);\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:994","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder).appendNewLine()","position":"org.apache.commons.lang3.text.StrBuilder:955","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.appendNull()","position":"org.apache.commons.lang3.text.StrBuilder:624","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.math.Fraction:846","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.lang3.builder.ToStringStyle:1666","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"boolean boolean","position":"org.apache.commons.lang3.ArrayUtils:1579","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.lang3.math.NumberUtils:1344","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.StringBuilder.length()) > 0) {\n    java.lang.StringBuilder.append('\\n');\n} ","position":"org.apache.commons.lang3.exception.DefaultExceptionContext:134","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException((int - int));\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2130","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    int = 0;\n} ","position":"org.apache.commons.lang3.StringUtils:2141","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.ArrayList<java.lang.String>.add(java.lang.String.substring(int))","position":"org.apache.commons.lang3.StringUtils:2861","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char < 256) {\n    return \"\\\\u00\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} else if (char < 4096) {\n    return \"\\\\u0\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} ","position":"org.apache.commons.lang3.CharUtils:355","type":"CtIfImpl"},"status":-2},{"failures":[132],"binaryOperator":"(int + int)","name":"math","position":"org.apache.commons.lang3.text.StrBuilder:1527","type":"mutation","status":-1},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.lang3.reflect.TypeUtils.toString(org.apache.commons.lang3.reflect.TypeUtils)","position":"org.apache.commons.lang3.reflect.TypeUtils:120","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.java.lang.String.format(\"%s[]\", org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(java.lang.reflect.GenericArrayType.getGenericComponentType()))","position":"org.apache.commons.lang3.reflect.TypeUtils:1826","type":"CtReturnImpl"},"status":-2},{"failures":[133],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:6284","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:1436","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.SerializationUtils.org.apache.commons.lang3.SerializationUtils.<T>deserialize(new java.io.ByteArrayInputStream(byte[]))","position":"org.apache.commons.lang3.SerializationUtils:268","type":"CtReturnImpl"},"status":-2},{"failures":[134,135],"variableMapping":{"months":"i"},"name":"replace","transplant":{"sourceCode":"int += 12","position":"org.apache.commons.lang3.time.DurationFormatUtils:323","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.StringUtils:3116","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((((short[].int) == 0) && (int == 0)) || (0 == int)) {\n    return long;\n} ","position":"org.apache.commons.lang3.Conversion:722","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.text.StrBuilder:451","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":62,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":3,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":50,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Cal":131,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":108,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":111,"org.apache.commons.lang3.mutable.MutableIntTest.testConstructors":15,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":58,"org.apache.commons.lang3.time.FastDatePrinterTest.testMilleniumBug":119,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":81,"org.apache.commons.lang3.mutable.MutableIntTest.testGetSet":16,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":35,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":88,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":34,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":113,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":40,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":41,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":4,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameDay_Date":130,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":7,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":27,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":75,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":85,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":0,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithCalendar":33,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":74,"org.apache.commons.lang3.mutable.MutableLongTest.testAddValueObject":14,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":1,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":104,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":98,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":95,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":54,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":127,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithCalendar":31,"org.apache.commons.lang3.StringUtilsTest.testSplitByWholeSeparatorPreserveAllTokens_StringStringInt":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":89,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfMonthWithCalendar":56,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":112,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":46,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":106,"org.apache.commons.lang3.mutable.MutableLongTest.testAddValuePrimitive":11,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":6,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":42,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":78,"org.apache.commons.lang3.text.StrBuilderTest.testLeftString":68,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":107,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":121,"org.apache.commons.lang3.time.FastDatePrinterTest.testSimpleDate":117,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":22,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":114,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":86,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":67,"org.apache.commons.lang3.StringUtilsTest.testSplit_StringString_StringStringInt":135,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":77,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":92,"org.apache.commons.lang3.mutable.MutableLongTest.testSubtractValueObject":12,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":5,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":44,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":57,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":94,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":109,"org.apache.commons.lang3.StringUtilsTest.testSplitPreserveAllTokens_StringString_StringStringInt":134,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":48,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":55,"org.apache.commons.lang3.mutable.MutableLongTest.testPrimitiveValues":9,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":82,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":83,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":38,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":36,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":25,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":110,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumericSpace":19,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":26,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang645":123,"org.apache.commons.lang3.mutable.MutableLongTest.testDecrement":13,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":132,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":53,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":125,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":97,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":96,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":126,"org.apache.commons.lang3.ConversionTest.testIntToByteArray":24,"org.apache.commons.lang3.time.FastDatePrinterTest.testLang538":122,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":72,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":90,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":118,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfMonthWithDate":59,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":128,"org.apache.commons.lang3.mutable.MutableLongTest.testSubtractValuePrimitive":10,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":115,"org.apache.commons.lang3.ClassUtilsTest.test_getSimpleName_Class":18,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":51,"org.apache.commons.lang3.ConversionTest.testBinaryToShort":129,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":93,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":124,"org.apache.commons.lang3.StringUtilsTest.testReverse_String":133,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":45,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":30,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":64,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":103,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":84,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":43,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullCalendar":52,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":61,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":87,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_NoAutoboxing":21,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":47,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":99,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":116,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":102,"org.apache.commons.lang3.ConversionTest.testByteToHex":66,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":76,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":100,"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemoverTest.testValidCharacters":2,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":37,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":73,"org.apache.commons.lang3.ConversionTest.testBinaryToByte":23,"org.apache.commons.lang3.time.FastDatePrinterTest.testLowYearPadding":120,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":20,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":79,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":91,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":28,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectArrayToObjectArray":17,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithCalendar":39,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":32,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDaysOfYearWithDate":63,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":80,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":49,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":101,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithCalendar":29,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":71,"org.apache.commons.lang3.mutable.MutableLongTest.testIncrement":8,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithCalendar":60,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":69,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":105}}]
