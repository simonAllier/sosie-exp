[{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:114","sourceCode":"int = int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:779","sourceCode":"int += int","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"initialCapacity":"pos","org.apache.commons.lang3.text.StrBuilder.CAPACITY":"pos"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:195","sourceCode":"try {\n    java.text.DateFormat java.text.DateFormat;\n    if (java.lang.Integer == null) {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n    } else if (java.lang.Integer == null) {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n    } else {\n        java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n    }\n    java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n    final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n    if (java.lang.String != null) {\n        java.lang.String = java.lang.String;\n    } \n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"pattern"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharRange:244","sourceCode":"java.lang.StringBuilder.append(char)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.math.Fraction:339","failures":[19],"status":-1,"binaryOperator":"(int + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:566","sourceCode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigDecimal(java.lang.String);\n} catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:530","sourceCode":"if (((java.lang.String == null) && (java.lang.String == null)) && ((((java.lang.String.charAt(0)) == '-') && org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String.substring(1)))) || org.apache.commons.lang3.math.NumberUtils.(org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)))) {\n    try {\n        return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } catch (final java.lang.NumberFormatException java.lang.NumberFormatException) {\n    }\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[20,21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:120","sourceCode":"java.io.Writer.write((\"\\\\u0\" + org.apache.commons.lang3.text.translate.CharSequenceTranslator.(org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int))))","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:357","sourceCode":"throw new java.lang.NullPointerException(\"Cannot get the toString of a null identity\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:148","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a checked exception: \" + java.lang.Throwable))","type":"CtThrowImpl"},"failures":[23,24,25,26,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:372","sourceCode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:376","sourceCode":"java.text.SimpleDateFormat.applyPattern(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"parsePattern":"pattern","pattern":"pattern"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:260","sourceCode":"int int = 1","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:243","sourceCode":"final int int = (java.lang.String.hashCode()) * 127","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1196","failures":[29],"status":-1,"binaryOperator":"(int * 32) + int","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:704","sourceCode":"return false","type":"CtReturnImpl"},"failures":[30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2796","sourceCode":"if ((int < 0) || (int > int)) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:209","sourceCode":"if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n    boolean = true;\n} else if (boolean) {\n    char[][int] = java.lang.Character.java.lang.Character.toTitleCase(char);\n    boolean = false;\n} ","type":"CtIfImpl"},"failures":[31,32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"index":"i","size":"i"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:380","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendContentStart(java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:884","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","this":"this"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:194","sourceCode":"if (java.lang.String == null) {\n    try {\n        java.text.DateFormat java.text.DateFormat;\n        if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else if (java.lang.Integer == null) {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n        } else {\n            java.text.DateFormat = java.text.DateFormat.java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n        }\n        java.lang.String = ((java.text.SimpleDateFormat)(java.text.DateFormat)).toPattern();\n        final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String);\n        if (java.lang.String != null) {\n            java.lang.String = java.lang.String;\n        } \n    } catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n        throw new java.lang.IllegalArgumentException((\"No date time pattern for locale: \" + java.util.Locale));\n    }\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:909","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, short)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:664","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, java.lang.String, double)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:1441","failures":[54],"status":-1,"binaryOperator":"(int + int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:138","sourceCode":"this.short += short","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:97","sourceCode":"this.short = short","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value","operand":"value"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1156","sourceCode":"throw new java.lang.IllegalArgumentException(\"nBools-1+dstPos is greather or equal to than 8\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:349","sourceCode":"return java.util.Arrays.java.util.Arrays.hashCode(((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[55],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:336","sourceCode":"throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:231","sourceCode":"throw new java.lang.IllegalArgumentException(\"The chars array must not be empty\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1190","sourceCode":"if ((((int - 1) * 32) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nInts-1)*32+srcPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:913","sourceCode":"org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar, int, org.apache.commons.lang3.time.DateUtils.int)","type":"CtInvocationImpl"},"failures":[56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"org.apache.commons.lang3.time.DateUtils.MODIFY_CEILING","nInts":"field"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:705","sourceCode":"org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar, int, org.apache.commons.lang3.time.DateUtils.int)","type":"CtInvocationImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:2473","sourceCode":"return org.apache.commons.lang3.ArrayUtils.int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableByte:232","sourceCode":"return java.lang.Byte.java.lang.Byte.valueOf(org.apache.commons.lang3.mutable.MutableByte.byteValue())","type":"CtReturnImpl"},"failures":[77],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:789","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:523","sourceCode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n}","type":"CtIfImpl"},"failures":[78,79,43],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.text.WordUtils:327","failures":[80,81],"status":-1,"binaryOperator":"(int == 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:857","sourceCode":"int int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:264","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:143","sourceCode":"java.lang.String = null","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:93","sourceCode":"java.lang.String = this.java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:945","sourceCode":"java.lang.String = java.lang.Integer.java.lang.Integer.toString(org.apache.commons.lang3.math.Fraction.getProperWhole())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR":"toProperString","newLineStr":"toProperString"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4523","sourceCode":"int = int + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1402","sourceCode":"++int","type":"CtUnaryOperatorImpl"},"failures":[82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"replLength":"append","start":"append","end":"append"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:378","sourceCode":"final java.lang.NumberFormatException java.lang.NumberFormatException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:136","sourceCode":"return 7","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:848","sourceCode":"if ((java.lang.Object instanceof org.apache.commons.lang3.math.Fraction) == false) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:237","sourceCode":"return (long) == (((org.apache.commons.lang3.mutable.MutableLong)(java.lang.Object)).longValue())","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"obj":"obj"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:527","sourceCode":"return 'e'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:304","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'f';\n            } else {\n                return 'e';\n            }\n        } else {\n            if (boolean[][int]) {\n                return 'd';\n            } else {\n                return 'c';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return 'b';\n            } else {\n                return 'a';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '9';\n            } else {\n                return '8';\n            }\n        }\n    }\n} else {\n    if (((boolean[].int) > (int + 2)) && (boolean[][(int + 2)])) {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '7';\n            } else {\n                return '6';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '5';\n            } else {\n                return '4';\n            }\n        }\n    } else {\n        if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n            if (boolean[][int]) {\n                return '3';\n            } else {\n                return '2';\n            }\n        } else {\n            if (boolean[][int]) {\n                return '1';\n            } else {\n                return '0';\n            }\n        }\n    }\n}","type":"CtIfImpl"},"failures":[85,86],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:246","sourceCode":"if (int <= int) {\n    throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + int) + \") must be greater than start (\") + int) + \")\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:902","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[35,35,87,36,36,37,37,38,38,88,88,89,90,91,92,39,39,93,94,95,96,97,98,40,40,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,41,41,115,116,117,117,118,119,119,120,79,121,122,42,42,123,43,43,124,125,126,127,128,129,130,131,132,133,44,45,134,135,46,47,48,49,50,51,52,53,136,137,138,139,140,141,142,143,144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"start":"i","end":"i"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:169","sourceCode":"if (!(java.lang.Class<?>.isPrimitive())) {\n    float += 0.1F;\n    java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[145,146,147,148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:256","sourceCode":"this.char[] = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:254","sourceCode":"char[] = java.lang.String.toCharArray()","type":"CtAssignmentImpl"},"failures":[149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,137,138,139,140,141,142,143,144,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"chars":"chars"}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:6404","sourceCode":"if (int < 7) {\n    throw new java.lang.IllegalArgumentException(\"Minimum abbreviation width with offset is 7\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:52","sourceCode":"if (((int > 2) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isZeroToThree(java.lang.CharSequence.charAt(int)))) && org.apache.commons.lang3.text.translate.OctalUnescaper.(isOctalDigit(java.lang.CharSequence.charAt(int)))) {\n    java.lang.StringBuilder.append(java.lang.CharSequence.charAt(int));\n} ","type":"CtIfImpl"},"failures":[181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maxWidth":"next"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:571","sourceCode":"return '2'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:415","sourceCode":"if (boolean[][(int + 1)]) {\n    if (boolean[][int]) {\n        return 'f';\n    } else {\n        return '7';\n    }\n} else {\n    if (boolean[][int]) {\n        return 'b';\n    } else {\n        return '3';\n    }\n}","type":"CtIfImpl"},"failures":[182,183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:5810","sourceCode":"int += java.lang.CharSequence.length()","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:95","sourceCode":"java.lang.Character.java.lang.Character.charCount(java.lang.Character.java.lang.Character.codePointAt(java.lang.CharSequence, int))","type":"CtInvocationImpl"},"failures":[184,185,186,187,188,189,190,191,22,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,181],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"sub":"input","idx":"pt"}},{"transplant":{"position":"org.apache.commons.lang3.time.PaddedNumberField:852","sourceCode":"java.lang.StringBuffer.append('0')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1298","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[35,95,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:315","sourceCode":"return false","type":"CtReturnImpl"},"failures":[218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":214,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeWithDelimiters_String":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":98,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":192,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":121,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":151,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairsLang858":186,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":124,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":152,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":53,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalize_String":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":106,"org.apache.commons.lang3.mutable.MutableByteTest.testToByte":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":107,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":188,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":130,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":63,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":154,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":57,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":209,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":99,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":213,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":69,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Reversed":18,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":167,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":4,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":60,"org.apache.commons.lang3.ConversionTest.testIntToHex":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":173,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":127,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":177,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":176,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":175,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":174,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":68,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":134,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":55,"org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable":206,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":181,"org.apache.commons.lang3.text.WordUtilsTest.testUncapitalizeWithDelimiters_String":81,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":0,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":204,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseNull":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":149,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":150,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":104,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":101,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":49,"org.apache.commons.lang3.CharSetTest.testContains_Char":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":111,"org.apache.commons.lang3.ConversionTest.testHexDigitMsb0ToInt":83,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":95,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":145,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":66,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUuuuu":211,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":119,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":169,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":170,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseNull":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":132,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":135,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":171,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":195,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":168,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":90,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":74,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":123,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":79,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":94,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":35,"org.apache.commons.lang3.text.translate.UnicodeUnescaperTest.testUPlus":210,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":122,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":202,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":41,"org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs":184,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":128,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":148,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Normal":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":91,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":201,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity":217,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":52,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":34,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":172,"org.apache.commons.lang3.ConversionTest.testLongToIntArray":29,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":155,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":88,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":7,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":116,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":59,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":2,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":187,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":76,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":212,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":215,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":205,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":115,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":203,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":38,"org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping":216,"org.apache.commons.lang3.time.DateUtilsTest.testRound":58,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":72,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":197,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":42,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":56,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":96,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":19,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":67,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":8,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseUnchecked":25,"org.apache.commons.lang3.mutable.MutableLongTest.testEquals":84,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":112,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":208,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":125,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":71,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":126,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":165,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":164,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":161,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":160,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":163,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":105,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":110,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":1,"org.apache.commons.lang3.text.StrTokenizerTest.testGetContent":178,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":199,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":118,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":45,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":198,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":100,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":43,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":75,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":196,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":3,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":193,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":191,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":10,"org.apache.commons.lang3.text.StrTokenizerTest.test1":137,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":179,"org.apache.commons.lang3.text.StrTokenizerTest.test3":139,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":180,"org.apache.commons.lang3.text.StrTokenizerTest.test2":138,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":93,"org.apache.commons.lang3.text.StrTokenizerTest.test8":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":89,"org.apache.commons.lang3.text.StrTokenizerTest.test5":141,"org.apache.commons.lang3.text.StrTokenizerTest.test4":140,"org.apache.commons.lang3.text.StrTokenizerTest.test7":143,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseUnchecked":28,"org.apache.commons.lang3.text.StrTokenizerTest.test6":142,"org.apache.commons.lang3.RangeTest.testContainsRange":218,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":114,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentExceptionCauseError":23,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":47,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":157,"org.apache.commons.lang3.ArrayUtilsTest.testToString":136,"org.apache.commons.lang3.ConversionTest.testLongToHex":82,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":22,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalize_String":32,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":158,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":166,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":61,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isIn_Reversed":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":92,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testConcurrentRuntimeExceptionCauseError":27,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigit_2args":86,"org.apache.commons.lang3.StringUtilsTest.testUnescapeSurrogatePairs":185,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":48,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":102,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":78,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":200,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":207,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":14,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":117,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":51,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber":20,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":153,"org.apache.commons.lang3.CharRangeTest.testConstructorAccessors_isNotIn_Normal":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":133,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":30}}]
