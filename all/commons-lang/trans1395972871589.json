[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:974","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 0) {\n    int++;\n} else {\n    char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n    int--;\n    char[][int] = char;\n}","position":"org.apache.commons.lang3.RandomStringUtils:274","type":"CtIfImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,32,33,34,34,35,36,36,37,37,38,39,40,41,42,42,43,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,57,58,59,60,61,62,63,64,64,65,66,67,68,68,69,69,70,71,72,73,74,75,76,77,77,78,79,80,81,81,82,82,83,84,85,85,86,87,88,89,90,91,91,92,93,93,94,95,95,96,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"variableMapping":{"array2":"value","array1":"value"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} ","position":"org.apache.commons.lang3.ArrayUtils:1418","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.unregister(java.lang.Object)","position":"org.apache.commons.lang3.builder.ToStringStyle:565","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object[][int] = java.lang.Object","position":"org.apache.commons.lang3.ArrayUtils:1828","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.BitField.((short)(getRawValue(short)))","position":"org.apache.commons.lang3.BitField:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Wrapped ThreadFactory must not be null!\")","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.time.FastDatePrinter:302","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (double == double) {\n    return double;\n} ","position":"org.apache.commons.lang3.RandomUtils:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return double","position":"org.apache.commons.lang3.math.IEEE754rUtils:222","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 73 << 8","position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = (char[][0]) == '-' ? 1 : 0","position":"org.apache.commons.lang3.math.NumberUtils:1348","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Object.toString()","position":"org.apache.commons.lang3.text.StrSubstitutor:211","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.HashCodeBuilder.org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(T, java.lang.Class<?>, org.apache.commons.lang3.builder.HashCodeBuilder, boolean, java.lang.String[])","position":"org.apache.commons.lang3.builder.HashCodeBuilder:343","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"char[] = org.apache.commons.lang3.text.StrBuilder.char[]","position":"org.apache.commons.lang3.text.StrSubstitutor:860","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:282","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldEnd(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:678","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, double[].int)","position":"org.apache.commons.lang3.builder.ToStringStyle:1318","type":"CtInvocationImpl"},"status":0},{"failures":[114,115,116,117,118,119],"variableMapping":{"buffer":"buffer","value":"value"},"name":"add","transplant":{"sourceCode":"java.lang.StringBuffer.append(int)","position":"org.apache.commons.lang3.builder.ToStringStyle:690","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((char)(int + '0')))","position":"org.apache.commons.lang3.time.FastDatePrinter:800","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 'k' :\n    org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n    break;","position":"org.apache.commons.lang3.time.FastDatePrinter:253","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    for (final java.lang.reflect.Type java.lang.reflect.Type : ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)).getBounds()) {\n        if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.Class<?>)) {\n            return true;\n        } \n    }\n    return false;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:385","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = null","position":"org.apache.commons.lang3.time.DurationFormatUtils:486","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(4)","position":"org.apache.commons.lang3.CharRange:237","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = (java.lang.String.length()) + int","position":"org.apache.commons.lang3.StringUtils:2070","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.int","position":"org.apache.commons.lang3.StringUtils:6594","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.math.BigInteger.bitLength()) > 31) {\n    throw new java.lang.ArithmeticException(\"overflow: numerator too large after multiply\");\n} ","position":"org.apache.commons.lang3.math.Fraction:777","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(\"1.3\")","position":"org.apache.commons.lang3.SystemUtils:885","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case org.apache.commons.lang3.text.ExtendedMessageFormat.char :\n    int++;\n    break;","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:380","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case 1 :\n        return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(java.lang.String.charAt(0), int);\n    case 2 :\n        final char char = java.lang.String.charAt(0);\n        final char char = java.lang.String.charAt(1);\n        final char[] char[] = new char[int];\n        for (int int = (int * 2) - 2 ; int >= 0 ; int-- , int--) {\n            char[][int] = char;\n            char[][(int + 1)] = char;\n        }\n        return new java.lang.String(char[]);\n    default :\n        final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(int);\n        for (int int = 0 ; int < int ; int++) {\n            java.lang.StringBuilder.append(java.lang.String);\n        }\n        return java.lang.StringBuilder.toString();\n}","position":"org.apache.commons.lang3.StringUtils:5137","type":"CtSwitchImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:192","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?> != null) {\n    if (!java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isPublic(java.lang.Class<?>.getModifiers()))) {\n        return false;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","position":"org.apache.commons.lang3.reflect.ConstructorUtils:291","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.StringUtils:1808","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (char < 4096) {\n    return \"\\\\u0\" + java.lang.Integer.(java.lang.Integer.toHexString(char));\n} ","position":"org.apache.commons.lang3.CharUtils:357","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}","position":"org.apache.commons.lang3.builder.EqualsBuilder:486","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.FastDatePrinter:245","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.String.trim()","position":"org.apache.commons.lang3.time.DurationFormatUtils:217","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4221","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"org.apache.commons.lang3.reflect.MemberUtils.ACCESS_TEST":"java.util.Calendar.HOUR_OF_DAY","modifiers":"java.util.Calendar.SECOND"},"name":"replace","transplant":{"sourceCode":"return (int & (this.java.util.Calendar.int)) == 0","position":"org.apache.commons.lang3.reflect.MemberUtils:76","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((((((((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int))) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int)))) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int)))) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int)))) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int)))) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int)))) && ((java.util.Calendar.get(java.util.Calendar.int)) == (java.util.Calendar.get(java.util.Calendar.int)))) && ((java.util.Calendar.getClass()) == (java.util.Calendar.getClass()))","position":"org.apache.commons.lang3.time.DateUtils:242","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.Double[]","position":"org.apache.commons.lang3.ArrayUtils:794","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = -1","position":"org.apache.commons.lang3.builder.CompareToBuilder:735","type":"CtAssignmentImpl"},"status":-2},{"failures":[120,121],"binaryOperator":"(int + 3)","name":"math","position":"org.apache.commons.lang3.Conversion:560","type":"mutation","status":-1},{"failures":[],"variableMapping":{"index":"tmodd1"},"name":"add","transplant":{"sourceCode":"int int = int + 2","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:82","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = int == 0 ? int : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int, int)","position":"org.apache.commons.lang3.math.Fraction:773","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","items":"items"},"name":"add","transplant":{"sourceCode":"org.apache.commons.lang3.Validate.noNullElements(T[])","position":"org.apache.commons.lang3.ObjectUtils:528","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notEmpty(T[], \"null/empty items\")","position":"org.apache.commons.lang3.ObjectUtils:549","type":"CtInvocationImpl"},"status":0},{"failures":[122,123,124,125],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:1247","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.lang3.exception.ExceptionUtils:410","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.StringUtils:4939","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String","position":"org.apache.commons.lang3.StringUtils:4942","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (byte == (byte[][int])) {\n    return int;\n} ","position":"org.apache.commons.lang3.ArrayUtils:2446","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:181","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String.substring(int, int)).append(java.lang.String)","position":"org.apache.commons.lang3.StringUtils:4531","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T T = ((T)(java.util.TreeSet<T>.toArray()[(((java.util.TreeSet<T>.size()) - 1) / 2)]))","position":"org.apache.commons.lang3.ObjectUtils:556","type":"CtLocalVariableImpl"},"status":-2},{"failures":[126],"variableMapping":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY"},"name":"replace","transplant":{"sourceCode":"return byte[].clone()","position":"org.apache.commons.lang3.ArrayUtils:406","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.byte[]","position":"org.apache.commons.lang3.ArrayUtils:3233","type":"CtReturnImpl"},"status":-1},{"failures":[122,127,128,129,130,131,123,132,133,134,135,136,124,137,125,138,139,140],"variableMapping":{"throwable":"throwable"},"name":"replace","transplant":{"sourceCode":"if (java.lang.Throwable == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.exception.ExceptionUtils:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return ((java.lang.Throwable)(java.lang.reflect.Method.invoke(java.lang.Throwable)));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n}","position":"org.apache.commons.lang3.exception.ExceptionUtils:203","type":"CtTryImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Inclusivity literals for {@link #hierarchy(Class, Interfaces)}.\n * @since 3.2\n */\npublic enum Interfaces {\nINCLUDE, EXCLUDE;}","position":"org.apache.commons.lang3.ClassUtils:52","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The byte[] must not be null\");\n} ","position":"org.apache.commons.lang3.SerializationUtils:265","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"negated":"negated","start":"end","range":"range","end":"end"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.lang3.CharRange.boolean) {\n    return ((char) >= (org.apache.commons.lang3.CharRange.char)) && ((char) <= (org.apache.commons.lang3.CharRange.char));\n} ","position":"org.apache.commons.lang3.CharRange:187","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.CharRange.boolean) {\n    return ((char) == 0) && ((char) == (java.lang.Character.char));\n} ","position":"org.apache.commons.lang3.CharRange:192","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.lang3.exception.ContextedException:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.parseDate(java.lang.String, null, java.lang.String[])","position":"org.apache.commons.lang3.time.DateUtils:268","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.lang3.text.StrTokenizer.hasNext()) {\n    return java.lang.String[][(int)++];\n} ","position":"org.apache.commons.lang3.text.StrTokenizer:517","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.set(java.util.Date, java.util.Calendar.int, int)","position":"org.apache.commons.lang3.time.DateUtils:630","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(char)","position":"org.apache.commons.lang3.text.StrBuilder:1348","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new java.util.HashMap<java.lang.String, org.apache.commons.lang3.concurrent.BackgroundInitializer<?>>()","position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:102","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.keySet()) {\n    final java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n    if (!(java.lang.Class<?>.equals(java.lang.Class<?>))) {\n        org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Class<?>, java.lang.Class<?>);\n    } \n}","position":"org.apache.commons.lang3.ClassUtils:97","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = int","position":"org.apache.commons.lang3.text.StrBuilder:1814","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"workArea":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.clear()","position":"org.apache.commons.lang3.text.StrTokenizer:739","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)","position":"org.apache.commons.lang3.text.StrBuilder:903","type":"CtInvocationImpl"},"status":-2},{"failures":[141],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int = (int * 4) + int","position":"org.apache.commons.lang3.Conversion:947","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"short[][(int + int)] = ((short)(65535 & (int >> int)))","position":"org.apache.commons.lang3.Conversion:1265","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return int & (int)","position":"org.apache.commons.lang3.BitField:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.lang3.math.NumberUtils:823","type":"CtReturnImpl"},"status":-2},{"failures":[142],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\")","position":"org.apache.commons.lang3.math.Fraction:580","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Threshold must not be negative\")","position":"org.apache.commons.lang3.StringUtils:6855","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"newArray":"array"},"name":"replace","transplant":{"sourceCode":"return int[]","position":"org.apache.commons.lang3.ArrayUtils:4181","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ArrayUtils:355","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Class<?>[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.ClassUtils:728","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) > 0","position":"org.apache.commons.lang3.text.StrTokenizer:541","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getSystemProperty(\"java.util.prefs.PreferencesFactory\")","position":"org.apache.commons.lang3.SystemUtils:467","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.LocaleUtils:100","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return char[]","position":"org.apache.commons.lang3.CharSequenceUtils:172","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.String)","position":"org.apache.commons.lang3.reflect.TypeUtils:1842","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Short.java.lang.Short.valueOf(org.apache.commons.lang3.mutable.MutableShort.shortValue())","position":"org.apache.commons.lang3.mutable.MutableShort:232","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object != null) {\n    java.lang.StringBuilder.append(java.lang.Object);\n} ","position":"org.apache.commons.lang3.StringUtils:4050","type":"CtIfImpl"},"status":-2},{"failures":[143,144,145,146,147],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"continue","position":"org.apache.commons.lang3.StringUtils:3123","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int -= 15","position":"org.apache.commons.lang3.time.DateUtils:1058","type":"CtOperatorAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * <p>Class used as a null placeholder where {@code null}\n * has another meaning.<\/p>\n * \n * <p>For example, in a {@code HashMap} the\n * {@link java.util.HashMap#get(java.lang.Object)} method returns\n * {@code null} if the {@code Map} contains {@code null} or if there is\n * no matching key. The {@code Null} placeholder can be used to distinguish\n * between these two cases.<\/p>\n * \n * <p>Another example is {@code Hashtable}, where {@code null}\n * cannot be stored.<\/p>\n */\npublic static class Null implements java.io.Serializable {\n    /** \n     * Required for serialization support. Declare serialization compatibility with Commons Lang 1.0\n     * \n     * @see java.io.Serializable\n     */\nprivate static final long serialVersionUID = 7092611880189329093L;\n\n    /** \n     * Restricted constructor - singleton.\n     */\nNull() {\n        java.lang.Object.super();\n    }\n\n    /** \n     * <p>Ensure singleton.<\/p>\n     * \n     * @return the singleton value\n     */\nprivate java.lang.Object readResolve() {\n        return org.apache.commons.lang3.ObjectUtils.org.apache.commons.lang3.ObjectUtils.Null;\n    }\n}","position":"org.apache.commons.lang3.ObjectUtils:682","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (int int = 0 ; int < (java.lang.Integer[].int) ; int++) {\n    final java.lang.Integer java.lang.Integer = java.lang.Integer[][int];\n    int[][int] = java.lang.Integer == null ? int : java.lang.Integer.intValue();\n}","position":"org.apache.commons.lang3.ArrayUtils:3122","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final char[] char[] = new char[int]","position":"org.apache.commons.lang3.text.StrBuilder:381","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.lang.Object = java.lang.Object","position":"org.apache.commons.lang3.builder.DiffBuilder:809","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object","position":"org.apache.commons.lang3.time.DurationFormatUtils:514","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 'F' :\n    return new boolean[]{ true , true , true , true };","position":"org.apache.commons.lang3.Conversion:258","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"Less than 4 hex digits in unicode value: \\'\" + (java.lang.CharSequence.subSequence(int, java.lang.CharSequence.length()))) + \"\\' due to end of CharSequence\"))","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:60","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.concurrent.BasicThreadFactory.(getDaemonFlag()) != null) {\n    java.lang.Thread.setDaemon(org.apache.commons.lang3.concurrent.BasicThreadFactory.getDaemonFlag().booleanValue());\n} ","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:234","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"this.boolean = java.lang.Boolean.booleanValue()","position":"org.apache.commons.lang3.mutable.MutableBoolean:117","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Element that is parsed from the format pattern.\n */\nstatic class Token {\n    /** \n     * Helper method to determine if a set of tokens contain a value\n     * \n     * @param tokens set to look in\n     * @param value to look for\n     * @return boolean <code>true<\/code> if contained\n     */\nstatic boolean containsTokenWithValue(final org.apache.commons.lang3.time.DurationFormatUtils.Token[] tokens, final java.lang.Object value) {\n        final int int = org.apache.commons.lang3.time.DurationFormatUtils.Token[].int;\n        for (int int = 0 ; int < int ; int++) {\n            if ((org.apache.commons.lang3.time.DurationFormatUtils.Token[][int].getValue()) == java.lang.Object) {\n                return true;\n            } \n        }\n        return false;\n    }\n\n    private final java.lang.Object value;\n\n    private int count;\n\n    /** \n     * Wraps a token around a value. A value would be something like a 'Y'.\n     * \n     * @param value to wrap\n     */\nToken(final java.lang.Object value) {\n        this.java.lang.Object = java.lang.Object;\n        this.int = 1;\n    }\n\n    /** \n     * Wraps a token around a repeated number of a value, for example it would\n     * store 'yyyy' as a value for y and a count of 4.\n     * \n     * @param value to wrap\n     * @param count to wrap\n     */\nToken(final java.lang.Object value ,final int count) {\n        this.java.lang.Object = java.lang.Object;\n        this.int = int;\n    }\n\n    /** \n     * Adds another one of the value\n     */\nvoid increment() {\n        (int)++;\n    }\n\n    /** \n     * Gets the current number of values represented\n     * \n     * @return int number of values represented\n     */\nint getCount() {\n        return int;\n    }\n\n    /** \n     * Gets the particular value this token represents.\n     * \n     * @return Object value\n     */\njava.lang.Object getValue() {\n        return java.lang.Object;\n    }\n\n    /** \n     * Supports equality of this Token to another Token.\n     * \n     * @param obj2 Object to consider equality of\n     * @return boolean <code>true<\/code> if equal\n     */\n@java.lang.Override\n    public boolean equals(final java.lang.Object obj2) {\n        if (java.lang.Object instanceof org.apache.commons.lang3.time.DurationFormatUtils.Token) {\n            final org.apache.commons.lang3.time.DurationFormatUtils.Token org.apache.commons.lang3.time.DurationFormatUtils.Token = ((org.apache.commons.lang3.time.DurationFormatUtils.Token)(java.lang.Object));\n            if ((this.java.lang.Object.getClass()) != (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.getClass())) {\n                return false;\n            } \n            if ((this.int) != (org.apache.commons.lang3.time.DurationFormatUtils.Token.int)) {\n                return false;\n            } \n            if ((this.java.lang.Object) instanceof java.lang.StringBuilder) {\n                return this.java.lang.Object.toString().equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object.toString());\n            } else if ((this.java.lang.Object) instanceof java.lang.Number) {\n                return this.java.lang.Object.equals(org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n            } else {\n                return (this.java.lang.Object) == (org.apache.commons.lang3.time.DurationFormatUtils.Token.java.lang.Object);\n            }\n        } \n        return false;\n    }\n\n    /** \n     * Returns a hash code for the token equal to the\n     * hash code for the token's value. Thus 'TT' and 'TTTT'\n     * will have the same hash code.\n     * \n     * @return The hash code for the token\n     */\n@java.lang.Override\n    public int hashCode() {\n        return this.java.lang.Object.hashCode();\n    }\n\n    /** \n     * Represents this token as a String.\n     * \n     * @return String representation of the token\n     */\n@java.lang.Override\n    public java.lang.String toString() {\n        return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.repeat(this.java.lang.Object.toString(), this.int);\n    }\n}","position":"org.apache.commons.lang3.time.DurationFormatUtils:557","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","position":"org.apache.commons.lang3.ClassPathUtils:83","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.StringUtils:2023","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (((int + int) < (java.lang.CharSequence.length())) && ((java.lang.CharSequence.charAt((int + int))) == 'u')) {\n    int++;\n}","position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:40","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((((float[] == null) && (float[] != null)) && ((float[].int) > 0)) || (((float[] == null) && (float[] != null)) && ((float[].int) > 0))) || (((float[] != null) && (float[] != null)) && ((float[].int) != (float[].int)))) {\n    return false;\n} ","position":"org.apache.commons.lang3.ArrayUtils:1354","type":"CtIfImpl"},"status":-2},{"failures":[148,149,150,151,152,153,154,155],"binaryOperator":"(java.lang.CharSequence.length()) - int","name":"math","position":"org.apache.commons.lang3.text.translate.LookupTranslator:72","type":"mutation","status":-1},{"failures":[156],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String[] == null) || ((java.lang.String[].int) == 0)) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:6684","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((int & 1) == 0) {\n    int++;\n    int >>= 1;\n}","position":"org.apache.commons.lang3.BitField:43","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(java.lang.reflect.Type.toString())","position":"org.apache.commons.lang3.reflect.TypeUtils:1792","type":"CtInvocationImpl"},"status":-2},{"failures":[157],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.int[]","position":"org.apache.commons.lang3.ArrayUtils:554","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(int[])","position":"org.apache.commons.lang3.ArrayUtils:5034","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]","position":"org.apache.commons.lang3.StringUtils:3081","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.lang3.math.Fraction:845","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    boolean[][(int + int)] = (1 & (byte >> int)) != 0;\n}","position":"org.apache.commons.lang3.Conversion:1660","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.isAssignable(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)) {\n    return true;\n} ","position":"org.apache.commons.lang3.reflect.TypeUtils:548","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.lang3.math.NumberUtils:459","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String java.lang.String = java.lang.String;\n    if (java.lang.String.endsWith(\"ZZ\")) {\n        java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n    } \n    java.text.SimpleDateFormat.applyPattern(java.lang.String);\n    java.text.ParsePosition.setIndex(0);\n    java.lang.String java.lang.String = java.lang.String;\n    if (java.lang.String.endsWith(\"ZZ\")) {\n        java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n    } \n    final java.util.Date java.util.Date = java.text.SimpleDateFormat.parse(java.lang.String, java.text.ParsePosition);\n    if ((java.util.Date != null) && ((java.text.ParsePosition.getIndex()) == (java.lang.String.length()))) {\n        return java.util.Date;\n    } \n}","position":"org.apache.commons.lang3.time.DateUtils:368","type":"CtForEachImpl"},"status":0},{"failures":[158],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.String.length()","position":"org.apache.commons.lang3.StringUtils:2809","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\")","position":"org.apache.commons.lang3.text.StrBuilder:603","type":"CtThrowImpl"},"status":-1},{"failures":[159],"variableMapping":{"pos":"pos"},"name":"replace","transplant":{"sourceCode":"int += 3","position":"org.apache.commons.lang3.CharSet:189","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int = (org.apache.commons.lang3.text.StrBuilder.this.size()) - (int)","position":"org.apache.commons.lang3.text.StrBuilder:2883","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * <p><code>ToStringStyle<\/code> that does not print out the\n * classname, identity hashcode, content start or field name.<\/p>\n * \n * <p>This is an inner class rather than using\n * <code>StandardToStringStyle<\/code> to ensure its immutability.<\/p>\n */\nprivate static final class SimpleToStringStyle extends org.apache.commons.lang3.builder.ToStringStyle {\n    private static final long serialVersionUID = 1L;\n\n    /** \n     * <p>Constructor.<\/p>\n     * \n     * <p>Use the static constant rather than instantiating.<\/p>\n     */\nSimpleToStringStyle() {\n        org.apache.commons.lang3.builder.ToStringStyle.super();\n        org.apache.commons.lang3.builder.ToStringStyle.setUseClassName(false);\n        org.apache.commons.lang3.builder.ToStringStyle.setUseIdentityHashCode(false);\n        org.apache.commons.lang3.builder.ToStringStyle.setUseFieldNames(false);\n        org.apache.commons.lang3.builder.ToStringStyle.setContentStart(\"\");\n        org.apache.commons.lang3.builder.ToStringStyle.setContentEnd(\"\");\n    }\n\n    /** \n     * <p>Ensure <code>Singleton<\/ode> after serialization.<\/p>\n     * @return the singleton\n     */\nprivate java.lang.Object readResolve() {\n        return org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle;\n    }\n}","position":"org.apache.commons.lang3.builder.ToStringStyle:2218","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.String = \"\"","position":"org.apache.commons.lang3.builder.ToStringStyle:1741","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((int == 1) || (int == 0)) {\n    return java.lang.String;\n} ","position":"org.apache.commons.lang3.StringUtils:5129","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String, 0, int)","position":"org.apache.commons.lang3.StringUtils:6355","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"other":"this","this":"this"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.lang3.Range<T>.equals(org.apache.commons.lang3.Range<T>)) {\n    return org.apache.commons.lang3.Range<T>;\n} ","position":"org.apache.commons.lang3.Range:387","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.Range<T>.org.apache.commons.lang3.Range.between(T, T, null)","position":"org.apache.commons.lang3.Range:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) != 0) {\n    return this;\n} ","position":"org.apache.commons.lang3.builder.CompareToBuilder:808","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int < (java.lang.Short.short)) || (int > (java.lang.Short.short))) {\n    throw new java.lang.IllegalArgumentException(((\"Supplied value must be a valid byte literal between -32768 and 32767: [\" + int) + \"]\"));\n} ","position":"org.apache.commons.lang3.ObjectUtils:853","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.lang3.BooleanUtils:365","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.apache.commons.lang3.StringUtils:4285","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setTrimmerMatcher(org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher.trimMatcher())","position":"org.apache.commons.lang3.text.StrTokenizer:97","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String java.lang.String = java.lang.String;\n    if (java.lang.String.endsWith(\"ZZ\")) {\n        java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n    } \n    java.text.SimpleDateFormat.applyPattern(java.lang.String);\n    java.text.ParsePosition.setIndex(0);\n    java.lang.String java.lang.String = java.lang.String;\n    if (java.lang.String.endsWith(\"ZZ\")) {\n        java.lang.String = java.lang.String.replaceAll(\"([-+][0-9][0-9]):([0-9][0-9])$\", \"$1$2\");\n    } \n    final java.util.Date java.util.Date = java.text.SimpleDateFormat.parse(java.lang.String, java.text.ParsePosition);\n    if ((java.util.Date != null) && ((java.text.ParsePosition.getIndex()) == (java.lang.String.length()))) {\n        return java.util.Date;\n    } \n}","position":"org.apache.commons.lang3.time.DateUtils:368","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.lang3.time.FastDateParser:579","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.notNull(java.lang.ClassLoader, \"ClassLoader cannot be null.\")","position":"org.apache.commons.lang3.event.EventListenerSupport:141","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"Naming pattern must not be null!\");\n} ","position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:301","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Field name cannot be null\");\n} ","position":"org.apache.commons.lang3.builder.DiffBuilder:759","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"switch (int) {\n    case 0 :\n        return '0';\n    case 1 :\n        return '8';\n    case 2 :\n        return '4';\n    case 3 :\n        return 'c';\n    case 4 :\n        return '2';\n    case 5 :\n        return 'a';\n    case 6 :\n        return '6';\n    case 7 :\n        return 'e';\n    case 8 :\n        return '1';\n    case 9 :\n        return '9';\n    case 10 :\n        return '5';\n    case 11 :\n        return 'd';\n    case 12 :\n        return '3';\n    case 13 :\n        return 'b';\n    case 14 :\n        return '7';\n    case 15 :\n        return 'f';\n    default :\n        throw new java.lang.IllegalArgumentException((\"nibble value not between 0 and 15: \" + int));\n}","position":"org.apache.commons.lang3.Conversion:629","type":"CtSwitchImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Arguments cannot both be null\")","position":"org.apache.commons.lang3.ArrayUtils:4013","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.lang3.text.ExtendedMessageFormat:243","type":"CtThrowImpl"},"status":0},{"failures":[],"name":"returnValue","position":"org.apache.commons.lang3.time.StopWatch:341","type":"mutation","return":"return 0","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * <p>Inner class to output an unpadded number.<\/p>\n */\nprivate static class UnpaddedNumberField implements org.apache.commons.lang3.time.FastDatePrinter.NumberRule {\n    private final int mField;\n\n    /** \n     * Constructs an instance of {@code UnpadedNumberField} with the specified field.\n     * \n     * @param field the field\n     */\nUnpaddedNumberField(final int field) {\n        int = int;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public int estimateLength() {\n        return 4;\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public void appendTo(final java.lang.StringBuffer buffer, final java.util.Calendar calendar) {\n        org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.appendTo(java.lang.StringBuffer, java.util.Calendar.get(int));\n    }\n\n    /** \n     * {@inheritDoc}\n     */\n@java.lang.Override\n    public final void appendTo(final java.lang.StringBuffer buffer, final int value) {\n        if (int < 10) {\n            java.lang.StringBuffer.append(((char)(int + '0')));\n        } else if (int < 100) {\n            java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n            java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n        } else {\n            java.lang.StringBuffer.append(java.lang.Integer.java.lang.Integer.toString(int));\n        }\n    }\n}","position":"org.apache.commons.lang3.time.FastDatePrinter:720","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n    break;\n} ","position":"org.apache.commons.lang3.text.StrSubstitutor:819","type":"CtIfImpl"},"status":-2},{"failures":[160,161,162,163,164,165,166,167,168],"variableMapping":{"srcPos":"repeat","nHexs":"repeat"},"name":"add","transplant":{"sourceCode":"if ((((int - 1) * 4) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 16\");\n} ","position":"org.apache.commons.lang3.Conversion:1471","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    char[][int] = char;\n}","position":"org.apache.commons.lang3.StringUtils:5211","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int))","position":"org.apache.commons.lang3.exception.ExceptionUtils:536","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"CsvEscaper should never reach the [1] index\")","position":"org.apache.commons.lang3.StringEscapeUtils:262","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"int int = 71 << 4","position":"org.apache.commons.lang3.reflect.TypeUtils:209","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"int int = 10","position":"org.apache.commons.lang3.math.NumberUtils:730","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"subtypeVarAssigns":"typeArguments","typeVarAssigns":"typeArguments"},"name":"add","transplant":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> == null ? new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>() : new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.apache.commons.lang3.reflect.TypeUtils:864","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = java.util.Collections.java.util.Collections.<java.lang.reflect.TypeVariable<?>,java.lang.reflect.Type>emptyMap()","position":"org.apache.commons.lang3.reflect.TypeUtils:1365","type":"CtAssignmentImpl"},"status":0},{"failures":[],"binaryOperator":"(\"Cloneable type \" + (T.getClass().getName()))","name":"math","position":"org.apache.commons.lang3.ObjectUtils:627","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int) == 0) {\n    return org.apache.commons.lang3.math.Fraction.equals(org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction) ? this : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n} ","position":"org.apache.commons.lang3.math.Fraction:470","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.reflect.FieldUtils.org.apache.commons.lang3.reflect.FieldUtils.readField(java.lang.reflect.Field, java.lang.Object, false)","position":"org.apache.commons.lang3.reflect.FieldUtils:430","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\")","position":"org.apache.commons.lang3.StringEscapeUtils:396","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","position":"org.apache.commons.lang3.time.DateUtils:702","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public static enum OPTION {\nsemiColonRequired, semiColonOptional, errorIfNoSemiColon;}","position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:35","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(short[])","position":"org.apache.commons.lang3.math.NumberUtils:984","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.ToStringStyle:498","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)","position":"org.apache.commons.lang3.math.NumberUtils:481","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"buf":"sb"},"name":"replace","transplant":{"sourceCode":"java.lang.StringBuilder.append('>')","position":"org.apache.commons.lang3.reflect.TypeUtils:1753","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuilder.append(\" not in (\")","position":"org.apache.commons.lang3.time.FastDateParser:622","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ","position":"org.apache.commons.lang3.ArrayUtils:1820","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(long)","position":"org.apache.commons.lang3.builder.ToStringStyle:662","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayStart(\"[\")","position":"org.apache.commons.lang3.AnnotationUtils:64","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.setArrayContentDetail(true)","position":"org.apache.commons.lang3.AnnotationUtils:57","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"T = null","position":"org.apache.commons.lang3.ObjectUtils:586","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.T = T","position":"org.apache.commons.lang3.Range:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == 0) {\n    return true;\n} ","position":"org.apache.commons.lang3.text.StrBuilder:2102","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(java.lang.StringBuffer, java.lang.String)","position":"org.apache.commons.lang3.builder.ToStringStyle:968","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.lang3.builder.ToStringBuilder:1022","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Field.get(java.lang.Object)","position":"org.apache.commons.lang3.reflect.FieldUtils:387","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((long <= long) || (long >= long)) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(org.apache.commons.lang3.Validate.java.lang.String, long, long, long));\n} ","position":"org.apache.commons.lang3.Validate:1083","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.lang3.builder.EqualsBuilder.append(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.apache.commons.lang3.builder.EqualsBuilder:475","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (byte[] == null) {\n    return null;\n} ","position":"org.apache.commons.lang3.StringUtils:3432","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 1) {\n    final int int = org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulAndCheck(int, org.apache.commons.lang3.math.Fraction.int);\n    final int int = org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulAndCheck(org.apache.commons.lang3.math.Fraction.int, int);\n    return new org.apache.commons.lang3.math.Fraction((boolean ? org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.addAndCheck(int, int) : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.subAndCheck(int, int)) , org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, org.apache.commons.lang3.math.Fraction.int));\n} ","position":"org.apache.commons.lang3.math.Fraction:754","type":"CtIfImpl"},"status":-2},{"failures":[169,170,171],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"int--","position":"org.apache.commons.lang3.ArrayUtils:1794","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = java.lang.Object[][int]","position":"org.apache.commons.lang3.ArrayUtils:1827","type":"CtAssignmentImpl"},"status":-1},{"failures":[172,173],"variableMapping":{"str":"falseString","trueString":"falseString","falseString":"trueString"},"name":"add","transplant":{"sourceCode":"if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","position":"org.apache.commons.lang3.BooleanUtils:732","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return true;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","position":"org.apache.commons.lang3.BooleanUtils:733","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"org.apache.commons.lang3.ArrayUtils.EMPTY_BYTE_ARRAY":"dst"},"name":"add","transplant":{"sourceCode":"return byte[]","position":"org.apache.commons.lang3.ArrayUtils:614","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (0 == int) {\n    return byte[];\n} ","position":"org.apache.commons.lang3.Conversion:1289","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.lang3.SerializationException(\"IOException on closing cloned object data InputStream.\" , java.io.IOException)","position":"org.apache.commons.lang3.SerializationUtils:109","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    boolean[][(int + int)] = (1 & (long >> int)) != 0;\n}","position":"org.apache.commons.lang3.Conversion:1558","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n        if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n            org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n            int += int * 2;\n            int = org.apache.commons.lang3.text.StrBuilder.size();\n            continue;\n        } \n        boolean = false;\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n} else {\n    final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int));\n        return int + int;\n    } \n    if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n        boolean = true;\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n}","position":"org.apache.commons.lang3.text.StrTokenizer:748","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.lang3.time.FastDateFormat org.apache.commons.lang3.time.FastDateFormat = org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FastDateFormat.getInstance(java.lang.String, java.util.TimeZone, java.util.Locale)","position":"org.apache.commons.lang3.time.DateFormatUtils:303","type":"CtLocalVariableImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.lang3.StringUtilsTest.testGetLevenshteinDistance_StringStringNegativeInt":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":96,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":108,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":93,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":38,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":120,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":29,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":88,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":46,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":10,"org.apache.commons.lang3.StringUtilsTest.testRepeat_StringInt":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":59,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":70,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":5,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":154,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":6,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntChar":165,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":14,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":23,"org.apache.commons.lang3.text.StrBuilderTest.testAsReader":159,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":47,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":21,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":16,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":147,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":81,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":18,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":109,"org.apache.commons.lang3.ArrayUtilsTest.testReverseObjectRange":171,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringInt":160,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":82,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":110,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":32,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":86,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":1,"org.apache.commons.lang3.ArrayUtilsTest.testToString":113,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":33,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":127,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":132,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":104,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":124,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntString":162,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":53,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":8,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_nested":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":89,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":84,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_recursiveCause":138,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":64,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withCause":130,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_ThrowableArray":136,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":149,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":11,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":103,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":119,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":36,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":135,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":168,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":68,"org.apache.commons.lang3.StringUtilsTest.testReverseDelimited_StringChar":169,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":26,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":72,"org.apache.commons.lang3.time.DateUtilsTest.testRound":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":73,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":74,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":153,"org.apache.commons.lang3.ConversionTest.testIntToShortArray":141,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringIntChar":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":49,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":112,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":114,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":155,"org.apache.commons.lang3.StringUtilsTest.testAbbreviateMiddle":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":37,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementIntArray":157,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":173,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":3,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":92,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":25,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":79,"org.apache.commons.lang3.StringUtilsTest.testGetCommonPrefix_StringArray":156,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":50,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_recursiveCause":137,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":134,"org.apache.commons.lang3.StringUtilsTest.testRightPad_StringIntString":167,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":122,"org.apache.commons.lang3.time.FastDatePrinterTest.testShortDateStyleWithLocales":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":77,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":158,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":115,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":20,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":13,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":7,"org.apache.commons.lang3.time.FastDatePrinterTest.testFormat":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":34,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":55,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":4,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":69,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":48,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String_noMatch":172,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":28,"org.apache.commons.lang3.StringUtilsTest.testLeftPad_StringInt":166,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":143,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":56,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":152,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_nested":128,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withCause":139,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":118,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_Throwable":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":31,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":133,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":85,"org.apache.commons.lang3.ArrayUtilsTest.testReverse":170,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":101,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_byte":126,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":22}}]
