[{"transplant":{"position":"org.apache.commons.lang3.time.TwoDigitMonthField:974","sourceCode":"return 2","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:272","sourceCode":"return (short) < short ? -1 : (short) == short ? 0 : 1","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:386","sourceCode":"throw new java.lang.IllegalStateException(\"Stopwatch must be split to get the split time. \")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:355","sourceCode":"throw new java.lang.IllegalArgumentException(\"Date and Patterns must not be null\")","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:375","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match any specified value\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:190","sourceCode":"throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\")","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:127","sourceCode":"short--","type":"CtUnaryOperatorImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:984","sourceCode":"short = ((short)((short & (~int)) | int))","type":"CtAssignmentImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"out"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:744","sourceCode":"while (int < int) {\n    if (boolean) {\n        if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n            if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n                org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n                int += int * 2;\n                int = org.apache.commons.lang3.text.StrBuilder.size();\n                continue;\n            } \n            boolean = false;\n            int += int;\n            continue;\n        } \n        org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n    } else {\n        final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int);\n        if (int > 0) {\n            org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int));\n            return int + int;\n        } \n        if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n            boolean = true;\n            int += int;\n            continue;\n        } \n        final int int = org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int);\n        if (int > 0) {\n            int += int;\n            continue;\n        } \n        final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int);\n        if (int > 0) {\n            org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n            int += int;\n            continue;\n        } \n        org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n    }\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:748","sourceCode":"if (boolean) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n        if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n            org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n            int += int * 2;\n            int = org.apache.commons.lang3.text.StrBuilder.size();\n            continue;\n        } \n        boolean = false;\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n} else {\n    final int int = org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, org.apache.commons.lang3.text.StrBuilder.substring(0, int));\n        return int + int;\n    } \n    if ((int > 0) && org.apache.commons.lang3.text.StrTokenizer.(isQuote(char[], int, int, int, int))) {\n        boolean = true;\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        int += int;\n        continue;\n    } \n    final int int = org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int;\n        continue;\n    } \n    org.apache.commons.lang3.text.StrBuilder.append(char[][int++]);\n    int = org.apache.commons.lang3.text.StrBuilder.size();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"srcChars":"srcChars","workArea":"workArea","start":"quoteLen","quoting":"quoting","tokenList":"tokenList","len":"start","quoteLen":"start","this":"this","trimStart":"quoteStart","pos":"trimStart","quoteStart":"pos"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1242","sourceCode":"if (short > short) {\n    short = short;\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2102","sourceCode":"if (int > int) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:75","sourceCode":"return (int & (org.apache.commons.lang3.reflect.MemberUtils.int)) == 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"len":"modifiers","size":"modifiers"}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1186","sourceCode":"return 5","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:868","sourceCode":"return boolean ? 1 : 0","type":"CtReturnImpl"},"failures":[5,6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1077","sourceCode":"if (!boolean) {\n    final int int = java.util.Calendar.getActualMinimum(int[][0]);\n    final int int = java.util.Calendar.getActualMaximum(int[][0]);\n    int = (java.util.Calendar.get(int[][0])) - int;\n    boolean = int > ((int - int) / 2);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1049","sourceCode":"if ((int[][0]) == (java.util.Calendar.int)) {\n    int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n    if (int >= 15) {\n        int -= 15;\n    } \n    boolean = int > 7;\n    boolean = true;\n} ","type":"CtIfImpl"},"failures":[8,9,10,11,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Range:315","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:139","sourceCode":"return (int & (int)) == (int)","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:735","sourceCode":"int = 16","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:147","sourceCode":"int++","type":"CtUnaryOperatorImpl"},"failures":[14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"radix":"count"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1207","sourceCode":"int -= 7","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1210","sourceCode":"int += 7","type":"CtOperatorAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"startCutoff":"endCutoff"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:158","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:909","sourceCode":"if (!boolean) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[16,17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:552","sourceCode":"if (int == (java.lang.Integer.int)) {\n    return org.apache.commons.lang3.math.Fraction.invert().pow(2).pow(-(int / 2));\n} ","type":"CtIfImpl"},"failures":[20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.apache.commons.lang3.ObjectUtils:160","failures":[21,22,23,24,25,26,27],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1512","sourceCode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 8\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:233","sourceCode":"throw new java.lang.IllegalStateException(\"start() must be called first!\")","type":"CtThrowImpl"},"failures":[28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:230","sourceCode":"int /= int","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:965","sourceCode":"int = int[][int]","type":"CtAssignmentImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"numerator":"j","gcd":"j"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1243","sourceCode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:428","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, char[].int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"buf"}},{"position":"org.apache.commons.lang3.Conversion:415","failures":[30,31],"status":-1,"binaryOperator":"(int + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:3081","sourceCode":"boolean boolean = false","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:584","sourceCode":"throw new java.lang.UnsupportedOperationException(\"set() is unsupported\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.AnnotationUtils:143","failures":[32],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1005","sourceCode":"if (java.lang.Boolean[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1494","sourceCode":"org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.reverse(char[], 0, char[].int)","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:206","sourceCode":"if (((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) && ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State))) {\n    throw new java.lang.IllegalStateException(\"Stopwatch is not running. \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:305","sourceCode":"if ((this.org.apache.commons.lang3.time.StopWatch.State) != (org.apache.commons.lang3.time.StopWatch.State.org.apache.commons.lang3.time.StopWatch.State)) {\n    throw new java.lang.IllegalStateException(\"Stopwatch must be suspended to resume. \");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:120","sourceCode":"return (boolean) == false","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.WordUtils:93","sourceCode":"java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:514","sourceCode":"java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR":"str","newLineStr":"mant"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1769","sourceCode":"java.lang.String = java.lang.String","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Range:456","sourceCode":"java.lang.String = java.lang.StringBuilder.toString()","type":"CtAssignmentImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arrayEnd":"result"}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:138","sourceCode":"short += short","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:984","sourceCode":"short = ((short)((short & (~int)) | int))","type":"CtAssignmentImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"out","operand":"out"}},{"transplant":{"position":"org.apache.commons.lang3.BitField:241","sourceCode":"return org.apache.commons.lang3.BitField.((byte)(set(byte)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:280","sourceCode":"return boolean ? org.apache.commons.lang3.BitField.setByte(byte) : org.apache.commons.lang3.BitField.clearByte(byte)","type":"CtReturnImpl"},"failures":[36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:561","sourceCode":"return '5'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:659","sourceCode":"return '7'","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:535","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.String>.size()) ; int++) {\n    java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int));\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:326","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        java.util.List<java.lang.String>.add(java.lang.Object.toString());\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"frames":"list","trace":"list"}},{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:60","failures":[38,39,40],"status":-1,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:88","sourceCode":"boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1393","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"foundDigit"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:355","sourceCode":"if (!org.apache.commons.lang3.reflect.MemberUtils.(org.apache.commons.lang3.reflect.MemberUtils.isAccessible(java.lang.reflect.Method))) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:360","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPublic(java.lang.Class<?>.getModifiers())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:94","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Triple:112","sourceCode":"if (java.lang.Object instanceof org.apache.commons.lang3.tuple.Triple<?, ?, ?>) {\n    final org.apache.commons.lang3.tuple.Triple<?, ?, ?> org.apache.commons.lang3.tuple.Triple<?, ?, ?> = ((org.apache.commons.lang3.tuple.Triple<?, ?, ?>)(java.lang.Object));\n    return (org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getLeft())) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getMiddle()))) && org.apache.commons.lang3.ObjectUtils.(org.apache.commons.lang3.ObjectUtils.equals(org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight(), org.apache.commons.lang3.tuple.Triple<?, ?, ?>.getRight()));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"obj":"obj"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:190","sourceCode":"throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:943","sourceCode":"throw new java.lang.ClassCastException((\"Could not find ceiling of for type: \" + (java.lang.Object.getClass())))","type":"CtThrowImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":49,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactMethod":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":76,"org.apache.commons.lang3.ObjectUtilsTest.testEquals":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":59,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":101,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":81,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":25,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_3items":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":48,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":45,"org.apache.commons.lang3.time.DateUtilsTest.testRound":9,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":91,"org.apache.commons.lang3.ArrayUtilsTest.testReverseChar":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":83,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":57,"org.apache.commons.lang3.mutable.MutableShortTest.testCompareTo":0,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":108,"org.apache.commons.lang3.BitFieldTest.testIsAllSet":13,"org.apache.commons.lang3.reflect.MethodUtilsTest.testNullArgument":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":87,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_validInput_2items":18,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testEquals":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":46,"org.apache.commons.lang3.mutable.MutableBooleanTest.testGetSet":34,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":32,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeExactStaticMethod":111,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":2,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsFalse":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":89,"org.apache.commons.lang3.math.FractionTest.testPow":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":67,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":69,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testBlank":96,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":40,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":102,"org.apache.commons.lang3.ObjectUtilsTest.testNotEqual":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":44,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":78,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":115,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":66,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":70,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":39,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":56,"org.apache.commons.lang3.tuple.MutableTripleTest.testEquals":27,"org.apache.commons.lang3.math.NumberUtilsTest.testMaximumShort":4,"org.apache.commons.lang3.RangeTest.testToString":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":50,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":51,"org.apache.commons.lang3.ConversionTest.testHexToShort":3,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":107,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetBeforeStart":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":84,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":98,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":8,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":104,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":68,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessiblePublicMethodFromDescription":112,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":55,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":53,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessiblePublicMethod":105,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":74,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringString":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":47,"org.apache.commons.lang3.CharSetUtilsTest.testCount_StringStringarray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":90,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":110,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":42,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_3items":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":77,"org.apache.commons.lang3.BitFieldTest.testByte":36,"org.apache.commons.lang3.time.DateUtilsTest.testParseDate":1,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":94,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":37,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_validInput_2items":16}}]
