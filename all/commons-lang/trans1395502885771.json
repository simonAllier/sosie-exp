[{"transplant":{"position":"org.apache.commons.lang3.Conversion:307","sourceCode":"if (boolean[][int]) {\n    return 'f';\n} else {\n    return 'e';\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:530","sourceCode":"if (((boolean[].int) > (int + 3)) && (boolean[][(int + 3)])) {\n    return 'd';\n} else {\n    return 'c';\n}","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"srcPos","src":"src"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.WildcardTypeImpl:275","sourceCode":"int int = 73 << 8","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1517","sourceCode":"int int = java.lang.StringBuilder.length()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:105","sourceCode":"if ((int < int) || (int > int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BitField:139","sourceCode":"return (int & (int)) == (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"codepoint":"holder","below":"holder","above":"holder"}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:794","sourceCode":"if (int > 0) {\n    int += int;\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:261","sourceCode":"if (((boolean && java.lang.Character.(java.lang.Character.isLetter(char))) || (boolean && java.lang.Character.(java.lang.Character.isDigit(char)))) || ((!boolean) && (!boolean))) {\n    if ((char >= 56320) && (char <= 57343)) {\n        if (int == 0) {\n            int++;\n        } else {\n            char[][int] = char;\n            int--;\n            char[][int] = ((char)(55296 + (java.util.Random.nextInt(128))));\n        }\n    } else if ((char >= 55296) && (char <= 56191)) {\n        if (int == 0) {\n            int++;\n        } else {\n            char[][int] = ((char)(56320 + (java.util.Random.nextInt(128))));\n            int--;\n            char[][int] = char;\n        }\n    } else if ((char >= 56192) && (char <= 56319)) {\n        int++;\n    } else {\n        char[][int] = char;\n    }\n} else {\n    int++;\n}","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"ignoredLen":"count","pos":"count"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:563","sourceCode":"return '4'","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:643","sourceCode":"return '6'","type":"CtReturnImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:661","sourceCode":"throw new java.lang.ArithmeticException(\"overflow: mulPos\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:460","sourceCode":"throw new java.lang.IllegalArgumentException(\"The PrintStream must not be null\")","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:98","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.setEmptyTokenAsNull(false)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:229","sourceCode":"org.apache.commons.lang3.text.StrTokenizer.reset(char[])","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"tok"}},{"position":"org.apache.commons.lang3.Conversion:1560","failures":[13],"status":-1,"binaryOperator":"(1 & (long >> int)) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.SystemUtils:1067","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatchesName(\"Solaris\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1128","sourceCode":"org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.getOSMatches(org.apache.commons.lang3.SystemUtils.java.lang.String, \"5.2\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1192","sourceCode":"int = int - 1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableInt:149","sourceCode":"this.int += java.lang.Number.intValue()","type":"CtOperatorAssignmentImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startCutoff":"value","endCutoff":"value"}},{"transplant":{"position":"org.apache.commons.lang3.time.TimeZoneNumberRule:1208","sourceCode":"java.lang.StringBuffer.append(':')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1301","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1091","sourceCode":"int = (int & (~int)) | int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:419","sourceCode":"int = 0","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"bits":"acquireCount","mask":"acquireCount","out":"acquireCount"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1379","sourceCode":"if (boolean) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:581","sourceCode":"return this.boolean","type":"CtReturnImpl"},"failures":[18,19,20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"hasExp":"appendStatics"}},{"transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:279","sourceCode":"throw new java.lang.NullPointerException()","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:493","sourceCode":"throw new java.lang.IllegalArgumentException(\"The PrintWriter must not be null\")","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.math.Fraction:845","failures":[22,23,24],"status":-1,"binaryOperator":"java.lang.Object == this","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1614","sourceCode":"byte[][int] = byte[][int]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1011","sourceCode":"byte = byte[][int]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"j":"i","array":"array","i":"i"}},{"transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1471","sourceCode":"java.lang.StringBuffer.append('@')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:996","sourceCode":"java.lang.StringBuffer.append(java.lang.String)","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:846","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:112","sourceCode":"if (org.apache.commons.lang3.CharSet.contains(char)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:287","sourceCode":"java.lang.Appendable.append(java.lang.Object.getClass().getName())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:287","sourceCode":"java.lang.Appendable.append(java.lang.Object.getClass().getName()).append('@')","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"appendable":"appendable","object":"object"}},{"transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:359","sourceCode":"final int int = (int + int) - (int % 100)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:516","sourceCode":"final int int = java.lang.Math.java.lang.Math.min(4, (int + 1))","type":"CtLocalVariableImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"thisYear":"beSrcPos","twoDigitYear":"beSrcPos"}},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:123","sourceCode":"for (final T T : T[]) {\n    if (T != null) {\n        return T;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:122","sourceCode":"if (T[] != null) {\n    for (final T T : T[]) {\n        if (T != null) {\n            return T;\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:562","sourceCode":"java.util.List<java.lang.String>.remove(int)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:219","sourceCode":"java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.nullToEmpty(java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:732","sourceCode":"int = 1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:811","sourceCode":"int = org.apache.commons.lang3.text.StrBuilder.size()","type":"CtAssignmentImpl"},"failures":[43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"pos":"trimStart"}},{"transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:146","sourceCode":"if (java.lang.String[] == null) {\n    java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:147","sourceCode":"java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methodNames":"methodNames","org.apache.commons.lang3.exception.ExceptionUtils.CAUSE_METHOD_NAMES":"methodNames"}},{"transplant":{"position":"org.apache.commons.lang3.SerializationUtils:250","sourceCode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The byte[] must not be null\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:857","sourceCode":"org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.validateArray(byte[])","type":"CtInvocationImpl"},"failures":[53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"objectData":"array"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1007","sourceCode":"for (final int[] int[] : org.apache.commons.lang3.time.DateUtils.int[][]) {\n    for (final int int : int[]) {\n        if (int == int) {\n            if ((int == (org.apache.commons.lang3.time.DateUtils.int)) || ((int == (org.apache.commons.lang3.time.DateUtils.int)) && boolean)) {\n                if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n                    if ((java.util.Calendar.get(java.util.Calendar.int)) == 1) {\n                        java.util.Calendar.add(java.util.Calendar.int, 15);\n                    } else {\n                        java.util.Calendar.add(java.util.Calendar.int, -15);\n                        java.util.Calendar.add(java.util.Calendar.int, 1);\n                    }\n                } else if (int == (java.util.Calendar.int)) {\n                    if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n                        java.util.Calendar.add(java.util.Calendar.int, 12);\n                    } else {\n                        java.util.Calendar.add(java.util.Calendar.int, -12);\n                        java.util.Calendar.add(java.util.Calendar.int, 1);\n                    }\n                } else {\n                    java.util.Calendar.add(int[][0], 1);\n                }\n            } \n            return ;\n        } \n    }\n    int int = 0;\n    boolean boolean = false;\n    switch (int) {\n        case org.apache.commons.lang3.time.DateUtils.int :\n            if ((int[][0]) == (java.util.Calendar.int)) {\n                int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n                if (int >= 15) {\n                    int -= 15;\n                } \n                boolean = int > 7;\n                boolean = true;\n            } \n            break;\n        case java.util.Calendar.int :\n            if ((int[][0]) == (java.util.Calendar.int)) {\n                int = java.util.Calendar.get(java.util.Calendar.int);\n                if (int >= 12) {\n                    int -= 12;\n                } \n                boolean = int >= 6;\n                boolean = true;\n            } \n            break;\n    }\n    if (!boolean) {\n        final int int = java.util.Calendar.getActualMinimum(int[][0]);\n        final int int = java.util.Calendar.getActualMaximum(int[][0]);\n        int = (java.util.Calendar.get(int[][0])) - int;\n        boolean = int > ((int - int) / 2);\n    } \n    if (int != 0) {\n        java.util.Calendar.set(int[][0], ((java.util.Calendar.get(int[][0])) - int));\n    } \n}","type":"CtForEachImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2102","sourceCode":"if (int > int) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:104","sourceCode":"if (boolean) {\n    if ((int < (int)) || (int > (int))) {\n        return false;\n    } \n} else {\n    if ((int >= (int)) && (int <= (int))) {\n        return false;\n    } \n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"len":"codepoint","size":"codepoint"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.LazyInitializer:97","sourceCode":"if (T == null) {\n    synchronized(this) {\n        T = T;\n        if (T == null) {\n            T = T = org.apache.commons.lang3.concurrent.LazyInitializer<T>.initialize();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.LazyInitializer:98","sourceCode":"synchronized(this) {\n    T = T;\n    if (T == null) {\n        T = T = org.apache.commons.lang3.concurrent.LazyInitializer<T>.initialize();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"object","object":"result","this":"this"}},{"failureDictionary":{"org.apache.commons.lang3.ConversionTest.testLongToBinary":13,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":36,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":65,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":19,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtils":9,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":79,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":58,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":21,"org.apache.commons.lang3.ObjectUtilsTest.testIdentityToStringAppendable":41,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":16,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAscii":4,"org.apache.commons.lang3.text.StrTokenizerTest.test3":46,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":68,"org.apache.commons.lang3.text.StrTokenizerTest.test2":45,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":87,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":57,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":44,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":38,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":66,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":71,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":48,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":17,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":32,"org.apache.commons.lang3.time.DateUtilsTest.testRound":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":25,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":47,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":64,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":26,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":39,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":84,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":67,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":31,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":75,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":78,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":82,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":33,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":12,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":76,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":1,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":34,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":56,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":54,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomStringUtilsHomog":2,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":37,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":27,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":15,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":81,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphaNumeric":6,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomAlphabetic":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":61,"org.apache.commons.lang3.RandomStringUtilsTest.testLang100":5,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":72,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":50,"org.apache.commons.lang3.math.FractionTest.testEquals":23,"org.apache.commons.lang3.ObjectUtilsTest.testFirstNonNull":42,"org.apache.commons.lang3.math.FractionTest.testPow":22,"org.apache.commons.lang3.CharSetUtilsTest.testContainsAny_StringStringarray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":18,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":73,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":55,"org.apache.commons.lang3.mutable.MutableIntTest.testAddValueObject":14,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":86,"org.apache.commons.lang3.math.NumberUtilsTest.testMinByte_emptyArray":53,"org.apache.commons.lang3.math.FractionTest.testReduce":24,"org.apache.commons.lang3.RandomStringUtilsTest.testRandomNumeric":8,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":83,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":30,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":74,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":59,"org.apache.commons.lang3.RandomStringUtilsTest.testLANG805":3,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":28,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":43,"org.apache.commons.lang3.ConversionTest.testIntToHexDigitMsb0":10,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":11}}]
