[{"transplant":{"position":"org.apache.commons.lang3.SerializationUtils:216","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:805","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    final long long = (255L & (byte[][(int + int)])) << int;\n    final long long = 255L << int;\n    long = (long & (~long)) | long;\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Range:408","failures":[0],"status":-1,"binaryOperator":"java.lang.Object == this","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2296","sourceCode":"int = int < 0 ? 0 : int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:416","sourceCode":"int = int","type":"CtAssignmentImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"startIndex":"lastCallsPerPeriod"}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1379","sourceCode":"if (boolean) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:120","sourceCode":"return (boolean) == false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"hasExp":"value"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1201","sourceCode":"throw new java.lang.IllegalArgumentException(((\"The range style \" + int) + \" is not valid.\"))","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:905","sourceCode":"if ((boolean[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array is empty\");\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.ObjectUtils:122","sourceCode":"if (T[] != null) {\n    for (final T T : T[]) {\n        if (T != null) {\n            return T;\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:123","sourceCode":"for (final T T : T[]) {\n    if (T != null) {\n        return T;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1483","sourceCode":"java.lang.StringBuilder.append(org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1525","sourceCode":"java.lang.StringBuilder.setCharAt((int + int), org.apache.commons.lang3.Conversion.org.apache.commons.lang3.Conversion.intToHexDigit(int))","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:173","sourceCode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(\"The String must not be empty\");\n} ","type":"CtIfImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:180","sourceCode":"new org.apache.commons.lang3.text.StrSubstitutor(java.util.Map<java.lang.String, V>)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:250","sourceCode":"org.apache.commons.lang3.text.StrSubstitutor.this(org.apache.commons.lang3.text.StrLookup.org.apache.commons.lang3.text.StrLookup.mapLookup(java.util.Map<java.lang.String, V>), org.apache.commons.lang3.text.StrSubstitutor.org.apache.commons.lang3.text.StrMatcher, org.apache.commons.lang3.text.StrSubstitutor.org.apache.commons.lang3.text.StrMatcher, org.apache.commons.lang3.text.StrSubstitutor.char)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:346","sourceCode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, char[], null)","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:465","sourceCode":"return java.lang.String == null ? java.lang.String : java.lang.String.trim()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.StringEscapeUtils:605","sourceCode":"return org.apache.commons.lang3.StringEscapeUtils.org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.String)","type":"CtReturnImpl"},"failures":[35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.apache.commons.lang3.StringUtils.EMPTY":"input","str":"input"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1661","sourceCode":"int = (int * 1) + int","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:798","sourceCode":"int += int","type":"CtOperatorAssignmentImpl"},"failures":[7,10,11,12,13,38,14,39,15,16,17,40,18,19,22,24,41,26,27,28,29,30,31,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"srcPos":"pos","shift":"pos","i":"pos"}},{"transplant":{"position":"org.apache.commons.lang3.time.TwoDigitMonthField:974","sourceCode":"return 2","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:393","sourceCode":"return boolean ? 1 : 0","type":"CtReturnImpl"},"failures":[42,43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1431","sourceCode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:705","sourceCode":"org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar, int, org.apache.commons.lang3.time.DateUtils.int)","type":"CtInvocationImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"srcPos":"org.apache.commons.lang3.time.DateUtils.MODIFY_ROUND","nHexs":"org.apache.commons.lang3.time.DateUtils.MODIFY_ROUND"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:61","sourceCode":"try {\n    java.lang.reflect.AccessibleObject.setAccessible(true);\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:62","sourceCode":"java.lang.reflect.AccessibleObject.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"o"}},{"transplant":{"position":"org.apache.commons.lang3.time.StopWatch:188","sourceCode":"this.long = java.lang.System.java.lang.System.currentTimeMillis()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.StopWatch:287","sourceCode":"this.long = java.lang.System.java.lang.System.nanoTime()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:131","sourceCode":"if ((java.lang.String.charAt(2)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:902","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[66,66,67,68,68,69,69,70,70,71,71,72,73,74,75,76,76,77,78,79,80,81,82,83,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,100,101,102,103,103,104,105,105,106,107,108,109,110,110,111,112,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"arraySeparator"}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1116","sourceCode":"for (int int = 0 ; int < (short[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[][int]);\n}","type":"CtForImpl"},"failures":[69,90,99],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.BooleanUtils:728","sourceCode":"if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:729","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return true;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1116","sourceCode":"for (int int = 0 ; int < (short[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, short[][int]);\n}","type":"CtForImpl"},"failures":[69,90,99],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:161","sourceCode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Pair<L, R>.getLeft()).append(',').append(org.apache.commons.lang3.tuple.Pair<L, R>.getRight())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:248","sourceCode":"org.apache.commons.lang3.reflect.MemberUtils.org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Constructor<T>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:131","sourceCode":"if ((java.lang.String.charAt(2)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[144],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.StringUtils:4209","sourceCode":"if (java.lang.String.startsWith(java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:404","sourceCode":"if (java.lang.String == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[7,10,12,13,14,16,17,20,24,26,28,31,145],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"str":"source","remove":"source"}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:872","sourceCode":"if ((((int - 1) * 8) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:145","sourceCode":"if (int < 7) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[146,147],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"dstPos":"len","nBytes":"len"}},{"transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:294","sourceCode":"throw new java.lang.IllegalStateException(\"TimedSemaphore is shut down!\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.CharUtils:131","sourceCode":"throw new java.lang.IllegalArgumentException(\"The Character must not be null\")","type":"CtThrowImpl"},"failures":[148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CsvUnescaper:312","sourceCode":"throw new java.lang.IllegalStateException(\"CsvUnescaper should never reach the [1] index\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:201","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"))","type":"CtThrowImpl"},"failures":[149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:642","sourceCode":"return (java.lang.String.length()) > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:729","sourceCode":"if (java.lang.String.equals(java.lang.String)) {\n    return true;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[150,151],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.mutable.MutableFloat:178","sourceCode":"float -= float","type":"CtOperatorAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:176","sourceCode":"float += 0.1F","type":"CtOperatorAssignmentImpl"},"failures":[152,153,154,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"cost","operand":"cost"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:146","sourceCode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:217","sourceCode":"if ((int == (java.lang.Integer.int)) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} ","type":"CtIfImpl"},"failures":[156,157,158],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.CharEncoding:100","sourceCode":"final java.nio.charset.IllegalCharsetNameException java.nio.charset.IllegalCharsetNameException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:445","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    java.util.List<java.lang.String>.add(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.apache.commons.lang3.Conversion:947","failures":[159],"status":-1,"binaryOperator":"(int * 4)","name":"math","type":"mutation"},{"transplant":{"position":"org.apache.commons.lang3.Conversion:1163","sourceCode":"final int int = 1 << int","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:40","sourceCode":"int int = ((java.lang.CharSequence.length()) - int) - 1","type":"CtLocalVariableImpl"},"failures":[160,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shift":"index"}},{"transplant":{"position":"org.apache.commons.lang3.LocaleUtils:148","sourceCode":"if ((java.lang.String.charAt(5)) != '_') {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:371","sourceCode":"if (java.lang.reflect.Method == null) {\n    java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(java.lang.Class<?>, java.lang.String, java.lang.Class<?>[]);\n} ","type":"CtIfImpl"},"failures":[162,163,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"str":"methodName"}},{"transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1818","sourceCode":"long = org.apache.commons.lang3.time.DateUtils.long","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1699","sourceCode":"switch (int) {\n    case java.util.Calendar.int :\n    case java.util.Calendar.int :\n    case java.util.Calendar.int :\n    case java.util.Calendar.int :\n        long += ((java.util.Calendar.get(java.util.Calendar.int)) * (org.apache.commons.lang3.time.DateUtils.long)) / long;\n    case java.util.Calendar.int :\n        long += ((java.util.Calendar.get(java.util.Calendar.int)) * (org.apache.commons.lang3.time.DateUtils.long)) / long;\n    case java.util.Calendar.int :\n        long += ((java.util.Calendar.get(java.util.Calendar.int)) * (org.apache.commons.lang3.time.DateUtils.long)) / long;\n    case java.util.Calendar.int :\n        long += ((java.util.Calendar.get(java.util.Calendar.int)) * 1) / long;\n        break;\n    case java.util.Calendar.int :\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"The fragment \" + int) + \" is not supported\"));\n}","type":"CtSwitchImpl"},"failures":[165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.Conversion:799","sourceCode":"if ((((int - 1) * 8) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 64\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1558","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 1) + int;\n    boolean[][(int + int)] = (1 & (long >> int)) != 0;\n}","type":"CtForImpl"},"failures":[215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"dstPos":"dstPos","nBytes":"srcPos"}},{"transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1751","sourceCode":"java.lang.StringBuilder.append('>')","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:671","sourceCode":"java.lang.StringBuilder.replace(int, (int + int), org.apache.commons.lang3.text.StrBuilder.toString())","type":"CtInvocationImpl"},"failures":[7,8,10,12,13,14,16,17,21,24,26,28,31],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:701","sourceCode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")","type":"CtThrowImpl"},"failures":[57],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:480","sourceCode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)).size());\n    }\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer, java.lang.String, ((java.util.Map<?, ?>)(java.lang.Object)).size());\n    }\n} else if (java.lang.Object instanceof long[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof int[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof short[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof byte[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof char[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}","type":"CtIfImpl"},"failures":[34,66,67,68,216,217,218,219,69,70,220,221,222,71,75,76,79,80,81,82,83,84,85,86,87,88,89,90,94,95,96,97,99,100,101,102,103,104,105,107,108,110,111,112,114,115,116,117,119,120,121,122,123,124,223,224,225,226,125,126,227,228,229,230,127,128,231,232,233,234,129,130,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,131,132,250,251,252,253,133,134,254,255,256,257,143,258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:212","sourceCode":"final java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:809","sourceCode":"long = (long & (~long)) | long","type":"CtAssignmentImpl"},"failures":[259,260],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1999","sourceCode":"int = (int + int) - 1","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1442","sourceCode":"++int","type":"CtUnaryOperatorImpl"},"failures":[261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"replaceLen":"append","i":"append"}},{"transplant":{"position":"org.apache.commons.lang3.math.Fraction:220","sourceCode":"if (int < 0) {\n    if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n        throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n    } \n    int = -int;\n    int = -int;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:217","sourceCode":"if ((int == (java.lang.Integer.int)) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} ","type":"CtIfImpl"},"failures":[156],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithDate":167,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithCalendar":175,"org.apache.commons.lang3.ConversionTest.testByteToHex":5,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceDisjoint":45,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":206,"org.apache.commons.lang3.CharUtilsTest.testToChar_String":6,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":228,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":106,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithDate":190,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":82,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":237,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithDate":199,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":145,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":108,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithDate":189,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":113,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithDate":176,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfSecondWithDate":187,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":205,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":134,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithDate":194,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":216,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":253,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":222,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":243,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoVariables":25,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":93,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_2Part":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":119,"org.apache.commons.lang3.time.DateUtilsTest.testSetDays":62,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":56,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":242,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":231,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":84,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":245,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":223,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":30,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testSubstituteDefaultProperties":9,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":164,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithDate":170,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithCalendar":178,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":248,"org.apache.commons.lang3.time.DateUtilsTest.testSetSeconds":59,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithDate":188,"org.apache.commons.lang3.ConversionTest.testIntToHex":261,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":232,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithDate":212,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":247,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":67,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":22,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":225,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":116,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":47,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":127,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithDate":181,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":39,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceGreaterThanZero":44,"org.apache.commons.lang3.text.translate.OctalUnescaperTest.testBetween":160,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithDate":180,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":196,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":235,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":89,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":229,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":86,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":96,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":165,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfDayWithCalendar":172,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":210,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithDate":203,"org.apache.commons.lang3.time.DateUtilsTest.testAddMilliseconds":63,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithDate":201,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":12,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithCalendar":184,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireMultipleThreads":1,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":152,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":28,"org.apache.commons.lang3.time.DateUtilsTest.testSetYears":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":105,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":249,"org.apache.commons.lang3.BooleanUtilsTest.test_toInteger_boolean":42,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String_noMatch":150,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":217,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":121,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":128,"org.apache.commons.lang3.CharUtilsTest.testToChar_Character":148,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":73,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":53,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":254,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":111,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":153,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":107,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":230,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":118,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithDate":179,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":224,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":78,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfYearWithCalendar":185,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithCalendar":183,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":109,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":219,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":220,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":100,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":117,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":38,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":155,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithDate":208,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofMinuteWithDate":182,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":120,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":16,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithDate":166,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":74,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":246,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":36,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithDate":193,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":133,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethodFromDescription":163,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":18,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":83,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleInterfaceMethod":162,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":221,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":88,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDayOfYearFragmentInLargerUnitWithCalendar":171,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":102,"org.apache.commons.lang3.time.DateUtilsTest.testTruncateLang59":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":32,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMonthWithDate":186,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithDate":195,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":55,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":244,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":37,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":198,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":125,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":49,"org.apache.commons.lang3.ConversionTest.testHexDigitToBinary":149,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":241,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":24,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":236,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":21,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":256,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHourOfDayFragmentInLargerUnitWithCalendar":200,"org.apache.commons.lang3.time.DateUtilsTest.testRound":57,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":260,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":76,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":110,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":227,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":80,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireLimit":2,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":46,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfMinuteWithCalender":207,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfHourWithCalendar":197,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":114,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":50,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":123,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":258,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":31,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfYearWithDate":169,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfYearWithCalendar":192,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsOfMonthWithCalendar":204,"org.apache.commons.lang3.ConversionTest.testHexToInt":159,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondsOfDayWithCalendar":214,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":115,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testDateFragmentInLargerUnitWithCalendar":213,"org.apache.commons.lang3.RangeTest.testEqualsObject":0,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":255,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":251,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithDate":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":90,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":129,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":19,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":238,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":259,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":104,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":226,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":13,"org.apache.commons.lang3.BooleanUtilsTest.testAnd_primitive_emptyInput":4,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":124,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":8,"org.apache.commons.lang3.ConversionTest.testLongToBinary":215,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":112,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":54,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_String_String_String":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":218,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":17,"org.apache.commons.lang3.reflect.InheritanceUtilsTest.testDistanceReverseParentChild":43,"org.apache.commons.lang3.text.StrTokenizerTest.test1":135,"org.apache.commons.lang3.text.StrTokenizerTest.test3":137,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithCalendar":209,"org.apache.commons.lang3.text.StrTokenizerTest.test2":136,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":156,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfDayWithDate":173,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":77,"org.apache.commons.lang3.text.StrTokenizerTest.test8":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":72,"org.apache.commons.lang3.text.StrTokenizerTest.test5":139,"org.apache.commons.lang3.text.StrTokenizerTest.test4":138,"org.apache.commons.lang3.text.StrTokenizerTest.test7":141,"org.apache.commons.lang3.text.StrTokenizerTest.test6":140,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondsofHourWithCalendar":177,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":202,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":257,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":154,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":239,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":99,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":130,"org.apache.commons.lang3.ArrayUtilsTest.testToString":143,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithDate":211,"org.apache.commons.lang3.math.FractionTest.testMultiply":158,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":252,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":250,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":33,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":234,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":233,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":240,"org.apache.commons.lang3.time.DateUtilsTest.testAddMonths":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":75,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":131,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":14,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":168,"org.apache.commons.lang3.time.DateUtilsTest.testSetHours":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":26,"org.apache.commons.lang3.math.FractionTest.testDivide":157,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testHoursOfMonthWithCalendar":191,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":11,"org.apache.commons.lang3.time.DateUtilsTest.testSetMonths":61,"org.apache.commons.lang3.LocaleUtilsTest.testToLocale_3Part":147,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":103,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":126,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":41,"org.apache.commons.lang3.LocaleUtilsTest.testParseAllLocales":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":122,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNull":20}}]
